<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='47175' time_ms='1639717578698'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
11+28
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (11+28) for bsd-amd64 JRE (11+28), built on Aug 23 2018 01:55:41 by &quot;mach5one&quot; with gcc 4.2.1 Compatible Apple LLVM 9.1.0 (clang-902.0.39.2)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:LogFile=./logfile.log -XX:+PrintAssembly -XX:+TraceClassLoading -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=52432:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 </args>
<command>
jdk_utils.code_4_12.Bar
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=11+28
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
jdk.debug=release
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/lib
java.library.path=/Users/harder/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home
java.class.path=/Users/harder/Desktop/Git-Repo/github.com/abingzo/my_example/Java/target/classes:/Users/harder/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/harder/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
jdk.boot.class.path.append=
java.vm.info=mixed mode, aot, sharing
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=11
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=jdk_utils.code_4_12.Bar
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='9987'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31616'/>
</blob>
<writer thread='15875'/>
<thread_logfile thread='15875' filename='/var/folders/z8/xjj9rpg94w79gcz_vsq70cpm0000gn/T//hs_c15875_pid47175.log'/>
<writer thread='15363'/>
<thread_logfile thread='15363' filename='/var/folders/z8/xjj9rpg94w79gcz_vsq70cpm0000gn/T//hs_c15363_pid47175.log'/>
<writer thread='22019'/>
<sweeper state='finished' traversals='0'  total_blobs='176' nmethods='0' adapters='120' free_code_cache='250699136' stamp='0.052'/>
<writer thread='9987'/>
<task_queued compile_id='1' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='256' iicount='256' level='3' stamp='0.055' comment='tiered' hot_count='256'/>
<task_queued compile_id='2' method='jdk.internal.misc.Unsafe getObjectAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='256' iicount='256' level='3' stamp='0.055' comment='tiered' hot_count='256'/>
<nmethod compile_id='3' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f731c0' size='1072' address='0x0000000122f73010' relocation_offset='376' consts_offset='1072' insts_offset='432' method='jdk.internal.misc.Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.055'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/lib/server/hsdis-amd64.dylib
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;  [0x0000000122f731c0, 0x0000000122f73440]  640 bytes
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x0000000132563b90} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x0000000122f731c0: mov    0x8(%rsi),%r10d
  0x0000000122f731c4: movabs $0x800000000,%r12
  0x0000000122f731ce: add    %r12,%r10
  0x0000000122f731d1: xor    %r12,%r12
  0x0000000122f731d4: cmp    %r10,%rax
  0x0000000122f731d7: je     0x0000000122f731e8
  0x0000000122f731dd: jmpq   0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f731e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000122f731e8: mov    %eax,-0x14000(%rsp)
  0x0000000122f731ef: push   %rbp
  0x0000000122f731f0: mov    %rsp,%rbp
  0x0000000122f731f3: sub    $0x40,%rsp
  0x0000000122f731f7: mov    %rdx,0x8(%rsp)
  0x0000000122f731fc: cmp    $0x0,%rdx
  0x0000000122f73200: lea    0x8(%rsp),%rdx
  0x0000000122f73205: cmove  0x8(%rsp),%rdx
  0x0000000122f7320b: mov    %rsi,(%rsp)
  0x0000000122f7320f: cmp    $0x0,%rsi
  0x0000000122f73213: lea    (%rsp),%rsi
  0x0000000122f73217: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x0000000122f7321c: vzeroupper 
  0x0000000122f7321f: movabs $0x122f7321c,%r10  ;   {internal_word}
  0x0000000122f73229: mov    %r10,0x328(%r15)
  0x0000000122f73230: mov    %rsp,0x320(%r15)
  0x0000000122f73237: cmpb   $0x0,-0x1460dcfc(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f7323e: je     0x0000000122f7327a
  0x0000000122f73244: push   %rsi
  0x0000000122f73245: push   %rdx
  0x0000000122f73246: push   %rcx
  0x0000000122f73247: movabs $0x132563b90,%rsi  ;   {metadata({method} {0x0000000132563b90} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x0000000122f73251: mov    %r15,%rdi
  0x0000000122f73254: test   $0xf,%esp
  0x0000000122f7325a: je     0x0000000122f73272
  0x0000000122f73260: sub    $0x8,%rsp
  0x0000000122f73264: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f73269: add    $0x8,%rsp
  0x0000000122f7326d: jmpq   0x0000000122f73277
  0x0000000122f73272: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f73277: pop    %rcx
  0x0000000122f73278: pop    %rdx
  0x0000000122f73279: pop    %rsi
  0x0000000122f7327a: lea    0x340(%r15),%rdi
  0x0000000122f73281: movl   $0x4,0x3b8(%r15)
  0x0000000122f7328c: callq  0x000000010e71b820  ;   {runtime_call Unsafe_GetObjectVolatile(JNIEnv_*, _jobject*, _jobject*, long)}
  0x0000000122f73291: vzeroupper 
  0x0000000122f73294: movl   $0x5,0x3b8(%r15)
  0x0000000122f7329f: lock addl $0x0,-0x40(%rsp)
  0x0000000122f732a5: testb  $0x8,0x108(%r15)
  0x0000000122f732ad: jne    0x0000000122f732c4
  0x0000000122f732b3: cmpl   $0x0,0xd8(%r15)
  0x0000000122f732be: je     0x0000000122f732e8
  0x0000000122f732c4: vzeroupper 
  0x0000000122f732c7: mov    %rax,-0x8(%rbp)
  0x0000000122f732cb: mov    %r15,%rdi
  0x0000000122f732ce: mov    %rsp,%r12
  0x0000000122f732d1: sub    $0x0,%rsp
  0x0000000122f732d5: and    $0xfffffffffffffff0,%rsp
  0x0000000122f732d9: callq  0x000000010e701cce  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000122f732de: mov    %r12,%rsp
  0x0000000122f732e1: xor    %r12,%r12
  0x0000000122f732e4: mov    -0x8(%rbp),%rax
  0x0000000122f732e8: movl   $0x8,0x3b8(%r15)
  0x0000000122f732f3: cmpl   $0x2,0x408(%r15)
  0x0000000122f732fe: je     0x0000000122f73417
  0x0000000122f73304: cmpb   $0x0,-0x1460ddc9(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f7330b: je     0x0000000122f73349
  0x0000000122f73311: mov    %rax,-0x8(%rbp)
  0x0000000122f73315: movabs $0x132563b90,%rsi  ;   {metadata({method} {0x0000000132563b90} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x0000000122f7331f: mov    %r15,%rdi
  0x0000000122f73322: test   $0xf,%esp
  0x0000000122f73328: je     0x0000000122f73340
  0x0000000122f7332e: sub    $0x8,%rsp
  0x0000000122f73332: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f73337: add    $0x8,%rsp
  0x0000000122f7333b: jmpq   0x0000000122f73345
  0x0000000122f73340: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f73345: mov    -0x8(%rbp),%rax
  0x0000000122f73349: movabs $0x0,%r10
  0x0000000122f73353: mov    %r10,0x320(%r15)
  0x0000000122f7335a: movabs $0x0,%r10
  0x0000000122f73364: mov    %r10,0x328(%r15)
  0x0000000122f7336b: vzeroupper 
  0x0000000122f7336e: test   %rax,%rax
  0x0000000122f73371: je     0x0000000122f733f1
  0x0000000122f73377: test   $0x1,%rax
  0x0000000122f7337d: je     0x0000000122f733ee
  0x0000000122f73383: mov    -0x1(%rax),%rax
  0x0000000122f73387: cmpb   $0x0,0x30(%r15)
  0x0000000122f7338c: je     0x0000000122f733e9
  0x0000000122f73392: cmp    $0x0,%rax
  0x0000000122f73396: je     0x0000000122f733e9
  0x0000000122f7339c: mov    0x38(%r15),%rcx
  0x0000000122f733a0: cmp    $0x0,%rcx
  0x0000000122f733a4: je     0x0000000122f733be
  0x0000000122f733aa: sub    $0x8,%rcx
  0x0000000122f733ae: mov    %rcx,0x38(%r15)
  0x0000000122f733b2: add    0x48(%r15),%rcx
  0x0000000122f733b6: mov    %rax,(%rcx)
  0x0000000122f733b9: jmpq   0x0000000122f733e9
  0x0000000122f733be: push   %rax
  0x0000000122f733bf: mov    %r15,%rsi
  0x0000000122f733c2: mov    %rax,%rdi
  0x0000000122f733c5: test   $0xf,%esp
  0x0000000122f733cb: je     0x0000000122f733e3
  0x0000000122f733d1: sub    $0x8,%rsp
  0x0000000122f733d5: callq  0x000000010e2fdd56  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x0000000122f733da: add    $0x8,%rsp
  0x0000000122f733de: jmpq   0x0000000122f733e8
  0x0000000122f733e3: callq  0x000000010e2fdd56  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x0000000122f733e8: pop    %rax
  0x0000000122f733e9: jmpq   0x0000000122f733f1
  0x0000000122f733ee: mov    (%rax),%rax
  0x0000000122f733f1: mov    0xe0(%r15),%rcx
  0x0000000122f733f8: movl   $0x0,0x100(%rcx)
  0x0000000122f73402: leaveq 
  0x0000000122f73403: cmpq   $0x0,0x8(%r15)
  0x0000000122f7340b: jne    0x0000000122f73412
  0x0000000122f73411: retq   
  0x0000000122f73412: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000122f73417: vzeroupper 
  0x0000000122f7341a: mov    %rax,-0x8(%rbp)
  0x0000000122f7341e: mov    %rsp,%r12
  0x0000000122f73421: sub    $0x0,%rsp
  0x0000000122f73425: and    $0xfffffffffffffff0,%rsp
  0x0000000122f73429: callq  0x000000010e679d28  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000122f7342e: mov    %r12,%rsp
  0x0000000122f73431: xor    %r12,%r12
  0x0000000122f73434: mov    -0x8(%rbp),%rax
  0x0000000122f73438: jmpq   0x0000000122f73304
  0x0000000122f7343d: hlt    
  0x0000000122f7343e: hlt    
  0x0000000122f7343f: hlt    
<writer thread='15875'/>
<nmethod compile_id='1' compiler='c1' level='3' entry='0x000000011ba3c1e0' size='1520' address='0x000000011ba3c010' relocation_offset='376' insts_offset='464' stub_offset='1168' scopes_data_offset='1336' scopes_pcs_offset='1400' dependencies_offset='1512' oops_offset='1312' metadata_offset='1320' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='256' iicount='256' stamp='0.063'/>
<print_nmethod stamp='0.063'>
Compiled method (c1)      63    1       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x000000011ba3c010,0x000000011ba3c600] = 1520
 relocation     [0x000000011ba3c188,0x000000011ba3c1c8] = 64
 main code      [0x000000011ba3c1e0,0x000000011ba3c4a0] = 704
 stub code      [0x000000011ba3c4a0,0x000000011ba3c530] = 144
 oops           [0x000000011ba3c530,0x000000011ba3c538] = 8
 metadata       [0x000000011ba3c538,0x000000011ba3c548] = 16
 scopes data    [0x000000011ba3c548,0x000000011ba3c588] = 64
 scopes pcs     [0x000000011ba3c588,0x000000011ba3c5f8] = 112
 dependencies   [0x000000011ba3c5f8,0x000000011ba3c600] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x000000011ba3c1e0, 0x000000011ba3c530]  848 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000011ba3c1e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba3c1e7: push   %rbp
  0x000000011ba3c1e8: sub    $0x70,%rsp
  0x000000011ba3c1ec: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c1f6: mov    0x104(%rcx),%eax
  0x000000011ba3c1fc: add    $0x8,%eax
  0x000000011ba3c1ff: mov    %eax,0x104(%rcx)
  0x000000011ba3c205: and    $0x1ff8,%eax
  0x000000011ba3c20b: cmp    $0x0,%eax
  0x000000011ba3c20e: je     0x000000011ba3c402  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 760)

  0x000000011ba3c214: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c21e: lea    0x178(%rcx),%rcx
  0x000000011ba3c225: mov    %rsi,%rax
  0x000000011ba3c228: test   %rax,%rax
  0x000000011ba3c22b: jne    0x000000011ba3c237
  0x000000011ba3c22d: orq    $0x1,0x8(%rcx)
  0x000000011ba3c235: jmp    0x000000011ba3c28c
  0x000000011ba3c237: mov    0x8(%rax),%eax
  0x000000011ba3c23a: movabs $0x800000000,%r12
  0x000000011ba3c244: add    %r12,%rax
  0x000000011ba3c247: xor    %r12,%r12
  0x000000011ba3c24a: xor    0x8(%rcx),%rax
  0x000000011ba3c24e: test   $0xfffffffffffffffc,%rax
  0x000000011ba3c254: je     0x000000011ba3c28c
  0x000000011ba3c256: test   $0x2,%rax
  0x000000011ba3c25c: jne    0x000000011ba3c28c
  0x000000011ba3c25e: cmpq   $0x0,0x8(%rcx)
  0x000000011ba3c266: je     0x000000011ba3c288
  0x000000011ba3c268: cmpq   $0x1,0x8(%rcx)
  0x000000011ba3c270: je     0x000000011ba3c288
  0x000000011ba3c272: xor    0x8(%rcx),%rax
  0x000000011ba3c276: test   $0xfffffffffffffffc,%rax
  0x000000011ba3c27c: je     0x000000011ba3c28c
  0x000000011ba3c27e: orq    $0x2,0x8(%rcx)
  0x000000011ba3c286: jmp    0x000000011ba3c28c
  0x000000011ba3c288: mov    %rax,0x8(%rcx)
  0x000000011ba3c28c: movabs $0x70ff080f8,%rcx  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000070ff080f8})}
  0x000000011ba3c296: movabs $0x1326b8aa8,%rax  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c2a0: addq   $0x1,0x140(%rax)
  0x000000011ba3c2a8: movslq %edx,%rdx
  0x000000011ba3c2ab: mov    $0x2,%ecx
  0x000000011ba3c2b0: shl    %cl,%rdx
  0x000000011ba3c2b3: movabs $0x10,%r10
  0x000000011ba3c2bd: add    %r10,%rdx
  0x000000011ba3c2c0: movabs $0x1326b8cb8,%rax  ;   {metadata(method data for {method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba3c2ca: mov    0x104(%rax),%edi
  0x000000011ba3c2d0: add    $0x8,%edi
  0x000000011ba3c2d3: mov    %edi,0x104(%rax)
  0x000000011ba3c2d9: and    $0x7ffff8,%edi
  0x000000011ba3c2df: cmp    $0x0,%edi
  0x000000011ba3c2e2: je     0x000000011ba3c423
  0x000000011ba3c2e8: mov    (%rsi,%rdx,1),%eax
  0x000000011ba3c2eb: shl    $0x3,%rax
  0x000000011ba3c2ef: movsbl 0x30(%r15),%esi
  0x000000011ba3c2f4: cmp    $0x0,%esi
  0x000000011ba3c2f7: jne    0x000000011ba3c444
  0x000000011ba3c2fd: cmp    $0x0,%rax
  0x000000011ba3c301: jne    0x000000011ba3c319
  0x000000011ba3c303: movabs $0x1326b8aa8,%rbx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c30d: orb    $0x1,0x189(%rbx)
  0x000000011ba3c314: jmpq   0x000000011ba3c3f2
  0x000000011ba3c319: movabs $0x80001b570,%rdi  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba3c323: mov    0x8(%rax),%ebx
  0x000000011ba3c326: movabs $0x800000000,%r12
  0x000000011ba3c330: add    %r12,%rbx
  0x000000011ba3c333: xor    %r12,%r12
  0x000000011ba3c336: cmp    0x38(%rbx),%rdi
  0x000000011ba3c33a: jne    0x000000011ba3c3d6
  0x000000011ba3c340: movabs $0x1326b8aa8,%rbx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c34a: mov    0x8(%rax),%edi
  0x000000011ba3c34d: movabs $0x800000000,%r12
  0x000000011ba3c357: add    %r12,%rdi
  0x000000011ba3c35a: xor    %r12,%r12
  0x000000011ba3c35d: cmp    0x1a0(%rbx),%rdi
  0x000000011ba3c364: jne    0x000000011ba3c373
  0x000000011ba3c366: addq   $0x1,0x1a8(%rbx)
  0x000000011ba3c36e: jmpq   0x000000011ba3c3f2
  0x000000011ba3c373: cmp    0x1b0(%rbx),%rdi
  0x000000011ba3c37a: jne    0x000000011ba3c389
  0x000000011ba3c37c: addq   $0x1,0x1b8(%rbx)
  0x000000011ba3c384: jmpq   0x000000011ba3c3f2
  0x000000011ba3c389: cmpq   $0x0,0x1a0(%rbx)
  0x000000011ba3c394: jne    0x000000011ba3c3ad
  0x000000011ba3c396: mov    %rdi,0x1a0(%rbx)
  0x000000011ba3c39d: movq   $0x1,0x1a8(%rbx)
  0x000000011ba3c3a8: jmpq   0x000000011ba3c3f2
  0x000000011ba3c3ad: cmpq   $0x0,0x1b0(%rbx)
  0x000000011ba3c3b8: jne    0x000000011ba3c3d1
  0x000000011ba3c3ba: mov    %rdi,0x1b0(%rbx)
  0x000000011ba3c3c1: movq   $0x1,0x1b8(%rbx)
  0x000000011ba3c3cc: jmpq   0x000000011ba3c3f2
  0x000000011ba3c3d1: jmpq   0x000000011ba3c3f2
  0x000000011ba3c3d6: movabs $0x1326b8aa8,%rbx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c3e0: subq   $0x1,0x190(%rbx)
  0x000000011ba3c3e8: jmpq   0x000000011ba3c45c
  0x000000011ba3c3ed: jmpq   0x000000011ba3c3f2  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)

  0x000000011ba3c3f2: add    $0x70,%rsp
  0x000000011ba3c3f6: pop    %rbp
  0x000000011ba3c3f7: mov    0x108(%r15),%r10
  0x000000011ba3c3fe: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3c401: retq   
  0x000000011ba3c402: movabs $0x1325ddce8,%r10  ;   {metadata({method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba3c40c: mov    %r10,0x8(%rsp)
  0x000000011ba3c411: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3c419: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3c41e: jmpq   0x000000011ba3c214
  0x000000011ba3c423: movabs $0x132564948,%r10  ;   {metadata({method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba3c42d: mov    %r10,0x8(%rsp)
  0x000000011ba3c432: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3c43a: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3c43f: jmpq   0x000000011ba3c2e8
  0x000000011ba3c444: cmp    $0x0,%rax
  0x000000011ba3c448: je     0x000000011ba3c2fd
  0x000000011ba3c44e: mov    %rax,(%rsp)
  0x000000011ba3c452: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba3c457: jmpq   0x000000011ba3c2fd
  0x000000011ba3c45c: mov    %rax,(%rsp)
  0x000000011ba3c460: callq  0x000000011b597fa0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba3c465: nop
  0x000000011ba3c466: nop
  0x000000011ba3c467: mov    0x420(%r15),%rax
  0x000000011ba3c46e: movabs $0x0,%r10
  0x000000011ba3c478: mov    %r10,0x420(%r15)
  0x000000011ba3c47f: movabs $0x0,%r10
  0x000000011ba3c489: mov    %r10,0x428(%r15)
  0x000000011ba3c490: add    $0x70,%rsp
  0x000000011ba3c494: pop    %rbp
  0x000000011ba3c495: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3c49a: hlt    
  0x000000011ba3c49b: hlt    
  0x000000011ba3c49c: hlt    
  0x000000011ba3c49d: hlt    
  0x000000011ba3c49e: hlt    
  0x000000011ba3c49f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba3c4a0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3c4a5: mov    %rsp,-0x28(%rsp)
  0x000000011ba3c4aa: sub    $0x80,%rsp
  0x000000011ba3c4b1: mov    %rax,0x78(%rsp)
  0x000000011ba3c4b6: mov    %rcx,0x70(%rsp)
  0x000000011ba3c4bb: mov    %rdx,0x68(%rsp)
  0x000000011ba3c4c0: mov    %rbx,0x60(%rsp)
  0x000000011ba3c4c5: mov    %rbp,0x50(%rsp)
  0x000000011ba3c4ca: mov    %rsi,0x48(%rsp)
  0x000000011ba3c4cf: mov    %rdi,0x40(%rsp)
  0x000000011ba3c4d4: mov    %r8,0x38(%rsp)
  0x000000011ba3c4d9: mov    %r9,0x30(%rsp)
  0x000000011ba3c4de: mov    %r10,0x28(%rsp)
  0x000000011ba3c4e3: mov    %r11,0x20(%rsp)
  0x000000011ba3c4e8: mov    %r12,0x18(%rsp)
  0x000000011ba3c4ed: mov    %r13,0x10(%rsp)
  0x000000011ba3c4f2: mov    %r14,0x8(%rsp)
  0x000000011ba3c4f7: mov    %r15,(%rsp)
  0x000000011ba3c4fb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3c505: movabs $0x11ba3c4a5,%rsi  ;   {internal_word}
  0x000000011ba3c50f: mov    %rsp,%rdx
  0x000000011ba3c512: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3c516: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3c51b: hlt    
[Deopt Handler Code]
  0x000000011ba3c51c: movabs $0x11ba3c51c,%r10  ;   {section_word}
  0x000000011ba3c526: push   %r10
  0x000000011ba3c528: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3c52d: hlt    
  0x000000011ba3c52e: hlt    
  0x000000011ba3c52f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 574 607 
ImmutableOopMap{}pc offsets: 645 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='4' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='512' iicount='512' level='3' stamp='0.067' comment='tiered' hot_count='512'/>
<task_queued compile_id='5' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='128' backedge_count='2535' iicount='128' level='3' stamp='0.067' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='4' compiler='c1' level='3' entry='0x000000011ba3c7c0' size='880' address='0x000000011ba3c610' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='784' scopes_pcs_offset='808' dependencies_offset='872' metadata_offset='768' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='558' iicount='558' stamp='0.067'/>
<print_nmethod stamp='0.067'>
Compiled method (c1)      66    4       3       java.lang.Object::&lt;init&gt; (1 bytes)
 total in heap  [0x000000011ba3c610,0x000000011ba3c980] = 880
 relocation     [0x000000011ba3c788,0x000000011ba3c7b0] = 40
 main code      [0x000000011ba3c7c0,0x000000011ba3c880] = 192
 stub code      [0x000000011ba3c880,0x000000011ba3c910] = 144
 metadata       [0x000000011ba3c910,0x000000011ba3c920] = 16
 scopes data    [0x000000011ba3c920,0x000000011ba3c938] = 24
 scopes pcs     [0x000000011ba3c938,0x000000011ba3c978] = 64
 dependencies   [0x000000011ba3c978,0x000000011ba3c980] = 8
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;()V  [0x000000011ba3c7c0, 0x000000011ba3c910]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3c7c0: mov    0x8(%rsi),%r10d
  0x000000011ba3c7c4: movabs $0x800000000,%r12
  0x000000011ba3c7ce: add    %r12,%r10
  0x000000011ba3c7d1: xor    %r12,%r12
  0x000000011ba3c7d4: cmp    %rax,%r10
  0x000000011ba3c7d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba3c7dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba3c7e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba3c7e7: push   %rbp
  0x000000011ba3c7e8: sub    $0x30,%rsp
  0x000000011ba3c7ec: movabs $0x1326ded60,%rdi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba3c7f6: mov    0x104(%rdi),%ebx
  0x000000011ba3c7fc: add    $0x8,%ebx
  0x000000011ba3c7ff: mov    %ebx,0x104(%rdi)
  0x000000011ba3c805: and    $0x1ff8,%ebx
  0x000000011ba3c80b: cmp    $0x0,%ebx
  0x000000011ba3c80e: je     0x000000011ba3c824  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 50)

  0x000000011ba3c814: add    $0x30,%rsp
  0x000000011ba3c818: pop    %rbp
  0x000000011ba3c819: mov    0x108(%r15),%r10
  0x000000011ba3c820: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3c823: retq   
  0x000000011ba3c824: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba3c82e: mov    %r10,0x8(%rsp)
  0x000000011ba3c833: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3c83b: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3c840: jmp    0x000000011ba3c814
  0x000000011ba3c842: nop
  0x000000011ba3c843: nop
  0x000000011ba3c844: mov    0x420(%r15),%rax
  0x000000011ba3c84b: movabs $0x0,%r10
  0x000000011ba3c855: mov    %r10,0x420(%r15)
  0x000000011ba3c85c: movabs $0x0,%r10
  0x000000011ba3c866: mov    %r10,0x428(%r15)
  0x000000011ba3c86d: add    $0x30,%rsp
  0x000000011ba3c871: pop    %rbp
  0x000000011ba3c872: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3c877: hlt    
  0x000000011ba3c878: hlt    
  0x000000011ba3c879: hlt    
  0x000000011ba3c87a: hlt    
  0x000000011ba3c87b: hlt    
  0x000000011ba3c87c: hlt    
  0x000000011ba3c87d: hlt    
  0x000000011ba3c87e: hlt    
  0x000000011ba3c87f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba3c880: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3c885: mov    %rsp,-0x28(%rsp)
  0x000000011ba3c88a: sub    $0x80,%rsp
  0x000000011ba3c891: mov    %rax,0x78(%rsp)
  0x000000011ba3c896: mov    %rcx,0x70(%rsp)
  0x000000011ba3c89b: mov    %rdx,0x68(%rsp)
  0x000000011ba3c8a0: mov    %rbx,0x60(%rsp)
  0x000000011ba3c8a5: mov    %rbp,0x50(%rsp)
  0x000000011ba3c8aa: mov    %rsi,0x48(%rsp)
  0x000000011ba3c8af: mov    %rdi,0x40(%rsp)
  0x000000011ba3c8b4: mov    %r8,0x38(%rsp)
  0x000000011ba3c8b9: mov    %r9,0x30(%rsp)
  0x000000011ba3c8be: mov    %r10,0x28(%rsp)
  0x000000011ba3c8c3: mov    %r11,0x20(%rsp)
  0x000000011ba3c8c8: mov    %r12,0x18(%rsp)
  0x000000011ba3c8cd: mov    %r13,0x10(%rsp)
  0x000000011ba3c8d2: mov    %r14,0x8(%rsp)
  0x000000011ba3c8d7: mov    %r15,(%rsp)
  0x000000011ba3c8db: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3c8e5: movabs $0x11ba3c885,%rsi  ;   {internal_word}
  0x000000011ba3c8ef: mov    %rsp,%rdx
  0x000000011ba3c8f2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3c8f6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3c8fb: hlt    
[Deopt Handler Code]
  0x000000011ba3c8fc: movabs $0x11ba3c8fc,%r10  ;   {section_word}
  0x000000011ba3c906: push   %r10
  0x000000011ba3c908: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3c90d: hlt    
  0x000000011ba3c90e: hlt    
  0x000000011ba3c90f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 128 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='6' method='java.lang.String hashCode ()I' bytes='49' count='384' iicount='384' level='3' stamp='0.068' comment='tiered' hot_count='384'/>
<task_queued compile_id='7' method='java.lang.String isLatin1 ()Z' bytes='19' count='384' iicount='384' level='3' stamp='0.068' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='5' compiler='c1' level='3' entry='0x000000011ba3cb40' size='1304' address='0x000000011ba3c990' relocation_offset='376' insts_offset='432' stub_offset='816' scopes_data_offset='968' scopes_pcs_offset='1072' dependencies_offset='1280' nul_chk_table_offset='1288' metadata_offset='960' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='257' backedge_count='4832' iicount='257' stamp='0.069'/>
<print_nmethod stamp='0.069'>
Compiled method (c1)      68    5       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000000011ba3c990,0x000000011ba3cea8] = 1304
 relocation     [0x000000011ba3cb08,0x000000011ba3cb40] = 56
 main code      [0x000000011ba3cb40,0x000000011ba3ccc0] = 384
 stub code      [0x000000011ba3ccc0,0x000000011ba3cd50] = 144
 metadata       [0x000000011ba3cd50,0x000000011ba3cd58] = 8
 scopes data    [0x000000011ba3cd58,0x000000011ba3cdc0] = 104
 scopes pcs     [0x000000011ba3cdc0,0x000000011ba3ce90] = 208
 dependencies   [0x000000011ba3ce90,0x000000011ba3ce98] = 8
 nul chk table  [0x000000011ba3ce98,0x000000011ba3cea8] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x000000011ba3cb40, 0x000000011ba3cd50]  528 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3cb40: mov    %eax,-0x14000(%rsp)
  0x000000011ba3cb47: push   %rbp
  0x000000011ba3cb48: sub    $0x30,%rsp
  0x000000011ba3cb4c: movabs $0x1326df318,%rax  ;   {metadata(method data for {method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3cb56: mov    0x104(%rax),%edi
  0x000000011ba3cb5c: add    $0x8,%edi
  0x000000011ba3cb5f: mov    %edi,0x104(%rax)
  0x000000011ba3cb65: and    $0x1ff8,%edi
  0x000000011ba3cb6b: cmp    $0x0,%edi
  0x000000011ba3cb6e: je     0x000000011ba3cc2f  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0 (line 194)

  0x000000011ba3cb74: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x000000011ba3cc50
  0x000000011ba3cb77: mov    $0x0,%edi
  0x000000011ba3cb7c: mov    $0x0,%ebx
  0x000000011ba3cb81: jmpq   0x000000011ba3cbe4  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10 (line 195)

  0x000000011ba3cb86: xchg   %ax,%ax
  0x000000011ba3cb88: movslq %edi,%rdx
  0x000000011ba3cb8b: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x000000011ba3cb90: mov    %rbx,%rcx
  0x000000011ba3cb93: shl    $0x5,%ebx
  0x000000011ba3cb96: sub    %ecx,%ebx
  0x000000011ba3cb98: and    $0xff,%edx
  0x000000011ba3cb9e: add    %edx,%ebx
  0x000000011ba3cba0: inc    %edi
  0x000000011ba3cba2: movabs $0x1326df318,%rdx  ;   {metadata(method data for {method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3cbac: mov    0x108(%rdx),%ecx
  0x000000011ba3cbb2: add    $0x8,%ecx
  0x000000011ba3cbb5: mov    %ecx,0x108(%rdx)
  0x000000011ba3cbbb: and    $0xfff8,%ecx
  0x000000011ba3cbc1: cmp    $0x0,%ecx
  0x000000011ba3cbc4: je     0x000000011ba3cc55  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x000000011ba3cbca: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x000000011ba3cbd1: test   %eax,(%r10)        ;   {poll}
  0x000000011ba3cbd4: movabs $0x1326df318,%rdx  ;   {metadata(method data for {method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3cbde: incl   0x160(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x000000011ba3cbe4: cmp    %eax,%edi
  0x000000011ba3cbe6: movabs $0x1326df318,%rdx  ;   {metadata(method data for {method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3cbf0: movabs $0x150,%rcx
  0x000000011ba3cbfa: jl     0x000000011ba3cc0a
  0x000000011ba3cc00: movabs $0x140,%rcx
  0x000000011ba3cc0a: mov    (%rdx,%rcx,1),%r8
  0x000000011ba3cc0e: lea    0x1(%r8),%r8
  0x000000011ba3cc12: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba3cc16: jl     0x000000011ba3cb88  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x000000011ba3cc1c: mov    %rbx,%rax
  0x000000011ba3cc1f: add    $0x30,%rsp
  0x000000011ba3cc23: pop    %rbp
  0x000000011ba3cc24: mov    0x108(%r15),%r10
  0x000000011ba3cc2b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3cc2e: retq   
  0x000000011ba3cc2f: movabs $0x1326035f0,%r10  ;   {metadata({method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3cc39: mov    %r10,0x8(%rsp)
  0x000000011ba3cc3e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3cc46: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3cc4b: jmpq   0x000000011ba3cb74
  0x000000011ba3cc50: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3cc55: movabs $0x1326035f0,%r10  ;   {metadata({method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3cc5f: mov    %r10,0x8(%rsp)
  0x000000011ba3cc64: movq   $0x25,(%rsp)
  0x000000011ba3cc6c: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3cc71: jmpq   0x000000011ba3cbca
  0x000000011ba3cc76: nop
  0x000000011ba3cc77: nop
  0x000000011ba3cc78: mov    0x420(%r15),%rax
  0x000000011ba3cc7f: movabs $0x0,%r10
  0x000000011ba3cc89: mov    %r10,0x420(%r15)
  0x000000011ba3cc90: movabs $0x0,%r10
  0x000000011ba3cc9a: mov    %r10,0x428(%r15)
  0x000000011ba3cca1: add    $0x30,%rsp
  0x000000011ba3cca5: pop    %rbp
  0x000000011ba3cca6: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3ccab: hlt    
  0x000000011ba3ccac: hlt    
  0x000000011ba3ccad: hlt    
  0x000000011ba3ccae: hlt    
  0x000000011ba3ccaf: hlt    
  0x000000011ba3ccb0: hlt    
  0x000000011ba3ccb1: hlt    
  0x000000011ba3ccb2: hlt    
  0x000000011ba3ccb3: hlt    
  0x000000011ba3ccb4: hlt    
  0x000000011ba3ccb5: hlt    
  0x000000011ba3ccb6: hlt    
  0x000000011ba3ccb7: hlt    
  0x000000011ba3ccb8: hlt    
  0x000000011ba3ccb9: hlt    
  0x000000011ba3ccba: hlt    
  0x000000011ba3ccbb: hlt    
  0x000000011ba3ccbc: hlt    
  0x000000011ba3ccbd: hlt    
  0x000000011ba3ccbe: hlt    
  0x000000011ba3ccbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba3ccc0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3ccc5: mov    %rsp,-0x28(%rsp)
  0x000000011ba3ccca: sub    $0x80,%rsp
  0x000000011ba3ccd1: mov    %rax,0x78(%rsp)
  0x000000011ba3ccd6: mov    %rcx,0x70(%rsp)
  0x000000011ba3ccdb: mov    %rdx,0x68(%rsp)
  0x000000011ba3cce0: mov    %rbx,0x60(%rsp)
  0x000000011ba3cce5: mov    %rbp,0x50(%rsp)
  0x000000011ba3ccea: mov    %rsi,0x48(%rsp)
  0x000000011ba3ccef: mov    %rdi,0x40(%rsp)
  0x000000011ba3ccf4: mov    %r8,0x38(%rsp)
  0x000000011ba3ccf9: mov    %r9,0x30(%rsp)
  0x000000011ba3ccfe: mov    %r10,0x28(%rsp)
  0x000000011ba3cd03: mov    %r11,0x20(%rsp)
  0x000000011ba3cd08: mov    %r12,0x18(%rsp)
  0x000000011ba3cd0d: mov    %r13,0x10(%rsp)
  0x000000011ba3cd12: mov    %r14,0x8(%rsp)
  0x000000011ba3cd17: mov    %r15,(%rsp)
  0x000000011ba3cd1b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3cd25: movabs $0x11ba3ccc5,%rsi  ;   {internal_word}
  0x000000011ba3cd2f: mov    %rsp,%rdx
  0x000000011ba3cd32: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3cd36: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3cd3b: hlt    
[Deopt Handler Code]
  0x000000011ba3cd3c: movabs $0x11ba3cd3c,%r10  ;   {section_word}
  0x000000011ba3cd46: push   %r10
  0x000000011ba3cd48: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3cd4d: hlt    
  0x000000011ba3cd4e: hlt    
  0x000000011ba3cd4f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 145 267 277 305 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='8' method='java.lang.Math floorMod (II)I' bytes='10' count='384' iicount='384' level='3' stamp='0.071' comment='tiered' hot_count='384'/>
<task_queued compile_id='9' method='java.lang.Math floorDiv (II)I' bytes='22' count='384' iicount='384' level='3' stamp='0.071' comment='tiered' hot_count='384'/>
<task_queued compile_id='10' method='java.lang.String coder ()B' bytes='15' count='384' iicount='384' level='3' stamp='0.072' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='6' compiler='c1' level='3' entry='0x000000011ba3d100' size='1944' address='0x000000011ba3cf10' relocation_offset='376' insts_offset='496' stub_offset='1168' scopes_data_offset='1368' scopes_pcs_offset='1536' dependencies_offset='1920' nul_chk_table_offset='1928' metadata_offset='1352' method='java.lang.String hashCode ()I' bytes='49' count='697' iicount='697' stamp='0.072'/>
<print_nmethod stamp='0.072'>
Compiled method (c1)      71    6       3       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000000011ba3cf10,0x000000011ba3d6a8] = 1944
 relocation     [0x000000011ba3d088,0x000000011ba3d0e8] = 96
 main code      [0x000000011ba3d100,0x000000011ba3d3a0] = 672
 stub code      [0x000000011ba3d3a0,0x000000011ba3d458] = 184
 metadata       [0x000000011ba3d458,0x000000011ba3d468] = 16
 scopes data    [0x000000011ba3d468,0x000000011ba3d510] = 168
 scopes pcs     [0x000000011ba3d510,0x000000011ba3d690] = 384
 dependencies   [0x000000011ba3d690,0x000000011ba3d698] = 8
 nul chk table  [0x000000011ba3d698,0x000000011ba3d6a8] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000000011ba3d100, 0x000000011ba3d458]  856 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ba3d100: mov    0x8(%rsi),%r10d
  0x000000011ba3d104: movabs $0x800000000,%r12
  0x000000011ba3d10e: add    %r12,%r10
  0x000000011ba3d111: xor    %r12,%r12
  0x000000011ba3d114: cmp    %rax,%r10
  0x000000011ba3d117: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba3d11d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba3d120: mov    %eax,-0x14000(%rsp)
  0x000000011ba3d127: push   %rbp
  0x000000011ba3d128: sub    $0x40,%rsp
  0x000000011ba3d12c: movabs $0x1326e0528,%rdi  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d136: mov    0x104(%rdi),%ebx
  0x000000011ba3d13c: add    $0x8,%ebx
  0x000000011ba3d13f: mov    %ebx,0x104(%rdi)
  0x000000011ba3d145: and    $0x1ff8,%ebx
  0x000000011ba3d14b: cmp    $0x0,%ebx
  0x000000011ba3d14e: je     0x000000011ba3d31a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1502)

  0x000000011ba3d154: mov    0x10(%rsi),%edi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x000000011ba3d157: cmp    $0x0,%edi
  0x000000011ba3d15a: movabs $0x1326e0528,%rbx  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d164: movabs $0x140,%rax
  0x000000011ba3d16e: jne    0x000000011ba3d17e
  0x000000011ba3d174: movabs $0x150,%rax
  0x000000011ba3d17e: mov    (%rbx,%rax,1),%rdx
  0x000000011ba3d182: lea    0x1(%rdx),%rdx
  0x000000011ba3d186: mov    %rdx,(%rbx,%rax,1)
  0x000000011ba3d18a: jne    0x000000011ba3d307  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1503)

  0x000000011ba3d190: mov    0xc(%rsi),%ebx
  0x000000011ba3d193: shl    $0x3,%rbx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x000000011ba3d197: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x000000011ba3d33b
  0x000000011ba3d19a: cmp    $0x0,%eax
  0x000000011ba3d19d: movabs $0x1326e0528,%rax  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d1a7: movabs $0x160,%rdx
  0x000000011ba3d1b1: jle    0x000000011ba3d1c1
  0x000000011ba3d1b7: movabs $0x170,%rdx
  0x000000011ba3d1c1: mov    (%rax,%rdx,1),%rcx
  0x000000011ba3d1c5: lea    0x1(%rcx),%rcx
  0x000000011ba3d1c9: mov    %rcx,(%rax,%rdx,1)
  0x000000011ba3d1cd: jle    0x000000011ba3d307  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x000000011ba3d1d3: mov    %rsi,%rdi
  0x000000011ba3d1d6: movabs $0x1326e0528,%rax  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d1e0: addq   $0x1,0x180(%rax)
  0x000000011ba3d1e8: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d1f2: mov    0x104(%rdi),%eax
  0x000000011ba3d1f8: add    $0x8,%eax
  0x000000011ba3d1fb: mov    %eax,0x104(%rdi)
  0x000000011ba3d201: and    $0x7ffff8,%eax
  0x000000011ba3d207: cmp    $0x0,%eax
  0x000000011ba3d20a: je     0x000000011ba3d340
  0x000000011ba3d210: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d21a: incl   0x150(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x000000011ba3d220: movsbl 0x14(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x000000011ba3d224: cmp    $0x0,%edi
  0x000000011ba3d227: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d231: movabs $0x160,%rax
  0x000000011ba3d23b: jne    0x000000011ba3d24b
  0x000000011ba3d241: movabs $0x170,%rax
  0x000000011ba3d24b: mov    (%rdi,%rax,1),%rdx
  0x000000011ba3d24f: lea    0x1(%rdx),%rdx
  0x000000011ba3d253: mov    %rdx,(%rdi,%rax,1)
  0x000000011ba3d257: jne    0x000000011ba3d277  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x000000011ba3d25d: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d267: incl   0x180(%rdi)
  0x000000011ba3d26d: mov    $0x1,%edi
  0x000000011ba3d272: jmpq   0x000000011ba3d27c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x000000011ba3d277: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x000000011ba3d27c: and    $0x1,%edi
  0x000000011ba3d27f: cmp    $0x0,%edi
  0x000000011ba3d282: movabs $0x1326e0528,%rdi  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d28c: movabs $0x1b8,%rax
  0x000000011ba3d296: je     0x000000011ba3d2a6
  0x000000011ba3d29c: movabs $0x1c8,%rax
  0x000000011ba3d2a6: mov    (%rdi,%rax,1),%rdx
  0x000000011ba3d2aa: lea    0x1(%rdx),%rdx
  0x000000011ba3d2ae: mov    %rdx,(%rdi,%rax,1)
  0x000000011ba3d2b2: mov    %rsi,0x30(%rsp)
  0x000000011ba3d2b7: je     0x000000011ba3d2f1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22 (line 1504)

  0x000000011ba3d2bd: movabs $0x1326e0528,%rdi  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d2c7: addq   $0x1,0x1d8(%rdi)
  0x000000011ba3d2cf: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x000000011ba3d2d2: nopl   0x0(%rax,%rax,1)
  0x000000011ba3d2d7: callq  0x000000011ba3cb40  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {static_call}
  0x000000011ba3d2dc: movabs $0x1326e0528,%rsi  ;   {metadata(method data for {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d2e6: incl   0x1e8(%rsi)
  0x000000011ba3d2ec: jmpq   0x000000011ba3d2fc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32 (line 1504)

  0x000000011ba3d2f1: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x000000011ba3d2f4: data16 xchg %ax,%ax
  0x000000011ba3d2f7: callq  0x000000011b4d2400  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)
                                                ;   {static_call}
  0x000000011ba3d2fc: mov    0x30(%rsp),%rsi
  0x000000011ba3d301: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x000000011ba3d304: mov    %rax,%rdi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47 (line 1507)

  0x000000011ba3d307: mov    %rdi,%rax
  0x000000011ba3d30a: add    $0x40,%rsp
  0x000000011ba3d30e: pop    %rbp
  0x000000011ba3d30f: mov    0x108(%r15),%r10
  0x000000011ba3d316: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3d319: retq   
  0x000000011ba3d31a: movabs $0x1324b1bc0,%r10  ;   {metadata({method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d324: mov    %r10,0x8(%rsp)
  0x000000011ba3d329: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3d331: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3d336: jmpq   0x000000011ba3d154
  0x000000011ba3d33b: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3d340: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3d34a: mov    %r10,0x8(%rsp)
  0x000000011ba3d34f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3d357: callq  0x000000011b59a600  ; ImmutableOopMap{rbx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3d35c: jmpq   0x000000011ba3d210
  0x000000011ba3d361: nop
  0x000000011ba3d362: nop
  0x000000011ba3d363: mov    0x420(%r15),%rax
  0x000000011ba3d36a: movabs $0x0,%r10
  0x000000011ba3d374: mov    %r10,0x420(%r15)
  0x000000011ba3d37b: movabs $0x0,%r10
  0x000000011ba3d385: mov    %r10,0x428(%r15)
  0x000000011ba3d38c: add    $0x40,%rsp
  0x000000011ba3d390: pop    %rbp
  0x000000011ba3d391: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3d396: hlt    
  0x000000011ba3d397: hlt    
  0x000000011ba3d398: hlt    
  0x000000011ba3d399: hlt    
  0x000000011ba3d39a: hlt    
  0x000000011ba3d39b: hlt    
  0x000000011ba3d39c: hlt    
  0x000000011ba3d39d: hlt    
  0x000000011ba3d39e: hlt    
  0x000000011ba3d39f: hlt    
[Stub Code]
  0x000000011ba3d3a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba3d3a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba3d3af: jmpq   0x000000011ba3d3af  ;   {runtime_call}
  0x000000011ba3d3b4: nop
  0x000000011ba3d3b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba3d3bf: jmpq   0x000000011ba3d3bf  ;   {runtime_call}
[Exception Handler]
  0x000000011ba3d3c4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba3d3c9: mov    %rsp,-0x28(%rsp)
  0x000000011ba3d3ce: sub    $0x80,%rsp
  0x000000011ba3d3d5: mov    %rax,0x78(%rsp)
  0x000000011ba3d3da: mov    %rcx,0x70(%rsp)
  0x000000011ba3d3df: mov    %rdx,0x68(%rsp)
  0x000000011ba3d3e4: mov    %rbx,0x60(%rsp)
  0x000000011ba3d3e9: mov    %rbp,0x50(%rsp)
  0x000000011ba3d3ee: mov    %rsi,0x48(%rsp)
  0x000000011ba3d3f3: mov    %rdi,0x40(%rsp)
  0x000000011ba3d3f8: mov    %r8,0x38(%rsp)
  0x000000011ba3d3fd: mov    %r9,0x30(%rsp)
  0x000000011ba3d402: mov    %r10,0x28(%rsp)
  0x000000011ba3d407: mov    %r11,0x20(%rsp)
  0x000000011ba3d40c: mov    %r12,0x18(%rsp)
  0x000000011ba3d411: mov    %r13,0x10(%rsp)
  0x000000011ba3d416: mov    %r14,0x8(%rsp)
  0x000000011ba3d41b: mov    %r15,(%rsp)
  0x000000011ba3d41f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3d429: movabs $0x11ba3d3c9,%rsi  ;   {internal_word}
  0x000000011ba3d433: mov    %rsp,%rdx
  0x000000011ba3d436: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3d43a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3d43f: hlt    
[Deopt Handler Code]
  0x000000011ba3d440: movabs $0x11ba3d440,%r10  ;   {section_word}
  0x000000011ba3d44a: push   %r10
  0x000000011ba3d44c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3d451: hlt    
  0x000000011ba3d452: hlt    
  0x000000011ba3d453: hlt    
  0x000000011ba3d454: hlt    
  0x000000011ba3d455: hlt    
  0x000000011ba3d456: hlt    
  0x000000011ba3d457: hlt    

ImmutableOopMap{[48]=Oop }pc offsets: 476 508 
ImmutableOopMap{rsi=Oop }pc offsets: 566 
ImmutableOopMap{rsi=Oop rbx=Oop }pc offsets: 576 
ImmutableOopMap{rbx=Oop rsi=Oop }pc offsets: 604 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='11' method='java.util.ImmutableCollections$SetN probe (Ljava/lang/Object;)I' bytes='56' count='512' backedge_count='193' iicount='512' level='3' stamp='0.076' comment='tiered' hot_count='512'/>
<task_queued compile_id='12' method='java.util.Collections$EmptySet hashCode ()I' bytes='2' count='128' iicount='128' level='1' stamp='0.076' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='11' compiler='c1' level='3' entry='0x000000011ba3d920' size='3016' address='0x000000011ba3d710' relocation_offset='376' insts_offset='528' stub_offset='1904' scopes_data_offset='2112' scopes_pcs_offset='2416' dependencies_offset='2960' nul_chk_table_offset='2968' metadata_offset='2088' method='java.util.ImmutableCollections$SetN probe (Ljava/lang/Object;)I' bytes='56' count='627' backedge_count='264' iicount='627' stamp='0.076'/>
<print_nmethod stamp='0.076'>
Compiled method (c1)      76   11       3       java.util.ImmutableCollections$SetN::probe (56 bytes)
 total in heap  [0x000000011ba3d710,0x000000011ba3e2d8] = 3016
 relocation     [0x000000011ba3d888,0x000000011ba3d908] = 128
 main code      [0x000000011ba3d920,0x000000011ba3de80] = 1376
 stub code      [0x000000011ba3de80,0x000000011ba3df38] = 184
 metadata       [0x000000011ba3df38,0x000000011ba3df50] = 24
 scopes data    [0x000000011ba3df50,0x000000011ba3e080] = 304
 scopes pcs     [0x000000011ba3e080,0x000000011ba3e2a0] = 544
 dependencies   [0x000000011ba3e2a0,0x000000011ba3e2a8] = 8
 nul chk table  [0x000000011ba3e2a8,0x000000011ba3e2d8] = 48
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.probe(Ljava/lang/Object;)I  [0x000000011ba3d920, 0x000000011ba3df38]  1560 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;
  # this:     rsi:rsi   = &apos;java/util/ImmutableCollections$SetN&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x80]  (sp of caller)
  0x000000011ba3d920: mov    0x8(%rsi),%r10d
  0x000000011ba3d924: movabs $0x800000000,%r12
  0x000000011ba3d92e: add    %r12,%r10
  0x000000011ba3d931: xor    %r12,%r12
  0x000000011ba3d934: cmp    %rax,%r10
  0x000000011ba3d937: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba3d93d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba3d940: mov    %eax,-0x14000(%rsp)
  0x000000011ba3d947: push   %rbp
  0x000000011ba3d948: sub    $0x70,%rsp
  0x000000011ba3d94c: mov    %rsi,0x50(%rsp)
  0x000000011ba3d951: mov    %rdx,0x58(%rsp)
  0x000000011ba3d956: movabs $0x1326e9768,%rdi  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3d960: mov    0x104(%rdi),%ebx
  0x000000011ba3d966: add    $0x8,%ebx
  0x000000011ba3d969: mov    %ebx,0x104(%rdi)
  0x000000011ba3d96f: and    $0x1ff8,%ebx
  0x000000011ba3d975: cmp    $0x0,%ebx
  0x000000011ba3d978: je     0x000000011ba3dd8f  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@0 (line 672)

  0x000000011ba3d97e: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba3ddb0
  0x000000011ba3d981: mov    %rdx,%rdi
  0x000000011ba3d984: movabs $0x1326e9768,%rbx  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3d98e: mov    0x8(%rdi),%edi
  0x000000011ba3d991: movabs $0x800000000,%r12
  0x000000011ba3d99b: add    %r12,%rdi
  0x000000011ba3d99e: xor    %r12,%r12
  0x000000011ba3d9a1: cmp    0x150(%rbx),%rdi
  0x000000011ba3d9a8: jne    0x000000011ba3d9b7
  0x000000011ba3d9aa: addq   $0x1,0x158(%rbx)
  0x000000011ba3d9b2: jmpq   0x000000011ba3da1d
  0x000000011ba3d9b7: cmp    0x160(%rbx),%rdi
  0x000000011ba3d9be: jne    0x000000011ba3d9cd
  0x000000011ba3d9c0: addq   $0x1,0x168(%rbx)
  0x000000011ba3d9c8: jmpq   0x000000011ba3da1d
  0x000000011ba3d9cd: cmpq   $0x0,0x150(%rbx)
  0x000000011ba3d9d8: jne    0x000000011ba3d9f1
  0x000000011ba3d9da: mov    %rdi,0x150(%rbx)
  0x000000011ba3d9e1: movq   $0x1,0x158(%rbx)
  0x000000011ba3d9ec: jmpq   0x000000011ba3da1d
  0x000000011ba3d9f1: cmpq   $0x0,0x160(%rbx)
  0x000000011ba3d9fc: jne    0x000000011ba3da15
  0x000000011ba3d9fe: mov    %rdi,0x160(%rbx)
  0x000000011ba3da05: movq   $0x1,0x168(%rbx)
  0x000000011ba3da10: jmpq   0x000000011ba3da1d
  0x000000011ba3da15: addq   $0x1,0x140(%rbx)
  0x000000011ba3da1d: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 672)

  0x000000011ba3da20: nopl   0x0(%rax,%rax,1)
  0x000000011ba3da25: movabs $0xffffffffffffffff,%rax
  0x000000011ba3da2f: callq  0x000000011b4d3ba0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 672)
                                                ;   {virtual_call}
  0x000000011ba3da34: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 672)

  0x000000011ba3da37: mov    0x50(%rsp),%rdi
  0x000000011ba3da3c: mov    0x10(%rdi),%eax
  0x000000011ba3da3f: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@5 (line 672)

  0x000000011ba3da43: mov    0xc(%rax),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@8 (line 672)
                                                ; implicit exception: dispatches to 0x000000011ba3ddb5
  0x000000011ba3da46: movabs $0x1326e9768,%rax  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3da50: addq   $0x1,0x178(%rax)
  0x000000011ba3da58: movabs $0x1326e9428,%rax  ;   {metadata(method data for {method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3da62: mov    0x104(%rax),%edx
  0x000000011ba3da68: add    $0x8,%edx
  0x000000011ba3da6b: mov    %edx,0x104(%rax)
  0x000000011ba3da71: and    $0x7ffff8,%edx
  0x000000011ba3da77: cmp    $0x0,%edx
  0x000000011ba3da7a: je     0x000000011ba3ddba
  0x000000011ba3da80: movabs $0x1326e9428,%rax  ;   {metadata(method data for {method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3da8a: addq   $0x1,0x140(%rax)
  0x000000011ba3da92: movabs $0x1326e95c0,%rax  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3da9c: mov    0x104(%rax),%edx
  0x000000011ba3daa2: add    $0x8,%edx
  0x000000011ba3daa5: mov    %edx,0x104(%rax)
  0x000000011ba3daab: and    $0x7ffff8,%edx
  0x000000011ba3dab1: cmp    $0x0,%edx
  0x000000011ba3dab4: je     0x000000011ba3dddb
  0x000000011ba3daba: mov    %rsi,%rax
  0x000000011ba3dabd: cmp    $0x80000000,%eax
  0x000000011ba3dac3: jne    0x000000011ba3dad4
  0x000000011ba3dac9: xor    %edx,%edx
  0x000000011ba3dacb: cmp    $0xffffffff,%ebx
  0x000000011ba3dace: je     0x000000011ba3dad7
  0x000000011ba3dad4: cltd   
  0x000000011ba3dad5: idiv   %ebx               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 672)
                                                ; implicit exception: dispatches to 0x000000011ba3ddfc
  0x000000011ba3dad7: mov    %rbx,%rdx
  0x000000011ba3dada: xor    %rsi,%rdx
  0x000000011ba3dadd: cmp    $0x0,%edx
  0x000000011ba3dae0: movabs $0x1326e95c0,%rdx  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3daea: movabs $0x140,%rcx
  0x000000011ba3daf4: jge    0x000000011ba3db04
  0x000000011ba3dafa: movabs $0x150,%rcx
  0x000000011ba3db04: mov    (%rdx,%rcx,1),%r8
  0x000000011ba3db08: lea    0x1(%r8),%r8
  0x000000011ba3db0c: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba3db10: jge    0x000000011ba3db56  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 672)

  0x000000011ba3db16: mov    %rax,%rdx
  0x000000011ba3db19: imul   %ebx,%edx
  0x000000011ba3db1c: cmp    %esi,%edx
  0x000000011ba3db1e: movabs $0x1326e95c0,%rdx  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3db28: movabs $0x160,%rcx
  0x000000011ba3db32: je     0x000000011ba3db42
  0x000000011ba3db38: movabs $0x170,%rcx
  0x000000011ba3db42: mov    (%rdx,%rcx,1),%r8
  0x000000011ba3db46: lea    0x1(%r8),%r8
  0x000000011ba3db4a: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba3db4e: je     0x000000011ba3db56  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 672)

  0x000000011ba3db54: dec    %eax
  0x000000011ba3db56: imul   %ebx,%eax
  0x000000011ba3db59: sub    %eax,%esi
  0x000000011ba3db5b: mov    0x58(%rsp),%rdx
  0x000000011ba3db60: mov    0x10(%rdi),%ebx
  0x000000011ba3db63: shl    $0x3,%rbx          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@14 (line 674)

  0x000000011ba3db67: mov    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011ba3de01
  0x000000011ba3db6a: cmp    %esi,%eax
  0x000000011ba3db6c: jbe    0x000000011ba3de06
  0x000000011ba3db72: movslq %esi,%rax
  0x000000011ba3db75: mov    0x10(%rbx,%rax,4),%ebx
  0x000000011ba3db79: shl    $0x3,%rbx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 674)

  0x000000011ba3db7d: cmp    $0x0,%rbx
  0x000000011ba3db81: movabs $0x1326e9768,%rax  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3db8b: movabs $0x198,%rcx
  0x000000011ba3db95: je     0x000000011ba3dba5
  0x000000011ba3db9b: movabs $0x188,%rcx
  0x000000011ba3dba5: mov    (%rax,%rcx,1),%r8
  0x000000011ba3dba9: lea    0x1(%r8),%r8
  0x000000011ba3dbad: mov    %r8,(%rax,%rcx,1)
  0x000000011ba3dbb1: je     0x000000011ba3dd72  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@21 (line 675)

  0x000000011ba3dbb7: mov    %esi,0x60(%rsp)
  0x000000011ba3dbbb: mov    %rdx,%rax
  0x000000011ba3dbbe: movabs $0x1326e9768,%rcx  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3dbc8: mov    0x8(%rax),%eax
  0x000000011ba3dbcb: movabs $0x800000000,%r12
  0x000000011ba3dbd5: add    %r12,%rax
  0x000000011ba3dbd8: xor    %r12,%r12
  0x000000011ba3dbdb: cmp    0x1b8(%rcx),%rax
  0x000000011ba3dbe2: jne    0x000000011ba3dbf1
  0x000000011ba3dbe4: addq   $0x1,0x1c0(%rcx)
  0x000000011ba3dbec: jmpq   0x000000011ba3dc57
  0x000000011ba3dbf1: cmp    0x1c8(%rcx),%rax
  0x000000011ba3dbf8: jne    0x000000011ba3dc07
  0x000000011ba3dbfa: addq   $0x1,0x1d0(%rcx)
  0x000000011ba3dc02: jmpq   0x000000011ba3dc57
  0x000000011ba3dc07: cmpq   $0x0,0x1b8(%rcx)
  0x000000011ba3dc12: jne    0x000000011ba3dc2b
  0x000000011ba3dc14: mov    %rax,0x1b8(%rcx)
  0x000000011ba3dc1b: movq   $0x1,0x1c0(%rcx)
  0x000000011ba3dc26: jmpq   0x000000011ba3dc57
  0x000000011ba3dc2b: cmpq   $0x0,0x1c8(%rcx)
  0x000000011ba3dc36: jne    0x000000011ba3dc4f
  0x000000011ba3dc38: mov    %rax,0x1c8(%rcx)
  0x000000011ba3dc3f: movq   $0x1,0x1d0(%rcx)
  0x000000011ba3dc4a: jmpq   0x000000011ba3dc57
  0x000000011ba3dc4f: addq   $0x1,0x1a8(%rcx)
  0x000000011ba3dc57: mov    %rdx,%rax
  0x000000011ba3dc5a: mov    %rbx,%rdx
  0x000000011ba3dc5d: mov    %rax,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@31 (line 677)

  0x000000011ba3dc60: nopl   0x0(%rax,%rax,1)
  0x000000011ba3dc65: movabs $0xffffffffffffffff,%rax
  0x000000011ba3dc6f: callq  0x000000011b4d3be0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@31 (line 677)
                                                ;   {virtual_call}
  0x000000011ba3dc74: cmp    $0x0,%eax
  0x000000011ba3dc77: movabs $0x1326e9768,%rax  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3dc81: movabs $0x1f0,%rsi
  0x000000011ba3dc8b: jne    0x000000011ba3dc9b
  0x000000011ba3dc91: movabs $0x1e0,%rsi
  0x000000011ba3dc9b: mov    (%rax,%rsi,1),%rdi
  0x000000011ba3dc9f: lea    0x1(%rdi),%rdi
  0x000000011ba3dca3: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba3dca7: jne    0x000000011ba3dd5b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@34 (line 677)

  0x000000011ba3dcad: mov    0x50(%rsp),%rsi
  0x000000011ba3dcb2: mov    0x60(%rsp),%eax
  0x000000011ba3dcb6: inc    %eax
  0x000000011ba3dcb8: mov    0x10(%rsi),%edi
  0x000000011ba3dcbb: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@44 (line 679)

  0x000000011ba3dcbf: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@47 (line 679)
                                                ; implicit exception: dispatches to 0x000000011ba3de14
  0x000000011ba3dcc2: cmp    %edi,%eax
  0x000000011ba3dcc4: movabs $0x1326e9768,%rdi  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3dcce: movabs $0x200,%rbx
  0x000000011ba3dcd8: jne    0x000000011ba3dce8
  0x000000011ba3dcde: movabs $0x210,%rbx
  0x000000011ba3dce8: mov    (%rdi,%rbx,1),%rdx
  0x000000011ba3dcec: lea    0x1(%rdx),%rdx
  0x000000011ba3dcf0: mov    %rdx,(%rdi,%rbx,1)
  0x000000011ba3dcf4: jne    0x000000011ba3dcff  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@48 (line 679)

  0x000000011ba3dcfa: mov    $0x0,%eax
  0x000000011ba3dcff: movabs $0x1326e9768,%rdi  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3dd09: mov    0x108(%rdi),%ebx
  0x000000011ba3dd0f: add    $0x8,%ebx
  0x000000011ba3dd12: mov    %ebx,0x108(%rdi)
  0x000000011ba3dd18: and    $0xfff8,%ebx
  0x000000011ba3dd1e: cmp    $0x0,%ebx
  0x000000011ba3dd21: je     0x000000011ba3de19  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 682)

  0x000000011ba3dd27: mov    0x108(%r15),%r10   ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 682)

  0x000000011ba3dd2e: test   %eax,(%r10)        ;   {poll}
  0x000000011ba3dd31: movabs $0x1326e9768,%rdi  ;   {metadata(method data for {method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3dd3b: incl   0x220(%rdi)
  0x000000011ba3dd41: mov    %rax,%rdi
  0x000000011ba3dd44: mov    0x58(%rsp),%rdx
  0x000000011ba3dd49: mov    %rsi,0x50(%rsp)
  0x000000011ba3dd4e: mov    %rdi,%rsi
  0x000000011ba3dd51: mov    0x50(%rsp),%rdi
  0x000000011ba3dd56: jmpq   0x000000011ba3db60  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 682)

  0x000000011ba3dd5b: mov    0x60(%rsp),%edi
  0x000000011ba3dd5f: mov    %rdi,%rax
  0x000000011ba3dd62: add    $0x70,%rsp
  0x000000011ba3dd66: pop    %rbp
  0x000000011ba3dd67: mov    0x108(%r15),%r10
  0x000000011ba3dd6e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3dd71: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@38 (line 678)

  0x000000011ba3dd72: mov    %rsi,%rdi
  0x000000011ba3dd75: mov    %rdi,%rsi
  0x000000011ba3dd78: neg    %esi
  0x000000011ba3dd7a: mov    %rsi,%rax
  0x000000011ba3dd7d: dec    %eax
  0x000000011ba3dd7f: add    $0x70,%rsp
  0x000000011ba3dd83: pop    %rbp
  0x000000011ba3dd84: mov    0x108(%r15),%r10
  0x000000011ba3dd8b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3dd8e: retq   
  0x000000011ba3dd8f: movabs $0x1326dd1a0,%r10  ;   {metadata({method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3dd99: mov    %r10,0x8(%rsp)
  0x000000011ba3dd9e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3dda6: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [80]=Oop rdx=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::probe@-1 (line 672)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3ddab: jmpq   0x000000011ba3d97e
  0x000000011ba3ddb0: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 672)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3ddb5: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@8 (line 672)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3ddba: movabs $0x132629058,%r10  ;   {metadata({method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3ddc4: mov    %r10,0x8(%rsp)
  0x000000011ba3ddc9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3ddd1: callq  0x000000011b59a600  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 672)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3ddd6: jmpq   0x000000011ba3da80
  0x000000011ba3dddb: movabs $0x132628e00,%r10  ;   {metadata({method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3dde5: mov    %r10,0x8(%rsp)
  0x000000011ba3ddea: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3ddf2: callq  0x000000011b59a600  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 672)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3ddf7: jmpq   0x000000011ba3daba
  0x000000011ba3ddfc: callq  0x000000011b595ca0  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 672)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011ba3de01: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 674)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3de06: mov    %rsi,(%rsp)
  0x000000011ba3de0a: mov    %rbx,0x8(%rsp)
  0x000000011ba3de0f: callq  0x000000011b595320  ; ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 674)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3de14: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@47 (line 679)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3de19: movabs $0x1326dd1a0,%r10  ;   {metadata({method} {0x00000001326dd1a0} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x000000011ba3de23: mov    %r10,0x8(%rsp)
  0x000000011ba3de28: movq   $0x35,(%rsp)
  0x000000011ba3de30: callq  0x000000011b59a600  ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 682)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3de35: jmpq   0x000000011ba3dd27
  0x000000011ba3de3a: nop
  0x000000011ba3de3b: nop
  0x000000011ba3de3c: mov    0x420(%r15),%rax
  0x000000011ba3de43: movabs $0x0,%r10
  0x000000011ba3de4d: mov    %r10,0x420(%r15)
  0x000000011ba3de54: movabs $0x0,%r10
  0x000000011ba3de5e: mov    %r10,0x428(%r15)
  0x000000011ba3de65: add    $0x70,%rsp
  0x000000011ba3de69: pop    %rbp
  0x000000011ba3de6a: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3de6f: hlt    
  0x000000011ba3de70: hlt    
  0x000000011ba3de71: hlt    
  0x000000011ba3de72: hlt    
  0x000000011ba3de73: hlt    
  0x000000011ba3de74: hlt    
  0x000000011ba3de75: hlt    
  0x000000011ba3de76: hlt    
  0x000000011ba3de77: hlt    
  0x000000011ba3de78: hlt    
  0x000000011ba3de79: hlt    
  0x000000011ba3de7a: hlt    
  0x000000011ba3de7b: hlt    
  0x000000011ba3de7c: hlt    
  0x000000011ba3de7d: hlt    
  0x000000011ba3de7e: hlt    
  0x000000011ba3de7f: hlt    
[Stub Code]
  0x000000011ba3de80: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba3de85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba3de8f: jmpq   0x000000011ba3de8f  ;   {runtime_call}
  0x000000011ba3de94: nop
  0x000000011ba3de95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba3de9f: jmpq   0x000000011ba3de9f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba3dea4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba3dea9: mov    %rsp,-0x28(%rsp)
  0x000000011ba3deae: sub    $0x80,%rsp
  0x000000011ba3deb5: mov    %rax,0x78(%rsp)
  0x000000011ba3deba: mov    %rcx,0x70(%rsp)
  0x000000011ba3debf: mov    %rdx,0x68(%rsp)
  0x000000011ba3dec4: mov    %rbx,0x60(%rsp)
  0x000000011ba3dec9: mov    %rbp,0x50(%rsp)
  0x000000011ba3dece: mov    %rsi,0x48(%rsp)
  0x000000011ba3ded3: mov    %rdi,0x40(%rsp)
  0x000000011ba3ded8: mov    %r8,0x38(%rsp)
  0x000000011ba3dedd: mov    %r9,0x30(%rsp)
  0x000000011ba3dee2: mov    %r10,0x28(%rsp)
  0x000000011ba3dee7: mov    %r11,0x20(%rsp)
  0x000000011ba3deec: mov    %r12,0x18(%rsp)
  0x000000011ba3def1: mov    %r13,0x10(%rsp)
  0x000000011ba3def6: mov    %r14,0x8(%rsp)
  0x000000011ba3defb: mov    %r15,(%rsp)
  0x000000011ba3deff: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3df09: movabs $0x11ba3dea9,%rsi  ;   {internal_word}
  0x000000011ba3df13: mov    %rsp,%rdx
  0x000000011ba3df16: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3df1a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3df1f: hlt    
[Deopt Handler Code]
  0x000000011ba3df20: movabs $0x11ba3df20,%r10  ;   {section_word}
  0x000000011ba3df2a: push   %r10
  0x000000011ba3df2c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3df31: hlt    
  0x000000011ba3df32: hlt    
  0x000000011ba3df33: hlt    
  0x000000011ba3df34: hlt    
  0x000000011ba3df35: hlt    
  0x000000011ba3df36: hlt    
  0x000000011ba3df37: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 276 852 
ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }pc offsets: 1038 
ImmutableOopMap{rsi=Oop [80]=Oop rdx=Oop [88]=Oop }pc offsets: 1163 
ImmutableOopMap{rdx=Oop [88]=Oop [80]=Oop }pc offsets: 1173 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }pc offsets: 1178 1206 1239 1249 
ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }pc offsets: 1254 1268 
ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }pc offsets: 1273 1301 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='13' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='512' iicount='512' level='3' stamp='0.084' comment='tiered' hot_count='512'/>
<task_queued compile_id='14' method='java.lang.StringLatin1 equals ([B[B)Z' bytes='36' count='512' backedge_count='436' iicount='512' level='3' stamp='0.084' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='7' compiler='c1' level='3' entry='0x000000011ba3e4c0' size='1104' address='0x000000011ba3e310' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='952' dependencies_offset='1096' metadata_offset='896' method='java.lang.String isLatin1 ()Z' bytes='19' count='1283' iicount='1283' stamp='0.084'/>
<print_nmethod stamp='0.084'>
Compiled method (c1)      83    7       3       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x000000011ba3e310,0x000000011ba3e760] = 1104
 relocation     [0x000000011ba3e488,0x000000011ba3e4b8] = 48
 main code      [0x000000011ba3e4c0,0x000000011ba3e600] = 320
 stub code      [0x000000011ba3e600,0x000000011ba3e690] = 144
 metadata       [0x000000011ba3e690,0x000000011ba3e698] = 8
 scopes data    [0x000000011ba3e698,0x000000011ba3e6c8] = 48
 scopes pcs     [0x000000011ba3e6c8,0x000000011ba3e758] = 144
 dependencies   [0x000000011ba3e758,0x000000011ba3e760] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x000000011ba3e4c0, 0x000000011ba3e690]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3e4c0: mov    0x8(%rsi),%r10d
  0x000000011ba3e4c4: movabs $0x800000000,%r12
  0x000000011ba3e4ce: add    %r12,%r10
  0x000000011ba3e4d1: xor    %r12,%r12
  0x000000011ba3e4d4: cmp    %rax,%r10
  0x000000011ba3e4d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba3e4dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba3e4e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba3e4e7: push   %rbp
  0x000000011ba3e4e8: sub    $0x30,%rsp
  0x000000011ba3e4ec: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3e4f6: mov    0x104(%rax),%edi
  0x000000011ba3e4fc: add    $0x8,%edi
  0x000000011ba3e4ff: mov    %edi,0x104(%rax)
  0x000000011ba3e505: and    $0x1ff8,%edi
  0x000000011ba3e50b: cmp    $0x0,%edi
  0x000000011ba3e50e: je     0x000000011ba3e593  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@0 (line 3266)

  0x000000011ba3e514: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3e51e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)

  0x000000011ba3e524: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x000000011ba3e528: cmp    $0x0,%eax
  0x000000011ba3e52b: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3e535: movabs $0x160,%rsi
  0x000000011ba3e53f: jne    0x000000011ba3e54f
  0x000000011ba3e545: movabs $0x170,%rsi
  0x000000011ba3e54f: mov    (%rax,%rsi,1),%rdi
  0x000000011ba3e553: lea    0x1(%rdi),%rdi
  0x000000011ba3e557: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba3e55b: jne    0x000000011ba3e57b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x000000011ba3e561: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3e56b: incl   0x180(%rax)
  0x000000011ba3e571: mov    $0x1,%eax
  0x000000011ba3e576: jmpq   0x000000011ba3e580  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)

  0x000000011ba3e57b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)

  0x000000011ba3e580: and    $0x1,%eax
  0x000000011ba3e583: add    $0x30,%rsp
  0x000000011ba3e587: pop    %rbp
  0x000000011ba3e588: mov    0x108(%r15),%r10
  0x000000011ba3e58f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3e592: retq   
  0x000000011ba3e593: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3e59d: mov    %r10,0x8(%rsp)
  0x000000011ba3e5a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3e5aa: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3e5af: jmpq   0x000000011ba3e514
  0x000000011ba3e5b4: nop
  0x000000011ba3e5b5: nop
  0x000000011ba3e5b6: mov    0x420(%r15),%rax
  0x000000011ba3e5bd: movabs $0x0,%r10
  0x000000011ba3e5c7: mov    %r10,0x420(%r15)
  0x000000011ba3e5ce: movabs $0x0,%r10
  0x000000011ba3e5d8: mov    %r10,0x428(%r15)
  0x000000011ba3e5df: add    $0x30,%rsp
  0x000000011ba3e5e3: pop    %rbp
  0x000000011ba3e5e4: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3e5e9: hlt    
  0x000000011ba3e5ea: hlt    
  0x000000011ba3e5eb: hlt    
  0x000000011ba3e5ec: hlt    
  0x000000011ba3e5ed: hlt    
  0x000000011ba3e5ee: hlt    
  0x000000011ba3e5ef: hlt    
  0x000000011ba3e5f0: hlt    
  0x000000011ba3e5f1: hlt    
  0x000000011ba3e5f2: hlt    
  0x000000011ba3e5f3: hlt    
  0x000000011ba3e5f4: hlt    
  0x000000011ba3e5f5: hlt    
  0x000000011ba3e5f6: hlt    
  0x000000011ba3e5f7: hlt    
  0x000000011ba3e5f8: hlt    
  0x000000011ba3e5f9: hlt    
  0x000000011ba3e5fa: hlt    
  0x000000011ba3e5fb: hlt    
  0x000000011ba3e5fc: hlt    
  0x000000011ba3e5fd: hlt    
  0x000000011ba3e5fe: hlt    
  0x000000011ba3e5ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba3e600: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3e605: mov    %rsp,-0x28(%rsp)
  0x000000011ba3e60a: sub    $0x80,%rsp
  0x000000011ba3e611: mov    %rax,0x78(%rsp)
  0x000000011ba3e616: mov    %rcx,0x70(%rsp)
  0x000000011ba3e61b: mov    %rdx,0x68(%rsp)
  0x000000011ba3e620: mov    %rbx,0x60(%rsp)
  0x000000011ba3e625: mov    %rbp,0x50(%rsp)
  0x000000011ba3e62a: mov    %rsi,0x48(%rsp)
  0x000000011ba3e62f: mov    %rdi,0x40(%rsp)
  0x000000011ba3e634: mov    %r8,0x38(%rsp)
  0x000000011ba3e639: mov    %r9,0x30(%rsp)
  0x000000011ba3e63e: mov    %r10,0x28(%rsp)
  0x000000011ba3e643: mov    %r11,0x20(%rsp)
  0x000000011ba3e648: mov    %r12,0x18(%rsp)
  0x000000011ba3e64d: mov    %r13,0x10(%rsp)
  0x000000011ba3e652: mov    %r14,0x8(%rsp)
  0x000000011ba3e657: mov    %r15,(%rsp)
  0x000000011ba3e65b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3e665: movabs $0x11ba3e605,%rsi  ;   {internal_word}
  0x000000011ba3e66f: mov    %rsp,%rdx
  0x000000011ba3e672: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3e676: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3e67b: hlt    
[Deopt Handler Code]
  0x000000011ba3e67c: movabs $0x11ba3e67c,%r10  ;   {section_word}
  0x000000011ba3e686: push   %r10
  0x000000011ba3e688: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3e68d: hlt    
  0x000000011ba3e68e: hlt    
  0x000000011ba3e68f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 239 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='15' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='944' backedge_count='28628' iicount='944' stamp='0.086' comment='tiered' hot_count='944'/>
<writer thread='15875'/>
<nmethod compile_id='14' compiler='c1' level='3' entry='0x000000011ba3e960' size='1656' address='0x000000011ba3e790' relocation_offset='376' insts_offset='464' stub_offset='1008' scopes_data_offset='1160' scopes_pcs_offset='1288' dependencies_offset='1624' nul_chk_table_offset='1632' metadata_offset='1152' method='java.lang.StringLatin1 equals ([B[B)Z' bytes='36' count='681' backedge_count='573' iicount='681' stamp='0.086'/>
<print_nmethod stamp='0.086'>
Compiled method (c1)      86   14       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x000000011ba3e790,0x000000011ba3ee08] = 1656
 relocation     [0x000000011ba3e908,0x000000011ba3e948] = 64
 main code      [0x000000011ba3e960,0x000000011ba3eb80] = 544
 stub code      [0x000000011ba3eb80,0x000000011ba3ec10] = 144
 metadata       [0x000000011ba3ec10,0x000000011ba3ec18] = 8
 scopes data    [0x000000011ba3ec18,0x000000011ba3ec98] = 128
 scopes pcs     [0x000000011ba3ec98,0x000000011ba3ede8] = 336
 dependencies   [0x000000011ba3ede8,0x000000011ba3edf0] = 8
 nul chk table  [0x000000011ba3edf0,0x000000011ba3ee08] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x000000011ba3e960, 0x000000011ba3ec10]  688 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx:rdx   = &apos;[B&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3e960: mov    %eax,-0x14000(%rsp)
  0x000000011ba3e967: push   %rbp
  0x000000011ba3e968: sub    $0x30,%rsp
  0x000000011ba3e96c: movabs $0x1326eb190,%rax  ;   {metadata(method data for {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3e976: mov    0x104(%rax),%edi
  0x000000011ba3e97c: add    $0x8,%edi
  0x000000011ba3e97f: mov    %edi,0x104(%rax)
  0x000000011ba3e985: and    $0x1ff8,%edi
  0x000000011ba3e98b: cmp    $0x0,%edi
  0x000000011ba3e98e: je     0x000000011ba3eaf1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0 (line 94)

  0x000000011ba3e994: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ; implicit exception: dispatches to 0x000000011ba3eb12
  0x000000011ba3e997: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ; implicit exception: dispatches to 0x000000011ba3eb17
  0x000000011ba3e99a: cmp    %edi,%eax
  0x000000011ba3e99c: movabs $0x1326eb190,%rdi  ;   {metadata(method data for {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3e9a6: movabs $0x140,%rbx
  0x000000011ba3e9b0: jne    0x000000011ba3e9c0
  0x000000011ba3e9b6: movabs $0x150,%rbx
  0x000000011ba3e9c0: mov    (%rdi,%rbx,1),%rcx
  0x000000011ba3e9c4: lea    0x1(%rcx),%rcx
  0x000000011ba3e9c8: mov    %rcx,(%rdi,%rbx,1)
  0x000000011ba3e9cc: jne    0x000000011ba3eadc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4 (line 94)

  0x000000011ba3e9d2: mov    $0x0,%edi
  0x000000011ba3e9d7: jmpq   0x000000011ba3ea75  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9 (line 95)

  0x000000011ba3e9dc: nopl   0x0(%rax)
  0x000000011ba3e9e0: movslq %edi,%rbx
  0x000000011ba3e9e3: movsbl 0x10(%rsi,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x000000011ba3e9e8: cmp    0xc(%rdx),%edi
  0x000000011ba3e9eb: jae    0x000000011ba3eb1c
  0x000000011ba3e9f1: movslq %edi,%rcx
  0x000000011ba3e9f4: movsbl 0x10(%rdx,%rcx,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x000000011ba3e9f9: cmp    %ecx,%ebx
  0x000000011ba3e9fb: movabs $0x1326eb190,%rbx  ;   {metadata(method data for {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3ea05: movabs $0x190,%rcx
  0x000000011ba3ea0f: jne    0x000000011ba3ea1f
  0x000000011ba3ea15: movabs $0x180,%rcx
  0x000000011ba3ea1f: mov    (%rbx,%rcx,1),%r8
  0x000000011ba3ea23: lea    0x1(%r8),%r8
  0x000000011ba3ea27: mov    %r8,(%rbx,%rcx,1)
  0x000000011ba3ea2b: jne    0x000000011ba3eab2  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x000000011ba3ea31: inc    %edi
  0x000000011ba3ea33: movabs $0x1326eb190,%rbx  ;   {metadata(method data for {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3ea3d: mov    0x108(%rbx),%ecx
  0x000000011ba3ea43: add    $0x8,%ecx
  0x000000011ba3ea46: mov    %ecx,0x108(%rbx)
  0x000000011ba3ea4c: and    $0xfff8,%ecx
  0x000000011ba3ea52: cmp    $0x0,%ecx
  0x000000011ba3ea55: je     0x000000011ba3eb2a  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x000000011ba3ea5b: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x000000011ba3ea62: test   %eax,(%r10)        ;   {poll}
  0x000000011ba3ea65: movabs $0x1326eb190,%rbx  ;   {metadata(method data for {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3ea6f: incl   0x1a0(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x000000011ba3ea75: cmp    %eax,%edi
  0x000000011ba3ea77: movabs $0x1326eb190,%rbx  ;   {metadata(method data for {method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3ea81: movabs $0x160,%rcx
  0x000000011ba3ea8b: jge    0x000000011ba3ea9b
  0x000000011ba3ea91: movabs $0x170,%rcx
  0x000000011ba3ea9b: mov    (%rbx,%rcx,1),%r8
  0x000000011ba3ea9f: lea    0x1(%r8),%r8
  0x000000011ba3eaa3: mov    %r8,(%rbx,%rcx,1)
  0x000000011ba3eaa7: jge    0x000000011ba3eac7
  0x000000011ba3eaad: jmpq   0x000000011ba3e9e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)

  0x000000011ba3eab2: mov    $0x0,%eax
  0x000000011ba3eab7: add    $0x30,%rsp
  0x000000011ba3eabb: pop    %rbp
  0x000000011ba3eabc: mov    0x108(%r15),%r10
  0x000000011ba3eac3: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3eac6: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25 (line 97)

  0x000000011ba3eac7: mov    $0x1,%eax
  0x000000011ba3eacc: add    $0x30,%rsp
  0x000000011ba3ead0: pop    %rbp
  0x000000011ba3ead1: mov    0x108(%r15),%r10
  0x000000011ba3ead8: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3eadb: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33 (line 100)

  0x000000011ba3eadc: mov    $0x0,%eax
  0x000000011ba3eae1: add    $0x30,%rsp
  0x000000011ba3eae5: pop    %rbp
  0x000000011ba3eae6: mov    0x108(%r15),%r10
  0x000000011ba3eaed: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3eaf0: retq   
  0x000000011ba3eaf1: movabs $0x132602cc0,%r10  ;   {metadata({method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3eafb: mov    %r10,0x8(%rsp)
  0x000000011ba3eb00: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3eb08: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1 (line 94)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3eb0d: jmpq   0x000000011ba3e994
  0x000000011ba3eb12: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3eb17: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba3eb1c: mov    %rdi,(%rsp)
  0x000000011ba3eb20: mov    %rdx,0x8(%rsp)
  0x000000011ba3eb25: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba3eb2a: movabs $0x132602cc0,%r10  ;   {metadata({method} {0x0000000132602cc0} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba3eb34: mov    %r10,0x8(%rsp)
  0x000000011ba3eb39: movq   $0x1d,(%rsp)
  0x000000011ba3eb41: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3eb46: jmpq   0x000000011ba3ea5b
  0x000000011ba3eb4b: nop
  0x000000011ba3eb4c: nop
  0x000000011ba3eb4d: mov    0x420(%r15),%rax
  0x000000011ba3eb54: movabs $0x0,%r10
  0x000000011ba3eb5e: mov    %r10,0x420(%r15)
  0x000000011ba3eb65: movabs $0x0,%r10
  0x000000011ba3eb6f: mov    %r10,0x428(%r15)
  0x000000011ba3eb76: add    $0x30,%rsp
  0x000000011ba3eb7a: pop    %rbp
  0x000000011ba3eb7b: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x000000011ba3eb80: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3eb85: mov    %rsp,-0x28(%rsp)
  0x000000011ba3eb8a: sub    $0x80,%rsp
  0x000000011ba3eb91: mov    %rax,0x78(%rsp)
  0x000000011ba3eb96: mov    %rcx,0x70(%rsp)
  0x000000011ba3eb9b: mov    %rdx,0x68(%rsp)
  0x000000011ba3eba0: mov    %rbx,0x60(%rsp)
  0x000000011ba3eba5: mov    %rbp,0x50(%rsp)
  0x000000011ba3ebaa: mov    %rsi,0x48(%rsp)
  0x000000011ba3ebaf: mov    %rdi,0x40(%rsp)
  0x000000011ba3ebb4: mov    %r8,0x38(%rsp)
  0x000000011ba3ebb9: mov    %r9,0x30(%rsp)
  0x000000011ba3ebbe: mov    %r10,0x28(%rsp)
  0x000000011ba3ebc3: mov    %r11,0x20(%rsp)
  0x000000011ba3ebc8: mov    %r12,0x18(%rsp)
  0x000000011ba3ebcd: mov    %r13,0x10(%rsp)
  0x000000011ba3ebd2: mov    %r14,0x8(%rsp)
  0x000000011ba3ebd7: mov    %r15,(%rsp)
  0x000000011ba3ebdb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3ebe5: movabs $0x11ba3eb85,%rsi  ;   {internal_word}
  0x000000011ba3ebef: mov    %rsp,%rdx
  0x000000011ba3ebf2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3ebf6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3ebfb: hlt    
[Deopt Handler Code]
  0x000000011ba3ebfc: movabs $0x11ba3ebfc,%r10  ;   {section_word}
  0x000000011ba3ec06: push   %r10
  0x000000011ba3ec08: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3ec0d: hlt    
  0x000000011ba3ec0e: hlt    
  0x000000011ba3ec0f: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 258 429 439 444 458 486 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='16' method='java.util.Collections emptySet ()Ljava/util/Set;' bytes='4' count='512' iicount='512' level='3' stamp='0.090' comment='tiered' hot_count='512'/>
<writer thread='15363'/>
<nmethod compile_id='15' compiler='c2' level='4' entry='0x0000000122f73620' size='1344' address='0x0000000122f73490' relocation_offset='376' insts_offset='400' stub_offset='784' scopes_data_offset='816' scopes_pcs_offset='952' dependencies_offset='1320' nul_chk_table_offset='1328' metadata_offset='808' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='1360' backedge_count='43458' iicount='1360' stamp='0.090'/>
<make_not_entrant thread='15363' compile_id='5' compiler='c1' level='3' stamp='0.090'/>
<print_nmethod stamp='0.090'>
Compiled method (c2)      89   15       4       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x0000000122f73490,0x0000000122f739d0] = 1344
 relocation     [0x0000000122f73608,0x0000000122f73618] = 16
 main code      [0x0000000122f73620,0x0000000122f737a0] = 384
 stub code      [0x0000000122f737a0,0x0000000122f737b8] = 24
 metadata       [0x0000000122f737b8,0x0000000122f737c0] = 8
 scopes data    [0x0000000122f737c0,0x0000000122f73848] = 136
 scopes pcs     [0x0000000122f73848,0x0000000122f739b8] = 368
 dependencies   [0x0000000122f739b8,0x0000000122f739c0] = 8
 nul chk table  [0x0000000122f739c0,0x0000000122f739d0] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x0000000122f73620, 0x0000000122f737b8]  408 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001326035f0} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000122f73620: mov    %eax,-0x14000(%rsp)
  0x0000000122f73627: push   %rbp
  0x0000000122f73628: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)

  0x0000000122f7362c: mov    0xc(%rsi),%r14d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x0000000122f73786
  0x0000000122f73630: test   %r14d,%r14d
  0x0000000122f73633: jbe    0x0000000122f7376b  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000122f73639: mov    %r14d,%r11d
  0x0000000122f7363c: dec    %r11d
  0x0000000122f7363f: cmp    %r14d,%r11d
  0x0000000122f73642: jae    0x0000000122f7376f
  0x0000000122f73648: movzbl 0x10(%rsi),%r9d    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)

  0x0000000122f7364d: mov    %r14d,%edi
  0x0000000122f73650: add    $0xfffffff9,%edi
  0x0000000122f73653: mov    $0x80000000,%r8d
  0x0000000122f73659: cmp    %edi,%r11d
  0x0000000122f7365c: cmovl  %r8d,%edi
  0x0000000122f73660: mov    $0x1,%ebp
  0x0000000122f73665: cmp    $0x1,%edi
  0x0000000122f73668: jle    0x0000000122f73733
  0x0000000122f7366e: mov    %r9d,%r13d
  0x0000000122f73671: shl    $0x5,%r13d
  0x0000000122f73675: sub    %r9d,%r13d         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x0000000122f73678: nopl   0x0(%rax,%rax,1)   ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x0000000122f73680: movslq %ebp,%rax          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x0000000122f73683: movzbl 0x10(%rsi,%rax,1),%r10d
  0x0000000122f73689: movzbl 0x17(%rsi,%rax,1),%r11d
  0x0000000122f7368f: movzbl 0x11(%rsi,%rax,1),%r9d
  0x0000000122f73695: movzbl 0x16(%rsi,%rax,1),%r8d
  0x0000000122f7369b: movzbl 0x15(%rsi,%rax,1),%ebx
  0x0000000122f736a0: movzbl 0x14(%rsi,%rax,1),%ecx
  0x0000000122f736a5: movzbl 0x13(%rsi,%rax,1),%edx
  0x0000000122f736aa: movzbl 0x12(%rsi,%rax,1),%eax
  0x0000000122f736af: add    %r10d,%r13d
  0x0000000122f736b2: mov    %r13d,%r10d
  0x0000000122f736b5: shl    $0x5,%r10d
  0x0000000122f736b9: sub    %r13d,%r10d
  0x0000000122f736bc: add    %r9d,%r10d
  0x0000000122f736bf: mov    %r10d,%r13d
  0x0000000122f736c2: shl    $0x5,%r13d
  0x0000000122f736c6: sub    %r10d,%r13d
  0x0000000122f736c9: add    %eax,%r13d
  0x0000000122f736cc: mov    %r13d,%r10d
  0x0000000122f736cf: shl    $0x5,%r10d
  0x0000000122f736d3: sub    %r13d,%r10d
  0x0000000122f736d6: add    %edx,%r10d
  0x0000000122f736d9: mov    %r10d,%r9d
  0x0000000122f736dc: shl    $0x5,%r9d
  0x0000000122f736e0: sub    %r10d,%r9d
  0x0000000122f736e3: add    %ecx,%r9d
  0x0000000122f736e6: mov    %r9d,%r10d
  0x0000000122f736e9: shl    $0x5,%r10d
  0x0000000122f736ed: sub    %r9d,%r10d
  0x0000000122f736f0: add    %ebx,%r10d
  0x0000000122f736f3: mov    %r10d,%ecx
  0x0000000122f736f6: shl    $0x5,%ecx
  0x0000000122f736f9: sub    %r10d,%ecx
  0x0000000122f736fc: add    %r8d,%ecx
  0x0000000122f736ff: mov    %ecx,%r9d
  0x0000000122f73702: shl    $0x5,%r9d
  0x0000000122f73706: sub    %ecx,%r9d
  0x0000000122f73709: add    %r11d,%r9d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)

  0x0000000122f7370c: mov    %r9d,%r13d
  0x0000000122f7370f: shl    $0x5,%r13d
  0x0000000122f73713: sub    %r9d,%r13d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x0000000122f73716: add    $0x8,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)

  0x0000000122f73719: cmp    %edi,%ebp
  0x0000000122f7371b: jl     0x0000000122f73680  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000122f73721: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x0000000122f73728: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {poll}
  0x0000000122f7372b: cmp    %edi,%ebp
  0x0000000122f7372d: jl     0x0000000122f73680
  0x0000000122f73733: cmp    %r14d,%ebp
  0x0000000122f73736: jge    0x0000000122f73766  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)

  0x0000000122f73738: movzbl 0x10(%rsi,%rbp,1),%r10d
  0x0000000122f7373e: mov    %r9d,%eax
  0x0000000122f73741: shl    $0x5,%eax
  0x0000000122f73744: sub    %r9d,%eax
  0x0000000122f73747: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)

  0x0000000122f7374a: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)

  0x0000000122f7374c: cmp    %r14d,%ebp
  0x0000000122f7374f: jge    0x0000000122f73756
  0x0000000122f73751: mov    %eax,%r9d
  0x0000000122f73754: jmp    0x0000000122f73738  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000122f73756: add    $0x20,%rsp
  0x0000000122f7375a: pop    %rbp
  0x0000000122f7375b: mov    0x108(%r15),%r10
  0x0000000122f73762: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f73765: retq   
  0x0000000122f73766: mov    %r9d,%eax
  0x0000000122f73769: jmp    0x0000000122f73756
  0x0000000122f7376b: xor    %eax,%eax
  0x0000000122f7376d: jmp    0x0000000122f73756
  0x0000000122f7376f: mov    %rsi,%rbp
  0x0000000122f73772: mov    %r14d,0x4(%rsp)
  0x0000000122f73777: mov    $0xffffff7e,%esi
  0x0000000122f7377c: data16 xchg %ax,%ax
  0x0000000122f7377f: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f73784: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x0000000122f73786: mov    $0xfffffff6,%esi
  0x0000000122f7378b: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f73790: ud2                       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x0000000122f73792: hlt    
  0x0000000122f73793: hlt    
  0x0000000122f73794: hlt    
  0x0000000122f73795: hlt    
  0x0000000122f73796: hlt    
  0x0000000122f73797: hlt    
  0x0000000122f73798: hlt    
  0x0000000122f73799: hlt    
  0x0000000122f7379a: hlt    
  0x0000000122f7379b: hlt    
  0x0000000122f7379c: hlt    
  0x0000000122f7379d: hlt    
  0x0000000122f7379e: hlt    
  0x0000000122f7379f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f737a0: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f737a5: callq  0x0000000122f737aa
  0x0000000122f737aa: subq   $0x5,(%rsp)
  0x0000000122f737af: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f737b4: hlt    
  0x0000000122f737b5: hlt    
  0x0000000122f737b6: hlt    
  0x0000000122f737b7: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 264 
ImmutableOopMap{rbp=Oop }pc offsets: 356 
ImmutableOopMap{}pc offsets: 368 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='17' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='512' iicount='512' level='3' stamp='0.092' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='8' compiler='c1' level='3' entry='0x000000011ba3f040' size='1296' address='0x000000011ba3ee90' relocation_offset='376' insts_offset='432' stub_offset='880' scopes_data_offset='1040' scopes_pcs_offset='1128' dependencies_offset='1272' nul_chk_table_offset='1280' metadata_offset='1024' method='java.lang.Math floorMod (II)I' bytes='10' count='1613' iicount='1613' stamp='0.092'/>
<print_nmethod stamp='0.092'>
Compiled method (c1)      91    8       3       java.lang.Math::floorMod (10 bytes)
 total in heap  [0x000000011ba3ee90,0x000000011ba3f3a0] = 1296
 relocation     [0x000000011ba3f008,0x000000011ba3f040] = 56
 main code      [0x000000011ba3f040,0x000000011ba3f200] = 448
 stub code      [0x000000011ba3f200,0x000000011ba3f290] = 144
 metadata       [0x000000011ba3f290,0x000000011ba3f2a0] = 16
 scopes data    [0x000000011ba3f2a0,0x000000011ba3f2f8] = 88
 scopes pcs     [0x000000011ba3f2f8,0x000000011ba3f388] = 144
 dependencies   [0x000000011ba3f388,0x000000011ba3f390] = 8
 nul chk table  [0x000000011ba3f390,0x000000011ba3f3a0] = 16
----------------------------------------------------------------------
java/lang/Math.floorMod(II)I  [0x000000011ba3f040, 0x000000011ba3f290]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011ba3f040: mov    %eax,-0x14000(%rsp)
  0x000000011ba3f047: push   %rbp
  0x000000011ba3f048: sub    $0x40,%rsp
  0x000000011ba3f04c: mov    %rdx,%rdi
  0x000000011ba3f04f: movabs $0x1326e9428,%rax  ;   {metadata(method data for {method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f059: mov    0x104(%rax),%edx
  0x000000011ba3f05f: add    $0x8,%edx
  0x000000011ba3f062: mov    %edx,0x104(%rax)
  0x000000011ba3f068: and    $0x1ff8,%edx
  0x000000011ba3f06e: cmp    $0x0,%edx
  0x000000011ba3f071: je     0x000000011ba3f165  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorMod@0 (line 1277)

  0x000000011ba3f077: movabs $0x1326e9428,%rax  ;   {metadata(method data for {method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f081: addq   $0x1,0x140(%rax)
  0x000000011ba3f089: movabs $0x1326e95c0,%rax  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f093: mov    0x104(%rax),%edx
  0x000000011ba3f099: add    $0x8,%edx
  0x000000011ba3f09c: mov    %edx,0x104(%rax)
  0x000000011ba3f0a2: and    $0x7ffff8,%edx
  0x000000011ba3f0a8: cmp    $0x0,%edx
  0x000000011ba3f0ab: je     0x000000011ba3f186
  0x000000011ba3f0b1: mov    %rsi,%rax
  0x000000011ba3f0b4: cmp    $0x80000000,%eax
  0x000000011ba3f0ba: jne    0x000000011ba3f0cb
  0x000000011ba3f0c0: xor    %edx,%edx
  0x000000011ba3f0c2: cmp    $0xffffffff,%edi
  0x000000011ba3f0c5: je     0x000000011ba3f0ce
  0x000000011ba3f0cb: cltd   
  0x000000011ba3f0cc: idiv   %edi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; implicit exception: dispatches to 0x000000011ba3f1a7
  0x000000011ba3f0ce: mov    %rdi,%rbx
  0x000000011ba3f0d1: xor    %rsi,%rbx
  0x000000011ba3f0d4: cmp    $0x0,%ebx
  0x000000011ba3f0d7: movabs $0x1326e95c0,%rbx  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f0e1: movabs $0x140,%rdx
  0x000000011ba3f0eb: jge    0x000000011ba3f0fb
  0x000000011ba3f0f1: movabs $0x150,%rdx
  0x000000011ba3f0fb: mov    (%rbx,%rdx,1),%rcx
  0x000000011ba3f0ff: lea    0x1(%rcx),%rcx
  0x000000011ba3f103: mov    %rcx,(%rbx,%rdx,1)
  0x000000011ba3f107: jge    0x000000011ba3f14d  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)

  0x000000011ba3f10d: mov    %rax,%rbx
  0x000000011ba3f110: imul   %edi,%ebx
  0x000000011ba3f113: cmp    %esi,%ebx
  0x000000011ba3f115: movabs $0x1326e95c0,%rbx  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f11f: movabs $0x160,%rdx
  0x000000011ba3f129: je     0x000000011ba3f139
  0x000000011ba3f12f: movabs $0x170,%rdx
  0x000000011ba3f139: mov    (%rbx,%rdx,1),%rcx
  0x000000011ba3f13d: lea    0x1(%rcx),%rcx
  0x000000011ba3f141: mov    %rcx,(%rbx,%rdx,1)
  0x000000011ba3f145: je     0x000000011ba3f14d  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)

  0x000000011ba3f14b: dec    %eax
  0x000000011ba3f14d: imul   %edi,%eax
  0x000000011ba3f150: sub    %eax,%esi
  0x000000011ba3f152: mov    %rsi,%rax
  0x000000011ba3f155: add    $0x40,%rsp
  0x000000011ba3f159: pop    %rbp
  0x000000011ba3f15a: mov    0x108(%r15),%r10
  0x000000011ba3f161: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3f164: retq   
  0x000000011ba3f165: movabs $0x132629058,%r10  ;   {metadata({method} {0x0000000132629058} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f16f: mov    %r10,0x8(%rsp)
  0x000000011ba3f174: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3f17c: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1 (line 1277)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3f181: jmpq   0x000000011ba3f077
  0x000000011ba3f186: movabs $0x132628e00,%r10  ;   {metadata({method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3f190: mov    %r10,0x8(%rsp)
  0x000000011ba3f195: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3f19d: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3f1a2: jmpq   0x000000011ba3f0b1
  0x000000011ba3f1a7: callq  0x000000011b595ca0  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011ba3f1ac: nop
  0x000000011ba3f1ad: nop
  0x000000011ba3f1ae: mov    0x420(%r15),%rax
  0x000000011ba3f1b5: movabs $0x0,%r10
  0x000000011ba3f1bf: mov    %r10,0x420(%r15)
  0x000000011ba3f1c6: movabs $0x0,%r10
  0x000000011ba3f1d0: mov    %r10,0x428(%r15)
  0x000000011ba3f1d7: add    $0x40,%rsp
  0x000000011ba3f1db: pop    %rbp
  0x000000011ba3f1dc: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3f1e1: hlt    
  0x000000011ba3f1e2: hlt    
  0x000000011ba3f1e3: hlt    
  0x000000011ba3f1e4: hlt    
  0x000000011ba3f1e5: hlt    
  0x000000011ba3f1e6: hlt    
  0x000000011ba3f1e7: hlt    
  0x000000011ba3f1e8: hlt    
  0x000000011ba3f1e9: hlt    
  0x000000011ba3f1ea: hlt    
  0x000000011ba3f1eb: hlt    
  0x000000011ba3f1ec: hlt    
  0x000000011ba3f1ed: hlt    
  0x000000011ba3f1ee: hlt    
  0x000000011ba3f1ef: hlt    
  0x000000011ba3f1f0: hlt    
  0x000000011ba3f1f1: hlt    
  0x000000011ba3f1f2: hlt    
  0x000000011ba3f1f3: hlt    
  0x000000011ba3f1f4: hlt    
  0x000000011ba3f1f5: hlt    
  0x000000011ba3f1f6: hlt    
  0x000000011ba3f1f7: hlt    
  0x000000011ba3f1f8: hlt    
  0x000000011ba3f1f9: hlt    
  0x000000011ba3f1fa: hlt    
  0x000000011ba3f1fb: hlt    
  0x000000011ba3f1fc: hlt    
  0x000000011ba3f1fd: hlt    
  0x000000011ba3f1fe: hlt    
  0x000000011ba3f1ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba3f200: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3f205: mov    %rsp,-0x28(%rsp)
  0x000000011ba3f20a: sub    $0x80,%rsp
  0x000000011ba3f211: mov    %rax,0x78(%rsp)
  0x000000011ba3f216: mov    %rcx,0x70(%rsp)
  0x000000011ba3f21b: mov    %rdx,0x68(%rsp)
  0x000000011ba3f220: mov    %rbx,0x60(%rsp)
  0x000000011ba3f225: mov    %rbp,0x50(%rsp)
  0x000000011ba3f22a: mov    %rsi,0x48(%rsp)
  0x000000011ba3f22f: mov    %rdi,0x40(%rsp)
  0x000000011ba3f234: mov    %r8,0x38(%rsp)
  0x000000011ba3f239: mov    %r9,0x30(%rsp)
  0x000000011ba3f23e: mov    %r10,0x28(%rsp)
  0x000000011ba3f243: mov    %r11,0x20(%rsp)
  0x000000011ba3f248: mov    %r12,0x18(%rsp)
  0x000000011ba3f24d: mov    %r13,0x10(%rsp)
  0x000000011ba3f252: mov    %r14,0x8(%rsp)
  0x000000011ba3f257: mov    %r15,(%rsp)
  0x000000011ba3f25b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3f265: movabs $0x11ba3f205,%rsi  ;   {internal_word}
  0x000000011ba3f26f: mov    %rsp,%rdx
  0x000000011ba3f272: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3f276: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3f27b: hlt    
[Deopt Handler Code]
  0x000000011ba3f27c: movabs $0x11ba3f27c,%r10  ;   {section_word}
  0x000000011ba3f286: push   %r10
  0x000000011ba3f288: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3f28d: hlt    
  0x000000011ba3f28e: hlt    
  0x000000011ba3f28f: hlt    

ImmutableOopMap{}pc offsets: 321 354 364 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='18' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' level='1' stamp='0.095' comment='tiered' hot_count='1536'/>
<writer thread='15875'/>
<nmethod compile_id='18' compiler='c1' level='1' entry='0x0000000122f73bc0' size='784' address='0x0000000122f73a10' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='728' dependencies_offset='776' metadata_offset='704' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1626' iicount='1626' stamp='0.095'/>
<make_not_entrant thread='15875' compile_id='4' compiler='c1' level='3' stamp='0.095'/>
<print_nmethod stamp='0.095'>
Compiled method (c1)      95   18       1       java.lang.Object::&lt;init&gt; (1 bytes)
 total in heap  [0x0000000122f73a10,0x0000000122f73d20] = 784
 relocation     [0x0000000122f73b88,0x0000000122f73bb0] = 40
 main code      [0x0000000122f73bc0,0x0000000122f73c40] = 128
 stub code      [0x0000000122f73c40,0x0000000122f73cd0] = 144
 metadata       [0x0000000122f73cd0,0x0000000122f73ce0] = 16
 scopes data    [0x0000000122f73ce0,0x0000000122f73ce8] = 8
 scopes pcs     [0x0000000122f73ce8,0x0000000122f73d18] = 48
 dependencies   [0x0000000122f73d18,0x0000000122f73d20] = 8
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;()V  [0x0000000122f73bc0, 0x0000000122f73cd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f73bc0: mov    0x8(%rsi),%r10d
  0x0000000122f73bc4: movabs $0x800000000,%r12
  0x0000000122f73bce: add    %r12,%r10
  0x0000000122f73bd1: xor    %r12,%r12
  0x0000000122f73bd4: cmp    %rax,%r10
  0x0000000122f73bd7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f73bdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f73be0: mov    %eax,-0x14000(%rsp)
  0x0000000122f73be7: push   %rbp
  0x0000000122f73be8: sub    $0x30,%rsp         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 50)

  0x0000000122f73bec: add    $0x30,%rsp
  0x0000000122f73bf0: pop    %rbp
  0x0000000122f73bf1: mov    0x108(%r15),%r10
  0x0000000122f73bf8: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f73bfb: retq   
  0x0000000122f73bfc: nop
  0x0000000122f73bfd: nop
  0x0000000122f73bfe: mov    0x420(%r15),%rax
  0x0000000122f73c05: movabs $0x0,%r10
  0x0000000122f73c0f: mov    %r10,0x420(%r15)
  0x0000000122f73c16: movabs $0x0,%r10
  0x0000000122f73c20: mov    %r10,0x428(%r15)
  0x0000000122f73c27: add    $0x30,%rsp
  0x0000000122f73c2b: pop    %rbp
  0x0000000122f73c2c: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f73c31: hlt    
  0x0000000122f73c32: hlt    
  0x0000000122f73c33: hlt    
  0x0000000122f73c34: hlt    
  0x0000000122f73c35: hlt    
  0x0000000122f73c36: hlt    
  0x0000000122f73c37: hlt    
  0x0000000122f73c38: hlt    
  0x0000000122f73c39: hlt    
  0x0000000122f73c3a: hlt    
  0x0000000122f73c3b: hlt    
  0x0000000122f73c3c: hlt    
  0x0000000122f73c3d: hlt    
  0x0000000122f73c3e: hlt    
  0x0000000122f73c3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f73c40: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f73c45: mov    %rsp,-0x28(%rsp)
  0x0000000122f73c4a: sub    $0x80,%rsp
  0x0000000122f73c51: mov    %rax,0x78(%rsp)
  0x0000000122f73c56: mov    %rcx,0x70(%rsp)
  0x0000000122f73c5b: mov    %rdx,0x68(%rsp)
  0x0000000122f73c60: mov    %rbx,0x60(%rsp)
  0x0000000122f73c65: mov    %rbp,0x50(%rsp)
  0x0000000122f73c6a: mov    %rsi,0x48(%rsp)
  0x0000000122f73c6f: mov    %rdi,0x40(%rsp)
  0x0000000122f73c74: mov    %r8,0x38(%rsp)
  0x0000000122f73c79: mov    %r9,0x30(%rsp)
  0x0000000122f73c7e: mov    %r10,0x28(%rsp)
  0x0000000122f73c83: mov    %r11,0x20(%rsp)
  0x0000000122f73c88: mov    %r12,0x18(%rsp)
  0x0000000122f73c8d: mov    %r13,0x10(%rsp)
  0x0000000122f73c92: mov    %r14,0x8(%rsp)
  0x0000000122f73c97: mov    %r15,(%rsp)
  0x0000000122f73c9b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f73ca5: movabs $0x122f73c45,%rsi  ;   {internal_word}
  0x0000000122f73caf: mov    %rsp,%rdx
  0x0000000122f73cb2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f73cb6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f73cbb: hlt    
[Deopt Handler Code]
  0x0000000122f73cbc: movabs $0x122f73cbc,%r10  ;   {section_word}
  0x0000000122f73cc6: push   %r10
  0x0000000122f73cc8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f73ccd: hlt    
  0x0000000122f73cce: hlt    
  0x0000000122f73ccf: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='19' method='java.util.Collections$EmptySet contains (Ljava/lang/Object;)Z' bytes='2' count='128' iicount='128' level='1' stamp='0.096' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='10' compiler='c1' level='3' entry='0x000000011ba3f5c0' size='1000' address='0x000000011ba3f410' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='880' dependencies_offset='992' metadata_offset='832' method='java.lang.String coder ()B' bytes='15' count='1843' iicount='1843' stamp='0.096'/>
<print_nmethod stamp='0.096'>
Compiled method (c1)      96   10       3       java.lang.String::coder (15 bytes)
 total in heap  [0x000000011ba3f410,0x000000011ba3f7f8] = 1000
 relocation     [0x000000011ba3f588,0x000000011ba3f5b8] = 48
 main code      [0x000000011ba3f5c0,0x000000011ba3f6c0] = 256
 stub code      [0x000000011ba3f6c0,0x000000011ba3f750] = 144
 metadata       [0x000000011ba3f750,0x000000011ba3f758] = 8
 scopes data    [0x000000011ba3f758,0x000000011ba3f780] = 40
 scopes pcs     [0x000000011ba3f780,0x000000011ba3f7f0] = 112
 dependencies   [0x000000011ba3f7f0,0x000000011ba3f7f8] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x000000011ba3f5c0, 0x000000011ba3f750]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3f5c0: mov    0x8(%rsi),%r10d
  0x000000011ba3f5c4: movabs $0x800000000,%r12
  0x000000011ba3f5ce: add    %r12,%r10
  0x000000011ba3f5d1: xor    %r12,%r12
  0x000000011ba3f5d4: cmp    %rax,%r10
  0x000000011ba3f5d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba3f5dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba3f5e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba3f5e7: push   %rbp
  0x000000011ba3f5e8: sub    $0x30,%rsp
  0x000000011ba3f5ec: movabs $0x1326e9230,%rax  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3f5f6: mov    0x104(%rax),%edi
  0x000000011ba3f5fc: add    $0x8,%edi
  0x000000011ba3f5ff: mov    %edi,0x104(%rax)
  0x000000011ba3f605: and    $0x1ff8,%edi
  0x000000011ba3f60b: cmp    $0x0,%edi
  0x000000011ba3f60e: je     0x000000011ba3f64e  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0 (line 3258)

  0x000000011ba3f614: movabs $0x1326e9230,%rax  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3f61e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)

  0x000000011ba3f624: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x000000011ba3f628: movabs $0x1326e9230,%rsi  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3f632: incl   0x160(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)

  0x000000011ba3f638: shl    $0x18,%eax
  0x000000011ba3f63b: sar    $0x18,%eax
  0x000000011ba3f63e: add    $0x30,%rsp
  0x000000011ba3f642: pop    %rbp
  0x000000011ba3f643: mov    0x108(%r15),%r10
  0x000000011ba3f64a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3f64d: retq   
  0x000000011ba3f64e: movabs $0x1324b5190,%r10  ;   {metadata({method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba3f658: mov    %r10,0x8(%rsp)
  0x000000011ba3f65d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3f665: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3f66a: jmp    0x000000011ba3f614
  0x000000011ba3f66c: nop
  0x000000011ba3f66d: nop
  0x000000011ba3f66e: mov    0x420(%r15),%rax
  0x000000011ba3f675: movabs $0x0,%r10
  0x000000011ba3f67f: mov    %r10,0x420(%r15)
  0x000000011ba3f686: movabs $0x0,%r10
  0x000000011ba3f690: mov    %r10,0x428(%r15)
  0x000000011ba3f697: add    $0x30,%rsp
  0x000000011ba3f69b: pop    %rbp
  0x000000011ba3f69c: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3f6a1: hlt    
  0x000000011ba3f6a2: hlt    
  0x000000011ba3f6a3: hlt    
  0x000000011ba3f6a4: hlt    
  0x000000011ba3f6a5: hlt    
  0x000000011ba3f6a6: hlt    
  0x000000011ba3f6a7: hlt    
  0x000000011ba3f6a8: hlt    
  0x000000011ba3f6a9: hlt    
  0x000000011ba3f6aa: hlt    
  0x000000011ba3f6ab: hlt    
  0x000000011ba3f6ac: hlt    
  0x000000011ba3f6ad: hlt    
  0x000000011ba3f6ae: hlt    
  0x000000011ba3f6af: hlt    
  0x000000011ba3f6b0: hlt    
  0x000000011ba3f6b1: hlt    
  0x000000011ba3f6b2: hlt    
  0x000000011ba3f6b3: hlt    
  0x000000011ba3f6b4: hlt    
  0x000000011ba3f6b5: hlt    
  0x000000011ba3f6b6: hlt    
  0x000000011ba3f6b7: hlt    
  0x000000011ba3f6b8: hlt    
  0x000000011ba3f6b9: hlt    
  0x000000011ba3f6ba: hlt    
  0x000000011ba3f6bb: hlt    
  0x000000011ba3f6bc: hlt    
  0x000000011ba3f6bd: hlt    
  0x000000011ba3f6be: hlt    
  0x000000011ba3f6bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba3f6c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba3f6c5: mov    %rsp,-0x28(%rsp)
  0x000000011ba3f6ca: sub    $0x80,%rsp
  0x000000011ba3f6d1: mov    %rax,0x78(%rsp)
  0x000000011ba3f6d6: mov    %rcx,0x70(%rsp)
  0x000000011ba3f6db: mov    %rdx,0x68(%rsp)
  0x000000011ba3f6e0: mov    %rbx,0x60(%rsp)
  0x000000011ba3f6e5: mov    %rbp,0x50(%rsp)
  0x000000011ba3f6ea: mov    %rsi,0x48(%rsp)
  0x000000011ba3f6ef: mov    %rdi,0x40(%rsp)
  0x000000011ba3f6f4: mov    %r8,0x38(%rsp)
  0x000000011ba3f6f9: mov    %r9,0x30(%rsp)
  0x000000011ba3f6fe: mov    %r10,0x28(%rsp)
  0x000000011ba3f703: mov    %r11,0x20(%rsp)
  0x000000011ba3f708: mov    %r12,0x18(%rsp)
  0x000000011ba3f70d: mov    %r13,0x10(%rsp)
  0x000000011ba3f712: mov    %r14,0x8(%rsp)
  0x000000011ba3f717: mov    %r15,(%rsp)
  0x000000011ba3f71b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3f725: movabs $0x11ba3f6c5,%rsi  ;   {internal_word}
  0x000000011ba3f72f: mov    %rsp,%rdx
  0x000000011ba3f732: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3f736: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3f73b: hlt    
[Deopt Handler Code]
  0x000000011ba3f73c: movabs $0x11ba3f73c,%r10  ;   {section_word}
  0x000000011ba3f746: push   %r10
  0x000000011ba3f748: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3f74d: hlt    
  0x000000011ba3f74e: hlt    
  0x000000011ba3f74f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 170 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='20' method='java.lang.module.ModuleDescriptor name ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.098' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='17' compiler='c1' level='3' entry='0x000000011ba3f9e0' size='1304' address='0x000000011ba3f810' relocation_offset='376' insts_offset='464' stub_offset='880' scopes_data_offset='1056' scopes_pcs_offset='1120' dependencies_offset='1296' metadata_offset='1048' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='864' iicount='864' stamp='0.098'/>
<print_nmethod stamp='0.098'>
Compiled method (c1)      98   17       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x000000011ba3f810,0x000000011ba3fd28] = 1304
 relocation     [0x000000011ba3f988,0x000000011ba3f9c8] = 64
 main code      [0x000000011ba3f9e0,0x000000011ba3fb80] = 416
 stub code      [0x000000011ba3fb80,0x000000011ba3fc28] = 168
 metadata       [0x000000011ba3fc28,0x000000011ba3fc30] = 8
 scopes data    [0x000000011ba3fc30,0x000000011ba3fc70] = 64
 scopes pcs     [0x000000011ba3fc70,0x000000011ba3fd20] = 176
 dependencies   [0x000000011ba3fd20,0x000000011ba3fd28] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011ba3f9e0, 0x000000011ba3fc28]  584 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325c94e0} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3f9e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba3f9e7: push   %rbp
  0x000000011ba3f9e8: sub    $0x30,%rsp
  0x000000011ba3f9ec: movabs $0x1326eb6b8,%rax  ;   {metadata(method data for {method} {0x00000001325c94e0} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba3f9f6: mov    0x104(%rax),%edx
  0x000000011ba3f9fc: add    $0x8,%edx
  0x000000011ba3f9ff: mov    %edx,0x104(%rax)
  0x000000011ba3fa05: and    $0x1ff8,%edx
  0x000000011ba3fa0b: cmp    $0x0,%edx
  0x000000011ba3fa0e: je     0x000000011ba3faf6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0 (line 220)

  0x000000011ba3fa14: cmp    $0x0,%rsi
  0x000000011ba3fa18: movabs $0x1326eb6b8,%rax  ;   {metadata(method data for {method} {0x00000001325c94e0} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba3fa22: movabs $0x150,%rdx
  0x000000011ba3fa2c: je     0x000000011ba3fa3c
  0x000000011ba3fa32: movabs $0x140,%rdx
  0x000000011ba3fa3c: mov    (%rax,%rdx,1),%rdi
  0x000000011ba3fa40: lea    0x1(%rdi),%rdi
  0x000000011ba3fa44: mov    %rdi,(%rax,%rdx,1)
  0x000000011ba3fa48: je     0x000000011ba3fa61  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x000000011ba3fa4e: mov    %rsi,%rax
  0x000000011ba3fa51: add    $0x30,%rsp
  0x000000011ba3fa55: pop    %rbp
  0x000000011ba3fa56: mov    0x108(%r15),%r10
  0x000000011ba3fa5d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba3fa60: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@13 (line 222)

  0x000000011ba3fa61: nopl   0x0(%rax)
  0x000000011ba3fa68: jmpq   0x000000011ba3fb26  ;   {no_reloc}
  0x000000011ba3fa6d: add    %al,(%rax)
  0x000000011ba3fa6f: add    %al,(%rax)
  0x000000011ba3fa71: add    %cl,-0x75(%rcx)
  0x000000011ba3fa74: xchg   %ebx,(%rax)
  0x000000011ba3fa76: add    %eax,(%rax)
  0x000000011ba3fa78: add    %cl,-0x73(%rax)
  0x000000011ba3fa7b: js     0x000000011ba3faa5
  0x000000011ba3fa7d: cmp    0x128(%r15),%rdi
  0x000000011ba3fa84: ja     0x000000011ba3fb30
  0x000000011ba3fa8a: mov    %rdi,0x118(%r15)
  0x000000011ba3fa91: mov    0xb8(%rdx),%rcx
  0x000000011ba3fa98: mov    %rcx,(%rax)
  0x000000011ba3fa9b: mov    %rdx,%rcx
  0x000000011ba3fa9e: movabs $0x800000000,%r12
  0x000000011ba3faa8: sub    %r12,%rcx
  0x000000011ba3faab: xor    %r12,%r12
  0x000000011ba3faae: mov    %ecx,0x8(%rax)
  0x000000011ba3fab1: xor    %rcx,%rcx
  0x000000011ba3fab4: mov    %ecx,0xc(%rax)
  0x000000011ba3fab7: xor    %rcx,%rcx
  0x000000011ba3faba: mov    %rcx,0x10(%rax)
  0x000000011ba3fabe: mov    %rcx,0x18(%rax)
  0x000000011ba3fac2: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)

  0x000000011ba3fac6: mov    %rax,%rsi
  0x000000011ba3fac9: movabs $0x1326eb6b8,%rdi  ;   {metadata(method data for {method} {0x00000001325c94e0} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba3fad3: addq   $0x1,0x160(%rdi)
  0x000000011ba3fadb: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)

  0x000000011ba3fade: mov    %rax,0x20(%rsp)
  0x000000011ba3fae3: nopl   0x0(%rax)
  0x000000011ba3fae7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ;   {optimized virtual_call}
  0x000000011ba3faec: mov    0x20(%rsp),%rax
  0x000000011ba3faf1: jmpq   0x000000011ba3fb65
  0x000000011ba3faf6: movabs $0x1325c94e0,%r10  ;   {metadata({method} {0x00000001325c94e0} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba3fb00: mov    %r10,0x8(%rsp)
  0x000000011ba3fb05: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba3fb0d: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba3fb12: jmpq   0x000000011ba3fa14
  0x000000011ba3fb17: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba3fb21: mov    $0xa050f00,%eax
  0x000000011ba3fb26: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba3fb2b: jmpq   0x000000011ba3fa68
  0x000000011ba3fb30: mov    %rdx,%rdx
  0x000000011ba3fb33: callq  0x000000011b596780  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba3fb38: jmp    0x000000011ba3fac6
  0x000000011ba3fb3a: nop
  0x000000011ba3fb3b: nop
  0x000000011ba3fb3c: mov    0x420(%r15),%rax
  0x000000011ba3fb43: movabs $0x0,%r10
  0x000000011ba3fb4d: mov    %r10,0x420(%r15)
  0x000000011ba3fb54: movabs $0x0,%r10
  0x000000011ba3fb5e: mov    %r10,0x428(%r15)
  0x000000011ba3fb65: add    $0x30,%rsp
  0x000000011ba3fb69: pop    %rbp
  0x000000011ba3fb6a: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba3fb6f: hlt    
  0x000000011ba3fb70: hlt    
  0x000000011ba3fb71: hlt    
  0x000000011ba3fb72: hlt    
  0x000000011ba3fb73: hlt    
  0x000000011ba3fb74: hlt    
  0x000000011ba3fb75: hlt    
  0x000000011ba3fb76: hlt    
  0x000000011ba3fb77: hlt    
  0x000000011ba3fb78: hlt    
  0x000000011ba3fb79: hlt    
  0x000000011ba3fb7a: hlt    
  0x000000011ba3fb7b: hlt    
  0x000000011ba3fb7c: hlt    
  0x000000011ba3fb7d: hlt    
  0x000000011ba3fb7e: hlt    
  0x000000011ba3fb7f: hlt    
[Stub Code]
  0x000000011ba3fb80: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba3fb85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba3fb8f: jmpq   0x000000011ba3fb8f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba3fb94: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba3fb99: mov    %rsp,-0x28(%rsp)
  0x000000011ba3fb9e: sub    $0x80,%rsp
  0x000000011ba3fba5: mov    %rax,0x78(%rsp)
  0x000000011ba3fbaa: mov    %rcx,0x70(%rsp)
  0x000000011ba3fbaf: mov    %rdx,0x68(%rsp)
  0x000000011ba3fbb4: mov    %rbx,0x60(%rsp)
  0x000000011ba3fbb9: mov    %rbp,0x50(%rsp)
  0x000000011ba3fbbe: mov    %rsi,0x48(%rsp)
  0x000000011ba3fbc3: mov    %rdi,0x40(%rsp)
  0x000000011ba3fbc8: mov    %r8,0x38(%rsp)
  0x000000011ba3fbcd: mov    %r9,0x30(%rsp)
  0x000000011ba3fbd2: mov    %r10,0x28(%rsp)
  0x000000011ba3fbd7: mov    %r11,0x20(%rsp)
  0x000000011ba3fbdc: mov    %r12,0x18(%rsp)
  0x000000011ba3fbe1: mov    %r13,0x10(%rsp)
  0x000000011ba3fbe6: mov    %r14,0x8(%rsp)
  0x000000011ba3fbeb: mov    %r15,(%rsp)
  0x000000011ba3fbef: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba3fbf9: movabs $0x11ba3fb99,%rsi  ;   {internal_word}
  0x000000011ba3fc03: mov    %rsp,%rdx
  0x000000011ba3fc06: and    $0xfffffffffffffff0,%rsp
  0x000000011ba3fc0a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba3fc0f: hlt    
[Deopt Handler Code]
  0x000000011ba3fc10: movabs $0x11ba3fc10,%r10  ;   {section_word}
  0x000000011ba3fc1a: push   %r10
  0x000000011ba3fc1c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba3fc21: hlt    
  0x000000011ba3fc22: hlt    
  0x000000011ba3fc23: hlt    
  0x000000011ba3fc24: hlt    
  0x000000011ba3fc25: hlt    
  0x000000011ba3fc26: hlt    
  0x000000011ba3fc27: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 268 
ImmutableOopMap{rsi=Oop }pc offsets: 306 
ImmutableOopMap{}pc offsets: 331 344 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='21' method='java.lang.module.ModuleReference descriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='128' iicount='128' level='1' stamp='0.100' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='9' compiler='c1' level='3' entry='0x000000011ba3ff40' size='1112' address='0x000000011ba3fd90' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='960' dependencies_offset='1088' nul_chk_table_offset='1096' metadata_offset='896' method='java.lang.Math floorDiv (II)I' bytes='22' count='1889' iicount='1889' stamp='0.101'/>
<print_nmethod stamp='0.101'>
Compiled method (c1)     100    9       3       java.lang.Math::floorDiv (22 bytes)
 total in heap  [0x000000011ba3fd90,0x000000011ba401e8] = 1112
 relocation     [0x000000011ba3ff08,0x000000011ba3ff38] = 48
 main code      [0x000000011ba3ff40,0x000000011ba40080] = 320
 stub code      [0x000000011ba40080,0x000000011ba40110] = 144
 metadata       [0x000000011ba40110,0x000000011ba40118] = 8
 scopes data    [0x000000011ba40118,0x000000011ba40150] = 56
 scopes pcs     [0x000000011ba40150,0x000000011ba401d0] = 128
 dependencies   [0x000000011ba401d0,0x000000011ba401d8] = 8
 nul chk table  [0x000000011ba401d8,0x000000011ba401e8] = 16
----------------------------------------------------------------------
java/lang/Math.floorDiv(II)I  [0x000000011ba3ff40, 0x000000011ba40110]  464 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba3ff40: mov    %eax,-0x14000(%rsp)
  0x000000011ba3ff47: push   %rbp
  0x000000011ba3ff48: sub    $0x30,%rsp
  0x000000011ba3ff4c: mov    %rdx,%rdi
  0x000000011ba3ff4f: movabs $0x1326e95c0,%rax  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3ff59: mov    0x104(%rax),%edx
  0x000000011ba3ff5f: add    $0x8,%edx
  0x000000011ba3ff62: mov    %edx,0x104(%rax)
  0x000000011ba3ff68: and    $0x1ff8,%edx
  0x000000011ba3ff6e: cmp    $0x0,%edx
  0x000000011ba3ff71: je     0x000000011ba40023  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@0 (line 1161)

  0x000000011ba3ff77: mov    %rsi,%rax
  0x000000011ba3ff7a: cmp    $0x80000000,%eax
  0x000000011ba3ff80: jne    0x000000011ba3ff91
  0x000000011ba3ff86: xor    %edx,%edx
  0x000000011ba3ff88: cmp    $0xffffffff,%edi
  0x000000011ba3ff8b: je     0x000000011ba3ff94
  0x000000011ba3ff91: cltd   
  0x000000011ba3ff92: idiv   %edi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; implicit exception: dispatches to 0x000000011ba40044
  0x000000011ba3ff94: mov    %rsi,%rbx
  0x000000011ba3ff97: xor    %rdi,%rbx
  0x000000011ba3ff9a: cmp    $0x0,%ebx
  0x000000011ba3ff9d: movabs $0x1326e95c0,%rbx  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3ffa7: movabs $0x140,%rdx
  0x000000011ba3ffb1: jge    0x000000011ba3ffc1
  0x000000011ba3ffb7: movabs $0x150,%rdx
  0x000000011ba3ffc1: mov    (%rbx,%rdx,1),%rcx
  0x000000011ba3ffc5: lea    0x1(%rcx),%rcx
  0x000000011ba3ffc9: mov    %rcx,(%rbx,%rdx,1)
  0x000000011ba3ffcd: jge    0x000000011ba40013  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1163)

  0x000000011ba3ffd3: mov    %rax,%rbx
  0x000000011ba3ffd6: imul   %edi,%ebx
  0x000000011ba3ffd9: cmp    %esi,%ebx
  0x000000011ba3ffdb: movabs $0x1326e95c0,%rsi  ;   {metadata(method data for {method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba3ffe5: movabs $0x160,%rdi
  0x000000011ba3ffef: je     0x000000011ba3ffff
  0x000000011ba3fff5: movabs $0x170,%rdi
  0x000000011ba3ffff: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba40003: lea    0x1(%rbx),%rbx
  0x000000011ba40007: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba4000b: je     0x000000011ba40013  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1163)

  0x000000011ba40011: dec    %eax
  0x000000011ba40013: add    $0x30,%rsp
  0x000000011ba40017: pop    %rbp
  0x000000011ba40018: mov    0x108(%r15),%r10
  0x000000011ba4001f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba40022: retq   
  0x000000011ba40023: movabs $0x132628e00,%r10  ;   {metadata({method} {0x0000000132628e00} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba4002d: mov    %r10,0x8(%rsp)
  0x000000011ba40032: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4003a: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1161)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4003f: jmpq   0x000000011ba3ff77
  0x000000011ba40044: callq  0x000000011b595ca0  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011ba40049: nop
  0x000000011ba4004a: nop
  0x000000011ba4004b: mov    0x420(%r15),%rax
  0x000000011ba40052: movabs $0x0,%r10
  0x000000011ba4005c: mov    %r10,0x420(%r15)
  0x000000011ba40063: movabs $0x0,%r10
  0x000000011ba4006d: mov    %r10,0x428(%r15)
  0x000000011ba40074: add    $0x30,%rsp
  0x000000011ba40078: pop    %rbp
  0x000000011ba40079: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4007e: hlt    
  0x000000011ba4007f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba40080: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba40085: mov    %rsp,-0x28(%rsp)
  0x000000011ba4008a: sub    $0x80,%rsp
  0x000000011ba40091: mov    %rax,0x78(%rsp)
  0x000000011ba40096: mov    %rcx,0x70(%rsp)
  0x000000011ba4009b: mov    %rdx,0x68(%rsp)
  0x000000011ba400a0: mov    %rbx,0x60(%rsp)
  0x000000011ba400a5: mov    %rbp,0x50(%rsp)
  0x000000011ba400aa: mov    %rsi,0x48(%rsp)
  0x000000011ba400af: mov    %rdi,0x40(%rsp)
  0x000000011ba400b4: mov    %r8,0x38(%rsp)
  0x000000011ba400b9: mov    %r9,0x30(%rsp)
  0x000000011ba400be: mov    %r10,0x28(%rsp)
  0x000000011ba400c3: mov    %r11,0x20(%rsp)
  0x000000011ba400c8: mov    %r12,0x18(%rsp)
  0x000000011ba400cd: mov    %r13,0x10(%rsp)
  0x000000011ba400d2: mov    %r14,0x8(%rsp)
  0x000000011ba400d7: mov    %r15,(%rsp)
  0x000000011ba400db: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba400e5: movabs $0x11ba40085,%rsi  ;   {internal_word}
  0x000000011ba400ef: mov    %rsp,%rdx
  0x000000011ba400f2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba400f6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba400fb: hlt    
[Deopt Handler Code]
  0x000000011ba400fc: movabs $0x11ba400fc,%r10  ;   {section_word}
  0x000000011ba40106: push   %r10
  0x000000011ba40108: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4010d: hlt    
  0x000000011ba4010e: hlt    
  0x000000011ba4010f: hlt    

ImmutableOopMap{}pc offsets: 255 265 </print_nmethod>
<nmethod compile_id='13' compiler='c1' level='3' entry='0x000000011ba40420' size='3136' address='0x000000011ba40210' relocation_offset='376' insts_offset='528' stub_offset='2064' scopes_data_offset='2272' scopes_pcs_offset='2552' dependencies_offset='3112' nul_chk_table_offset='3120' metadata_offset='2248' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='1029' iicount='1029' stamp='0.103'/>
<print_nmethod stamp='0.103'>
Compiled method (c1)     103   13       3       java.lang.String::equals (65 bytes)
 total in heap  [0x000000011ba40210,0x000000011ba40e50] = 3136
 relocation     [0x000000011ba40388,0x000000011ba40418] = 144
 main code      [0x000000011ba40420,0x000000011ba40a20] = 1536
 stub code      [0x000000011ba40a20,0x000000011ba40ad8] = 184
 metadata       [0x000000011ba40ad8,0x000000011ba40af0] = 24
 scopes data    [0x000000011ba40af0,0x000000011ba40c08] = 280
 scopes pcs     [0x000000011ba40c08,0x000000011ba40e38] = 560
 dependencies   [0x000000011ba40e38,0x000000011ba40e40] = 8
 nul chk table  [0x000000011ba40e40,0x000000011ba40e50] = 16
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x000000011ba40420, 0x000000011ba40ad8]  1720 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba40420: mov    0x8(%rsi),%r10d
  0x000000011ba40424: movabs $0x800000000,%r12
  0x000000011ba4042e: add    %r12,%r10
  0x000000011ba40431: xor    %r12,%r12
  0x000000011ba40434: cmp    %rax,%r10
  0x000000011ba40437: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4043d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba40440: mov    %eax,-0x14000(%rsp)
  0x000000011ba40447: push   %rbp
  0x000000011ba40448: sub    $0x30,%rsp
  0x000000011ba4044c: movabs $0x1326eae38,%rdi  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40456: mov    0x104(%rdi),%ebx
  0x000000011ba4045c: add    $0x8,%ebx
  0x000000011ba4045f: mov    %ebx,0x104(%rdi)
  0x000000011ba40465: and    $0x1ff8,%ebx
  0x000000011ba4046b: cmp    $0x0,%ebx
  0x000000011ba4046e: je     0x000000011ba40959  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0 (line 1003)

  0x000000011ba40474: cmp    %rdx,%rsi
  0x000000011ba40477: movabs $0x1326eae38,%rdi  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40481: movabs $0x150,%rbx
  0x000000011ba4048b: je     0x000000011ba4049b
  0x000000011ba40491: movabs $0x140,%rbx
  0x000000011ba4049b: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4049f: lea    0x1(%rax),%rax
  0x000000011ba404a3: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba404a7: je     0x000000011ba40944  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 1003)

  0x000000011ba404ad: cmp    $0x0,%rdx
  0x000000011ba404b1: jne    0x000000011ba404c9
  0x000000011ba404b3: movabs $0x1326eae38,%rcx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba404bd: orb    $0x1,0x159(%rcx)
  0x000000011ba404c4: jmpq   0x000000011ba405a1
  0x000000011ba404c9: movabs $0x800001808,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011ba404d3: mov    0x8(%rdx),%ebx
  0x000000011ba404d6: movabs $0x800000000,%r12
  0x000000011ba404e0: add    %r12,%rbx
  0x000000011ba404e3: xor    %r12,%r12
  0x000000011ba404e6: cmp    %rbx,%rax
  0x000000011ba404e9: jne    0x000000011ba40585
  0x000000011ba404ef: movabs $0x1326eae38,%rcx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba404f9: mov    0x8(%rdx),%eax
  0x000000011ba404fc: movabs $0x800000000,%r12
  0x000000011ba40506: add    %r12,%rax
  0x000000011ba40509: xor    %r12,%r12
  0x000000011ba4050c: cmp    0x170(%rcx),%rax
  0x000000011ba40513: jne    0x000000011ba40522
  0x000000011ba40515: addq   $0x1,0x178(%rcx)
  0x000000011ba4051d: jmpq   0x000000011ba405a6
  0x000000011ba40522: cmp    0x180(%rcx),%rax
  0x000000011ba40529: jne    0x000000011ba40538
  0x000000011ba4052b: addq   $0x1,0x188(%rcx)
  0x000000011ba40533: jmpq   0x000000011ba405a6
  0x000000011ba40538: cmpq   $0x0,0x170(%rcx)
  0x000000011ba40543: jne    0x000000011ba4055c
  0x000000011ba40545: mov    %rax,0x170(%rcx)
  0x000000011ba4054c: movq   $0x1,0x178(%rcx)
  0x000000011ba40557: jmpq   0x000000011ba405a6
  0x000000011ba4055c: cmpq   $0x0,0x180(%rcx)
  0x000000011ba40567: jne    0x000000011ba40580
  0x000000011ba40569: mov    %rax,0x180(%rcx)
  0x000000011ba40570: movq   $0x1,0x188(%rcx)
  0x000000011ba4057b: jmpq   0x000000011ba405a6
  0x000000011ba40580: jmpq   0x000000011ba405a6
  0x000000011ba40585: movabs $0x1326eae38,%rcx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4058f: subq   $0x1,0x160(%rcx)
  0x000000011ba40597: jmpq   0x000000011ba405a1
  0x000000011ba4059c: jmpq   0x000000011ba405a6
  0x000000011ba405a1: xor    %rdi,%rdi
  0x000000011ba405a4: jmp    0x000000011ba405b0
  0x000000011ba405a6: movabs $0x1,%rdi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 1006)

  0x000000011ba405b0: cmp    $0x0,%edi
  0x000000011ba405b3: movabs $0x1326eae38,%rdi  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba405bd: movabs $0x198,%rbx
  0x000000011ba405c7: je     0x000000011ba405d7
  0x000000011ba405cd: movabs $0x1a8,%rbx
  0x000000011ba405d7: mov    (%rdi,%rbx,1),%rax
  0x000000011ba405db: lea    0x1(%rax),%rax
  0x000000011ba405df: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba405e3: je     0x000000011ba4092f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11 (line 1006)

  0x000000011ba405e9: cmp    $0x0,%rdx
  0x000000011ba405ed: jne    0x000000011ba40605
  0x000000011ba405ef: movabs $0x1326eae38,%rax  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba405f9: orb    $0x1,0x1b1(%rax)
  0x000000011ba40600: jmpq   0x000000011ba406dd
  0x000000011ba40605: movabs $0x800001808,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011ba4060f: mov    0x8(%rdx),%edi
  0x000000011ba40612: movabs $0x800000000,%r12
  0x000000011ba4061c: add    %r12,%rdi
  0x000000011ba4061f: xor    %r12,%r12
  0x000000011ba40622: cmp    %rdi,%rbx
  0x000000011ba40625: jne    0x000000011ba406c1
  0x000000011ba4062b: movabs $0x1326eae38,%rax  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40635: mov    0x8(%rdx),%ebx
  0x000000011ba40638: movabs $0x800000000,%r12
  0x000000011ba40642: add    %r12,%rbx
  0x000000011ba40645: xor    %r12,%r12
  0x000000011ba40648: cmp    0x1c8(%rax),%rbx
  0x000000011ba4064f: jne    0x000000011ba4065e
  0x000000011ba40651: addq   $0x1,0x1d0(%rax)
  0x000000011ba40659: jmpq   0x000000011ba406dd
  0x000000011ba4065e: cmp    0x1d8(%rax),%rbx
  0x000000011ba40665: jne    0x000000011ba40674
  0x000000011ba40667: addq   $0x1,0x1e0(%rax)
  0x000000011ba4066f: jmpq   0x000000011ba406dd
  0x000000011ba40674: cmpq   $0x0,0x1c8(%rax)
  0x000000011ba4067f: jne    0x000000011ba40698
  0x000000011ba40681: mov    %rbx,0x1c8(%rax)
  0x000000011ba40688: movq   $0x1,0x1d0(%rax)
  0x000000011ba40693: jmpq   0x000000011ba406dd
  0x000000011ba40698: cmpq   $0x0,0x1d8(%rax)
  0x000000011ba406a3: jne    0x000000011ba406bc
  0x000000011ba406a5: mov    %rbx,0x1d8(%rax)
  0x000000011ba406ac: movq   $0x1,0x1e0(%rax)
  0x000000011ba406b7: jmpq   0x000000011ba406dd
  0x000000011ba406bc: jmpq   0x000000011ba406dd
  0x000000011ba406c1: movabs $0x1326eae38,%rax  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba406cb: subq   $0x1,0x1b8(%rax)
  0x000000011ba406d3: jmpq   0x000000011ba4097a
  0x000000011ba406d8: jmpq   0x000000011ba406dd
  0x000000011ba406dd: mov    %rdx,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)

  0x000000011ba406e0: mov    %rsi,%rdx
  0x000000011ba406e3: movabs $0x1326eae38,%rbx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba406ed: addq   $0x1,0x1f0(%rbx)
  0x000000011ba406f5: movabs $0x1326e9230,%rdx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba406ff: mov    0x104(%rdx),%ebx
  0x000000011ba40705: add    $0x8,%ebx
  0x000000011ba40708: mov    %ebx,0x104(%rdx)
  0x000000011ba4070e: and    $0x7ffff8,%ebx
  0x000000011ba40714: cmp    $0x0,%ebx
  0x000000011ba40717: je     0x000000011ba40983
  0x000000011ba4071d: movabs $0x1326e9230,%rdx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40727: incl   0x150(%rdx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x000000011ba4072d: movsbl 0x14(%rsi),%edx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x000000011ba40731: movabs $0x1326e9230,%rbx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4073b: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x000000011ba40741: mov    %rdx,%rbx
  0x000000011ba40744: shl    $0x18,%ebx
  0x000000011ba40747: sar    $0x18,%ebx
  0x000000011ba4074a: cmp    (%rdi),%rax        ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ; implicit exception: dispatches to 0x000000011ba409a4
  0x000000011ba4074d: mov    %rdi,%rax
  0x000000011ba40750: movabs $0x1326eae38,%rcx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4075a: addq   $0x1,0x228(%rcx)
  0x000000011ba40762: movabs $0x1326e9230,%rax  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4076c: mov    0x104(%rax),%ecx
  0x000000011ba40772: add    $0x8,%ecx
  0x000000011ba40775: mov    %ecx,0x104(%rax)
  0x000000011ba4077b: and    $0x7ffff8,%ecx
  0x000000011ba40781: cmp    $0x0,%ecx
  0x000000011ba40784: je     0x000000011ba409a9
  0x000000011ba4078a: movabs $0x1326e9230,%rax  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40794: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x000000011ba4079a: movsbl 0x14(%rdi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x000000011ba4079e: movabs $0x1326e9230,%rcx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba407a8: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x000000011ba407ae: shl    $0x18,%eax
  0x000000011ba407b1: sar    $0x18,%eax
  0x000000011ba407b4: cmp    %eax,%ebx
  0x000000011ba407b6: movabs $0x1326eae38,%rbx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba407c0: movabs $0x260,%rax
  0x000000011ba407ca: jne    0x000000011ba407da
  0x000000011ba407d0: movabs $0x270,%rax
  0x000000011ba407da: mov    (%rbx,%rax,1),%rcx
  0x000000011ba407de: lea    0x1(%rcx),%rcx
  0x000000011ba407e2: mov    %rcx,(%rbx,%rax,1)
  0x000000011ba407e6: jne    0x000000011ba4092f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x000000011ba407ec: mov    %rsi,%rbx
  0x000000011ba407ef: movabs $0x1326eae38,%rax  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba407f9: addq   $0x1,0x280(%rax)
  0x000000011ba40801: movabs $0x1326e4890,%rbx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4080b: mov    0x104(%rbx),%eax
  0x000000011ba40811: add    $0x8,%eax
  0x000000011ba40814: mov    %eax,0x104(%rbx)
  0x000000011ba4081a: and    $0x7ffff8,%eax
  0x000000011ba40820: cmp    $0x0,%eax
  0x000000011ba40823: je     0x000000011ba409ca
  0x000000011ba40829: movabs $0x1326e4890,%rbx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40833: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x000000011ba40839: cmp    $0x0,%edx
  0x000000011ba4083c: movabs $0x1326e4890,%rdx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40846: movabs $0x160,%rbx
  0x000000011ba40850: jne    0x000000011ba40860
  0x000000011ba40856: movabs $0x170,%rbx
  0x000000011ba40860: mov    (%rdx,%rbx,1),%rax
  0x000000011ba40864: lea    0x1(%rax),%rax
  0x000000011ba40868: mov    %rax,(%rdx,%rbx,1)
  0x000000011ba4086c: jne    0x000000011ba4088c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x000000011ba40872: movabs $0x1326e4890,%rdx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4087c: incl   0x180(%rdx)
  0x000000011ba40882: mov    $0x1,%edx
  0x000000011ba40887: jmpq   0x000000011ba40891  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x000000011ba4088c: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x000000011ba40891: and    $0x1,%edx
  0x000000011ba40894: cmp    $0x0,%edx
  0x000000011ba40897: movabs $0x1326eae38,%rdx  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba408a1: movabs $0x2b8,%rbx
  0x000000011ba408ab: je     0x000000011ba408bb
  0x000000011ba408b1: movabs $0x2c8,%rbx
  0x000000011ba408bb: mov    (%rdx,%rbx,1),%rax
  0x000000011ba408bf: lea    0x1(%rax),%rax
  0x000000011ba408c3: mov    %rax,(%rdx,%rbx,1)
  0x000000011ba408c7: je     0x000000011ba40909  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@34 (line 1009)

  0x000000011ba408cd: mov    0xc(%rsi),%esi
  0x000000011ba408d0: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x000000011ba408d4: mov    0xc(%rdi),%edx
  0x000000011ba408d7: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x000000011ba408db: movabs $0x1326eae38,%rdi  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba408e5: addq   $0x1,0x2d8(%rdi)
  0x000000011ba408ed: xchg   %ax,%ax
  0x000000011ba408ef: callq  0x000000011ba3e960  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)
                                                ;   {static_call}
  0x000000011ba408f4: movabs $0x1326eae38,%rsi  ;   {metadata(method data for {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba408fe: incl   0x2e8(%rsi)
  0x000000011ba40904: jmpq   0x000000011ba4091c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@48 (line 1009)

  0x000000011ba40909: mov    0xc(%rsi),%esi
  0x000000011ba4090c: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@52 (line 1010)

  0x000000011ba40910: mov    0xc(%rdi),%edx
  0x000000011ba40913: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@56 (line 1010)

  0x000000011ba40917: callq  0x000000011b4d2400  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@59 (line 1010)
                                                ;   {static_call}
  0x000000011ba4091c: and    $0x1,%eax
  0x000000011ba4091f: add    $0x30,%rsp
  0x000000011ba40923: pop    %rbp
  0x000000011ba40924: mov    0x108(%r15),%r10
  0x000000011ba4092b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4092e: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@62 (line 1009)

  0x000000011ba4092f: mov    $0x0,%eax
  0x000000011ba40934: add    $0x30,%rsp
  0x000000011ba40938: pop    %rbp
  0x000000011ba40939: mov    0x108(%r15),%r10
  0x000000011ba40940: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba40943: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@64 (line 1013)

  0x000000011ba40944: mov    $0x1,%eax
  0x000000011ba40949: add    $0x30,%rsp
  0x000000011ba4094d: pop    %rbp
  0x000000011ba4094e: mov    0x108(%r15),%r10
  0x000000011ba40955: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba40958: retq   
  0x000000011ba40959: movabs $0x1324b0e00,%r10  ;   {metadata({method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba40963: mov    %r10,0x8(%rsp)
  0x000000011ba40968: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba40970: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba40975: jmpq   0x000000011ba40474
  0x000000011ba4097a: mov    %rdx,(%rsp)
  0x000000011ba4097e: callq  0x000000011b597fa0  ; ImmutableOopMap{rsi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba40983: movabs $0x1324b5190,%r10  ;   {metadata({method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4098d: mov    %r10,0x8(%rsp)
  0x000000011ba40992: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4099a: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4099f: jmpq   0x000000011ba4071d
  0x000000011ba409a4: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba409a9: movabs $0x1324b5190,%r10  ;   {metadata({method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba409b3: mov    %r10,0x8(%rsp)
  0x000000011ba409b8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba409c0: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba409c5: jmpq   0x000000011ba4078a
  0x000000011ba409ca: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba409d4: mov    %r10,0x8(%rsp)
  0x000000011ba409d9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba409e1: callq  0x000000011b59a600  ; ImmutableOopMap{rdi=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba409e6: jmpq   0x000000011ba40829
  0x000000011ba409eb: nop
  0x000000011ba409ec: nop
  0x000000011ba409ed: mov    0x420(%r15),%rax
  0x000000011ba409f4: movabs $0x0,%r10
  0x000000011ba409fe: mov    %r10,0x420(%r15)
  0x000000011ba40a05: movabs $0x0,%r10
  0x000000011ba40a0f: mov    %r10,0x428(%r15)
  0x000000011ba40a16: add    $0x30,%rsp
  0x000000011ba40a1a: pop    %rbp
  0x000000011ba40a1b: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000000011ba40a20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba40a25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba40a2f: jmpq   0x000000011ba40a2f  ;   {runtime_call}
  0x000000011ba40a34: nop
  0x000000011ba40a35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba40a3f: jmpq   0x000000011ba40a3f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba40a44: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba40a49: mov    %rsp,-0x28(%rsp)
  0x000000011ba40a4e: sub    $0x80,%rsp
  0x000000011ba40a55: mov    %rax,0x78(%rsp)
  0x000000011ba40a5a: mov    %rcx,0x70(%rsp)
  0x000000011ba40a5f: mov    %rdx,0x68(%rsp)
  0x000000011ba40a64: mov    %rbx,0x60(%rsp)
  0x000000011ba40a69: mov    %rbp,0x50(%rsp)
  0x000000011ba40a6e: mov    %rsi,0x48(%rsp)
  0x000000011ba40a73: mov    %rdi,0x40(%rsp)
  0x000000011ba40a78: mov    %r8,0x38(%rsp)
  0x000000011ba40a7d: mov    %r9,0x30(%rsp)
  0x000000011ba40a82: mov    %r10,0x28(%rsp)
  0x000000011ba40a87: mov    %r11,0x20(%rsp)
  0x000000011ba40a8c: mov    %r12,0x18(%rsp)
  0x000000011ba40a91: mov    %r13,0x10(%rsp)
  0x000000011ba40a96: mov    %r14,0x8(%rsp)
  0x000000011ba40a9b: mov    %r15,(%rsp)
  0x000000011ba40a9f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba40aa9: movabs $0x11ba40a49,%rsi  ;   {internal_word}
  0x000000011ba40ab3: mov    %rsp,%rdx
  0x000000011ba40ab6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba40aba: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba40abf: hlt    
[Deopt Handler Code]
  0x000000011ba40ac0: movabs $0x11ba40ac0,%r10  ;   {section_word}
  0x000000011ba40aca: push   %r10
  0x000000011ba40acc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba40ad1: hlt    
  0x000000011ba40ad2: hlt    
  0x000000011ba40ad3: hlt    
  0x000000011ba40ad4: hlt    
  0x000000011ba40ad5: hlt    
  0x000000011ba40ad6: hlt    
  0x000000011ba40ad7: hlt    

ImmutableOopMap{}pc offsets: 1236 1276 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 1365 
ImmutableOopMap{rsi=Oop }pc offsets: 1379 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 1407 1417 1445 
ImmutableOopMap{rdi=Oop rsi=Oop }pc offsets: 1478 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='22' method='java.lang.String charAt (I)C' bytes='25' count='512' iicount='512' level='3' stamp='0.109' comment='tiered' hot_count='512'/>
<task_queued compile_id='23' method='java.lang.StringLatin1 charAt ([BI)C' bytes='28' count='512' iicount='512' level='3' stamp='0.109' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='16' compiler='c1' level='3' entry='0x000000011ba41040' size='864' address='0x000000011ba40e90' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='792' dependencies_offset='856' metadata_offset='768' method='java.util.Collections emptySet ()Ljava/util/Set;' bytes='4' count='650' iicount='650' stamp='0.109'/>
<print_nmethod stamp='0.109'>
Compiled method (c1)     109   16       3       java.util.Collections::emptySet (4 bytes)
 total in heap  [0x000000011ba40e90,0x000000011ba411f0] = 864
 relocation     [0x000000011ba41008,0x000000011ba41030] = 40
 main code      [0x000000011ba41040,0x000000011ba41100] = 192
 stub code      [0x000000011ba41100,0x000000011ba41190] = 144
 metadata       [0x000000011ba41190,0x000000011ba41198] = 8
 scopes data    [0x000000011ba41198,0x000000011ba411a8] = 16
 scopes pcs     [0x000000011ba411a8,0x000000011ba411e8] = 64
 dependencies   [0x000000011ba411e8,0x000000011ba411f0] = 8
----------------------------------------------------------------------
java/util/Collections.emptySet()Ljava/util/Set;  [0x000000011ba41040, 0x000000011ba41190]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001326114f8} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Collections&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba41040: mov    %eax,-0x14000(%rsp)
  0x000000011ba41047: push   %rbp
  0x000000011ba41048: sub    $0x30,%rsp
  0x000000011ba4104c: movabs $0x1326eb560,%rax  ;   {metadata(method data for {method} {0x00000001326114f8} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Collections&apos;)}
  0x000000011ba41056: mov    0x104(%rax),%esi
  0x000000011ba4105c: add    $0x8,%esi
  0x000000011ba4105f: mov    %esi,0x104(%rax)
  0x000000011ba41065: and    $0x1ff8,%esi
  0x000000011ba4106b: cmp    $0x0,%esi
  0x000000011ba4106e: je     0x000000011ba4108e  ;*getstatic EMPTY_SET {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Collections::emptySet@0 (line 4322)

  0x000000011ba41074: movabs $0x70ff0bd38,%rax  ;   {oop(a &apos;java/util/Collections$EmptySet&apos;{0x000000070ff0bd38})}
  0x000000011ba4107e: add    $0x30,%rsp
  0x000000011ba41082: pop    %rbp
  0x000000011ba41083: mov    0x108(%r15),%r10
  0x000000011ba4108a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4108d: retq   
  0x000000011ba4108e: movabs $0x1326114f8,%r10  ;   {metadata({method} {0x00000001326114f8} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Collections&apos;)}
  0x000000011ba41098: mov    %r10,0x8(%rsp)
  0x000000011ba4109d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba410a5: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.Collections::emptySet@-1 (line 4322)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba410aa: jmp    0x000000011ba41074
  0x000000011ba410ac: nop
  0x000000011ba410ad: nop
  0x000000011ba410ae: mov    0x420(%r15),%rax
  0x000000011ba410b5: movabs $0x0,%r10
  0x000000011ba410bf: mov    %r10,0x420(%r15)
  0x000000011ba410c6: movabs $0x0,%r10
  0x000000011ba410d0: mov    %r10,0x428(%r15)
  0x000000011ba410d7: add    $0x30,%rsp
  0x000000011ba410db: pop    %rbp
  0x000000011ba410dc: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba410e1: hlt    
  0x000000011ba410e2: hlt    
  0x000000011ba410e3: hlt    
  0x000000011ba410e4: hlt    
  0x000000011ba410e5: hlt    
  0x000000011ba410e6: hlt    
  0x000000011ba410e7: hlt    
  0x000000011ba410e8: hlt    
  0x000000011ba410e9: hlt    
  0x000000011ba410ea: hlt    
  0x000000011ba410eb: hlt    
  0x000000011ba410ec: hlt    
  0x000000011ba410ed: hlt    
  0x000000011ba410ee: hlt    
  0x000000011ba410ef: hlt    
  0x000000011ba410f0: hlt    
  0x000000011ba410f1: hlt    
  0x000000011ba410f2: hlt    
  0x000000011ba410f3: hlt    
  0x000000011ba410f4: hlt    
  0x000000011ba410f5: hlt    
  0x000000011ba410f6: hlt    
  0x000000011ba410f7: hlt    
  0x000000011ba410f8: hlt    
  0x000000011ba410f9: hlt    
  0x000000011ba410fa: hlt    
  0x000000011ba410fb: hlt    
  0x000000011ba410fc: hlt    
  0x000000011ba410fd: hlt    
  0x000000011ba410fe: hlt    
  0x000000011ba410ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba41100: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba41105: mov    %rsp,-0x28(%rsp)
  0x000000011ba4110a: sub    $0x80,%rsp
  0x000000011ba41111: mov    %rax,0x78(%rsp)
  0x000000011ba41116: mov    %rcx,0x70(%rsp)
  0x000000011ba4111b: mov    %rdx,0x68(%rsp)
  0x000000011ba41120: mov    %rbx,0x60(%rsp)
  0x000000011ba41125: mov    %rbp,0x50(%rsp)
  0x000000011ba4112a: mov    %rsi,0x48(%rsp)
  0x000000011ba4112f: mov    %rdi,0x40(%rsp)
  0x000000011ba41134: mov    %r8,0x38(%rsp)
  0x000000011ba41139: mov    %r9,0x30(%rsp)
  0x000000011ba4113e: mov    %r10,0x28(%rsp)
  0x000000011ba41143: mov    %r11,0x20(%rsp)
  0x000000011ba41148: mov    %r12,0x18(%rsp)
  0x000000011ba4114d: mov    %r13,0x10(%rsp)
  0x000000011ba41152: mov    %r14,0x8(%rsp)
  0x000000011ba41157: mov    %r15,(%rsp)
  0x000000011ba4115b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba41165: movabs $0x11ba41105,%rsi  ;   {internal_word}
  0x000000011ba4116f: mov    %rsp,%rdx
  0x000000011ba41172: and    $0xfffffffffffffff0,%rsp
  0x000000011ba41176: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4117b: hlt    
[Deopt Handler Code]
  0x000000011ba4117c: movabs $0x11ba4117c,%r10  ;   {section_word}
  0x000000011ba41186: push   %r10
  0x000000011ba41188: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4118d: hlt    
  0x000000011ba4118e: hlt    
  0x000000011ba4118f: hlt    

ImmutableOopMap{}pc offsets: 106 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='24' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='512' iicount='512' level='3' stamp='0.111' comment='tiered' hot_count='512'/>
<task_queued compile_id='25' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='512' iicount='512' level='3' stamp='0.111' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='23' compiler='c1' level='3' entry='0x000000011ba413e0' size='1416' address='0x000000011ba41210' relocation_offset='376' insts_offset='464' stub_offset='880' scopes_data_offset='1056' scopes_pcs_offset='1152' dependencies_offset='1392' nul_chk_table_offset='1400' metadata_offset='1048' method='java.lang.StringLatin1 charAt ([BI)C' bytes='28' count='737' iicount='737' stamp='0.111'/>
<print_nmethod stamp='0.111'>
Compiled method (c1)     111   23       3       java.lang.StringLatin1::charAt (28 bytes)
 total in heap  [0x000000011ba41210,0x000000011ba41798] = 1416
 relocation     [0x000000011ba41388,0x000000011ba413d0] = 72
 main code      [0x000000011ba413e0,0x000000011ba41580] = 416
 stub code      [0x000000011ba41580,0x000000011ba41628] = 168
 metadata       [0x000000011ba41628,0x000000011ba41630] = 8
 scopes data    [0x000000011ba41630,0x000000011ba41690] = 96
 scopes pcs     [0x000000011ba41690,0x000000011ba41780] = 240
 dependencies   [0x000000011ba41780,0x000000011ba41788] = 8
 nul chk table  [0x000000011ba41788,0x000000011ba41798] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.charAt([BI)C  [0x000000011ba413e0, 0x000000011ba41628]  584 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba413e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba413e7: push   %rbp
  0x000000011ba413e8: sub    $0x30,%rsp
  0x000000011ba413ec: mov    %rdx,%rdi
  0x000000011ba413ef: movabs $0x13272c428,%rax  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba413f9: mov    0x104(%rax),%edx
  0x000000011ba413ff: add    $0x8,%edx
  0x000000011ba41402: mov    %edx,0x104(%rax)
  0x000000011ba41408: and    $0x1ff8,%edx
  0x000000011ba4140e: cmp    $0x0,%edx
  0x000000011ba41411: je     0x000000011ba414ee  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@0 (line 46)

  0x000000011ba41417: cmp    $0x0,%edi
  0x000000011ba4141a: movabs $0x13272c428,%rax  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba41424: movabs $0x140,%rdx
  0x000000011ba4142e: jl     0x000000011ba4143e
  0x000000011ba41434: movabs $0x150,%rdx
  0x000000011ba4143e: mov    (%rax,%rdx,1),%rbx
  0x000000011ba41442: lea    0x1(%rbx),%rbx
  0x000000011ba41446: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba4144a: jl     0x000000011ba414af  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)

  0x000000011ba41450: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; implicit exception: dispatches to 0x000000011ba4150f
  0x000000011ba41453: cmp    %eax,%edi
  0x000000011ba41455: movabs $0x13272c428,%rax  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba4145f: movabs $0x170,%rdx
  0x000000011ba41469: jge    0x000000011ba41479
  0x000000011ba4146f: movabs $0x160,%rdx
  0x000000011ba41479: mov    (%rax,%rdx,1),%rbx
  0x000000011ba4147d: lea    0x1(%rbx),%rbx
  0x000000011ba41481: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba41485: jge    0x000000011ba414af  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)

  0x000000011ba4148b: movslq %edi,%rdi
  0x000000011ba4148e: movsbl 0x10(%rsi,%rdi,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)

  0x000000011ba41493: and    $0xff,%eax
  0x000000011ba41499: and    $0xffff,%eax
  0x000000011ba4149f: add    $0x30,%rsp
  0x000000011ba414a3: pop    %rbp
  0x000000011ba414a4: mov    0x108(%r15),%r10
  0x000000011ba414ab: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba414ae: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@27 (line 49)

  0x000000011ba414af: nop
  0x000000011ba414b0: jmpq   0x000000011ba41523  ;   {no_reloc}
  0x000000011ba414b5: add    %al,(%rax)
  0x000000011ba414b7: add    %al,(%rax)
  0x000000011ba414b9: add    %ch,%cl
  0x000000011ba414bb: outsb  %ds:(%rsi),(%dx)
  0x000000011ba414bc: add    %al,(%rax)
  0x000000011ba414be: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)

  0x000000011ba414c1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba414c4: sub    %al,%ah
  0x000000011ba414c6: jb     0x000000011ba414fa
  0x000000011ba414c8: add    %eax,(%rax)
  0x000000011ba414ca: add    %al,(%rax)
  0x000000011ba414cc: addq   $0x1,0x180(%rsi)
  0x000000011ba414d4: mov    %rdi,%rdx
  0x000000011ba414d7: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)

  0x000000011ba414da: mov    %rax,0x20(%rsp)
  0x000000011ba414df: callq  0x000000011b4d1f00  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ;   {optimized virtual_call}
  0x000000011ba414e4: mov    0x20(%rsp),%rax
  0x000000011ba414e9: jmpq   0x000000011ba41562
  0x000000011ba414ee: movabs $0x1326024e0,%r10  ;   {metadata({method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba414f8: mov    %r10,0x8(%rsp)
  0x000000011ba414fd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba41505: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4150a: jmpq   0x000000011ba41417
  0x000000011ba4150f: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba41514: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba4151e: mov    $0xa050f00,%eax
  0x000000011ba41523: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba41528: jmp    0x000000011ba414b0
  0x000000011ba4152a: nop
  0x000000011ba4152b: nop
  0x000000011ba4152c: nop
  0x000000011ba4152d: mov    %rdx,%rdx
  0x000000011ba41530: callq  0x000000011b596480  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba41535: jmp    0x000000011ba414bf
  0x000000011ba41537: nop
  0x000000011ba41538: nop
  0x000000011ba41539: mov    0x420(%r15),%rax
  0x000000011ba41540: movabs $0x0,%r10
  0x000000011ba4154a: mov    %r10,0x420(%r15)
  0x000000011ba41551: movabs $0x0,%r10
  0x000000011ba4155b: mov    %r10,0x428(%r15)
  0x000000011ba41562: add    $0x30,%rsp
  0x000000011ba41566: pop    %rbp
  0x000000011ba41567: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4156c: hlt    
  0x000000011ba4156d: hlt    
  0x000000011ba4156e: hlt    
  0x000000011ba4156f: hlt    
  0x000000011ba41570: hlt    
  0x000000011ba41571: hlt    
  0x000000011ba41572: hlt    
  0x000000011ba41573: hlt    
  0x000000011ba41574: hlt    
  0x000000011ba41575: hlt    
  0x000000011ba41576: hlt    
  0x000000011ba41577: hlt    
  0x000000011ba41578: hlt    
  0x000000011ba41579: hlt    
  0x000000011ba4157a: hlt    
  0x000000011ba4157b: hlt    
  0x000000011ba4157c: hlt    
  0x000000011ba4157d: hlt    
  0x000000011ba4157e: hlt    
  0x000000011ba4157f: hlt    
[Stub Code]
  0x000000011ba41580: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba41585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4158f: jmpq   0x000000011ba4158f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba41594: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba41599: mov    %rsp,-0x28(%rsp)
  0x000000011ba4159e: sub    $0x80,%rsp
  0x000000011ba415a5: mov    %rax,0x78(%rsp)
  0x000000011ba415aa: mov    %rcx,0x70(%rsp)
  0x000000011ba415af: mov    %rdx,0x68(%rsp)
  0x000000011ba415b4: mov    %rbx,0x60(%rsp)
  0x000000011ba415b9: mov    %rbp,0x50(%rsp)
  0x000000011ba415be: mov    %rsi,0x48(%rsp)
  0x000000011ba415c3: mov    %rdi,0x40(%rsp)
  0x000000011ba415c8: mov    %r8,0x38(%rsp)
  0x000000011ba415cd: mov    %r9,0x30(%rsp)
  0x000000011ba415d2: mov    %r10,0x28(%rsp)
  0x000000011ba415d7: mov    %r11,0x20(%rsp)
  0x000000011ba415dc: mov    %r12,0x18(%rsp)
  0x000000011ba415e1: mov    %r13,0x10(%rsp)
  0x000000011ba415e6: mov    %r14,0x8(%rsp)
  0x000000011ba415eb: mov    %r15,(%rsp)
  0x000000011ba415ef: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba415f9: movabs $0x11ba41599,%rsi  ;   {internal_word}
  0x000000011ba41603: mov    %rsp,%rdx
  0x000000011ba41606: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4160a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4160f: hlt    
[Deopt Handler Code]
  0x000000011ba41610: movabs $0x11ba41610,%r10  ;   {section_word}
  0x000000011ba4161a: push   %r10
  0x000000011ba4161c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba41621: hlt    
  0x000000011ba41622: hlt    
  0x000000011ba41623: hlt    
  0x000000011ba41624: hlt    
  0x000000011ba41625: hlt    
  0x000000011ba41626: hlt    
  0x000000011ba41627: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 260 
ImmutableOopMap{rsi=Oop }pc offsets: 298 308 
ImmutableOopMap{}pc offsets: 328 341 </print_nmethod>
<nmethod compile_id='22' compiler='c1' level='3' entry='0x000000011ba41a00' size='2248' address='0x000000011ba41810' relocation_offset='376' insts_offset='496' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1776' dependencies_offset='2224' nul_chk_table_offset='2232' metadata_offset='1544' method='java.lang.String charAt (I)C' bytes='25' count='737' iicount='737' stamp='0.115'/>
<print_nmethod stamp='0.115'>
Compiled method (c1)     114   22       3       java.lang.String::charAt (25 bytes)
 total in heap  [0x000000011ba41810,0x000000011ba420d8] = 2248
 relocation     [0x000000011ba41988,0x000000011ba419f8] = 112
 main code      [0x000000011ba41a00,0x000000011ba41d60] = 864
 stub code      [0x000000011ba41d60,0x000000011ba41e18] = 184
 metadata       [0x000000011ba41e18,0x000000011ba41e30] = 24
 scopes data    [0x000000011ba41e30,0x000000011ba41f00] = 208
 scopes pcs     [0x000000011ba41f00,0x000000011ba420c0] = 448
 dependencies   [0x000000011ba420c0,0x000000011ba420c8] = 8
 nul chk table  [0x000000011ba420c8,0x000000011ba420d8] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x000000011ba41a00, 0x000000011ba41e18]  1048 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011ba41a00: mov    0x8(%rsi),%r10d
  0x000000011ba41a04: movabs $0x800000000,%r12
  0x000000011ba41a0e: add    %r12,%r10
  0x000000011ba41a11: xor    %r12,%r12
  0x000000011ba41a14: cmp    %rax,%r10
  0x000000011ba41a17: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba41a1d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba41a20: mov    %eax,-0x14000(%rsp)
  0x000000011ba41a27: push   %rbp
  0x000000011ba41a28: sub    $0x50,%rsp
  0x000000011ba41a2c: mov    %rdx,%rdi
  0x000000011ba41a2f: movabs $0x13272c228,%rax  ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41a39: mov    0x104(%rax),%edx
  0x000000011ba41a3f: add    $0x8,%edx
  0x000000011ba41a42: mov    %edx,0x104(%rax)
  0x000000011ba41a48: and    $0x1ff8,%edx
  0x000000011ba41a4e: cmp    $0x0,%edx
  0x000000011ba41a51: je     0x000000011ba41c86  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0 (line 692)

  0x000000011ba41a57: mov    %rsi,%rax
  0x000000011ba41a5a: movabs $0x13272c228,%rdx  ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41a64: addq   $0x1,0x140(%rdx)
  0x000000011ba41a6c: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41a76: mov    0x104(%rax),%edx
  0x000000011ba41a7c: add    $0x8,%edx
  0x000000011ba41a7f: mov    %edx,0x104(%rax)
  0x000000011ba41a85: and    $0x7ffff8,%edx
  0x000000011ba41a8b: cmp    $0x0,%edx
  0x000000011ba41a8e: je     0x000000011ba41ca7
  0x000000011ba41a94: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41a9e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x000000011ba41aa4: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x000000011ba41aa8: cmp    $0x0,%eax
  0x000000011ba41aab: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41ab5: movabs $0x160,%rdx
  0x000000011ba41abf: jne    0x000000011ba41acf
  0x000000011ba41ac5: movabs $0x170,%rdx
  0x000000011ba41acf: mov    (%rax,%rdx,1),%rbx
  0x000000011ba41ad3: lea    0x1(%rbx),%rbx
  0x000000011ba41ad7: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba41adb: jne    0x000000011ba41afb  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x000000011ba41ae1: movabs $0x1326e4890,%rax  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41aeb: incl   0x180(%rax)
  0x000000011ba41af1: mov    $0x1,%eax
  0x000000011ba41af6: jmpq   0x000000011ba41b00  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x000000011ba41afb: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x000000011ba41b00: and    $0x1,%eax
  0x000000011ba41b03: cmp    $0x0,%eax
  0x000000011ba41b06: movabs $0x13272c228,%rax  ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41b10: movabs $0x178,%rdx
  0x000000011ba41b1a: je     0x000000011ba41b2a
  0x000000011ba41b20: movabs $0x188,%rdx
  0x000000011ba41b2a: mov    (%rax,%rdx,1),%rbx
  0x000000011ba41b2e: lea    0x1(%rbx),%rbx
  0x000000011ba41b32: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba41b36: je     0x000000011ba41c1b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4 (line 692)

  0x000000011ba41b3c: mov    0xc(%rsi),%eax
  0x000000011ba41b3f: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)

  0x000000011ba41b43: movabs $0x13272c228,%rsi  ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41b4d: addq   $0x1,0x198(%rsi)
  0x000000011ba41b55: movabs $0x13272c428,%rsi  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba41b5f: mov    0x104(%rsi),%edx
  0x000000011ba41b65: add    $0x8,%edx
  0x000000011ba41b68: mov    %edx,0x104(%rsi)
  0x000000011ba41b6e: and    $0x7ffff8,%edx
  0x000000011ba41b74: cmp    $0x0,%edx
  0x000000011ba41b77: je     0x000000011ba41cc8
  0x000000011ba41b7d: cmp    $0x0,%edi
  0x000000011ba41b80: movabs $0x13272c428,%rsi  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba41b8a: movabs $0x140,%rdx
  0x000000011ba41b94: jl     0x000000011ba41ba4
  0x000000011ba41b9a: movabs $0x150,%rdx
  0x000000011ba41ba4: mov    (%rsi,%rdx,1),%rbx
  0x000000011ba41ba8: lea    0x1(%rbx),%rbx
  0x000000011ba41bac: mov    %rbx,(%rsi,%rdx,1)
  0x000000011ba41bb0: jl     0x000000011ba41c42  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011ba41bb6: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; implicit exception: dispatches to 0x000000011ba41ce9
  0x000000011ba41bb9: cmp    %esi,%edi
  0x000000011ba41bbb: movabs $0x13272c428,%rsi  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba41bc5: movabs $0x170,%rdx
  0x000000011ba41bcf: jge    0x000000011ba41bdf
  0x000000011ba41bd5: movabs $0x160,%rdx
  0x000000011ba41bdf: mov    (%rsi,%rdx,1),%rbx
  0x000000011ba41be3: lea    0x1(%rbx),%rbx
  0x000000011ba41be7: mov    %rbx,(%rsi,%rdx,1)
  0x000000011ba41beb: jge    0x000000011ba41c42  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011ba41bf1: movslq %edi,%rdi
  0x000000011ba41bf4: movsbl 0x10(%rax,%rdi,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011ba41bf9: and    $0xff,%eax
  0x000000011ba41bff: and    $0xffff,%eax
  0x000000011ba41c05: and    $0xffff,%eax
  0x000000011ba41c0b: add    $0x50,%rsp
  0x000000011ba41c0f: pop    %rbp
  0x000000011ba41c10: mov    0x108(%r15),%r10
  0x000000011ba41c17: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba41c1a: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@15 (line 693)

  0x000000011ba41c1b: mov    0xc(%rsi),%esi
  0x000000011ba41c1e: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17 (line 695)

  0x000000011ba41c22: mov    %rdi,%rdx          ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)

  0x000000011ba41c25: xchg   %ax,%ax
  0x000000011ba41c27: callq  0x000000011b4d2400  ; ImmutableOopMap{}
                                                ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ;   {static_call}
  0x000000011ba41c2c: and    $0xffff,%eax
  0x000000011ba41c32: add    $0x50,%rsp
  0x000000011ba41c36: pop    %rbp
  0x000000011ba41c37: mov    0x108(%r15),%r10
  0x000000011ba41c3e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba41c41: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@24 (line 695)

  0x000000011ba41c42: nopw   0x0(%rax,%rax,1)
  0x000000011ba41c48: jmpq   0x000000011ba41cfd  ;   {no_reloc}
  0x000000011ba41c4d: add    %al,(%rax)
  0x000000011ba41c4f: add    %al,(%rax)
  0x000000011ba41c51: add    %ch,%cl
  0x000000011ba41c53: mov    $0x0,%al
  0x000000011ba41c55: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011ba41c57: mov    %rax,%rdx
  0x000000011ba41c5a: movabs $0x13272c428,%rsi  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba41c64: addq   $0x1,0x180(%rsi)
  0x000000011ba41c6c: mov    %rdi,%rdx
  0x000000011ba41c6f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011ba41c72: mov    %rax,0x38(%rsp)
  0x000000011ba41c77: callq  0x000000011b4d1f00  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {optimized virtual_call}
  0x000000011ba41c7c: mov    0x38(%rsp),%rax
  0x000000011ba41c81: jmpq   0x000000011ba41d3f
  0x000000011ba41c86: movabs $0x1324b04a8,%r10  ;   {metadata({method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41c90: mov    %r10,0x8(%rsp)
  0x000000011ba41c95: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba41c9d: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba41ca2: jmpq   0x000000011ba41a57
  0x000000011ba41ca7: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba41cb1: mov    %r10,0x8(%rsp)
  0x000000011ba41cb6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba41cbe: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba41cc3: jmpq   0x000000011ba41a94
  0x000000011ba41cc8: movabs $0x1326024e0,%r10  ;   {metadata({method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba41cd2: mov    %r10,0x8(%rsp)
  0x000000011ba41cd7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba41cdf: callq  0x000000011b59a600  ; ImmutableOopMap{rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba41ce4: jmpq   0x000000011ba41b7d
  0x000000011ba41ce9: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba41cee: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba41cf8: mov    $0xa050f00,%eax
  0x000000011ba41cfd: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba41d02: jmpq   0x000000011ba41c48
  0x000000011ba41d07: mov    %rdx,%rdx
  0x000000011ba41d0a: callq  0x000000011b596480  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba41d0f: jmpq   0x000000011ba41c57
  0x000000011ba41d14: nop
  0x000000011ba41d15: nop
  0x000000011ba41d16: mov    0x420(%r15),%rax
  0x000000011ba41d1d: movabs $0x0,%r10
  0x000000011ba41d27: mov    %r10,0x420(%r15)
  0x000000011ba41d2e: movabs $0x0,%r10
  0x000000011ba41d38: mov    %r10,0x428(%r15)
  0x000000011ba41d3f: add    $0x50,%rsp
  0x000000011ba41d43: pop    %rbp
  0x000000011ba41d44: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba41d49: hlt    
  0x000000011ba41d4a: hlt    
  0x000000011ba41d4b: hlt    
  0x000000011ba41d4c: hlt    
  0x000000011ba41d4d: hlt    
  0x000000011ba41d4e: hlt    
  0x000000011ba41d4f: hlt    
  0x000000011ba41d50: hlt    
  0x000000011ba41d51: hlt    
  0x000000011ba41d52: hlt    
  0x000000011ba41d53: hlt    
  0x000000011ba41d54: hlt    
  0x000000011ba41d55: hlt    
  0x000000011ba41d56: hlt    
  0x000000011ba41d57: hlt    
  0x000000011ba41d58: hlt    
  0x000000011ba41d59: hlt    
  0x000000011ba41d5a: hlt    
  0x000000011ba41d5b: hlt    
  0x000000011ba41d5c: hlt    
  0x000000011ba41d5d: hlt    
  0x000000011ba41d5e: hlt    
  0x000000011ba41d5f: hlt    
[Stub Code]
  0x000000011ba41d60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba41d65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba41d6f: jmpq   0x000000011ba41d6f  ;   {runtime_call}
  0x000000011ba41d74: nop
  0x000000011ba41d75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba41d7f: jmpq   0x000000011ba41d7f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba41d84: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba41d89: mov    %rsp,-0x28(%rsp)
  0x000000011ba41d8e: sub    $0x80,%rsp
  0x000000011ba41d95: mov    %rax,0x78(%rsp)
  0x000000011ba41d9a: mov    %rcx,0x70(%rsp)
  0x000000011ba41d9f: mov    %rdx,0x68(%rsp)
  0x000000011ba41da4: mov    %rbx,0x60(%rsp)
  0x000000011ba41da9: mov    %rbp,0x50(%rsp)
  0x000000011ba41dae: mov    %rsi,0x48(%rsp)
  0x000000011ba41db3: mov    %rdi,0x40(%rsp)
  0x000000011ba41db8: mov    %r8,0x38(%rsp)
  0x000000011ba41dbd: mov    %r9,0x30(%rsp)
  0x000000011ba41dc2: mov    %r10,0x28(%rsp)
  0x000000011ba41dc7: mov    %r11,0x20(%rsp)
  0x000000011ba41dcc: mov    %r12,0x18(%rsp)
  0x000000011ba41dd1: mov    %r13,0x10(%rsp)
  0x000000011ba41dd6: mov    %r14,0x8(%rsp)
  0x000000011ba41ddb: mov    %r15,(%rsp)
  0x000000011ba41ddf: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba41de9: movabs $0x11ba41d89,%rsi  ;   {internal_word}
  0x000000011ba41df3: mov    %rsp,%rdx
  0x000000011ba41df6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba41dfa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba41dff: hlt    
[Deopt Handler Code]
  0x000000011ba41e00: movabs $0x11ba41e00,%r10  ;   {section_word}
  0x000000011ba41e0a: push   %r10
  0x000000011ba41e0c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba41e11: hlt    
  0x000000011ba41e12: hlt    
  0x000000011ba41e13: hlt    
  0x000000011ba41e14: hlt    
  0x000000011ba41e15: hlt    
  0x000000011ba41e16: hlt    
  0x000000011ba41e17: hlt    

ImmutableOopMap{}pc offsets: 556 
ImmutableOopMap{[56]=Oop }pc offsets: 636 
ImmutableOopMap{rsi=Oop }pc offsets: 674 707 
ImmutableOopMap{rax=Oop }pc offsets: 740 750 
ImmutableOopMap{}pc offsets: 770 783 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='26' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f73f20' size='440' address='0x0000000122f73d90' relocation_offset='376' consts_offset='440' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.120'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f73f20, 0x0000000122f73f48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001327bf900} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x0000000122f73f20: mov    0x8(%rsp),%rbx
  0x0000000122f73f25: mov    0x24(%rbx),%ebx
  0x0000000122f73f28: shl    $0x3,%rbx
  0x0000000122f73f2c: mov    0x10(%rbx),%rbx
  0x0000000122f73f30: test   %rbx,%rbx
  0x0000000122f73f33: je     0x0000000122f73f3c
  0x0000000122f73f39: jmpq   *0x38(%rbx)
  0x0000000122f73f3c: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f73f41: hlt    
  0x0000000122f73f42: hlt    
  0x0000000122f73f43: hlt    
  0x0000000122f73f44: hlt    
  0x0000000122f73f45: hlt    
  0x0000000122f73f46: hlt    
  0x0000000122f73f47: hlt    
<writer thread='15875'/>
<nmethod compile_id='24' compiler='c1' level='3' entry='0x000000011ba422c0' size='1056' address='0x000000011ba42110' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='872' scopes_pcs_offset='920' dependencies_offset='1048' metadata_offset='864' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='654' iicount='654' stamp='0.121'/>
<print_nmethod stamp='0.121'>
Compiled method (c1)     120   24       3       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
 total in heap  [0x000000011ba42110,0x000000011ba42530] = 1056
 relocation     [0x000000011ba42288,0x000000011ba422b8] = 48
 main code      [0x000000011ba422c0,0x000000011ba423e0] = 288
 stub code      [0x000000011ba423e0,0x000000011ba42470] = 144
 metadata       [0x000000011ba42470,0x000000011ba42478] = 8
 scopes data    [0x000000011ba42478,0x000000011ba424a8] = 48
 scopes pcs     [0x000000011ba424a8,0x000000011ba42528] = 128
 dependencies   [0x000000011ba42528,0x000000011ba42530] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.hasNext()Z  [0x000000011ba422c0, 0x000000011ba42470]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba422c0: mov    0x8(%rsi),%r10d
  0x000000011ba422c4: movabs $0x800000000,%r12
  0x000000011ba422ce: add    %r12,%r10
  0x000000011ba422d1: xor    %r12,%r12
  0x000000011ba422d4: cmp    %rax,%r10
  0x000000011ba422d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba422dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba422e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba422e7: push   %rbp
  0x000000011ba422e8: sub    $0x30,%rsp
  0x000000011ba422ec: movabs $0x132739080,%rax  ;   {metadata(method data for {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba422f6: mov    0x104(%rax),%edi
  0x000000011ba422fc: add    $0x8,%edi
  0x000000011ba422ff: mov    %edi,0x104(%rax)
  0x000000011ba42305: and    $0x1ff8,%edi
  0x000000011ba4230b: cmp    $0x0,%edi
  0x000000011ba4230e: je     0x000000011ba42382  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@0 (line 620)

  0x000000011ba42314: mov    0xc(%rsi),%eax     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 620)

  0x000000011ba42317: cmp    $0x0,%eax
  0x000000011ba4231a: movabs $0x132739080,%rax  ;   {metadata(method data for {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba42324: movabs $0x140,%rsi
  0x000000011ba4232e: jle    0x000000011ba4233e
  0x000000011ba42334: movabs $0x150,%rsi
  0x000000011ba4233e: mov    (%rax,%rsi,1),%rdi
  0x000000011ba42342: lea    0x1(%rdi),%rdi
  0x000000011ba42346: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba4234a: jle    0x000000011ba4236a  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 620)

  0x000000011ba42350: movabs $0x132739080,%rax  ;   {metadata(method data for {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4235a: incl   0x160(%rax)
  0x000000011ba42360: mov    $0x1,%eax
  0x000000011ba42365: jmpq   0x000000011ba4236f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@8 (line 620)

  0x000000011ba4236a: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 620)

  0x000000011ba4236f: and    $0x1,%eax
  0x000000011ba42372: add    $0x30,%rsp
  0x000000011ba42376: pop    %rbp
  0x000000011ba42377: mov    0x108(%r15),%r10
  0x000000011ba4237e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba42381: retq   
  0x000000011ba42382: movabs $0x132737bb8,%r10  ;   {metadata({method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4238c: mov    %r10,0x8(%rsp)
  0x000000011ba42391: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba42399: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 620)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4239e: jmpq   0x000000011ba42314
  0x000000011ba423a3: nop
  0x000000011ba423a4: nop
  0x000000011ba423a5: mov    0x420(%r15),%rax
  0x000000011ba423ac: movabs $0x0,%r10
  0x000000011ba423b6: mov    %r10,0x420(%r15)
  0x000000011ba423bd: movabs $0x0,%r10
  0x000000011ba423c7: mov    %r10,0x428(%r15)
  0x000000011ba423ce: add    $0x30,%rsp
  0x000000011ba423d2: pop    %rbp
  0x000000011ba423d3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba423d8: hlt    
  0x000000011ba423d9: hlt    
  0x000000011ba423da: hlt    
  0x000000011ba423db: hlt    
  0x000000011ba423dc: hlt    
  0x000000011ba423dd: hlt    
  0x000000011ba423de: hlt    
  0x000000011ba423df: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba423e0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba423e5: mov    %rsp,-0x28(%rsp)
  0x000000011ba423ea: sub    $0x80,%rsp
  0x000000011ba423f1: mov    %rax,0x78(%rsp)
  0x000000011ba423f6: mov    %rcx,0x70(%rsp)
  0x000000011ba423fb: mov    %rdx,0x68(%rsp)
  0x000000011ba42400: mov    %rbx,0x60(%rsp)
  0x000000011ba42405: mov    %rbp,0x50(%rsp)
  0x000000011ba4240a: mov    %rsi,0x48(%rsp)
  0x000000011ba4240f: mov    %rdi,0x40(%rsp)
  0x000000011ba42414: mov    %r8,0x38(%rsp)
  0x000000011ba42419: mov    %r9,0x30(%rsp)
  0x000000011ba4241e: mov    %r10,0x28(%rsp)
  0x000000011ba42423: mov    %r11,0x20(%rsp)
  0x000000011ba42428: mov    %r12,0x18(%rsp)
  0x000000011ba4242d: mov    %r13,0x10(%rsp)
  0x000000011ba42432: mov    %r14,0x8(%rsp)
  0x000000011ba42437: mov    %r15,(%rsp)
  0x000000011ba4243b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba42445: movabs $0x11ba423e5,%rsi  ;   {internal_word}
  0x000000011ba4244f: mov    %rsp,%rdx
  0x000000011ba42452: and    $0xfffffffffffffff0,%rsp
  0x000000011ba42456: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4245b: hlt    
[Deopt Handler Code]
  0x000000011ba4245c: movabs $0x11ba4245c,%r10  ;   {section_word}
  0x000000011ba42466: push   %r10
  0x000000011ba42468: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4246d: hlt    
  0x000000011ba4246e: hlt    
  0x000000011ba4246f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 222 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='27' method='java.lang.Enum ordinal ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.123' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='25' compiler='c1' level='3' entry='0x000000011ba42740' size='1248' address='0x000000011ba42590' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='992' dependencies_offset='1216' nul_chk_table_offset='1224' metadata_offset='896' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='640' iicount='640' stamp='0.123'/>
<print_nmethod stamp='0.123'>
Compiled method (c1)     122   25       3       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)
 total in heap  [0x000000011ba42590,0x000000011ba42a70] = 1248
 relocation     [0x000000011ba42708,0x000000011ba42740] = 56
 main code      [0x000000011ba42740,0x000000011ba42880] = 320
 stub code      [0x000000011ba42880,0x000000011ba42910] = 144
 metadata       [0x000000011ba42910,0x000000011ba42918] = 8
 scopes data    [0x000000011ba42918,0x000000011ba42970] = 88
 scopes pcs     [0x000000011ba42970,0x000000011ba42a50] = 224
 dependencies   [0x000000011ba42a50,0x000000011ba42a58] = 8
 nul chk table  [0x000000011ba42a58,0x000000011ba42a70] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.nextIndex()I  [0x000000011ba42740, 0x000000011ba42910]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba42740: mov    0x8(%rsi),%r10d
  0x000000011ba42744: movabs $0x800000000,%r12
  0x000000011ba4274e: add    %r12,%r10
  0x000000011ba42751: xor    %r12,%r12
  0x000000011ba42754: cmp    %rax,%r10
  0x000000011ba42757: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4275d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba42760: mov    %eax,-0x14000(%rsp)
  0x000000011ba42767: push   %rbp
  0x000000011ba42768: sub    $0x30,%rsp
  0x000000011ba4276c: movabs $0x132739220,%rax  ;   {metadata(method data for {method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba42776: mov    0x104(%rax),%edi
  0x000000011ba4277c: add    $0x8,%edi
  0x000000011ba4277f: mov    %edi,0x104(%rax)
  0x000000011ba42785: and    $0x1ff8,%edi
  0x000000011ba4278b: cmp    $0x0,%edi
  0x000000011ba4278e: je     0x000000011ba4281a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@0 (line 624)

  0x000000011ba42794: mov    0x10(%rsi),%eax    ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@1 (line 624)

  0x000000011ba42797: movabs $0x132739220,%rdi  ;   {metadata(method data for {method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba427a1: incl   0x150(%rdi)        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@8 (line 625)

  0x000000011ba427a7: inc    %eax
  0x000000011ba427a9: mov    0x14(%rsi),%edi
  0x000000011ba427ac: shl    $0x3,%rdi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@16 (line 626)

  0x000000011ba427b0: mov    0x10(%rdi),%edi    ; implicit exception: dispatches to 0x000000011ba4283b
  0x000000011ba427b3: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@19 (line 626)

  0x000000011ba427b7: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)
                                                ; implicit exception: dispatches to 0x000000011ba42840
  0x000000011ba427ba: cmp    %edi,%eax
  0x000000011ba427bc: movabs $0x132739220,%rdi  ;   {metadata(method data for {method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba427c6: movabs $0x160,%rbx
  0x000000011ba427d0: jl     0x000000011ba427e0
  0x000000011ba427d6: movabs $0x170,%rbx
  0x000000011ba427e0: mov    (%rdi,%rbx,1),%rdx
  0x000000011ba427e4: lea    0x1(%rdx),%rdx
  0x000000011ba427e8: mov    %rdx,(%rdi,%rbx,1)
  0x000000011ba427ec: jl     0x000000011ba42807  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@23 (line 626)

  0x000000011ba427f2: movabs $0x132739220,%rax  ;   {metadata(method data for {method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba427fc: incl   0x180(%rax)
  0x000000011ba42802: mov    $0x0,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@28 (line 627)

  0x000000011ba42807: mov    %eax,0x10(%rsi)    ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@52 (line 634)

  0x000000011ba4280a: add    $0x30,%rsp
  0x000000011ba4280e: pop    %rbp
  0x000000011ba4280f: mov    0x108(%r15),%r10
  0x000000011ba42816: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba42819: retq   
  0x000000011ba4281a: movabs $0x132737ca8,%r10  ;   {metadata({method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba42824: mov    %r10,0x8(%rsp)
  0x000000011ba42829: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba42831: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@-1 (line 624)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba42836: jmpq   0x000000011ba42794
  0x000000011ba4283b: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@19 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba42840: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba42845: nop
  0x000000011ba42846: nop
  0x000000011ba42847: mov    0x420(%r15),%rax
  0x000000011ba4284e: movabs $0x0,%r10
  0x000000011ba42858: mov    %r10,0x420(%r15)
  0x000000011ba4285f: movabs $0x0,%r10
  0x000000011ba42869: mov    %r10,0x428(%r15)
  0x000000011ba42870: add    $0x30,%rsp
  0x000000011ba42874: pop    %rbp
  0x000000011ba42875: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4287a: hlt    
  0x000000011ba4287b: hlt    
  0x000000011ba4287c: hlt    
  0x000000011ba4287d: hlt    
  0x000000011ba4287e: hlt    
  0x000000011ba4287f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba42880: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba42885: mov    %rsp,-0x28(%rsp)
  0x000000011ba4288a: sub    $0x80,%rsp
  0x000000011ba42891: mov    %rax,0x78(%rsp)
  0x000000011ba42896: mov    %rcx,0x70(%rsp)
  0x000000011ba4289b: mov    %rdx,0x68(%rsp)
  0x000000011ba428a0: mov    %rbx,0x60(%rsp)
  0x000000011ba428a5: mov    %rbp,0x50(%rsp)
  0x000000011ba428aa: mov    %rsi,0x48(%rsp)
  0x000000011ba428af: mov    %rdi,0x40(%rsp)
  0x000000011ba428b4: mov    %r8,0x38(%rsp)
  0x000000011ba428b9: mov    %r9,0x30(%rsp)
  0x000000011ba428be: mov    %r10,0x28(%rsp)
  0x000000011ba428c3: mov    %r11,0x20(%rsp)
  0x000000011ba428c8: mov    %r12,0x18(%rsp)
  0x000000011ba428cd: mov    %r13,0x10(%rsp)
  0x000000011ba428d2: mov    %r14,0x8(%rsp)
  0x000000011ba428d7: mov    %r15,(%rsp)
  0x000000011ba428db: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba428e5: movabs $0x11ba42885,%rsi  ;   {internal_word}
  0x000000011ba428ef: mov    %rsp,%rdx
  0x000000011ba428f2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba428f6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba428fb: hlt    
[Deopt Handler Code]
  0x000000011ba428fc: movabs $0x11ba428fc,%r10  ;   {section_word}
  0x000000011ba42906: push   %r10
  0x000000011ba42908: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4290d: hlt    
  0x000000011ba4290e: hlt    
  0x000000011ba4290f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 246 256 261 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='28' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f74120' size='432' address='0x0000000122f73f90' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.125'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000122f74120, 0x0000000122f74140]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001327dbfa8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f74120: mov    0x24(%rdx),%ebx
  0x0000000122f74123: shl    $0x3,%rbx
  0x0000000122f74127: mov    0x10(%rbx),%rbx
  0x0000000122f7412b: test   %rbx,%rbx
  0x0000000122f7412e: je     0x0000000122f74137
  0x0000000122f74134: jmpq   *0x38(%rbx)
  0x0000000122f74137: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f7413c: hlt    
  0x0000000122f7413d: hlt    
  0x0000000122f7413e: hlt    
  0x0000000122f7413f: hlt    
<writer thread='15875'/>
<nmethod compile_id='2' compiler='c1' level='3' entry='0x000000011ba42c40' size='968' address='0x000000011ba42a90' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='872' scopes_pcs_offset='896' dependencies_offset='960' metadata_offset='864' method='jdk.internal.misc.Unsafe getObjectAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='466' iicount='466' stamp='0.126'/>
<print_nmethod stamp='0.126'>
Compiled method (c1)     125    2       3       jdk.internal.misc.Unsafe::getObjectAcquire (7 bytes)
 total in heap  [0x000000011ba42a90,0x000000011ba42e58] = 968
 relocation     [0x000000011ba42c08,0x000000011ba42c38] = 48
 main code      [0x000000011ba42c40,0x000000011ba42d60] = 288
 stub code      [0x000000011ba42d60,0x000000011ba42df0] = 144
 metadata       [0x000000011ba42df0,0x000000011ba42df8] = 8
 scopes data    [0x000000011ba42df8,0x000000011ba42e10] = 24
 scopes pcs     [0x000000011ba42e10,0x000000011ba42e50] = 64
 dependencies   [0x000000011ba42e50,0x000000011ba42e58] = 8
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectAcquire(Ljava/lang/Object;J)Ljava/lang/Object;  [0x000000011ba42c40, 0x000000011ba42df0]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x000000011ba42c40: mov    0x8(%rsi),%r10d
  0x000000011ba42c44: movabs $0x800000000,%r12
  0x000000011ba42c4e: add    %r12,%r10
  0x000000011ba42c51: xor    %r12,%r12
  0x000000011ba42c54: cmp    %rax,%r10
  0x000000011ba42c57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba42c5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba42c60: mov    %eax,-0x14000(%rsp)
  0x000000011ba42c67: push   %rbp
  0x000000011ba42c68: sub    $0x30,%rsp
  0x000000011ba42c6c: movabs $0x1326b8cb8,%rax  ;   {metadata(method data for {method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba42c76: mov    0x104(%rax),%edi
  0x000000011ba42c7c: add    $0x8,%edi
  0x000000011ba42c7f: mov    %edi,0x104(%rax)
  0x000000011ba42c85: and    $0x1ff8,%edi
  0x000000011ba42c8b: cmp    $0x0,%edi
  0x000000011ba42c8e: je     0x000000011ba42cf9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@0 (line 2042)

  0x000000011ba42c94: mov    (%rdx,%rcx,1),%eax
  0x000000011ba42c97: shl    $0x3,%rax
  0x000000011ba42c9b: movabs $0xc,%rsi
  0x000000011ba42ca5: cmp    %rsi,%rcx
  0x000000011ba42ca8: jne    0x000000011ba42ce9
  0x000000011ba42cae: cmp    $0x0,%rdx
  0x000000011ba42cb2: je     0x000000011ba42ce9
  0x000000011ba42cb8: mov    0x8(%rdx),%esi
  0x000000011ba42cbb: movabs $0x800000000,%r12
  0x000000011ba42cc5: add    %r12,%rsi
  0x000000011ba42cc8: xor    %r12,%r12
  0x000000011ba42ccb: movsbl 0x18b(%rsi),%esi
  0x000000011ba42cd2: cmp    $0x0,%esi
  0x000000011ba42cd5: je     0x000000011ba42ce9
  0x000000011ba42cdb: movsbl 0x30(%r15),%esi
  0x000000011ba42ce0: cmp    $0x0,%esi
  0x000000011ba42ce3: jne    0x000000011ba42d1a
  0x000000011ba42ce9: add    $0x30,%rsp
  0x000000011ba42ced: pop    %rbp
  0x000000011ba42cee: mov    0x108(%r15),%r10
  0x000000011ba42cf5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba42cf8: retq   
  0x000000011ba42cf9: movabs $0x132564948,%r10  ;   {metadata({method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba42d03: mov    %r10,0x8(%rsp)
  0x000000011ba42d08: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba42d10: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba42d15: jmpq   0x000000011ba42c94
  0x000000011ba42d1a: cmp    $0x0,%rax
  0x000000011ba42d1e: je     0x000000011ba42ce9
  0x000000011ba42d20: mov    %rax,(%rsp)
  0x000000011ba42d24: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba42d29: jmp    0x000000011ba42ce9
  0x000000011ba42d2b: nop
  0x000000011ba42d2c: nop
  0x000000011ba42d2d: mov    0x420(%r15),%rax
  0x000000011ba42d34: movabs $0x0,%r10
  0x000000011ba42d3e: mov    %r10,0x420(%r15)
  0x000000011ba42d45: movabs $0x0,%r10
  0x000000011ba42d4f: mov    %r10,0x428(%r15)
  0x000000011ba42d56: add    $0x30,%rsp
  0x000000011ba42d5a: pop    %rbp
  0x000000011ba42d5b: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x000000011ba42d60: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba42d65: mov    %rsp,-0x28(%rsp)
  0x000000011ba42d6a: sub    $0x80,%rsp
  0x000000011ba42d71: mov    %rax,0x78(%rsp)
  0x000000011ba42d76: mov    %rcx,0x70(%rsp)
  0x000000011ba42d7b: mov    %rdx,0x68(%rsp)
  0x000000011ba42d80: mov    %rbx,0x60(%rsp)
  0x000000011ba42d85: mov    %rbp,0x50(%rsp)
  0x000000011ba42d8a: mov    %rsi,0x48(%rsp)
  0x000000011ba42d8f: mov    %rdi,0x40(%rsp)
  0x000000011ba42d94: mov    %r8,0x38(%rsp)
  0x000000011ba42d99: mov    %r9,0x30(%rsp)
  0x000000011ba42d9e: mov    %r10,0x28(%rsp)
  0x000000011ba42da3: mov    %r11,0x20(%rsp)
  0x000000011ba42da8: mov    %r12,0x18(%rsp)
  0x000000011ba42dad: mov    %r13,0x10(%rsp)
  0x000000011ba42db2: mov    %r14,0x8(%rsp)
  0x000000011ba42db7: mov    %r15,(%rsp)
  0x000000011ba42dbb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba42dc5: movabs $0x11ba42d65,%rsi  ;   {internal_word}
  0x000000011ba42dcf: mov    %rsp,%rdx
  0x000000011ba42dd2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba42dd6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba42ddb: hlt    
[Deopt Handler Code]
  0x000000011ba42ddc: movabs $0x11ba42ddc,%r10  ;   {section_word}
  0x000000011ba42de6: push   %r10
  0x000000011ba42de8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba42ded: hlt    
  0x000000011ba42dee: hlt    
  0x000000011ba42def: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 213 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='29' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f74320' size='448' address='0x0000000122f74190' relocation_offset='376' consts_offset='448' insts_offset='400' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.128'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000122f74320, 0x0000000122f74350]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001327e5858} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x0000000122f74320: mov    0x14(%rsi),%ebx
  0x0000000122f74323: shl    $0x3,%rbx
  0x0000000122f74327: mov    0x28(%rbx),%ebx
  0x0000000122f7432a: shl    $0x3,%rbx
  0x0000000122f7432e: mov    0x24(%rbx),%ebx
  0x0000000122f74331: shl    $0x3,%rbx
  0x0000000122f74335: mov    0x10(%rbx),%rbx
  0x0000000122f74339: test   %rbx,%rbx
  0x0000000122f7433c: je     0x0000000122f74345
  0x0000000122f74342: jmpq   *0x38(%rbx)
  0x0000000122f74345: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f7434a: hlt    
  0x0000000122f7434b: hlt    
  0x0000000122f7434c: hlt    
  0x0000000122f7434d: hlt    
  0x0000000122f7434e: hlt    
  0x0000000122f7434f: hlt    
<writer thread='15875'/>
<nmethod compile_id='27' compiler='c1' level='1' entry='0x0000000122f74540' size='800' address='0x0000000122f74390' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.Enum ordinal ()I' bytes='5' count='176' iicount='176' stamp='0.129'/>
<print_nmethod stamp='0.129'>
Compiled method (c1)     129   27       1       java.lang.Enum::ordinal (5 bytes)
 total in heap  [0x0000000122f74390,0x0000000122f746b0] = 800
 relocation     [0x0000000122f74508,0x0000000122f74530] = 40
 main code      [0x0000000122f74540,0x0000000122f745c0] = 128
 stub code      [0x0000000122f745c0,0x0000000122f74650] = 144
 metadata       [0x0000000122f74650,0x0000000122f74658] = 8
 scopes data    [0x0000000122f74658,0x0000000122f74668] = 16
 scopes pcs     [0x0000000122f74668,0x0000000122f746a8] = 64
 dependencies   [0x0000000122f746a8,0x0000000122f746b0] = 8
----------------------------------------------------------------------
java/lang/Enum.ordinal()I  [0x0000000122f74540, 0x0000000122f74650]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326e7458} &apos;ordinal&apos; &apos;()I&apos; in &apos;java/lang/Enum&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f74540: mov    0x8(%rsi),%r10d
  0x0000000122f74544: movabs $0x800000000,%r12
  0x0000000122f7454e: add    %r12,%r10
  0x0000000122f74551: xor    %r12,%r12
  0x0000000122f74554: cmp    %rax,%r10
  0x0000000122f74557: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7455d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f74560: mov    %eax,-0x14000(%rsp)
  0x0000000122f74567: push   %rbp
  0x0000000122f74568: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@0 (line 105)

  0x0000000122f7456c: mov    0xc(%rsi),%eax     ;*getfield ordinal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@1 (line 105)

  0x0000000122f7456f: add    $0x30,%rsp
  0x0000000122f74573: pop    %rbp
  0x0000000122f74574: mov    0x108(%r15),%r10
  0x0000000122f7457b: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7457e: retq   
  0x0000000122f7457f: nop
  0x0000000122f74580: nop
  0x0000000122f74581: mov    0x420(%r15),%rax
  0x0000000122f74588: movabs $0x0,%r10
  0x0000000122f74592: mov    %r10,0x420(%r15)
  0x0000000122f74599: movabs $0x0,%r10
  0x0000000122f745a3: mov    %r10,0x428(%r15)
  0x0000000122f745aa: add    $0x30,%rsp
  0x0000000122f745ae: pop    %rbp
  0x0000000122f745af: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f745b4: hlt    
  0x0000000122f745b5: hlt    
  0x0000000122f745b6: hlt    
  0x0000000122f745b7: hlt    
  0x0000000122f745b8: hlt    
  0x0000000122f745b9: hlt    
  0x0000000122f745ba: hlt    
  0x0000000122f745bb: hlt    
  0x0000000122f745bc: hlt    
  0x0000000122f745bd: hlt    
  0x0000000122f745be: hlt    
  0x0000000122f745bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f745c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f745c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f745ca: sub    $0x80,%rsp
  0x0000000122f745d1: mov    %rax,0x78(%rsp)
  0x0000000122f745d6: mov    %rcx,0x70(%rsp)
  0x0000000122f745db: mov    %rdx,0x68(%rsp)
  0x0000000122f745e0: mov    %rbx,0x60(%rsp)
  0x0000000122f745e5: mov    %rbp,0x50(%rsp)
  0x0000000122f745ea: mov    %rsi,0x48(%rsp)
  0x0000000122f745ef: mov    %rdi,0x40(%rsp)
  0x0000000122f745f4: mov    %r8,0x38(%rsp)
  0x0000000122f745f9: mov    %r9,0x30(%rsp)
  0x0000000122f745fe: mov    %r10,0x28(%rsp)
  0x0000000122f74603: mov    %r11,0x20(%rsp)
  0x0000000122f74608: mov    %r12,0x18(%rsp)
  0x0000000122f7460d: mov    %r13,0x10(%rsp)
  0x0000000122f74612: mov    %r14,0x8(%rsp)
  0x0000000122f74617: mov    %r15,(%rsp)
  0x0000000122f7461b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f74625: movabs $0x122f745c5,%rsi  ;   {internal_word}
  0x0000000122f7462f: mov    %rsp,%rdx
  0x0000000122f74632: and    $0xfffffffffffffff0,%rsp
  0x0000000122f74636: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7463b: hlt    
[Deopt Handler Code]
  0x0000000122f7463c: movabs $0x122f7463c,%r10  ;   {section_word}
  0x0000000122f74646: push   %r10
  0x0000000122f74648: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7464d: hlt    
  0x0000000122f7464e: hlt    
  0x0000000122f7464f: hlt    
</print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='30' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f748a0' size='440' address='0x0000000122f74710' relocation_offset='376' consts_offset='440' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.131'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f748a0, 0x0000000122f748c8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001327e5a10} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000122f748a0: mov    0x10(%rsp),%rbx
  0x0000000122f748a5: cmp    (%rsi),%rax
  0x0000000122f748a8: mov    0x24(%rbx),%ebx
  0x0000000122f748ab: shl    $0x3,%rbx
  0x0000000122f748af: mov    0x10(%rbx),%rbx
  0x0000000122f748b3: test   %rbx,%rbx
  0x0000000122f748b6: je     0x0000000122f748bf
  0x0000000122f748bc: jmpq   *0x38(%rbx)
  0x0000000122f748bf: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f748c4: hlt    
  0x0000000122f748c5: hlt    
  0x0000000122f748c6: hlt    
  0x0000000122f748c7: hlt    
<writer thread='15875'/>
<nmethod compile_id='21' compiler='c1' level='1' entry='0x0000000122f74ac0' size='800' address='0x0000000122f74910' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleReference descriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='185' iicount='185' stamp='0.131'/>
<print_nmethod stamp='0.131'>
Compiled method (c1)     131   21       1       java.lang.module.ModuleReference::descriptor (5 bytes)
 total in heap  [0x0000000122f74910,0x0000000122f74c30] = 800
 relocation     [0x0000000122f74a88,0x0000000122f74ab0] = 40
 main code      [0x0000000122f74ac0,0x0000000122f74b40] = 128
 stub code      [0x0000000122f74b40,0x0000000122f74bd0] = 144
 metadata       [0x0000000122f74bd0,0x0000000122f74bd8] = 8
 scopes data    [0x0000000122f74bd8,0x0000000122f74be8] = 16
 scopes pcs     [0x0000000122f74be8,0x0000000122f74c28] = 64
 dependencies   [0x0000000122f74c28,0x0000000122f74c30] = 8
----------------------------------------------------------------------
java/lang/module/ModuleReference.descriptor()Ljava/lang/module/ModuleDescriptor;  [0x0000000122f74ac0, 0x0000000122f74bd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326f3990} &apos;descriptor&apos; &apos;()Ljava/lang/module/ModuleDescriptor;&apos; in &apos;java/lang/module/ModuleReference&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f74ac0: mov    0x8(%rsi),%r10d
  0x0000000122f74ac4: movabs $0x800000000,%r12
  0x0000000122f74ace: add    %r12,%r10
  0x0000000122f74ad1: xor    %r12,%r12
  0x0000000122f74ad4: cmp    %rax,%r10
  0x0000000122f74ad7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f74add: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f74ae0: mov    %eax,-0x14000(%rsp)
  0x0000000122f74ae7: push   %rbp
  0x0000000122f74ae8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleReference::descriptor@0 (line 74)

  0x0000000122f74aec: mov    0xc(%rsi),%eax
  0x0000000122f74aef: shl    $0x3,%rax          ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleReference::descriptor@1 (line 74)

  0x0000000122f74af3: add    $0x30,%rsp
  0x0000000122f74af7: pop    %rbp
  0x0000000122f74af8: mov    0x108(%r15),%r10
  0x0000000122f74aff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f74b02: retq   
  0x0000000122f74b03: nop
  0x0000000122f74b04: nop
  0x0000000122f74b05: mov    0x420(%r15),%rax
  0x0000000122f74b0c: movabs $0x0,%r10
  0x0000000122f74b16: mov    %r10,0x420(%r15)
  0x0000000122f74b1d: movabs $0x0,%r10
  0x0000000122f74b27: mov    %r10,0x428(%r15)
  0x0000000122f74b2e: add    $0x30,%rsp
  0x0000000122f74b32: pop    %rbp
  0x0000000122f74b33: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f74b38: hlt    
  0x0000000122f74b39: hlt    
  0x0000000122f74b3a: hlt    
  0x0000000122f74b3b: hlt    
  0x0000000122f74b3c: hlt    
  0x0000000122f74b3d: hlt    
  0x0000000122f74b3e: hlt    
  0x0000000122f74b3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f74b40: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f74b45: mov    %rsp,-0x28(%rsp)
  0x0000000122f74b4a: sub    $0x80,%rsp
  0x0000000122f74b51: mov    %rax,0x78(%rsp)
  0x0000000122f74b56: mov    %rcx,0x70(%rsp)
  0x0000000122f74b5b: mov    %rdx,0x68(%rsp)
  0x0000000122f74b60: mov    %rbx,0x60(%rsp)
  0x0000000122f74b65: mov    %rbp,0x50(%rsp)
  0x0000000122f74b6a: mov    %rsi,0x48(%rsp)
  0x0000000122f74b6f: mov    %rdi,0x40(%rsp)
  0x0000000122f74b74: mov    %r8,0x38(%rsp)
  0x0000000122f74b79: mov    %r9,0x30(%rsp)
  0x0000000122f74b7e: mov    %r10,0x28(%rsp)
  0x0000000122f74b83: mov    %r11,0x20(%rsp)
  0x0000000122f74b88: mov    %r12,0x18(%rsp)
  0x0000000122f74b8d: mov    %r13,0x10(%rsp)
  0x0000000122f74b92: mov    %r14,0x8(%rsp)
  0x0000000122f74b97: mov    %r15,(%rsp)
  0x0000000122f74b9b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f74ba5: movabs $0x122f74b45,%rsi  ;   {internal_word}
  0x0000000122f74baf: mov    %rsp,%rdx
  0x0000000122f74bb2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f74bb6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f74bbb: hlt    
[Deopt Handler Code]
  0x0000000122f74bbc: movabs $0x122f74bbc,%r10  ;   {section_word}
  0x0000000122f74bc6: push   %r10
  0x0000000122f74bc8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f74bcd: hlt    
  0x0000000122f74bce: hlt    
  0x0000000122f74bcf: hlt    
</print_nmethod>
<nmethod compile_id='20' compiler='c1' level='1' entry='0x0000000122f74e40' size='800' address='0x0000000122f74c90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor name ()Ljava/lang/String;' bytes='5' count='212' iicount='212' stamp='0.133'/>
<print_nmethod stamp='0.133'>
Compiled method (c1)     132   20       1       java.lang.module.ModuleDescriptor::name (5 bytes)
 total in heap  [0x0000000122f74c90,0x0000000122f74fb0] = 800
 relocation     [0x0000000122f74e08,0x0000000122f74e30] = 40
 main code      [0x0000000122f74e40,0x0000000122f74ec0] = 128
 stub code      [0x0000000122f74ec0,0x0000000122f74f50] = 144
 metadata       [0x0000000122f74f50,0x0000000122f74f58] = 8
 scopes data    [0x0000000122f74f58,0x0000000122f74f68] = 16
 scopes pcs     [0x0000000122f74f68,0x0000000122f74fa8] = 64
 dependencies   [0x0000000122f74fa8,0x0000000122f74fb0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.name()Ljava/lang/String;  [0x0000000122f74e40, 0x0000000122f74f50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132697c38} &apos;name&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f74e40: mov    0x8(%rsi),%r10d
  0x0000000122f74e44: movabs $0x800000000,%r12
  0x0000000122f74e4e: add    %r12,%r10
  0x0000000122f74e51: xor    %r12,%r12
  0x0000000122f74e54: cmp    %rax,%r10
  0x0000000122f74e57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f74e5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f74e60: mov    %eax,-0x14000(%rsp)
  0x0000000122f74e67: push   %rbp
  0x0000000122f74e68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::name@0 (line 1320)

  0x0000000122f74e6c: mov    0x14(%rsi),%eax
  0x0000000122f74e6f: shl    $0x3,%rax          ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::name@1 (line 1320)

  0x0000000122f74e73: add    $0x30,%rsp
  0x0000000122f74e77: pop    %rbp
  0x0000000122f74e78: mov    0x108(%r15),%r10
  0x0000000122f74e7f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f74e82: retq   
  0x0000000122f74e83: nop
  0x0000000122f74e84: nop
  0x0000000122f74e85: mov    0x420(%r15),%rax
  0x0000000122f74e8c: movabs $0x0,%r10
  0x0000000122f74e96: mov    %r10,0x420(%r15)
  0x0000000122f74e9d: movabs $0x0,%r10
  0x0000000122f74ea7: mov    %r10,0x428(%r15)
  0x0000000122f74eae: add    $0x30,%rsp
  0x0000000122f74eb2: pop    %rbp
  0x0000000122f74eb3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f74eb8: hlt    
  0x0000000122f74eb9: hlt    
  0x0000000122f74eba: hlt    
  0x0000000122f74ebb: hlt    
  0x0000000122f74ebc: hlt    
  0x0000000122f74ebd: hlt    
  0x0000000122f74ebe: hlt    
  0x0000000122f74ebf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f74ec0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f74ec5: mov    %rsp,-0x28(%rsp)
  0x0000000122f74eca: sub    $0x80,%rsp
  0x0000000122f74ed1: mov    %rax,0x78(%rsp)
  0x0000000122f74ed6: mov    %rcx,0x70(%rsp)
  0x0000000122f74edb: mov    %rdx,0x68(%rsp)
  0x0000000122f74ee0: mov    %rbx,0x60(%rsp)
  0x0000000122f74ee5: mov    %rbp,0x50(%rsp)
  0x0000000122f74eea: mov    %rsi,0x48(%rsp)
  0x0000000122f74eef: mov    %rdi,0x40(%rsp)
  0x0000000122f74ef4: mov    %r8,0x38(%rsp)
  0x0000000122f74ef9: mov    %r9,0x30(%rsp)
  0x0000000122f74efe: mov    %r10,0x28(%rsp)
  0x0000000122f74f03: mov    %r11,0x20(%rsp)
  0x0000000122f74f08: mov    %r12,0x18(%rsp)
  0x0000000122f74f0d: mov    %r13,0x10(%rsp)
  0x0000000122f74f12: mov    %r14,0x8(%rsp)
  0x0000000122f74f17: mov    %r15,(%rsp)
  0x0000000122f74f1b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f74f25: movabs $0x122f74ec5,%rsi  ;   {internal_word}
  0x0000000122f74f2f: mov    %rsp,%rdx
  0x0000000122f74f32: and    $0xfffffffffffffff0,%rsp
  0x0000000122f74f36: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f74f3b: hlt    
[Deopt Handler Code]
  0x0000000122f74f3c: movabs $0x122f74f3c,%r10  ;   {section_word}
  0x0000000122f74f46: push   %r10
  0x0000000122f74f48: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f74f4d: hlt    
  0x0000000122f74f4e: hlt    
  0x0000000122f74f4f: hlt    
</print_nmethod>
<nmethod compile_id='12' compiler='c1' level='1' entry='0x0000000122f751c0' size='776' address='0x0000000122f75010' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='720' dependencies_offset='768' metadata_offset='704' method='java.util.Collections$EmptySet hashCode ()I' bytes='2' count='202' iicount='202' stamp='0.134'/>
<print_nmethod stamp='0.134'>
Compiled method (c1)     134   12       1       java.util.Collections$EmptySet::hashCode (2 bytes)
 total in heap  [0x0000000122f75010,0x0000000122f75318] = 776
 relocation     [0x0000000122f75188,0x0000000122f751b0] = 40
 main code      [0x0000000122f751c0,0x0000000122f75240] = 128
 stub code      [0x0000000122f75240,0x0000000122f752d0] = 144
 metadata       [0x0000000122f752d0,0x0000000122f752d8] = 8
 scopes data    [0x0000000122f752d8,0x0000000122f752e0] = 8
 scopes pcs     [0x0000000122f752e0,0x0000000122f75310] = 48
 dependencies   [0x0000000122f75310,0x0000000122f75318] = 8
----------------------------------------------------------------------
java/util/Collections$EmptySet.hashCode()I  [0x0000000122f751c0, 0x0000000122f752d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326145b8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/Collections$EmptySet&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f751c0: mov    0x8(%rsi),%r10d
  0x0000000122f751c4: movabs $0x800000000,%r12
  0x0000000122f751ce: add    %r12,%r10
  0x0000000122f751d1: xor    %r12,%r12
  0x0000000122f751d4: cmp    %rax,%r10
  0x0000000122f751d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f751dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f751e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f751e7: push   %rbp
  0x0000000122f751e8: sub    $0x30,%rsp         ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Collections$EmptySet::hashCode@0 (line 4371)

  0x0000000122f751ec: mov    $0x0,%eax
  0x0000000122f751f1: add    $0x30,%rsp
  0x0000000122f751f5: pop    %rbp
  0x0000000122f751f6: mov    0x108(%r15),%r10
  0x0000000122f751fd: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f75200: retq   
  0x0000000122f75201: nop
  0x0000000122f75202: nop
  0x0000000122f75203: mov    0x420(%r15),%rax
  0x0000000122f7520a: movabs $0x0,%r10
  0x0000000122f75214: mov    %r10,0x420(%r15)
  0x0000000122f7521b: movabs $0x0,%r10
  0x0000000122f75225: mov    %r10,0x428(%r15)
  0x0000000122f7522c: add    $0x30,%rsp
  0x0000000122f75230: pop    %rbp
  0x0000000122f75231: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f75236: hlt    
  0x0000000122f75237: hlt    
  0x0000000122f75238: hlt    
  0x0000000122f75239: hlt    
  0x0000000122f7523a: hlt    
  0x0000000122f7523b: hlt    
  0x0000000122f7523c: hlt    
  0x0000000122f7523d: hlt    
  0x0000000122f7523e: hlt    
  0x0000000122f7523f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f75240: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f75245: mov    %rsp,-0x28(%rsp)
  0x0000000122f7524a: sub    $0x80,%rsp
  0x0000000122f75251: mov    %rax,0x78(%rsp)
  0x0000000122f75256: mov    %rcx,0x70(%rsp)
  0x0000000122f7525b: mov    %rdx,0x68(%rsp)
  0x0000000122f75260: mov    %rbx,0x60(%rsp)
  0x0000000122f75265: mov    %rbp,0x50(%rsp)
  0x0000000122f7526a: mov    %rsi,0x48(%rsp)
  0x0000000122f7526f: mov    %rdi,0x40(%rsp)
  0x0000000122f75274: mov    %r8,0x38(%rsp)
  0x0000000122f75279: mov    %r9,0x30(%rsp)
  0x0000000122f7527e: mov    %r10,0x28(%rsp)
  0x0000000122f75283: mov    %r11,0x20(%rsp)
  0x0000000122f75288: mov    %r12,0x18(%rsp)
  0x0000000122f7528d: mov    %r13,0x10(%rsp)
  0x0000000122f75292: mov    %r14,0x8(%rsp)
  0x0000000122f75297: mov    %r15,(%rsp)
  0x0000000122f7529b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f752a5: movabs $0x122f75245,%rsi  ;   {internal_word}
  0x0000000122f752af: mov    %rsp,%rdx
  0x0000000122f752b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f752b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f752bb: hlt    
[Deopt Handler Code]
  0x0000000122f752bc: movabs $0x122f752bc,%r10  ;   {section_word}
  0x0000000122f752c6: push   %r10
  0x0000000122f752c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f752cd: hlt    
  0x0000000122f752ce: hlt    
  0x0000000122f752cf: hlt    
</print_nmethod>
<nmethod compile_id='19' compiler='c1' level='1' entry='0x0000000122f75540' size='776' address='0x0000000122f75390' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='720' dependencies_offset='768' metadata_offset='704' method='java.util.Collections$EmptySet contains (Ljava/lang/Object;)Z' bytes='2' count='140' iicount='140' stamp='0.135'/>
<print_nmethod stamp='0.135'>
Compiled method (c1)     135   19       1       java.util.Collections$EmptySet::contains (2 bytes)
 total in heap  [0x0000000122f75390,0x0000000122f75698] = 776
 relocation     [0x0000000122f75508,0x0000000122f75530] = 40
 main code      [0x0000000122f75540,0x0000000122f755c0] = 128
 stub code      [0x0000000122f755c0,0x0000000122f75650] = 144
 metadata       [0x0000000122f75650,0x0000000122f75658] = 8
 scopes data    [0x0000000122f75658,0x0000000122f75660] = 8
 scopes pcs     [0x0000000122f75660,0x0000000122f75690] = 48
 dependencies   [0x0000000122f75690,0x0000000122f75698] = 8
----------------------------------------------------------------------
java/util/Collections$EmptySet.contains(Ljava/lang/Object;)Z  [0x0000000122f75540, 0x0000000122f75650]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132614020} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/Collections$EmptySet&apos;
  # this:     rsi:rsi   = &apos;java/util/Collections$EmptySet&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f75540: mov    0x8(%rsi),%r10d
  0x0000000122f75544: movabs $0x800000000,%r12
  0x0000000122f7554e: add    %r12,%r10
  0x0000000122f75551: xor    %r12,%r12
  0x0000000122f75554: cmp    %rax,%r10
  0x0000000122f75557: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7555d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f75560: mov    %eax,-0x14000(%rsp)
  0x0000000122f75567: push   %rbp
  0x0000000122f75568: sub    $0x30,%rsp         ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Collections$EmptySet::contains@0 (line 4340)

  0x0000000122f7556c: mov    $0x0,%eax
  0x0000000122f75571: add    $0x30,%rsp
  0x0000000122f75575: pop    %rbp
  0x0000000122f75576: mov    0x108(%r15),%r10
  0x0000000122f7557d: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f75580: retq   
  0x0000000122f75581: nop
  0x0000000122f75582: nop
  0x0000000122f75583: mov    0x420(%r15),%rax
  0x0000000122f7558a: movabs $0x0,%r10
  0x0000000122f75594: mov    %r10,0x420(%r15)
  0x0000000122f7559b: movabs $0x0,%r10
  0x0000000122f755a5: mov    %r10,0x428(%r15)
  0x0000000122f755ac: add    $0x30,%rsp
  0x0000000122f755b0: pop    %rbp
  0x0000000122f755b1: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f755b6: hlt    
  0x0000000122f755b7: hlt    
  0x0000000122f755b8: hlt    
  0x0000000122f755b9: hlt    
  0x0000000122f755ba: hlt    
  0x0000000122f755bb: hlt    
  0x0000000122f755bc: hlt    
  0x0000000122f755bd: hlt    
  0x0000000122f755be: hlt    
  0x0000000122f755bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f755c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f755c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f755ca: sub    $0x80,%rsp
  0x0000000122f755d1: mov    %rax,0x78(%rsp)
  0x0000000122f755d6: mov    %rcx,0x70(%rsp)
  0x0000000122f755db: mov    %rdx,0x68(%rsp)
  0x0000000122f755e0: mov    %rbx,0x60(%rsp)
  0x0000000122f755e5: mov    %rbp,0x50(%rsp)
  0x0000000122f755ea: mov    %rsi,0x48(%rsp)
  0x0000000122f755ef: mov    %rdi,0x40(%rsp)
  0x0000000122f755f4: mov    %r8,0x38(%rsp)
  0x0000000122f755f9: mov    %r9,0x30(%rsp)
  0x0000000122f755fe: mov    %r10,0x28(%rsp)
  0x0000000122f75603: mov    %r11,0x20(%rsp)
  0x0000000122f75608: mov    %r12,0x18(%rsp)
  0x0000000122f7560d: mov    %r13,0x10(%rsp)
  0x0000000122f75612: mov    %r14,0x8(%rsp)
  0x0000000122f75617: mov    %r15,(%rsp)
  0x0000000122f7561b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f75625: movabs $0x122f755c5,%rsi  ;   {internal_word}
  0x0000000122f7562f: mov    %rsp,%rdx
  0x0000000122f75632: and    $0xfffffffffffffff0,%rsp
  0x0000000122f75636: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7563b: hlt    
[Deopt Handler Code]
  0x0000000122f7563c: movabs $0x122f7563c,%r10  ;   {section_word}
  0x0000000122f75646: push   %r10
  0x0000000122f75648: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7564d: hlt    
  0x0000000122f7564e: hlt    
  0x0000000122f7564f: hlt    
</print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='31' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f758c0' size='960' address='0x0000000122f75710' relocation_offset='376' consts_offset='960' insts_offset='432' method='java.lang.System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='256' iicount='256' stamp='0.137'/>
----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x0000000122f758c0, 0x0000000122f75ad0]  528 bytes
[Entry Point]
  # {method} {0x00000001324ce160} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000122f758c0: mov    0x8(%rsi),%r10d
  0x0000000122f758c4: movabs $0x800000000,%r12
  0x0000000122f758ce: add    %r12,%r10
  0x0000000122f758d1: xor    %r12,%r12
  0x0000000122f758d4: cmp    %r10,%rax
  0x0000000122f758d7: je     0x0000000122f758e8
  0x0000000122f758dd: jmpq   0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f758e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000122f758e8: mov    %eax,-0x14000(%rsp)
  0x0000000122f758ef: push   %rbp
  0x0000000122f758f0: mov    %rsp,%rbp
  0x0000000122f758f3: sub    $0x50,%rsp
  0x0000000122f758f7: mov    %r9,(%rsp)
  0x0000000122f758fb: mov    %r8,%r9
  0x0000000122f758fe: mov    %rcx,0x18(%rsp)
  0x0000000122f75903: cmp    $0x0,%rcx
  0x0000000122f75907: lea    0x18(%rsp),%r8
  0x0000000122f7590c: cmove  0x18(%rsp),%r8
  0x0000000122f75912: mov    %rdx,%rcx
  0x0000000122f75915: mov    %rsi,0x8(%rsp)
  0x0000000122f7591a: cmp    $0x0,%rsi
  0x0000000122f7591e: lea    0x8(%rsp),%rdx
  0x0000000122f75923: cmove  0x8(%rsp),%rdx
  0x0000000122f75929: movabs $0x70ff00d60,%r14  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00d60} = &apos;java/lang/System&apos;)}
  0x0000000122f75933: mov    %r14,0x38(%rsp)
  0x0000000122f75938: lea    0x38(%rsp),%r14
  0x0000000122f7593d: mov    %r14,%rsi          ; ImmutableOopMap{[24]=Oop [8]=Oop [56]=Oop }
  0x0000000122f75940: vzeroupper 
  0x0000000122f75943: movabs $0x122f75940,%r10  ;   {internal_word}
  0x0000000122f7594d: mov    %r10,0x328(%r15)
  0x0000000122f75954: mov    %rsp,0x320(%r15)
  0x0000000122f7595b: cmpb   $0x0,-0x14610420(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f75962: je     0x0000000122f759a6
  0x0000000122f75968: push   %rsi
  0x0000000122f75969: push   %rdx
  0x0000000122f7596a: push   %rcx
  0x0000000122f7596b: push   %r8
  0x0000000122f7596d: push   %r9
  0x0000000122f7596f: movabs $0x1324ce160,%rsi  ;   {metadata({method} {0x00000001324ce160} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000122f75979: mov    %r15,%rdi
  0x0000000122f7597c: test   $0xf,%esp
  0x0000000122f75982: je     0x0000000122f7599a
  0x0000000122f75988: sub    $0x8,%rsp
  0x0000000122f7598c: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f75991: add    $0x8,%rsp
  0x0000000122f75995: jmpq   0x0000000122f7599f
  0x0000000122f7599a: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f7599f: pop    %r9
  0x0000000122f759a1: pop    %r8
  0x0000000122f759a3: pop    %rcx
  0x0000000122f759a4: pop    %rdx
  0x0000000122f759a5: pop    %rsi
  0x0000000122f759a6: lea    0x340(%r15),%rdi
  0x0000000122f759ad: movl   $0x4,0x3b8(%r15)
  0x0000000122f759b8: callq  0x000000010e41d00b  ;   {runtime_call JVM_ArrayCopy}
  0x0000000122f759bd: vzeroupper 
  0x0000000122f759c0: movl   $0x5,0x3b8(%r15)
  0x0000000122f759cb: lock addl $0x0,-0x40(%rsp)
  0x0000000122f759d1: testb  $0x8,0x108(%r15)
  0x0000000122f759d9: jne    0x0000000122f759f0
  0x0000000122f759df: cmpl   $0x0,0xd8(%r15)
  0x0000000122f759ea: je     0x0000000122f75a0c
  0x0000000122f759f0: vzeroupper 
  0x0000000122f759f3: mov    %r15,%rdi
  0x0000000122f759f6: mov    %rsp,%r12
  0x0000000122f759f9: sub    $0x0,%rsp
  0x0000000122f759fd: and    $0xfffffffffffffff0,%rsp
  0x0000000122f75a01: callq  0x000000010e701cce  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000122f75a06: mov    %r12,%rsp
  0x0000000122f75a09: xor    %r12,%r12
  0x0000000122f75a0c: movl   $0x8,0x3b8(%r15)
  0x0000000122f75a17: cmpl   $0x2,0x408(%r15)
  0x0000000122f75a22: je     0x0000000122f75ab0
  0x0000000122f75a28: cmpb   $0x0,-0x146104ed(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f75a2f: je     0x0000000122f75a65
  0x0000000122f75a35: movabs $0x1324ce160,%rsi  ;   {metadata({method} {0x00000001324ce160} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000122f75a3f: mov    %r15,%rdi
  0x0000000122f75a42: test   $0xf,%esp
  0x0000000122f75a48: je     0x0000000122f75a60
  0x0000000122f75a4e: sub    $0x8,%rsp
  0x0000000122f75a52: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f75a57: add    $0x8,%rsp
  0x0000000122f75a5b: jmpq   0x0000000122f75a65
  0x0000000122f75a60: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f75a65: movabs $0x0,%r10
  0x0000000122f75a6f: mov    %r10,0x320(%r15)
  0x0000000122f75a76: movabs $0x0,%r10
  0x0000000122f75a80: mov    %r10,0x328(%r15)
  0x0000000122f75a87: vzeroupper 
  0x0000000122f75a8a: mov    0xe0(%r15),%rcx
  0x0000000122f75a91: movl   $0x0,0x100(%rcx)
  0x0000000122f75a9b: leaveq 
  0x0000000122f75a9c: cmpq   $0x0,0x8(%r15)
  0x0000000122f75aa4: jne    0x0000000122f75aab
  0x0000000122f75aaa: retq   
  0x0000000122f75aab: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000122f75ab0: vzeroupper 
  0x0000000122f75ab3: mov    %rsp,%r12
  0x0000000122f75ab6: sub    $0x0,%rsp
  0x0000000122f75aba: and    $0xfffffffffffffff0,%rsp
  0x0000000122f75abe: callq  0x000000010e679d28  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000122f75ac3: mov    %r12,%rsp
  0x0000000122f75ac6: xor    %r12,%r12
  0x0000000122f75ac9: jmpq   0x0000000122f75a28
  0x0000000122f75ace: hlt    
  0x0000000122f75acf: hlt    
<task_queued compile_id='32' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='289' count='256' iicount='256' level='3' stamp='0.141' comment='tiered' hot_count='256'/>
<nmethod compile_id='33' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f75cc0' size='960' address='0x0000000122f75b10' relocation_offset='376' consts_offset='960' insts_offset='432' method='jdk.internal.misc.Unsafe compareAndSetLong (Ljava/lang/Object;JJJ)Z' bytes='0' count='256' iicount='256' stamp='0.141'/>
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x0000000122f75cc0, 0x0000000122f75ed0]  528 bytes
[Entry Point]
  # {method} {0x0000000132563410} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x0000000122f75cc0: mov    0x8(%rsi),%r10d
  0x0000000122f75cc4: movabs $0x800000000,%r12
  0x0000000122f75cce: add    %r12,%r10
  0x0000000122f75cd1: xor    %r12,%r12
  0x0000000122f75cd4: cmp    %r10,%rax
  0x0000000122f75cd7: je     0x0000000122f75ce8
  0x0000000122f75cdd: jmpq   0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f75ce2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000122f75ce8: mov    %eax,-0x14000(%rsp)
  0x0000000122f75cef: push   %rbp
  0x0000000122f75cf0: mov    %rsp,%rbp
  0x0000000122f75cf3: sub    $0x40,%rsp
  0x0000000122f75cf7: mov    %rdx,0x8(%rsp)
  0x0000000122f75cfc: cmp    $0x0,%rdx
  0x0000000122f75d00: lea    0x8(%rsp),%rdx
  0x0000000122f75d05: cmove  0x8(%rsp),%rdx
  0x0000000122f75d0b: mov    %rsi,(%rsp)
  0x0000000122f75d0f: cmp    $0x0,%rsi
  0x0000000122f75d13: lea    (%rsp),%rsi
  0x0000000122f75d17: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x0000000122f75d1c: vzeroupper 
  0x0000000122f75d1f: movabs $0x122f75d1c,%r10  ;   {internal_word}
  0x0000000122f75d29: mov    %r10,0x328(%r15)
  0x0000000122f75d30: mov    %rsp,0x320(%r15)
  0x0000000122f75d37: cmpb   $0x0,-0x146107fc(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f75d3e: je     0x0000000122f75d82
  0x0000000122f75d44: push   %rsi
  0x0000000122f75d45: push   %rdx
  0x0000000122f75d46: push   %rcx
  0x0000000122f75d47: push   %r8
  0x0000000122f75d49: push   %r9
  0x0000000122f75d4b: movabs $0x132563410,%rsi  ;   {metadata({method} {0x0000000132563410} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x0000000122f75d55: mov    %r15,%rdi
  0x0000000122f75d58: test   $0xf,%esp
  0x0000000122f75d5e: je     0x0000000122f75d76
  0x0000000122f75d64: sub    $0x8,%rsp
  0x0000000122f75d68: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f75d6d: add    $0x8,%rsp
  0x0000000122f75d71: jmpq   0x0000000122f75d7b
  0x0000000122f75d76: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f75d7b: pop    %r9
  0x0000000122f75d7d: pop    %r8
  0x0000000122f75d7f: pop    %rcx
  0x0000000122f75d80: pop    %rdx
  0x0000000122f75d81: pop    %rsi
  0x0000000122f75d82: lea    0x340(%r15),%rdi
  0x0000000122f75d89: movl   $0x4,0x3b8(%r15)
  0x0000000122f75d94: callq  0x000000010e71d3d0  ;   {runtime_call Unsafe_CompareAndSetLong(JNIEnv_*, _jobject*, _jobject*, long, long, long)}
  0x0000000122f75d99: vzeroupper 
  0x0000000122f75d9c: and    $0xff,%eax
  0x0000000122f75da2: setne  %al
  0x0000000122f75da5: movl   $0x5,0x3b8(%r15)
  0x0000000122f75db0: lock addl $0x0,-0x40(%rsp)
  0x0000000122f75db6: testb  $0x8,0x108(%r15)
  0x0000000122f75dbe: jne    0x0000000122f75dd5
  0x0000000122f75dc4: cmpl   $0x0,0xd8(%r15)
  0x0000000122f75dcf: je     0x0000000122f75df9
  0x0000000122f75dd5: vzeroupper 
  0x0000000122f75dd8: mov    %rax,-0x8(%rbp)
  0x0000000122f75ddc: mov    %r15,%rdi
  0x0000000122f75ddf: mov    %rsp,%r12
  0x0000000122f75de2: sub    $0x0,%rsp
  0x0000000122f75de6: and    $0xfffffffffffffff0,%rsp
  0x0000000122f75dea: callq  0x000000010e701cce  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000122f75def: mov    %r12,%rsp
  0x0000000122f75df2: xor    %r12,%r12
  0x0000000122f75df5: mov    -0x8(%rbp),%rax
  0x0000000122f75df9: movl   $0x8,0x3b8(%r15)
  0x0000000122f75e04: cmpl   $0x2,0x408(%r15)
  0x0000000122f75e0f: je     0x0000000122f75ea5
  0x0000000122f75e15: cmpb   $0x0,-0x146108da(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f75e1c: je     0x0000000122f75e5a
  0x0000000122f75e22: mov    %rax,-0x8(%rbp)
  0x0000000122f75e26: movabs $0x132563410,%rsi  ;   {metadata({method} {0x0000000132563410} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x0000000122f75e30: mov    %r15,%rdi
  0x0000000122f75e33: test   $0xf,%esp
  0x0000000122f75e39: je     0x0000000122f75e51
  0x0000000122f75e3f: sub    $0x8,%rsp
  0x0000000122f75e43: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f75e48: add    $0x8,%rsp
  0x0000000122f75e4c: jmpq   0x0000000122f75e56
  0x0000000122f75e51: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f75e56: mov    -0x8(%rbp),%rax
  0x0000000122f75e5a: movabs $0x0,%r10
  0x0000000122f75e64: mov    %r10,0x320(%r15)
  0x0000000122f75e6b: movabs $0x0,%r10
  0x0000000122f75e75: mov    %r10,0x328(%r15)
  0x0000000122f75e7c: vzeroupper 
  0x0000000122f75e7f: mov    0xe0(%r15),%rcx
  0x0000000122f75e86: movl   $0x0,0x100(%rcx)
  0x0000000122f75e90: leaveq 
  0x0000000122f75e91: cmpq   $0x0,0x8(%r15)
  0x0000000122f75e99: jne    0x0000000122f75ea0
  0x0000000122f75e9f: retq   
  0x0000000122f75ea0: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000122f75ea5: vzeroupper 
  0x0000000122f75ea8: mov    %rax,-0x8(%rbp)
  0x0000000122f75eac: mov    %rsp,%r12
  0x0000000122f75eaf: sub    $0x0,%rsp
  0x0000000122f75eb3: and    $0xfffffffffffffff0,%rsp
  0x0000000122f75eb7: callq  0x000000010e679d28  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000122f75ebc: mov    %r12,%rsp
  0x0000000122f75ebf: xor    %r12,%r12
  0x0000000122f75ec2: mov    -0x8(%rbp),%rax
  0x0000000122f75ec6: jmpq   0x0000000122f75e15
  0x0000000122f75ecb: hlt    
  0x0000000122f75ecc: hlt    
  0x0000000122f75ecd: hlt    
  0x0000000122f75ece: hlt    
  0x0000000122f75ecf: hlt    
<nmethod compile_id='34' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f760c0' size='960' address='0x0000000122f75f10' relocation_offset='376' consts_offset='960' insts_offset='432' method='java.lang.Object hashCode ()I' bytes='0' count='512' iicount='512' stamp='0.145'/>
----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x0000000122f760c0, 0x0000000122f762d0]  528 bytes
[Entry Point]
  # {method} {0x00000001324ab788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000122f760c0: mov    0x8(%rsi),%r10d
  0x0000000122f760c4: movabs $0x800000000,%r12
  0x0000000122f760ce: add    %r12,%r10
  0x0000000122f760d1: xor    %r12,%r12
  0x0000000122f760d4: cmp    %r10,%rax
  0x0000000122f760d7: je     0x0000000122f760e8
  0x0000000122f760dd: jmpq   0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f760e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000122f760e8: mov    (%rsi),%rax
  0x0000000122f760eb: test   $0x1,%rax
  0x0000000122f760f1: je     0x0000000122f76115
  0x0000000122f760f7: test   $0x4,%rax
  0x0000000122f760fd: jne    0x0000000122f76115
  0x0000000122f76103: shr    $0x8,%rax
  0x0000000122f76107: and    $0x7fffffff,%rax
  0x0000000122f7610e: je     0x0000000122f76115
  0x0000000122f76114: retq   
  0x0000000122f76115: mov    %eax,-0x14000(%rsp)
  0x0000000122f7611c: push   %rbp
  0x0000000122f7611d: mov    %rsp,%rbp
  0x0000000122f76120: sub    $0x40,%rsp
  0x0000000122f76124: mov    %rsi,(%rsp)
  0x0000000122f76128: cmp    $0x0,%rsi
  0x0000000122f7612c: lea    (%rsp),%rsi
  0x0000000122f76130: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x0000000122f76135: vzeroupper 
  0x0000000122f76138: movabs $0x122f76135,%r10  ;   {internal_word}
  0x0000000122f76142: mov    %r10,0x328(%r15)
  0x0000000122f76149: mov    %rsp,0x320(%r15)
  0x0000000122f76150: cmpb   $0x0,-0x14610c15(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f76157: je     0x0000000122f7618f
  0x0000000122f7615d: push   %rsi
  0x0000000122f7615e: movabs $0x1324ab788,%rsi  ;   {metadata({method} {0x00000001324ab788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000000122f76168: mov    %r15,%rdi
  0x0000000122f7616b: test   $0xf,%esp
  0x0000000122f76171: je     0x0000000122f76189
  0x0000000122f76177: sub    $0x8,%rsp
  0x0000000122f7617b: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f76180: add    $0x8,%rsp
  0x0000000122f76184: jmpq   0x0000000122f7618e
  0x0000000122f76189: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f7618e: pop    %rsi
  0x0000000122f7618f: lea    0x340(%r15),%rdi
  0x0000000122f76196: movl   $0x4,0x3b8(%r15)
  0x0000000122f761a1: callq  0x000000010e41e6c0  ;   {runtime_call JVM_IHashCode}
  0x0000000122f761a6: vzeroupper 
  0x0000000122f761a9: movl   $0x5,0x3b8(%r15)
  0x0000000122f761b4: lock addl $0x0,-0x40(%rsp)
  0x0000000122f761ba: testb  $0x8,0x108(%r15)
  0x0000000122f761c2: jne    0x0000000122f761d9
  0x0000000122f761c8: cmpl   $0x0,0xd8(%r15)
  0x0000000122f761d3: je     0x0000000122f761fd
  0x0000000122f761d9: vzeroupper 
  0x0000000122f761dc: mov    %rax,-0x8(%rbp)
  0x0000000122f761e0: mov    %r15,%rdi
  0x0000000122f761e3: mov    %rsp,%r12
  0x0000000122f761e6: sub    $0x0,%rsp
  0x0000000122f761ea: and    $0xfffffffffffffff0,%rsp
  0x0000000122f761ee: callq  0x000000010e701cce  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000122f761f3: mov    %r12,%rsp
  0x0000000122f761f6: xor    %r12,%r12
  0x0000000122f761f9: mov    -0x8(%rbp),%rax
  0x0000000122f761fd: movl   $0x8,0x3b8(%r15)
  0x0000000122f76208: cmpl   $0x2,0x408(%r15)
  0x0000000122f76213: je     0x0000000122f762a9
  0x0000000122f76219: cmpb   $0x0,-0x14610cde(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f76220: je     0x0000000122f7625e
  0x0000000122f76226: mov    %rax,-0x8(%rbp)
  0x0000000122f7622a: movabs $0x1324ab788,%rsi  ;   {metadata({method} {0x00000001324ab788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000000122f76234: mov    %r15,%rdi
  0x0000000122f76237: test   $0xf,%esp
  0x0000000122f7623d: je     0x0000000122f76255
  0x0000000122f76243: sub    $0x8,%rsp
  0x0000000122f76247: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f7624c: add    $0x8,%rsp
  0x0000000122f76250: jmpq   0x0000000122f7625a
  0x0000000122f76255: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f7625a: mov    -0x8(%rbp),%rax
  0x0000000122f7625e: movabs $0x0,%r10
  0x0000000122f76268: mov    %r10,0x320(%r15)
  0x0000000122f7626f: movabs $0x0,%r10
  0x0000000122f76279: mov    %r10,0x328(%r15)
  0x0000000122f76280: vzeroupper 
  0x0000000122f76283: mov    0xe0(%r15),%rcx
  0x0000000122f7628a: movl   $0x0,0x100(%rcx)
  0x0000000122f76294: leaveq 
  0x0000000122f76295: cmpq   $0x0,0x8(%r15)
  0x0000000122f7629d: jne    0x0000000122f762a4
  0x0000000122f762a3: retq   
  0x0000000122f762a4: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000122f762a9: vzeroupper 
  0x0000000122f762ac: mov    %rax,-0x8(%rbp)
  0x0000000122f762b0: mov    %rsp,%r12
  0x0000000122f762b3: sub    $0x0,%rsp
  0x0000000122f762b7: and    $0xfffffffffffffff0,%rsp
  0x0000000122f762bb: callq  0x000000010e679d28  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000122f762c0: mov    %r12,%rsp
  0x0000000122f762c3: xor    %r12,%r12
  0x0000000122f762c6: mov    -0x8(%rbp),%rax
  0x0000000122f762ca: jmpq   0x0000000122f76219
  0x0000000122f762cf: hlt    
<writer thread='15875'/>
<nmethod compile_id='32' compiler='c1' level='3' entry='0x000000011ba430e0' size='4920' address='0x000000011ba42e90' relocation_offset='376' insts_offset='592' stub_offset='2864' scopes_data_offset='3152' scopes_pcs_offset='3792' dependencies_offset='4880' nul_chk_table_offset='4888' metadata_offset='3128' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='289' count='258' iicount='258' stamp='0.147'/>
<print_nmethod stamp='0.147'>
Compiled method (c1)     146   32       3       java.util.concurrent.ConcurrentHashMap::addCount (289 bytes)
 total in heap  [0x000000011ba42e90,0x000000011ba441c8] = 4920
 relocation     [0x000000011ba43008,0x000000011ba430e0] = 216
 main code      [0x000000011ba430e0,0x000000011ba439c0] = 2272
 stub code      [0x000000011ba439c0,0x000000011ba43ac8] = 264
 metadata       [0x000000011ba43ac8,0x000000011ba43ae0] = 24
 scopes data    [0x000000011ba43ae0,0x000000011ba43d60] = 640
 scopes pcs     [0x000000011ba43d60,0x000000011ba441a0] = 1088
 dependencies   [0x000000011ba441a0,0x000000011ba441a8] = 8
 nul chk table  [0x000000011ba441a8,0x000000011ba441c8] = 32
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount(JI)V  [0x000000011ba430e0, 0x000000011ba43ac8]  2536 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x000000011ba430e0: mov    0x8(%rsi),%r10d
  0x000000011ba430e4: movabs $0x800000000,%r12
  0x000000011ba430ee: add    %r12,%r10
  0x000000011ba430f1: xor    %r12,%r12
  0x000000011ba430f4: cmp    %rax,%r10
  0x000000011ba430f7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba430fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba43100: mov    %eax,-0x14000(%rsp)
  0x000000011ba43107: push   %rbp
  0x000000011ba43108: sub    $0xb0,%rsp
  0x000000011ba4310f: mov    %rsi,0x88(%rsp)
  0x000000011ba43117: mov    %ecx,0x74(%rsp)
  0x000000011ba4311b: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43125: mov    0x104(%rax),%ebx
  0x000000011ba4312b: add    $0x8,%ebx
  0x000000011ba4312e: mov    %ebx,0x104(%rax)
  0x000000011ba43134: and    $0x1ff8,%ebx
  0x000000011ba4313a: cmp    $0x0,%ebx
  0x000000011ba4313d: je     0x000000011ba438ef  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0 (line 2318)

  0x000000011ba43143: mov    0x30(%rsi),%edi
  0x000000011ba43146: shl    $0x3,%rdi          ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1 (line 2318)

  0x000000011ba4314a: cmp    $0x0,%rdi
  0x000000011ba4314e: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43158: movabs $0x140,%rbx
  0x000000011ba43162: jne    0x000000011ba43172
  0x000000011ba43168: movabs $0x150,%rbx
  0x000000011ba43172: mov    (%rax,%rbx,1),%r8
  0x000000011ba43176: lea    0x1(%r8),%r8
  0x000000011ba4317a: mov    %r8,(%rax,%rbx,1)
  0x000000011ba4317e: jne    0x000000011ba431e9  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7 (line 2318)

  0x000000011ba43184: vmovsd 0x18(%rsi),%xmm0
  0x000000011ba43189: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18 (line 2318)

  0x000000011ba4318e: mov    %rax,%r8
  0x000000011ba43191: add    %rdx,%r8
  0x000000011ba43194: lea    0x18(%rsi),%r9
  0x000000011ba43198: mov    %r8,%rbx
  0x000000011ba4319b: lock cmpxchg %rbx,(%r9)
  0x000000011ba431a0: mov    $0x1,%ebx
  0x000000011ba431a5: je     0x000000011ba431b0
  0x000000011ba431ab: mov    $0x0,%ebx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31 (line 2319)

  0x000000011ba431b0: cmp    $0x0,%ebx
  0x000000011ba431b3: movabs $0x132826ae0,%rbx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba431bd: movabs $0x198,%rax
  0x000000011ba431c7: jne    0x000000011ba431d7
  0x000000011ba431cd: movabs $0x1a8,%rax
  0x000000011ba431d7: mov    (%rbx,%rax,1),%r9
  0x000000011ba431db: lea    0x1(%r9),%r9
  0x000000011ba431df: mov    %r9,(%rbx,%rax,1)
  0x000000011ba431e3: jne    0x000000011ba433f3  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34 (line 2319)

  0x000000011ba431e9: cmp    $0x0,%rdi
  0x000000011ba431ed: movabs $0x132826ae0,%rbx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba431f7: movabs $0x1c8,%rax
  0x000000011ba43201: jne    0x000000011ba43211
  0x000000011ba43207: movabs $0x1b8,%rax
  0x000000011ba43211: mov    (%rbx,%rax,1),%r8
  0x000000011ba43215: lea    0x1(%r8),%r8
  0x000000011ba43219: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4321d: jne    0x000000011ba4322d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42 (line 2322)

  0x000000011ba43223: mov    $0x1,%edi
  0x000000011ba43228: jmpq   0x000000011ba438bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011ba4322d: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ; implicit exception: dispatches to 0x000000011ba43910
  0x000000011ba43230: dec    %ebx
  0x000000011ba43232: cmp    $0x0,%ebx
  0x000000011ba43235: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4323f: movabs $0x1e8,%r8
  0x000000011ba43249: jge    0x000000011ba43259
  0x000000011ba4324f: movabs $0x1d8,%r8
  0x000000011ba43259: mov    (%rax,%r8,1),%r9
  0x000000011ba4325d: lea    0x1(%r9),%r9
  0x000000011ba43261: mov    %r9,(%rax,%r8,1)
  0x000000011ba43265: jge    0x000000011ba43275  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53 (line 2322)

  0x000000011ba4326b: mov    $0x1,%edi
  0x000000011ba43270: jmpq   0x000000011ba438bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011ba43275: mov    %ebx,0x70(%rsp)
  0x000000011ba43279: mov    %rdi,0x78(%rsp)
  0x000000011ba4327e: mov    %rdx,0x80(%rsp)
  0x000000011ba43286: nop
  0x000000011ba43287: callq  0x000000011b4d2400  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58 (line 2323)
                                                ;   {static_call}
  0x000000011ba4328c: and    0x70(%rsp),%eax
  0x000000011ba43290: mov    0x78(%rsp),%rdi
  0x000000011ba43295: cmp    0xc(%rdi),%eax
  0x000000011ba43298: jae    0x000000011ba43915
  0x000000011ba4329e: movslq %eax,%rax
  0x000000011ba432a1: mov    0x10(%rdi,%rax,4),%eax
  0x000000011ba432a5: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)

  0x000000011ba432a9: cmp    $0x0,%rax
  0x000000011ba432ad: movabs $0x132826ae0,%rbx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba432b7: movabs $0x218,%rsi
  0x000000011ba432c1: jne    0x000000011ba432d1
  0x000000011ba432c7: movabs $0x208,%rsi
  0x000000011ba432d1: mov    (%rbx,%rsi,1),%rdi
  0x000000011ba432d5: lea    0x1(%rdi),%rdi
  0x000000011ba432d9: mov    %rdi,(%rbx,%rsi,1)
  0x000000011ba432dd: jne    0x000000011ba432fd  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68 (line 2323)

  0x000000011ba432e3: mov    $0x1,%edi
  0x000000011ba432e8: mov    0x80(%rsp),%rdx
  0x000000011ba432f0: mov    0x88(%rsp),%rsi
  0x000000011ba432f8: jmpq   0x000000011ba438bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011ba432fd: mov    0x80(%rsp),%rdx
  0x000000011ba43305: vmovsd 0x90(%rax),%xmm0   ; implicit exception: dispatches to 0x000000011ba43923
  0x000000011ba4330d: vmovq  %xmm0,%rbx         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)

  0x000000011ba43312: mov    %rbx,%rsi
  0x000000011ba43315: add    %rdx,%rsi
  0x000000011ba43318: lea    0x90(%rax),%rdi
  0x000000011ba4331f: mov    %rbx,%rax
  0x000000011ba43322: mov    %rsi,%rbx
  0x000000011ba43325: lock cmpxchg %rbx,(%rdi)
  0x000000011ba4332a: mov    $0x1,%esi
  0x000000011ba4332f: je     0x000000011ba4333a
  0x000000011ba43335: mov    $0x0,%esi          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91 (line 2325)

  0x000000011ba4333a: cmp    $0x0,%esi
  0x000000011ba4333d: movabs $0x132826ae0,%rdi  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43347: movabs $0x260,%rbx
  0x000000011ba43351: jne    0x000000011ba43361
  0x000000011ba43357: movabs $0x270,%rbx
  0x000000011ba43361: mov    (%rdi,%rbx,1),%rax
  0x000000011ba43365: lea    0x1(%rax),%rax
  0x000000011ba43369: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4336d: jne    0x000000011ba43383  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97 (line 2325)

  0x000000011ba43373: mov    %rsi,%rdi
  0x000000011ba43376: mov    0x88(%rsp),%rsi
  0x000000011ba4337e: jmpq   0x000000011ba438bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011ba43383: mov    0x74(%rsp),%ecx
  0x000000011ba43387: cmp    $0x1,%ecx
  0x000000011ba4338a: movabs $0x132826ae0,%rsi  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43394: movabs $0x2c8,%rdi
  0x000000011ba4339e: jle    0x000000011ba433ae
  0x000000011ba433a4: movabs $0x2b8,%rdi
  0x000000011ba433ae: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba433b2: lea    0x1(%rbx),%rbx
  0x000000011ba433b6: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba433ba: jle    0x000000011ba438a9  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110 (line 2329)

  0x000000011ba433c0: mov    0x88(%rsp),%rsi
  0x000000011ba433c8: movabs $0x132826ae0,%rdi  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba433d2: addq   $0x1,0x2d8(%rdi)
  0x000000011ba433da: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)

  0x000000011ba433e2: nopl   0x0(%rax,%rax,1)
  0x000000011ba433e7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)
                                                ;   {optimized virtual_call}
  0x000000011ba433ec: mov    %rax,%r8           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120 (line 2333)

  0x000000011ba433ef: mov    0x74(%rsp),%ecx
  0x000000011ba433f3: cmp    $0x0,%ecx
  0x000000011ba433f6: movabs $0x132826ae0,%rsi  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43400: movabs $0x310,%rdi
  0x000000011ba4340a: jl     0x000000011ba4341a
  0x000000011ba43410: movabs $0x320,%rdi
  0x000000011ba4341a: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba4341e: lea    0x1(%rbx),%rbx
  0x000000011ba43422: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba43426: jl     0x000000011ba43896  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121 (line 2333)

  0x000000011ba4342c: nopl   0x0(%rax)
  0x000000011ba43430: mov    0x88(%rsp),%rsi
  0x000000011ba43438: mov    0x14(%rsi),%edi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127 (line 2335)

  0x000000011ba4343b: movslq %edi,%rbx
  0x000000011ba4343e: cmp    %rbx,%r8
  0x000000011ba43441: movabs $0x132826ae0,%rbx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4344b: movabs $0x330,%rax
  0x000000011ba43455: jl     0x000000011ba43465
  0x000000011ba4345b: movabs $0x340,%rax
  0x000000011ba43465: mov    (%rbx,%rax,1),%rdx
  0x000000011ba43469: lea    0x1(%rdx),%rdx
  0x000000011ba4346d: mov    %rdx,(%rbx,%rax,1)
  0x000000011ba43471: jl     0x000000011ba43896  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134 (line 2335)

  0x000000011ba43477: mov    0x28(%rsi),%ebx
  0x000000011ba4347a: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139 (line 2335)

  0x000000011ba4347e: cmp    $0x0,%rbx
  0x000000011ba43482: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4348c: movabs $0x350,%rdx
  0x000000011ba43496: je     0x000000011ba434a6
  0x000000011ba4349c: movabs $0x360,%rdx
  0x000000011ba434a6: mov    (%rax,%rdx,1),%rcx
  0x000000011ba434aa: lea    0x1(%rcx),%rcx
  0x000000011ba434ae: mov    %rcx,(%rax,%rdx,1)
  0x000000011ba434b2: je     0x000000011ba43896  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145 (line 2335)

  0x000000011ba434b8: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ; implicit exception: dispatches to 0x000000011ba43928
  0x000000011ba434bb: cmp    $0x40000000,%eax
  0x000000011ba434c1: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba434cb: movabs $0x370,%rcx
  0x000000011ba434d5: jge    0x000000011ba434e5
  0x000000011ba434db: movabs $0x380,%rcx
  0x000000011ba434e5: mov    (%rdx,%rcx,1),%r8
  0x000000011ba434e9: lea    0x1(%r8),%r8
  0x000000011ba434ed: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba434f1: jge    0x000000011ba43896  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156 (line 2335)

  0x000000011ba434f7: mov    %rbx,0x98(%rsp)
  0x000000011ba434ff: mov    %edi,0x90(%rsp)
  0x000000011ba43506: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43510: addq   $0x1,0x390(%rdx)
  0x000000011ba43518: movabs $0x132827358,%rdx  ;   {metadata(method data for {method} {0x00000001325e2178} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43522: mov    0x104(%rdx),%ecx
  0x000000011ba43528: add    $0x8,%ecx
  0x000000011ba4352b: mov    %ecx,0x104(%rdx)
  0x000000011ba43531: and    $0x7ffff8,%ecx
  0x000000011ba43537: cmp    $0x0,%ecx
  0x000000011ba4353a: je     0x000000011ba4392d
  0x000000011ba43540: movabs $0x132827358,%rdx  ;   {metadata(method data for {method} {0x00000001325e2178} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4354a: addq   $0x1,0x140(%rdx)
  0x000000011ba43552: mov    %rax,%rsi          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)

  0x000000011ba43555: xchg   %ax,%ax
  0x000000011ba43557: callq  0x000000011b4d2400  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {static_call}
  0x000000011ba4355c: or     $0x8000,%eax
  0x000000011ba43562: mov    0x90(%rsp),%edi
  0x000000011ba43569: cmp    $0x0,%edi
  0x000000011ba4356c: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43576: movabs $0x3a0,%rcx
  0x000000011ba43580: jge    0x000000011ba43590
  0x000000011ba43586: movabs $0x3b0,%rcx
  0x000000011ba43590: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba43594: lea    0x1(%rsi),%rsi
  0x000000011ba43598: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba4359c: jge    0x000000011ba43779  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168 (line 2338)

  0x000000011ba435a2: mov    %rdi,%rdx
  0x000000011ba435a5: shr    $0x10,%edx
  0x000000011ba435a8: cmp    %eax,%edx
  0x000000011ba435aa: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba435b4: movabs $0x3c0,%rcx
  0x000000011ba435be: jne    0x000000011ba435ce
  0x000000011ba435c4: movabs $0x3d0,%rcx
  0x000000011ba435ce: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba435d2: lea    0x1(%rsi),%rsi
  0x000000011ba435d6: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba435da: jne    0x000000011ba43896  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@178 (line 2339)

  0x000000011ba435e0: mov    %rax,%rdx
  0x000000011ba435e3: inc    %edx
  0x000000011ba435e5: cmp    %edx,%edi
  0x000000011ba435e7: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba435f1: movabs $0x3e0,%rcx
  0x000000011ba435fb: je     0x000000011ba4360b
  0x000000011ba43601: movabs $0x3f0,%rcx
  0x000000011ba4360b: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba4360f: lea    0x1(%rsi),%rsi
  0x000000011ba43613: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba43617: je     0x000000011ba43896  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@187 (line 2339)

  0x000000011ba4361d: add    $0xffff,%eax
  0x000000011ba43623: cmp    %eax,%edi
  0x000000011ba43625: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4362f: movabs $0x400,%rdx
  0x000000011ba43639: je     0x000000011ba43649
  0x000000011ba4363f: movabs $0x410,%rdx
  0x000000011ba43649: mov    (%rax,%rdx,1),%rcx
  0x000000011ba4364d: lea    0x1(%rcx),%rcx
  0x000000011ba43651: mov    %rcx,(%rax,%rdx,1)
  0x000000011ba43655: je     0x000000011ba43896  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@197 (line 2339)

  0x000000011ba4365b: mov    0x88(%rsp),%rsi
  0x000000011ba43663: mov    0x2c(%rsi),%ecx
  0x000000011ba43666: shl    $0x3,%rcx          ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@201 (line 2339)

  0x000000011ba4366a: cmp    $0x0,%rcx
  0x000000011ba4366e: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43678: movabs $0x420,%rdx
  0x000000011ba43682: je     0x000000011ba43692
  0x000000011ba43688: movabs $0x430,%rdx
  0x000000011ba43692: mov    (%rax,%rdx,1),%rbx
  0x000000011ba43696: lea    0x1(%rbx),%rbx
  0x000000011ba4369a: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba4369e: je     0x000000011ba43896  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@207 (line 2339)

  0x000000011ba436a4: mov    0x20(%rsi),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@211 (line 2339)

  0x000000011ba436a7: cmp    $0x0,%eax
  0x000000011ba436aa: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba436b4: movabs $0x450,%rdx
  0x000000011ba436be: jle    0x000000011ba436ce
  0x000000011ba436c4: movabs $0x440,%rdx
  0x000000011ba436ce: mov    (%rax,%rdx,1),%rbx
  0x000000011ba436d2: lea    0x1(%rbx),%rbx
  0x000000011ba436d6: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba436da: jle    0x000000011ba43886  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@214 (line 2339)

  0x000000011ba436e0: mov    %rdi,%rdx
  0x000000011ba436e3: inc    %edx
  0x000000011ba436e5: lea    0x14(%rsi),%rbx
  0x000000011ba436e9: mov    %rdi,%rax
  0x000000011ba436ec: lock cmpxchg %edx,(%rbx)
  0x000000011ba436f0: mov    $0x1,%edx
  0x000000011ba436f5: je     0x000000011ba43700
  0x000000011ba436fb: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@233 (line 2343)

  0x000000011ba43700: cmp    $0x0,%edx
  0x000000011ba43703: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4370d: movabs $0x4b0,%rdi
  0x000000011ba43717: je     0x000000011ba43727
  0x000000011ba4371d: movabs $0x4c0,%rdi
  0x000000011ba43727: mov    (%rdx,%rdi,1),%rbx
  0x000000011ba4372b: lea    0x1(%rbx),%rbx
  0x000000011ba4372f: mov    %rbx,(%rdx,%rdi,1)
  0x000000011ba43733: je     0x000000011ba43814  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@236 (line 2343)

  0x000000011ba43739: mov    %rsi,%rdx
  0x000000011ba4373c: movabs $0x132826ae0,%rdi  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43746: addq   $0x1,0x4d0(%rdi)
  0x000000011ba4374e: mov    0x98(%rsp),%rdx
  0x000000011ba43756: mov    %rsi,%rdi
  0x000000011ba43759: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)

  0x000000011ba4375c: data16 xchg %ax,%ax
  0x000000011ba4375f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)
                                                ;   {optimized virtual_call}
  0x000000011ba43764: movabs $0x132826ae0,%rax  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4376e: incl   0x508(%rax)
  0x000000011ba43774: jmpq   0x000000011ba43814  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@247 (line 2344)

  0x000000011ba43779: mov    0x88(%rsp),%rsi
  0x000000011ba43781: shl    $0x10,%eax
  0x000000011ba43784: mov    %rax,%rdx
  0x000000011ba43787: add    $0x2,%edx
  0x000000011ba4378a: lea    0x14(%rsi),%rcx
  0x000000011ba4378e: mov    %rdi,%rax
  0x000000011ba43791: lock cmpxchg %edx,(%rcx)
  0x000000011ba43795: mov    $0x1,%edx
  0x000000011ba4379a: je     0x000000011ba437a5
  0x000000011ba437a0: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@266 (line 2346)

  0x000000011ba437a5: cmp    $0x0,%edx
  0x000000011ba437a8: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba437b2: movabs $0x558,%rcx
  0x000000011ba437bc: je     0x000000011ba437cc
  0x000000011ba437c2: movabs $0x568,%rcx
  0x000000011ba437cc: mov    (%rdx,%rcx,1),%rdi
  0x000000011ba437d0: lea    0x1(%rdi),%rdi
  0x000000011ba437d4: mov    %rdi,(%rdx,%rcx,1)
  0x000000011ba437d8: je     0x000000011ba43814  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269 (line 2346)

  0x000000011ba437de: mov    0x98(%rsp),%rbx
  0x000000011ba437e6: mov    %rsi,%rdx
  0x000000011ba437e9: movabs $0x132826ae0,%rcx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba437f3: addq   $0x1,0x578(%rcx)
  0x000000011ba437fb: mov    %rbx,%rdx
  0x000000011ba437fe: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x000000011ba43808: mov    %rsi,%rdi
  0x000000011ba4380b: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)

  0x000000011ba4380e: nop
  0x000000011ba4380f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)
                                                ;   {optimized virtual_call}
  0x000000011ba43814: mov    0x88(%rsp),%rsi
  0x000000011ba4381c: movabs $0x132826ae0,%rdi  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43826: addq   $0x1,0x5b0(%rdi)
  0x000000011ba4382e: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)

  0x000000011ba43836: nop
  0x000000011ba43837: callq  0x000000011b4d1f00  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)
                                                ;   {optimized virtual_call}
  0x000000011ba4383c: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43846: mov    0x108(%rdx),%ecx
  0x000000011ba4384c: add    $0x8,%ecx
  0x000000011ba4384f: mov    %ecx,0x108(%rdx)
  0x000000011ba43855: and    $0xfff8,%ecx
  0x000000011ba4385b: cmp    $0x0,%ecx
  0x000000011ba4385e: je     0x000000011ba4394e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x000000011ba43864: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x000000011ba4386b: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4386e: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43878: incl   0x5e8(%rdx)
  0x000000011ba4387e: mov    %rax,%r8
  0x000000011ba43881: jmpq   0x000000011ba43430  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x000000011ba43886: movabs $0x132826ae0,%rdx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43890: incl   0x460(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@217 (line 2342)

  0x000000011ba43896: add    $0xb0,%rsp
  0x000000011ba4389d: pop    %rbp
  0x000000011ba4389e: mov    0x108(%r15),%r10
  0x000000011ba438a5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba438a8: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2352)

  0x000000011ba438a9: add    $0xb0,%rsp
  0x000000011ba438b0: pop    %rbp
  0x000000011ba438b1: mov    0x108(%r15),%r10
  0x000000011ba438b8: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba438bb: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113 (line 2330)

  0x000000011ba438bc: mov    %rsi,%rcx
  0x000000011ba438bf: movabs $0x132826ae0,%rbx  ;   {metadata(method data for {method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba438c9: addq   $0x1,0x280(%rbx)
  0x000000011ba438d1: mov    %rdi,%rcx          ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)

  0x000000011ba438d4: data16 xchg %ax,%ax
  0x000000011ba438d7: callq  0x000000011b4d1f00  ; ImmutableOopMap{}
                                                ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)
                                                ;   {optimized virtual_call}
  0x000000011ba438dc: add    $0xb0,%rsp
  0x000000011ba438e3: pop    %rbp
  0x000000011ba438e4: mov    0x108(%r15),%r10
  0x000000011ba438eb: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba438ee: retq   
  0x000000011ba438ef: movabs $0x1325e25a0,%r10  ;   {metadata({method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba438f9: mov    %r10,0x8(%rsp)
  0x000000011ba438fe: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba43906: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1 (line 2318)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4390b: jmpq   0x000000011ba43143
  0x000000011ba43910: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba43915: mov    %rax,(%rsp)
  0x000000011ba43919: mov    %rdi,0x8(%rsp)
  0x000000011ba4391e: callq  0x000000011b595320  ; ImmutableOopMap{[136]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba43923: callq  0x000000011b595f20  ; ImmutableOopMap{[136]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba43928: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4392d: movabs $0x1325e2178,%r10  ;   {metadata({method} {0x00000001325e2178} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43937: mov    %r10,0x8(%rsp)
  0x000000011ba4393c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba43944: callq  0x000000011b59a600  ; ImmutableOopMap{[152]=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba43949: jmpq   0x000000011ba43540
  0x000000011ba4394e: movabs $0x1325e25a0,%r10  ;   {metadata({method} {0x00000001325e25a0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba43958: mov    %r10,0x8(%rsp)
  0x000000011ba4395d: movq   $0x11d,(%rsp)
  0x000000011ba43965: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4396a: jmpq   0x000000011ba43864
  0x000000011ba4396f: nop
  0x000000011ba43970: nop
  0x000000011ba43971: mov    0x420(%r15),%rax
  0x000000011ba43978: movabs $0x0,%r10
  0x000000011ba43982: mov    %r10,0x420(%r15)
  0x000000011ba43989: movabs $0x0,%r10
  0x000000011ba43993: mov    %r10,0x428(%r15)
  0x000000011ba4399a: add    $0xb0,%rsp
  0x000000011ba439a1: pop    %rbp
  0x000000011ba439a2: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba439a7: hlt    
  0x000000011ba439a8: hlt    
  0x000000011ba439a9: hlt    
  0x000000011ba439aa: hlt    
  0x000000011ba439ab: hlt    
  0x000000011ba439ac: hlt    
  0x000000011ba439ad: hlt    
  0x000000011ba439ae: hlt    
  0x000000011ba439af: hlt    
  0x000000011ba439b0: hlt    
  0x000000011ba439b1: hlt    
  0x000000011ba439b2: hlt    
  0x000000011ba439b3: hlt    
  0x000000011ba439b4: hlt    
  0x000000011ba439b5: hlt    
  0x000000011ba439b6: hlt    
  0x000000011ba439b7: hlt    
  0x000000011ba439b8: hlt    
  0x000000011ba439b9: hlt    
  0x000000011ba439ba: hlt    
  0x000000011ba439bb: hlt    
  0x000000011ba439bc: hlt    
  0x000000011ba439bd: hlt    
  0x000000011ba439be: hlt    
  0x000000011ba439bf: hlt    
[Stub Code]
  0x000000011ba439c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba439c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba439cf: jmpq   0x000000011ba439cf  ;   {runtime_call}
  0x000000011ba439d4: nop
  0x000000011ba439d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba439df: jmpq   0x000000011ba439df  ;   {runtime_call}
  0x000000011ba439e4: nop
  0x000000011ba439e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba439ef: jmpq   0x000000011ba439ef  ;   {runtime_call}
  0x000000011ba439f4: nop
  0x000000011ba439f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba439ff: jmpq   0x000000011ba439ff  ;   {runtime_call}
  0x000000011ba43a04: nop
  0x000000011ba43a05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba43a0f: jmpq   0x000000011ba43a0f  ;   {runtime_call}
  0x000000011ba43a14: nop
  0x000000011ba43a15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba43a1f: jmpq   0x000000011ba43a1f  ;   {runtime_call}
  0x000000011ba43a24: nop
  0x000000011ba43a25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba43a2f: jmpq   0x000000011ba43a2f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba43a34: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba43a39: mov    %rsp,-0x28(%rsp)
  0x000000011ba43a3e: sub    $0x80,%rsp
  0x000000011ba43a45: mov    %rax,0x78(%rsp)
  0x000000011ba43a4a: mov    %rcx,0x70(%rsp)
  0x000000011ba43a4f: mov    %rdx,0x68(%rsp)
  0x000000011ba43a54: mov    %rbx,0x60(%rsp)
  0x000000011ba43a59: mov    %rbp,0x50(%rsp)
  0x000000011ba43a5e: mov    %rsi,0x48(%rsp)
  0x000000011ba43a63: mov    %rdi,0x40(%rsp)
  0x000000011ba43a68: mov    %r8,0x38(%rsp)
  0x000000011ba43a6d: mov    %r9,0x30(%rsp)
  0x000000011ba43a72: mov    %r10,0x28(%rsp)
  0x000000011ba43a77: mov    %r11,0x20(%rsp)
  0x000000011ba43a7c: mov    %r12,0x18(%rsp)
  0x000000011ba43a81: mov    %r13,0x10(%rsp)
  0x000000011ba43a86: mov    %r14,0x8(%rsp)
  0x000000011ba43a8b: mov    %r15,(%rsp)
  0x000000011ba43a8f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba43a99: movabs $0x11ba43a39,%rsi  ;   {internal_word}
  0x000000011ba43aa3: mov    %rsp,%rdx
  0x000000011ba43aa6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba43aaa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba43aaf: hlt    
[Deopt Handler Code]
  0x000000011ba43ab0: movabs $0x11ba43ab0,%r10  ;   {section_word}
  0x000000011ba43aba: push   %r10
  0x000000011ba43abc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba43ac1: hlt    
  0x000000011ba43ac2: hlt    
  0x000000011ba43ac3: hlt    
  0x000000011ba43ac4: hlt    
  0x000000011ba43ac5: hlt    
  0x000000011ba43ac6: hlt    
  0x000000011ba43ac7: hlt    

ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 428 
ImmutableOopMap{[136]=Oop }pc offsets: 780 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 1148 
ImmutableOopMap{[136]=Oop }pc offsets: 1668 1844 1884 1931 
ImmutableOopMap{}pc offsets: 2044 
ImmutableOopMap{rsi=Oop [136]=Oop }pc offsets: 2091 
ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }pc offsets: 2101 
ImmutableOopMap{[136]=Oop rdi=Oop }pc offsets: 2115 
ImmutableOopMap{[136]=Oop rax=Oop }pc offsets: 2120 
ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }pc offsets: 2125 
ImmutableOopMap{[152]=Oop [136]=Oop }pc offsets: 2153 
ImmutableOopMap{[136]=Oop }pc offsets: 2186 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='35' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='256' iicount='256' level='3' stamp='0.156' comment='tiered' hot_count='256'/>
<task_queued compile_id='36' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='384' iicount='384' level='3' stamp='0.156' comment='tiered' hot_count='384'/>
<nmethod compile_id='37' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f764c0' size='1000' address='0x0000000122f76310' relocation_offset='376' consts_offset='1000' insts_offset='432' method='jdk.internal.misc.Unsafe compareAndSetObject (Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' bytes='0' count='256' iicount='256' stamp='0.156'/>
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z  [0x0000000122f764c0, 0x0000000122f766f8]  568 bytes
[Entry Point]
  # {method} {0x000000013255edf8} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000122f764c0: mov    0x8(%rsi),%r10d
  0x0000000122f764c4: movabs $0x800000000,%r12
  0x0000000122f764ce: add    %r12,%r10
  0x0000000122f764d1: xor    %r12,%r12
  0x0000000122f764d4: cmp    %r10,%rax
  0x0000000122f764d7: je     0x0000000122f764e8
  0x0000000122f764dd: jmpq   0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f764e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000122f764e8: mov    %eax,-0x14000(%rsp)
  0x0000000122f764ef: push   %rbp
  0x0000000122f764f0: mov    %rsp,%rbp
  0x0000000122f764f3: sub    $0x40,%rsp
  0x0000000122f764f7: mov    %r9,0x20(%rsp)
  0x0000000122f764fc: cmp    $0x0,%r9
  0x0000000122f76500: lea    0x20(%rsp),%r9
  0x0000000122f76505: cmove  0x20(%rsp),%r9
  0x0000000122f7650b: mov    %r8,0x18(%rsp)
  0x0000000122f76510: cmp    $0x0,%r8
  0x0000000122f76514: lea    0x18(%rsp),%r8
  0x0000000122f76519: cmove  0x18(%rsp),%r8
  0x0000000122f7651f: mov    %rdx,0x8(%rsp)
  0x0000000122f76524: cmp    $0x0,%rdx
  0x0000000122f76528: lea    0x8(%rsp),%rdx
  0x0000000122f7652d: cmove  0x8(%rsp),%rdx
  0x0000000122f76533: mov    %rsi,(%rsp)
  0x0000000122f76537: cmp    $0x0,%rsi
  0x0000000122f7653b: lea    (%rsp),%rsi
  0x0000000122f7653f: cmove  (%rsp),%rsi        ; ImmutableOopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop }
  0x0000000122f76544: vzeroupper 
  0x0000000122f76547: movabs $0x122f76544,%r10  ;   {internal_word}
  0x0000000122f76551: mov    %r10,0x328(%r15)
  0x0000000122f76558: mov    %rsp,0x320(%r15)
  0x0000000122f7655f: cmpb   $0x0,-0x14611024(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f76566: je     0x0000000122f765aa
  0x0000000122f7656c: push   %rsi
  0x0000000122f7656d: push   %rdx
  0x0000000122f7656e: push   %rcx
  0x0000000122f7656f: push   %r8
  0x0000000122f76571: push   %r9
  0x0000000122f76573: movabs $0x13255edf8,%rsi  ;   {metadata({method} {0x000000013255edf8} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x0000000122f7657d: mov    %r15,%rdi
  0x0000000122f76580: test   $0xf,%esp
  0x0000000122f76586: je     0x0000000122f7659e
  0x0000000122f7658c: sub    $0x8,%rsp
  0x0000000122f76590: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f76595: add    $0x8,%rsp
  0x0000000122f76599: jmpq   0x0000000122f765a3
  0x0000000122f7659e: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f765a3: pop    %r9
  0x0000000122f765a5: pop    %r8
  0x0000000122f765a7: pop    %rcx
  0x0000000122f765a8: pop    %rdx
  0x0000000122f765a9: pop    %rsi
  0x0000000122f765aa: lea    0x340(%r15),%rdi
  0x0000000122f765b1: movl   $0x4,0x3b8(%r15)
  0x0000000122f765bc: callq  0x000000010e71d270  ;   {runtime_call Unsafe_CompareAndSetObject(JNIEnv_*, _jobject*, _jobject*, long, _jobject*, _jobject*)}
  0x0000000122f765c1: vzeroupper 
  0x0000000122f765c4: and    $0xff,%eax
  0x0000000122f765ca: setne  %al
  0x0000000122f765cd: movl   $0x5,0x3b8(%r15)
  0x0000000122f765d8: lock addl $0x0,-0x40(%rsp)
  0x0000000122f765de: testb  $0x8,0x108(%r15)
  0x0000000122f765e6: jne    0x0000000122f765fd
  0x0000000122f765ec: cmpl   $0x0,0xd8(%r15)
  0x0000000122f765f7: je     0x0000000122f76621
  0x0000000122f765fd: vzeroupper 
  0x0000000122f76600: mov    %rax,-0x8(%rbp)
  0x0000000122f76604: mov    %r15,%rdi
  0x0000000122f76607: mov    %rsp,%r12
  0x0000000122f7660a: sub    $0x0,%rsp
  0x0000000122f7660e: and    $0xfffffffffffffff0,%rsp
  0x0000000122f76612: callq  0x000000010e701cce  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000122f76617: mov    %r12,%rsp
  0x0000000122f7661a: xor    %r12,%r12
  0x0000000122f7661d: mov    -0x8(%rbp),%rax
  0x0000000122f76621: movl   $0x8,0x3b8(%r15)
  0x0000000122f7662c: cmpl   $0x2,0x408(%r15)
  0x0000000122f76637: je     0x0000000122f766cd
  0x0000000122f7663d: cmpb   $0x0,-0x14611102(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f76644: je     0x0000000122f76682
  0x0000000122f7664a: mov    %rax,-0x8(%rbp)
  0x0000000122f7664e: movabs $0x13255edf8,%rsi  ;   {metadata({method} {0x000000013255edf8} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x0000000122f76658: mov    %r15,%rdi
  0x0000000122f7665b: test   $0xf,%esp
  0x0000000122f76661: je     0x0000000122f76679
  0x0000000122f76667: sub    $0x8,%rsp
  0x0000000122f7666b: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f76670: add    $0x8,%rsp
  0x0000000122f76674: jmpq   0x0000000122f7667e
  0x0000000122f76679: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f7667e: mov    -0x8(%rbp),%rax
  0x0000000122f76682: movabs $0x0,%r10
  0x0000000122f7668c: mov    %r10,0x320(%r15)
  0x0000000122f76693: movabs $0x0,%r10
  0x0000000122f7669d: mov    %r10,0x328(%r15)
  0x0000000122f766a4: vzeroupper 
  0x0000000122f766a7: mov    0xe0(%r15),%rcx
  0x0000000122f766ae: movl   $0x0,0x100(%rcx)
  0x0000000122f766b8: leaveq 
  0x0000000122f766b9: cmpq   $0x0,0x8(%r15)
  0x0000000122f766c1: jne    0x0000000122f766c8
  0x0000000122f766c7: retq   
  0x0000000122f766c8: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000122f766cd: vzeroupper 
  0x0000000122f766d0: mov    %rax,-0x8(%rbp)
  0x0000000122f766d4: mov    %rsp,%r12
  0x0000000122f766d7: sub    $0x0,%rsp
  0x0000000122f766db: and    $0xfffffffffffffff0,%rsp
  0x0000000122f766df: callq  0x000000010e679d28  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000122f766e4: mov    %r12,%rsp
  0x0000000122f766e7: xor    %r12,%r12
  0x0000000122f766ea: mov    -0x8(%rbp),%rax
  0x0000000122f766ee: jmpq   0x0000000122f7663d
  0x0000000122f766f3: hlt    
  0x0000000122f766f4: hlt    
  0x0000000122f766f5: hlt    
  0x0000000122f766f6: hlt    
  0x0000000122f766f7: hlt    
<writer thread='15875'/>
<nmethod compile_id='35' compiler='c1' level='3' entry='0x000000011ba443c0' size='1312' address='0x000000011ba44210' relocation_offset='376' insts_offset='432' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1176' dependencies_offset='1304' metadata_offset='1088' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='262' iicount='262' stamp='0.159'/>
<print_nmethod stamp='0.159'>
Compiled method (c1)     158   35       3       java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (20 bytes)
 total in heap  [0x000000011ba44210,0x000000011ba44730] = 1312
 relocation     [0x000000011ba44388,0x000000011ba443c0] = 56
 main code      [0x000000011ba443c0,0x000000011ba445c0] = 512
 stub code      [0x000000011ba445c0,0x000000011ba44650] = 144
 metadata       [0x000000011ba44650,0x000000011ba44668] = 24
 scopes data    [0x000000011ba44668,0x000000011ba446a8] = 64
 scopes pcs     [0x000000011ba446a8,0x000000011ba44728] = 128
 dependencies   [0x000000011ba44728,0x000000011ba44730] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap$Node.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;)V  [0x000000011ba443c0, 0x000000011ba44650]  656 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba443c0: mov    0x8(%rsi),%r10d
  0x000000011ba443c4: movabs $0x800000000,%r12
  0x000000011ba443ce: add    %r12,%r10
  0x000000011ba443d1: xor    %r12,%r12
  0x000000011ba443d4: cmp    %rax,%r10
  0x000000011ba443d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba443dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba443e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba443e7: push   %rbp
  0x000000011ba443e8: sub    $0x30,%rsp
  0x000000011ba443ec: movabs $0x132828b18,%rdi  ;   {metadata(method data for {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba443f6: mov    0x104(%rdi),%ebx
  0x000000011ba443fc: add    $0x8,%ebx
  0x000000011ba443ff: mov    %ebx,0x104(%rdi)
  0x000000011ba44405: and    $0x1ff8,%ebx
  0x000000011ba4440b: cmp    $0x0,%ebx
  0x000000011ba4440e: je     0x000000011ba444c4  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@0 (line 631)

  0x000000011ba44414: mov    %rsi,%rdi
  0x000000011ba44417: movabs $0x132828b18,%rbx  ;   {metadata(method data for {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba44421: addq   $0x1,0x140(%rbx)
  0x000000011ba44429: movabs $0x1326ded60,%rdi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba44433: mov    0x104(%rdi),%ebx
  0x000000011ba44439: add    $0x8,%ebx
  0x000000011ba4443c: mov    %ebx,0x104(%rdi)
  0x000000011ba44442: and    $0x7ffff8,%ebx
  0x000000011ba44448: cmp    $0x0,%ebx
  0x000000011ba4444b: je     0x000000011ba444e5
  0x000000011ba44451: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 632)

  0x000000011ba44454: movsbl 0x30(%r15),%edi
  0x000000011ba44459: cmp    $0x0,%edi
  0x000000011ba4445c: jne    0x000000011ba44506
  0x000000011ba44462: mov    %rcx,%r10
  0x000000011ba44465: shr    $0x3,%r10
  0x000000011ba44469: mov    %r10d,0x10(%rsi)
  0x000000011ba4446d: mov    %rsi,%rdi
  0x000000011ba44470: xor    %rcx,%rdi
  0x000000011ba44473: shr    $0x14,%rdi
  0x000000011ba44477: cmp    $0x0,%rdi
  0x000000011ba4447b: jne    0x000000011ba44525  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@11 (line 633)

  0x000000011ba44481: movsbl 0x30(%r15),%edi
  0x000000011ba44486: cmp    $0x0,%edi
  0x000000011ba44489: jne    0x000000011ba4453d
  0x000000011ba4448f: mov    %r8,%r10
  0x000000011ba44492: shr    $0x3,%r10
  0x000000011ba44496: mov    %r10d,0x14(%rsi)
  0x000000011ba4449a: lock addl $0x0,-0x40(%rsp)
  0x000000011ba444a0: mov    %rsi,%rdi
  0x000000011ba444a3: xor    %r8,%rdi
  0x000000011ba444a6: shr    $0x14,%rdi
  0x000000011ba444aa: cmp    $0x0,%rdi
  0x000000011ba444ae: jne    0x000000011ba4455c  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 634)

  0x000000011ba444b4: add    $0x30,%rsp
  0x000000011ba444b8: pop    %rbp
  0x000000011ba444b9: mov    0x108(%r15),%r10
  0x000000011ba444c0: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba444c3: retq   
  0x000000011ba444c4: movabs $0x1325eee18,%r10  ;   {metadata({method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba444ce: mov    %r10,0x8(%rsp)
  0x000000011ba444d3: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba444db: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 631)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba444e0: jmpq   0x000000011ba44414
  0x000000011ba444e5: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba444ef: mov    %r10,0x8(%rsp)
  0x000000011ba444f4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba444fc: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 631)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba44501: jmpq   0x000000011ba44451
  0x000000011ba44506: mov    0x10(%rsi),%edi
  0x000000011ba44509: shl    $0x3,%rdi
  0x000000011ba4450d: cmp    $0x0,%rdi
  0x000000011ba44511: je     0x000000011ba44462
  0x000000011ba44517: mov    %rdi,(%rsp)
  0x000000011ba4451b: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba44520: jmpq   0x000000011ba44462
  0x000000011ba44525: cmp    $0x0,%rcx
  0x000000011ba44529: je     0x000000011ba44481
  0x000000011ba4452f: mov    %rsi,(%rsp)
  0x000000011ba44533: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba44538: jmpq   0x000000011ba44481
  0x000000011ba4453d: mov    0x14(%rsi),%edi
  0x000000011ba44540: shl    $0x3,%rdi
  0x000000011ba44544: cmp    $0x0,%rdi
  0x000000011ba44548: je     0x000000011ba4448f
  0x000000011ba4454e: mov    %rdi,(%rsp)
  0x000000011ba44552: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba44557: jmpq   0x000000011ba4448f
  0x000000011ba4455c: cmp    $0x0,%r8
  0x000000011ba44560: je     0x000000011ba444b4
  0x000000011ba44566: mov    %rsi,(%rsp)
  0x000000011ba4456a: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba4456f: jmpq   0x000000011ba444b4
  0x000000011ba44574: nop
  0x000000011ba44575: nop
  0x000000011ba44576: mov    0x420(%r15),%rax
  0x000000011ba4457d: movabs $0x0,%r10
  0x000000011ba44587: mov    %r10,0x420(%r15)
  0x000000011ba4458e: movabs $0x0,%r10
  0x000000011ba44598: mov    %r10,0x428(%r15)
  0x000000011ba4459f: add    $0x30,%rsp
  0x000000011ba445a3: pop    %rbp
  0x000000011ba445a4: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba445a9: hlt    
  0x000000011ba445aa: hlt    
  0x000000011ba445ab: hlt    
  0x000000011ba445ac: hlt    
  0x000000011ba445ad: hlt    
  0x000000011ba445ae: hlt    
  0x000000011ba445af: hlt    
  0x000000011ba445b0: hlt    
  0x000000011ba445b1: hlt    
  0x000000011ba445b2: hlt    
  0x000000011ba445b3: hlt    
  0x000000011ba445b4: hlt    
  0x000000011ba445b5: hlt    
  0x000000011ba445b6: hlt    
  0x000000011ba445b7: hlt    
  0x000000011ba445b8: hlt    
  0x000000011ba445b9: hlt    
  0x000000011ba445ba: hlt    
  0x000000011ba445bb: hlt    
  0x000000011ba445bc: hlt    
  0x000000011ba445bd: hlt    
  0x000000011ba445be: hlt    
  0x000000011ba445bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba445c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba445c5: mov    %rsp,-0x28(%rsp)
  0x000000011ba445ca: sub    $0x80,%rsp
  0x000000011ba445d1: mov    %rax,0x78(%rsp)
  0x000000011ba445d6: mov    %rcx,0x70(%rsp)
  0x000000011ba445db: mov    %rdx,0x68(%rsp)
  0x000000011ba445e0: mov    %rbx,0x60(%rsp)
  0x000000011ba445e5: mov    %rbp,0x50(%rsp)
  0x000000011ba445ea: mov    %rsi,0x48(%rsp)
  0x000000011ba445ef: mov    %rdi,0x40(%rsp)
  0x000000011ba445f4: mov    %r8,0x38(%rsp)
  0x000000011ba445f9: mov    %r9,0x30(%rsp)
  0x000000011ba445fe: mov    %r10,0x28(%rsp)
  0x000000011ba44603: mov    %r11,0x20(%rsp)
  0x000000011ba44608: mov    %r12,0x18(%rsp)
  0x000000011ba4460d: mov    %r13,0x10(%rsp)
  0x000000011ba44612: mov    %r14,0x8(%rsp)
  0x000000011ba44617: mov    %r15,(%rsp)
  0x000000011ba4461b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba44625: movabs $0x11ba445c5,%rsi  ;   {internal_word}
  0x000000011ba4462f: mov    %rsp,%rdx
  0x000000011ba44632: and    $0xfffffffffffffff0,%rsp
  0x000000011ba44636: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4463b: hlt    
[Deopt Handler Code]
  0x000000011ba4463c: movabs $0x11ba4463c,%r10  ;   {section_word}
  0x000000011ba44646: push   %r10
  0x000000011ba44648: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4464d: hlt    
  0x000000011ba4464e: hlt    
  0x000000011ba4464f: hlt    

ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }pc offsets: 288 321 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='38' method='java.lang.Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='128' iicount='128' level='1' stamp='0.162' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='36' compiler='c1' level='3' entry='0x000000011ba44940' size='872' address='0x000000011ba44790' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='800' dependencies_offset='864' metadata_offset='768' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='399' iicount='399' stamp='0.162'/>
<print_nmethod stamp='0.162'>
Compiled method (c1)     162   36       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x000000011ba44790,0x000000011ba44af8] = 872
 relocation     [0x000000011ba44908,0x000000011ba44930] = 40
 main code      [0x000000011ba44940,0x000000011ba44a00] = 192
 stub code      [0x000000011ba44a00,0x000000011ba44a90] = 144
 metadata       [0x000000011ba44a90,0x000000011ba44a98] = 8
 scopes data    [0x000000011ba44a98,0x000000011ba44ab0] = 24
 scopes pcs     [0x000000011ba44ab0,0x000000011ba44af0] = 64
 dependencies   [0x000000011ba44af0,0x000000011ba44af8] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread(I)I  [0x000000011ba44940, 0x000000011ba44a90]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba44940: mov    %eax,-0x14000(%rsp)
  0x000000011ba44947: push   %rbp
  0x000000011ba44948: sub    $0x30,%rsp
  0x000000011ba4494c: movabs $0x132828e40,%rax  ;   {metadata(method data for {method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba44956: mov    0x104(%rax),%edi
  0x000000011ba4495c: add    $0x8,%edi
  0x000000011ba4495f: mov    %edi,0x104(%rax)
  0x000000011ba44965: and    $0x1ff8,%edi
  0x000000011ba4496b: cmp    $0x0,%edi
  0x000000011ba4496e: je     0x000000011ba44993  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 697)

  0x000000011ba44974: mov    %rsi,%rax
  0x000000011ba44977: shr    $0x10,%eax
  0x000000011ba4497a: xor    %rsi,%rax
  0x000000011ba4497d: and    $0x7fffffff,%eax
  0x000000011ba44983: add    $0x30,%rsp
  0x000000011ba44987: pop    %rbp
  0x000000011ba44988: mov    0x108(%r15),%r10
  0x000000011ba4498f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba44992: retq   
  0x000000011ba44993: movabs $0x1325dd908,%r10  ;   {metadata({method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4499d: mov    %r10,0x8(%rsp)
  0x000000011ba449a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba449aa: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba449af: jmp    0x000000011ba44974
  0x000000011ba449b1: nop
  0x000000011ba449b2: nop
  0x000000011ba449b3: mov    0x420(%r15),%rax
  0x000000011ba449ba: movabs $0x0,%r10
  0x000000011ba449c4: mov    %r10,0x420(%r15)
  0x000000011ba449cb: movabs $0x0,%r10
  0x000000011ba449d5: mov    %r10,0x428(%r15)
  0x000000011ba449dc: add    $0x30,%rsp
  0x000000011ba449e0: pop    %rbp
  0x000000011ba449e1: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba449e6: hlt    
  0x000000011ba449e7: hlt    
  0x000000011ba449e8: hlt    
  0x000000011ba449e9: hlt    
  0x000000011ba449ea: hlt    
  0x000000011ba449eb: hlt    
  0x000000011ba449ec: hlt    
  0x000000011ba449ed: hlt    
  0x000000011ba449ee: hlt    
  0x000000011ba449ef: hlt    
  0x000000011ba449f0: hlt    
  0x000000011ba449f1: hlt    
  0x000000011ba449f2: hlt    
  0x000000011ba449f3: hlt    
  0x000000011ba449f4: hlt    
  0x000000011ba449f5: hlt    
  0x000000011ba449f6: hlt    
  0x000000011ba449f7: hlt    
  0x000000011ba449f8: hlt    
  0x000000011ba449f9: hlt    
  0x000000011ba449fa: hlt    
  0x000000011ba449fb: hlt    
  0x000000011ba449fc: hlt    
  0x000000011ba449fd: hlt    
  0x000000011ba449fe: hlt    
  0x000000011ba449ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba44a00: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba44a05: mov    %rsp,-0x28(%rsp)
  0x000000011ba44a0a: sub    $0x80,%rsp
  0x000000011ba44a11: mov    %rax,0x78(%rsp)
  0x000000011ba44a16: mov    %rcx,0x70(%rsp)
  0x000000011ba44a1b: mov    %rdx,0x68(%rsp)
  0x000000011ba44a20: mov    %rbx,0x60(%rsp)
  0x000000011ba44a25: mov    %rbp,0x50(%rsp)
  0x000000011ba44a2a: mov    %rsi,0x48(%rsp)
  0x000000011ba44a2f: mov    %rdi,0x40(%rsp)
  0x000000011ba44a34: mov    %r8,0x38(%rsp)
  0x000000011ba44a39: mov    %r9,0x30(%rsp)
  0x000000011ba44a3e: mov    %r10,0x28(%rsp)
  0x000000011ba44a43: mov    %r11,0x20(%rsp)
  0x000000011ba44a48: mov    %r12,0x18(%rsp)
  0x000000011ba44a4d: mov    %r13,0x10(%rsp)
  0x000000011ba44a52: mov    %r14,0x8(%rsp)
  0x000000011ba44a57: mov    %r15,(%rsp)
  0x000000011ba44a5b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba44a65: movabs $0x11ba44a05,%rsi  ;   {internal_word}
  0x000000011ba44a6f: mov    %rsp,%rdx
  0x000000011ba44a72: and    $0xfffffffffffffff0,%rsp
  0x000000011ba44a76: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba44a7b: hlt    
[Deopt Handler Code]
  0x000000011ba44a7c: movabs $0x11ba44a7c,%r10  ;   {section_word}
  0x000000011ba44a86: push   %r10
  0x000000011ba44a88: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba44a8d: hlt    
  0x000000011ba44a8e: hlt    
  0x000000011ba44a8f: hlt    

ImmutableOopMap{}pc offsets: 111 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='39' method='java.util.concurrent.ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='21' count='256' iicount='256' level='3' stamp='0.164' comment='tiered' hot_count='256'/>
<writer thread='15875'/>
<nmethod compile_id='39' compiler='c1' level='3' entry='0x000000011ba44cc0' size='1024' address='0x000000011ba44b10' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='936' dependencies_offset='1016' metadata_offset='896' method='java.util.concurrent.ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='21' count='256' iicount='256' stamp='0.164'/>
<print_nmethod stamp='0.164'>
Compiled method (c1)     164   39       3       java.util.concurrent.ConcurrentHashMap::casTabAt (21 bytes)
 total in heap  [0x000000011ba44b10,0x000000011ba44f10] = 1024
 relocation     [0x000000011ba44c88,0x000000011ba44cb8] = 48
 main code      [0x000000011ba44cc0,0x000000011ba44e00] = 320
 stub code      [0x000000011ba44e00,0x000000011ba44e90] = 144
 metadata       [0x000000011ba44e90,0x000000011ba44e98] = 8
 scopes data    [0x000000011ba44e98,0x000000011ba44eb8] = 32
 scopes pcs     [0x000000011ba44eb8,0x000000011ba44f08] = 80
 dependencies   [0x000000011ba44f08,0x000000011ba44f10] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.casTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z  [0x000000011ba44cc0, 0x000000011ba44e90]  464 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325dddc8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # parm3:    r8:r8     = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ba44cc0: mov    %eax,-0x14000(%rsp)
  0x000000011ba44cc7: push   %rbp
  0x000000011ba44cc8: sub    $0x40,%rsp
  0x000000011ba44ccc: mov    %rcx,%rax
  0x000000011ba44ccf: movabs $0x132830190,%rcx  ;   {metadata(method data for {method} {0x00000001325dddc8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba44cd9: mov    0x104(%rcx),%edi
  0x000000011ba44cdf: add    $0x8,%edi
  0x000000011ba44ce2: mov    %edi,0x104(%rcx)
  0x000000011ba44ce8: and    $0x1ff8,%edi
  0x000000011ba44cee: cmp    $0x0,%edi
  0x000000011ba44cf1: je     0x000000011ba44d68  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@0 (line 765)

  0x000000011ba44cf7: movslq %edx,%rdx
  0x000000011ba44cfa: mov    $0x2,%ecx
  0x000000011ba44cff: shl    %cl,%rdx
  0x000000011ba44d02: movabs $0x10,%r10
  0x000000011ba44d0c: add    %r10,%rdx
  0x000000011ba44d0f: lea    (%rsi,%rdx,1),%rsi
  0x000000011ba44d13: movsbl 0x30(%r15),%edi
  0x000000011ba44d18: cmp    $0x0,%edi
  0x000000011ba44d1b: jne    0x000000011ba44d89
  0x000000011ba44d21: shr    $0x3,%rax
  0x000000011ba44d25: mov    %r8,%r10
  0x000000011ba44d28: shr    $0x3,%r10
  0x000000011ba44d2c: lock cmpxchg %r10d,(%rsi)
  0x000000011ba44d31: mov    $0x1,%eax
  0x000000011ba44d36: je     0x000000011ba44d41
  0x000000011ba44d3c: mov    $0x0,%eax
  0x000000011ba44d41: mov    %rsi,%rdi
  0x000000011ba44d44: xor    %r8,%rdi
  0x000000011ba44d47: shr    $0x14,%rdi
  0x000000011ba44d4b: cmp    $0x0,%rdi
  0x000000011ba44d4f: jne    0x000000011ba44da0  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)

  0x000000011ba44d55: and    $0x1,%eax
  0x000000011ba44d58: add    $0x40,%rsp
  0x000000011ba44d5c: pop    %rbp
  0x000000011ba44d5d: mov    0x108(%r15),%r10
  0x000000011ba44d64: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba44d67: retq   
  0x000000011ba44d68: movabs $0x1325dddc8,%r10  ;   {metadata({method} {0x00000001325dddc8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba44d72: mov    %r10,0x8(%rsp)
  0x000000011ba44d77: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba44d7f: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rax=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 765)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba44d84: jmpq   0x000000011ba44cf7
  0x000000011ba44d89: mov    (%rsi),%edi
  0x000000011ba44d8b: shl    $0x3,%rdi
  0x000000011ba44d8f: cmp    $0x0,%rdi
  0x000000011ba44d93: je     0x000000011ba44d21
  0x000000011ba44d95: mov    %rdi,(%rsp)
  0x000000011ba44d99: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba44d9e: jmp    0x000000011ba44d21
  0x000000011ba44da0: cmp    $0x0,%r8
  0x000000011ba44da4: je     0x000000011ba44d55
  0x000000011ba44da6: mov    %rsi,(%rsp)
  0x000000011ba44daa: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba44daf: jmp    0x000000011ba44d55
  0x000000011ba44db1: nop
  0x000000011ba44db2: nop
  0x000000011ba44db3: mov    0x420(%r15),%rax
  0x000000011ba44dba: movabs $0x0,%r10
  0x000000011ba44dc4: mov    %r10,0x420(%r15)
  0x000000011ba44dcb: movabs $0x0,%r10
  0x000000011ba44dd5: mov    %r10,0x428(%r15)
  0x000000011ba44ddc: add    $0x40,%rsp
  0x000000011ba44de0: pop    %rbp
  0x000000011ba44de1: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba44de6: hlt    
  0x000000011ba44de7: hlt    
  0x000000011ba44de8: hlt    
  0x000000011ba44de9: hlt    
  0x000000011ba44dea: hlt    
  0x000000011ba44deb: hlt    
  0x000000011ba44dec: hlt    
  0x000000011ba44ded: hlt    
  0x000000011ba44dee: hlt    
  0x000000011ba44def: hlt    
  0x000000011ba44df0: hlt    
  0x000000011ba44df1: hlt    
  0x000000011ba44df2: hlt    
  0x000000011ba44df3: hlt    
  0x000000011ba44df4: hlt    
  0x000000011ba44df5: hlt    
  0x000000011ba44df6: hlt    
  0x000000011ba44df7: hlt    
  0x000000011ba44df8: hlt    
  0x000000011ba44df9: hlt    
  0x000000011ba44dfa: hlt    
  0x000000011ba44dfb: hlt    
  0x000000011ba44dfc: hlt    
  0x000000011ba44dfd: hlt    
  0x000000011ba44dfe: hlt    
  0x000000011ba44dff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba44e00: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba44e05: mov    %rsp,-0x28(%rsp)
  0x000000011ba44e0a: sub    $0x80,%rsp
  0x000000011ba44e11: mov    %rax,0x78(%rsp)
  0x000000011ba44e16: mov    %rcx,0x70(%rsp)
  0x000000011ba44e1b: mov    %rdx,0x68(%rsp)
  0x000000011ba44e20: mov    %rbx,0x60(%rsp)
  0x000000011ba44e25: mov    %rbp,0x50(%rsp)
  0x000000011ba44e2a: mov    %rsi,0x48(%rsp)
  0x000000011ba44e2f: mov    %rdi,0x40(%rsp)
  0x000000011ba44e34: mov    %r8,0x38(%rsp)
  0x000000011ba44e39: mov    %r9,0x30(%rsp)
  0x000000011ba44e3e: mov    %r10,0x28(%rsp)
  0x000000011ba44e43: mov    %r11,0x20(%rsp)
  0x000000011ba44e48: mov    %r12,0x18(%rsp)
  0x000000011ba44e4d: mov    %r13,0x10(%rsp)
  0x000000011ba44e52: mov    %r14,0x8(%rsp)
  0x000000011ba44e57: mov    %r15,(%rsp)
  0x000000011ba44e5b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba44e65: movabs $0x11ba44e05,%rsi  ;   {internal_word}
  0x000000011ba44e6f: mov    %rsp,%rdx
  0x000000011ba44e72: and    $0xfffffffffffffff0,%rsp
  0x000000011ba44e76: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba44e7b: hlt    
[Deopt Handler Code]
  0x000000011ba44e7c: movabs $0x11ba44e7c,%r10  ;   {section_word}
  0x000000011ba44e86: push   %r10
  0x000000011ba44e88: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba44e8d: hlt    
  0x000000011ba44e8e: hlt    
  0x000000011ba44e8f: hlt    

ImmutableOopMap{rsi=Oop rax=Oop r8=Oop }pc offsets: 196 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='40' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f768a0' size='432' address='0x0000000122f76710' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.166'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f768a0, 0x0000000122f768c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132833d88} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f768a0: mov    0x24(%rcx),%ebx
  0x0000000122f768a3: shl    $0x3,%rbx
  0x0000000122f768a7: mov    0x10(%rbx),%rbx
  0x0000000122f768ab: test   %rbx,%rbx
  0x0000000122f768ae: je     0x0000000122f768b7
  0x0000000122f768b4: jmpq   *0x38(%rbx)
  0x0000000122f768b7: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f768bc: hlt    
  0x0000000122f768bd: hlt    
  0x0000000122f768be: hlt    
  0x0000000122f768bf: hlt    
<writer thread='15875'/>
<nmethod compile_id='38' compiler='c1' level='1' entry='0x0000000122f76ac0' size='800' address='0x0000000122f76910' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='142' iicount='142' stamp='0.167'/>
<print_nmethod stamp='0.167'>
Compiled method (c1)     166   38       1       java.lang.Class::getClassLoader0 (5 bytes)
 total in heap  [0x0000000122f76910,0x0000000122f76c30] = 800
 relocation     [0x0000000122f76a88,0x0000000122f76ab0] = 40
 main code      [0x0000000122f76ac0,0x0000000122f76b40] = 128
 stub code      [0x0000000122f76b40,0x0000000122f76bd0] = 144
 metadata       [0x0000000122f76bd0,0x0000000122f76bd8] = 8
 scopes data    [0x0000000122f76bd8,0x0000000122f76be8] = 16
 scopes pcs     [0x0000000122f76be8,0x0000000122f76c28] = 64
 dependencies   [0x0000000122f76c28,0x0000000122f76c30] = 8
----------------------------------------------------------------------
java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;  [0x0000000122f76ac0, 0x0000000122f76bd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324bbd80} &apos;getClassLoader0&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f76ac0: mov    0x8(%rsi),%r10d
  0x0000000122f76ac4: movabs $0x800000000,%r12
  0x0000000122f76ace: add    %r12,%r10
  0x0000000122f76ad1: xor    %r12,%r12
  0x0000000122f76ad4: cmp    %rax,%r10
  0x0000000122f76ad7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f76add: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f76ae0: mov    %eax,-0x14000(%rsp)
  0x0000000122f76ae7: push   %rbp
  0x0000000122f76ae8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@0 (line 837)

  0x0000000122f76aec: mov    0x1c(%rsi),%eax
  0x0000000122f76aef: shl    $0x3,%rax          ;*getfield classLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@1 (line 837)

  0x0000000122f76af3: add    $0x30,%rsp
  0x0000000122f76af7: pop    %rbp
  0x0000000122f76af8: mov    0x108(%r15),%r10
  0x0000000122f76aff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f76b02: retq   
  0x0000000122f76b03: nop
  0x0000000122f76b04: nop
  0x0000000122f76b05: mov    0x420(%r15),%rax
  0x0000000122f76b0c: movabs $0x0,%r10
  0x0000000122f76b16: mov    %r10,0x420(%r15)
  0x0000000122f76b1d: movabs $0x0,%r10
  0x0000000122f76b27: mov    %r10,0x428(%r15)
  0x0000000122f76b2e: add    $0x30,%rsp
  0x0000000122f76b32: pop    %rbp
  0x0000000122f76b33: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f76b38: hlt    
  0x0000000122f76b39: hlt    
  0x0000000122f76b3a: hlt    
  0x0000000122f76b3b: hlt    
  0x0000000122f76b3c: hlt    
  0x0000000122f76b3d: hlt    
  0x0000000122f76b3e: hlt    
  0x0000000122f76b3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f76b40: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f76b45: mov    %rsp,-0x28(%rsp)
  0x0000000122f76b4a: sub    $0x80,%rsp
  0x0000000122f76b51: mov    %rax,0x78(%rsp)
  0x0000000122f76b56: mov    %rcx,0x70(%rsp)
  0x0000000122f76b5b: mov    %rdx,0x68(%rsp)
  0x0000000122f76b60: mov    %rbx,0x60(%rsp)
  0x0000000122f76b65: mov    %rbp,0x50(%rsp)
  0x0000000122f76b6a: mov    %rsi,0x48(%rsp)
  0x0000000122f76b6f: mov    %rdi,0x40(%rsp)
  0x0000000122f76b74: mov    %r8,0x38(%rsp)
  0x0000000122f76b79: mov    %r9,0x30(%rsp)
  0x0000000122f76b7e: mov    %r10,0x28(%rsp)
  0x0000000122f76b83: mov    %r11,0x20(%rsp)
  0x0000000122f76b88: mov    %r12,0x18(%rsp)
  0x0000000122f76b8d: mov    %r13,0x10(%rsp)
  0x0000000122f76b92: mov    %r14,0x8(%rsp)
  0x0000000122f76b97: mov    %r15,(%rsp)
  0x0000000122f76b9b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f76ba5: movabs $0x122f76b45,%rsi  ;   {internal_word}
  0x0000000122f76baf: mov    %rsp,%rdx
  0x0000000122f76bb2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f76bb6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f76bbb: hlt    
[Deopt Handler Code]
  0x0000000122f76bbc: movabs $0x122f76bbc,%r10  ;   {section_word}
  0x0000000122f76bc6: push   %r10
  0x0000000122f76bc8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f76bcd: hlt    
  0x0000000122f76bce: hlt    
  0x0000000122f76bcf: hlt    
</print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='41' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f76e20' size='432' address='0x0000000122f76c90' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.168'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f76e20, 0x0000000122f76e40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132835778} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f76e20: mov    0x24(%r8),%ebx
  0x0000000122f76e24: shl    $0x3,%rbx
  0x0000000122f76e28: mov    0x10(%rbx),%rbx
  0x0000000122f76e2c: test   %rbx,%rbx
  0x0000000122f76e2f: je     0x0000000122f76e38
  0x0000000122f76e35: jmpq   *0x38(%rbx)
  0x0000000122f76e38: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f76e3d: hlt    
  0x0000000122f76e3e: hlt    
  0x0000000122f76e3f: hlt    
<task_queued compile_id='42' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.169' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='42' compiler='c1' level='1' entry='0x0000000122f77040' size='800' address='0x0000000122f76e90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='129' iicount='129' stamp='0.169'/>
<print_nmethod stamp='0.169'>
Compiled method (c1)     168   42       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
 total in heap  [0x0000000122f76e90,0x0000000122f771b0] = 800
 relocation     [0x0000000122f77008,0x0000000122f77030] = 40
 main code      [0x0000000122f77040,0x0000000122f770c0] = 128
 stub code      [0x0000000122f770c0,0x0000000122f77150] = 144
 metadata       [0x0000000122f77150,0x0000000122f77158] = 8
 scopes data    [0x0000000122f77158,0x0000000122f77168] = 16
 scopes pcs     [0x0000000122f77168,0x0000000122f771a8] = 64
 dependencies   [0x0000000122f771a8,0x0000000122f771b0] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode()I  [0x0000000122f77040, 0x0000000122f77150]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132773e08} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f77040: mov    0x8(%rsi),%r10d
  0x0000000122f77044: movabs $0x800000000,%r12
  0x0000000122f7704e: add    %r12,%r10
  0x0000000122f77051: xor    %r12,%r12
  0x0000000122f77054: cmp    %rax,%r10
  0x0000000122f77057: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7705d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f77060: mov    %eax,-0x14000(%rsp)
  0x0000000122f77067: push   %rbp
  0x0000000122f77068: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@0 (line 1358)

  0x0000000122f7706c: mov    0x1c(%rsi),%eax    ;*getfield hashcode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@1 (line 1358)

  0x0000000122f7706f: add    $0x30,%rsp
  0x0000000122f77073: pop    %rbp
  0x0000000122f77074: mov    0x108(%r15),%r10
  0x0000000122f7707b: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7707e: retq   
  0x0000000122f7707f: nop
  0x0000000122f77080: nop
  0x0000000122f77081: mov    0x420(%r15),%rax
  0x0000000122f77088: movabs $0x0,%r10
  0x0000000122f77092: mov    %r10,0x420(%r15)
  0x0000000122f77099: movabs $0x0,%r10
  0x0000000122f770a3: mov    %r10,0x428(%r15)
  0x0000000122f770aa: add    $0x30,%rsp
  0x0000000122f770ae: pop    %rbp
  0x0000000122f770af: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f770b4: hlt    
  0x0000000122f770b5: hlt    
  0x0000000122f770b6: hlt    
  0x0000000122f770b7: hlt    
  0x0000000122f770b8: hlt    
  0x0000000122f770b9: hlt    
  0x0000000122f770ba: hlt    
  0x0000000122f770bb: hlt    
  0x0000000122f770bc: hlt    
  0x0000000122f770bd: hlt    
  0x0000000122f770be: hlt    
  0x0000000122f770bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f770c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f770c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f770ca: sub    $0x80,%rsp
  0x0000000122f770d1: mov    %rax,0x78(%rsp)
  0x0000000122f770d6: mov    %rcx,0x70(%rsp)
  0x0000000122f770db: mov    %rdx,0x68(%rsp)
  0x0000000122f770e0: mov    %rbx,0x60(%rsp)
  0x0000000122f770e5: mov    %rbp,0x50(%rsp)
  0x0000000122f770ea: mov    %rsi,0x48(%rsp)
  0x0000000122f770ef: mov    %rdi,0x40(%rsp)
  0x0000000122f770f4: mov    %r8,0x38(%rsp)
  0x0000000122f770f9: mov    %r9,0x30(%rsp)
  0x0000000122f770fe: mov    %r10,0x28(%rsp)
  0x0000000122f77103: mov    %r11,0x20(%rsp)
  0x0000000122f77108: mov    %r12,0x18(%rsp)
  0x0000000122f7710d: mov    %r13,0x10(%rsp)
  0x0000000122f77112: mov    %r14,0x8(%rsp)
  0x0000000122f77117: mov    %r15,(%rsp)
  0x0000000122f7711b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f77125: movabs $0x122f770c5,%rsi  ;   {internal_word}
  0x0000000122f7712f: mov    %rsp,%rdx
  0x0000000122f77132: and    $0xfffffffffffffff0,%rsp
  0x0000000122f77136: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7713b: hlt    
[Deopt Handler Code]
  0x0000000122f7713c: movabs $0x122f7713c,%r10  ;   {section_word}
  0x0000000122f77146: push   %r10
  0x0000000122f77148: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7714d: hlt    
  0x0000000122f7714e: hlt    
  0x0000000122f7714f: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='43' method='java.lang.String length ()I' bytes='11' count='384' iicount='384' level='3' stamp='0.170' comment='tiered' hot_count='384'/>
<nmethod compile_id='44' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f773c0' size='928' address='0x0000000122f77210' relocation_offset='376' consts_offset='928' insts_offset='432' method='java.lang.Class isPrimitive ()Z' bytes='0' count='256' iicount='256' stamp='0.170'/>
----------------------------------------------------------------------
java/lang/Class.isPrimitive()Z  [0x0000000122f773c0, 0x0000000122f775b0]  496 bytes
[Entry Point]
  # {method} {0x00000001324bb8d8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000122f773c0: mov    0x8(%rsi),%r10d
  0x0000000122f773c4: movabs $0x800000000,%r12
  0x0000000122f773ce: add    %r12,%r10
  0x0000000122f773d1: xor    %r12,%r12
  0x0000000122f773d4: cmp    %r10,%rax
  0x0000000122f773d7: je     0x0000000122f773e8
  0x0000000122f773dd: jmpq   0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f773e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000122f773e8: mov    %eax,-0x14000(%rsp)
  0x0000000122f773ef: push   %rbp
  0x0000000122f773f0: mov    %rsp,%rbp
  0x0000000122f773f3: sub    $0x40,%rsp
  0x0000000122f773f7: mov    %rsi,(%rsp)
  0x0000000122f773fb: cmp    $0x0,%rsi
  0x0000000122f773ff: lea    (%rsp),%rsi
  0x0000000122f77403: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x0000000122f77408: vzeroupper 
  0x0000000122f7740b: movabs $0x122f77408,%r10  ;   {internal_word}
  0x0000000122f77415: mov    %r10,0x328(%r15)
  0x0000000122f7741c: mov    %rsp,0x320(%r15)
  0x0000000122f77423: cmpb   $0x0,-0x14611ee8(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f7742a: je     0x0000000122f77462
  0x0000000122f77430: push   %rsi
  0x0000000122f77431: movabs $0x1324bb8d8,%rsi  ;   {metadata({method} {0x00000001324bb8d8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x0000000122f7743b: mov    %r15,%rdi
  0x0000000122f7743e: test   $0xf,%esp
  0x0000000122f77444: je     0x0000000122f7745c
  0x0000000122f7744a: sub    $0x8,%rsp
  0x0000000122f7744e: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f77453: add    $0x8,%rsp
  0x0000000122f77457: jmpq   0x0000000122f77461
  0x0000000122f7745c: callq  0x000000010e6780c4  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000122f77461: pop    %rsi
  0x0000000122f77462: lea    0x340(%r15),%rdi
  0x0000000122f77469: movl   $0x4,0x3b8(%r15)
  0x0000000122f77474: callq  0x000000010e4227fe  ;   {runtime_call JVM_IsPrimitiveClass}
  0x0000000122f77479: vzeroupper 
  0x0000000122f7747c: and    $0xff,%eax
  0x0000000122f77482: setne  %al
  0x0000000122f77485: movl   $0x5,0x3b8(%r15)
  0x0000000122f77490: lock addl $0x0,-0x40(%rsp)
  0x0000000122f77496: testb  $0x8,0x108(%r15)
  0x0000000122f7749e: jne    0x0000000122f774b5
  0x0000000122f774a4: cmpl   $0x0,0xd8(%r15)
  0x0000000122f774af: je     0x0000000122f774d9
  0x0000000122f774b5: vzeroupper 
  0x0000000122f774b8: mov    %rax,-0x8(%rbp)
  0x0000000122f774bc: mov    %r15,%rdi
  0x0000000122f774bf: mov    %rsp,%r12
  0x0000000122f774c2: sub    $0x0,%rsp
  0x0000000122f774c6: and    $0xfffffffffffffff0,%rsp
  0x0000000122f774ca: callq  0x000000010e701cce  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000122f774cf: mov    %r12,%rsp
  0x0000000122f774d2: xor    %r12,%r12
  0x0000000122f774d5: mov    -0x8(%rbp),%rax
  0x0000000122f774d9: movl   $0x8,0x3b8(%r15)
  0x0000000122f774e4: cmpl   $0x2,0x408(%r15)
  0x0000000122f774ef: je     0x0000000122f77585
  0x0000000122f774f5: cmpb   $0x0,-0x14611fba(%rip)        # 0x000000010e965542
                                                ;   {external_word}
  0x0000000122f774fc: je     0x0000000122f7753a
  0x0000000122f77502: mov    %rax,-0x8(%rbp)
  0x0000000122f77506: movabs $0x1324bb8d8,%rsi  ;   {metadata({method} {0x00000001324bb8d8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x0000000122f77510: mov    %r15,%rdi
  0x0000000122f77513: test   $0xf,%esp
  0x0000000122f77519: je     0x0000000122f77531
  0x0000000122f7751f: sub    $0x8,%rsp
  0x0000000122f77523: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f77528: add    $0x8,%rsp
  0x0000000122f7752c: jmpq   0x0000000122f77536
  0x0000000122f77531: callq  0x000000010e67813e  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000122f77536: mov    -0x8(%rbp),%rax
  0x0000000122f7753a: movabs $0x0,%r10
  0x0000000122f77544: mov    %r10,0x320(%r15)
  0x0000000122f7754b: movabs $0x0,%r10
  0x0000000122f77555: mov    %r10,0x328(%r15)
  0x0000000122f7755c: vzeroupper 
  0x0000000122f7755f: mov    0xe0(%r15),%rcx
  0x0000000122f77566: movl   $0x0,0x100(%rcx)
  0x0000000122f77570: leaveq 
  0x0000000122f77571: cmpq   $0x0,0x8(%r15)
  0x0000000122f77579: jne    0x0000000122f77580
  0x0000000122f7757f: retq   
  0x0000000122f77580: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000122f77585: vzeroupper 
  0x0000000122f77588: mov    %rax,-0x8(%rbp)
  0x0000000122f7758c: mov    %rsp,%r12
  0x0000000122f7758f: sub    $0x0,%rsp
  0x0000000122f77593: and    $0xfffffffffffffff0,%rsp
  0x0000000122f77597: callq  0x000000010e679d28  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000122f7759c: mov    %r12,%rsp
  0x0000000122f7759f: xor    %r12,%r12
  0x0000000122f775a2: mov    -0x8(%rbp),%rax
  0x0000000122f775a6: jmpq   0x0000000122f774f5
  0x0000000122f775ab: hlt    
  0x0000000122f775ac: hlt    
  0x0000000122f775ad: hlt    
  0x0000000122f775ae: hlt    
  0x0000000122f775af: hlt    
<writer thread='15875'/>
<nmethod compile_id='43' compiler='c1' level='3' entry='0x000000011ba45140' size='1224' address='0x000000011ba44f90' relocation_offset='376' insts_offset='432' stub_offset='784' scopes_data_offset='944' scopes_pcs_offset='1024' dependencies_offset='1200' nul_chk_table_offset='1208' metadata_offset='928' method='java.lang.String length ()I' bytes='11' count='385' iicount='385' stamp='0.174'/>
<print_nmethod stamp='0.174'>
Compiled method (c1)     173   43       3       java.lang.String::length (11 bytes)
 total in heap  [0x000000011ba44f90,0x000000011ba45458] = 1224
 relocation     [0x000000011ba45108,0x000000011ba45140] = 56
 main code      [0x000000011ba45140,0x000000011ba452a0] = 352
 stub code      [0x000000011ba452a0,0x000000011ba45330] = 144
 metadata       [0x000000011ba45330,0x000000011ba45340] = 16
 scopes data    [0x000000011ba45340,0x000000011ba45390] = 80
 scopes pcs     [0x000000011ba45390,0x000000011ba45440] = 176
 dependencies   [0x000000011ba45440,0x000000011ba45448] = 8
 nul chk table  [0x000000011ba45448,0x000000011ba45458] = 16
----------------------------------------------------------------------
java/lang/String.length()I  [0x000000011ba45140, 0x000000011ba45330]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba45140: mov    0x8(%rsi),%r10d
  0x000000011ba45144: movabs $0x800000000,%r12
  0x000000011ba4514e: add    %r12,%r10
  0x000000011ba45151: xor    %r12,%r12
  0x000000011ba45154: cmp    %rax,%r10
  0x000000011ba45157: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4515d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba45160: mov    %eax,-0x14000(%rsp)
  0x000000011ba45167: push   %rbp
  0x000000011ba45168: sub    $0x30,%rsp
  0x000000011ba4516c: movabs $0x132837808,%rcx  ;   {metadata(method data for {method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba45176: mov    0x104(%rcx),%eax
  0x000000011ba4517c: add    $0x8,%eax
  0x000000011ba4517f: mov    %eax,0x104(%rcx)
  0x000000011ba45185: and    $0x1ff8,%eax
  0x000000011ba4518b: cmp    $0x0,%eax
  0x000000011ba4518e: je     0x000000011ba45217  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 658)

  0x000000011ba45194: mov    0xc(%rsi),%ecx
  0x000000011ba45197: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)

  0x000000011ba4519b: mov    0xc(%rcx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; implicit exception: dispatches to 0x000000011ba45238
  0x000000011ba4519e: mov    %rsi,%rcx
  0x000000011ba451a1: movabs $0x132837808,%rdi  ;   {metadata(method data for {method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba451ab: addq   $0x1,0x140(%rdi)
  0x000000011ba451b3: movabs $0x1326e9230,%rcx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba451bd: mov    0x104(%rcx),%edi
  0x000000011ba451c3: add    $0x8,%edi
  0x000000011ba451c6: mov    %edi,0x104(%rcx)
  0x000000011ba451cc: and    $0x7ffff8,%edi
  0x000000011ba451d2: cmp    $0x0,%edi
  0x000000011ba451d5: je     0x000000011ba4523d
  0x000000011ba451db: movabs $0x1326e9230,%rcx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba451e5: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x000000011ba451eb: movsbl 0x14(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x000000011ba451ef: movabs $0x1326e9230,%rsi  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba451f9: incl   0x160(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x000000011ba451ff: shl    $0x18,%ecx
  0x000000011ba45202: sar    $0x18,%ecx
  0x000000011ba45205: sar    %cl,%eax
  0x000000011ba45207: add    $0x30,%rsp
  0x000000011ba4520b: pop    %rbp
  0x000000011ba4520c: mov    0x108(%r15),%r10
  0x000000011ba45213: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba45216: retq   
  0x000000011ba45217: movabs $0x1324b0320,%r10  ;   {metadata({method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba45221: mov    %r10,0x8(%rsp)
  0x000000011ba45226: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4522e: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba45233: jmpq   0x000000011ba45194
  0x000000011ba45238: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4523d: movabs $0x1324b5190,%r10  ;   {metadata({method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba45247: mov    %r10,0x8(%rsp)
  0x000000011ba4524c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba45254: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba45259: jmp    0x000000011ba451db
  0x000000011ba4525b: nop
  0x000000011ba4525c: nop
  0x000000011ba4525d: mov    0x420(%r15),%rax
  0x000000011ba45264: movabs $0x0,%r10
  0x000000011ba4526e: mov    %r10,0x420(%r15)
  0x000000011ba45275: movabs $0x0,%r10
  0x000000011ba4527f: mov    %r10,0x428(%r15)
  0x000000011ba45286: add    $0x30,%rsp
  0x000000011ba4528a: pop    %rbp
  0x000000011ba4528b: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba45290: hlt    
  0x000000011ba45291: hlt    
  0x000000011ba45292: hlt    
  0x000000011ba45293: hlt    
  0x000000011ba45294: hlt    
  0x000000011ba45295: hlt    
  0x000000011ba45296: hlt    
  0x000000011ba45297: hlt    
  0x000000011ba45298: hlt    
  0x000000011ba45299: hlt    
  0x000000011ba4529a: hlt    
  0x000000011ba4529b: hlt    
  0x000000011ba4529c: hlt    
  0x000000011ba4529d: hlt    
  0x000000011ba4529e: hlt    
  0x000000011ba4529f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba452a0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba452a5: mov    %rsp,-0x28(%rsp)
  0x000000011ba452aa: sub    $0x80,%rsp
  0x000000011ba452b1: mov    %rax,0x78(%rsp)
  0x000000011ba452b6: mov    %rcx,0x70(%rsp)
  0x000000011ba452bb: mov    %rdx,0x68(%rsp)
  0x000000011ba452c0: mov    %rbx,0x60(%rsp)
  0x000000011ba452c5: mov    %rbp,0x50(%rsp)
  0x000000011ba452ca: mov    %rsi,0x48(%rsp)
  0x000000011ba452cf: mov    %rdi,0x40(%rsp)
  0x000000011ba452d4: mov    %r8,0x38(%rsp)
  0x000000011ba452d9: mov    %r9,0x30(%rsp)
  0x000000011ba452de: mov    %r10,0x28(%rsp)
  0x000000011ba452e3: mov    %r11,0x20(%rsp)
  0x000000011ba452e8: mov    %r12,0x18(%rsp)
  0x000000011ba452ed: mov    %r13,0x10(%rsp)
  0x000000011ba452f2: mov    %r14,0x8(%rsp)
  0x000000011ba452f7: mov    %r15,(%rsp)
  0x000000011ba452fb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba45305: movabs $0x11ba452a5,%rsi  ;   {internal_word}
  0x000000011ba4530f: mov    %rsp,%rdx
  0x000000011ba45312: and    $0xfffffffffffffff0,%rsp
  0x000000011ba45316: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4531b: hlt    
[Deopt Handler Code]
  0x000000011ba4531c: movabs $0x11ba4531c,%r10  ;   {section_word}
  0x000000011ba45326: push   %r10
  0x000000011ba45328: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4532d: hlt    
  0x000000011ba4532e: hlt    
  0x000000011ba4532f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 243 253 281 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='45' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.176' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='45' compiler='c1' level='1' entry='0x0000000122f777c0' size='800' address='0x0000000122f77610' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='129' iicount='129' stamp='0.176'/>
<print_nmethod stamp='0.176'>
Compiled method (c1)     176   45       1       java.lang.invoke.MethodType::returnType (5 bytes)
 total in heap  [0x0000000122f77610,0x0000000122f77930] = 800
 relocation     [0x0000000122f77788,0x0000000122f777b0] = 40
 main code      [0x0000000122f777c0,0x0000000122f77840] = 128
 stub code      [0x0000000122f77840,0x0000000122f778d0] = 144
 metadata       [0x0000000122f778d0,0x0000000122f778d8] = 8
 scopes data    [0x0000000122f778d8,0x0000000122f778e8] = 16
 scopes pcs     [0x0000000122f778e8,0x0000000122f77928] = 64
 dependencies   [0x0000000122f77928,0x0000000122f77930] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType.returnType()Ljava/lang/Class;  [0x0000000122f777c0, 0x0000000122f778d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132540410} &apos;returnType&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f777c0: mov    0x8(%rsi),%r10d
  0x0000000122f777c4: movabs $0x800000000,%r12
  0x0000000122f777ce: add    %r12,%r10
  0x0000000122f777d1: xor    %r12,%r12
  0x0000000122f777d4: cmp    %rax,%r10
  0x0000000122f777d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f777dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f777e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f777e7: push   %rbp
  0x0000000122f777e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::returnType@0 (line 740)

  0x0000000122f777ec: mov    0xc(%rsi),%eax
  0x0000000122f777ef: shl    $0x3,%rax          ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::returnType@1 (line 740)

  0x0000000122f777f3: add    $0x30,%rsp
  0x0000000122f777f7: pop    %rbp
  0x0000000122f777f8: mov    0x108(%r15),%r10
  0x0000000122f777ff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f77802: retq   
  0x0000000122f77803: nop
  0x0000000122f77804: nop
  0x0000000122f77805: mov    0x420(%r15),%rax
  0x0000000122f7780c: movabs $0x0,%r10
  0x0000000122f77816: mov    %r10,0x420(%r15)
  0x0000000122f7781d: movabs $0x0,%r10
  0x0000000122f77827: mov    %r10,0x428(%r15)
  0x0000000122f7782e: add    $0x30,%rsp
  0x0000000122f77832: pop    %rbp
  0x0000000122f77833: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f77838: hlt    
  0x0000000122f77839: hlt    
  0x0000000122f7783a: hlt    
  0x0000000122f7783b: hlt    
  0x0000000122f7783c: hlt    
  0x0000000122f7783d: hlt    
  0x0000000122f7783e: hlt    
  0x0000000122f7783f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f77840: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f77845: mov    %rsp,-0x28(%rsp)
  0x0000000122f7784a: sub    $0x80,%rsp
  0x0000000122f77851: mov    %rax,0x78(%rsp)
  0x0000000122f77856: mov    %rcx,0x70(%rsp)
  0x0000000122f7785b: mov    %rdx,0x68(%rsp)
  0x0000000122f77860: mov    %rbx,0x60(%rsp)
  0x0000000122f77865: mov    %rbp,0x50(%rsp)
  0x0000000122f7786a: mov    %rsi,0x48(%rsp)
  0x0000000122f7786f: mov    %rdi,0x40(%rsp)
  0x0000000122f77874: mov    %r8,0x38(%rsp)
  0x0000000122f77879: mov    %r9,0x30(%rsp)
  0x0000000122f7787e: mov    %r10,0x28(%rsp)
  0x0000000122f77883: mov    %r11,0x20(%rsp)
  0x0000000122f77888: mov    %r12,0x18(%rsp)
  0x0000000122f7788d: mov    %r13,0x10(%rsp)
  0x0000000122f77892: mov    %r14,0x8(%rsp)
  0x0000000122f77897: mov    %r15,(%rsp)
  0x0000000122f7789b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f778a5: movabs $0x122f77845,%rsi  ;   {internal_word}
  0x0000000122f778af: mov    %rsp,%rdx
  0x0000000122f778b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f778b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f778bb: hlt    
[Deopt Handler Code]
  0x0000000122f778bc: movabs $0x122f778bc,%r10  ;   {section_word}
  0x0000000122f778c6: push   %r10
  0x0000000122f778c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f778cd: hlt    
  0x0000000122f778ce: hlt    
  0x0000000122f778cf: hlt    
</print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='46' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f77b20' size='448' address='0x0000000122f77990' relocation_offset='376' consts_offset='448' insts_offset='400' method='java.lang.invoke.MethodHandle invokeBasic ()Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.178'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic()Ljava/lang/Object;  [0x0000000122f77b20, 0x0000000122f77b50]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000013285f028} &apos;invokeBasic&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f77b20: mov    0x14(%rsi),%ebx
  0x0000000122f77b23: shl    $0x3,%rbx
  0x0000000122f77b27: mov    0x28(%rbx),%ebx
  0x0000000122f77b2a: shl    $0x3,%rbx
  0x0000000122f77b2e: mov    0x24(%rbx),%ebx
  0x0000000122f77b31: shl    $0x3,%rbx
  0x0000000122f77b35: mov    0x10(%rbx),%rbx
  0x0000000122f77b39: test   %rbx,%rbx
  0x0000000122f77b3c: je     0x0000000122f77b45
  0x0000000122f77b42: jmpq   *0x38(%rbx)
  0x0000000122f77b45: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f77b4a: hlt    
  0x0000000122f77b4b: hlt    
  0x0000000122f77b4c: hlt    
  0x0000000122f77b4d: hlt    
  0x0000000122f77b4e: hlt    
  0x0000000122f77b4f: hlt    
<nmethod compile_id='47' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f77d20' size='432' address='0x0000000122f77b90' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.178'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f77d20, 0x0000000122f77d40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000013285f140} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f77d20: cmp    (%rsi),%rax
  0x0000000122f77d23: mov    0x24(%rdx),%ebx
  0x0000000122f77d26: shl    $0x3,%rbx
  0x0000000122f77d2a: mov    0x10(%rbx),%rbx
  0x0000000122f77d2e: test   %rbx,%rbx
  0x0000000122f77d31: je     0x0000000122f77d3a
  0x0000000122f77d37: jmpq   *0x38(%rbx)
  0x0000000122f77d3a: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f77d3f: hlt    
<task_queued compile_id='48' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='512' iicount='512' level='3' stamp='0.179' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='48' compiler='c1' level='3' entry='0x000000011ba45660' size='1504' address='0x000000011ba45490' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1216' scopes_pcs_offset='1288' dependencies_offset='1480' nul_chk_table_offset='1488' metadata_offset='1208' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='514' iicount='514' stamp='0.179'/>
<print_nmethod stamp='0.179'>
Compiled method (c1)     179   48       3       java.util.Objects::equals (23 bytes)
 total in heap  [0x000000011ba45490,0x000000011ba45a70] = 1504
 relocation     [0x000000011ba45608,0x000000011ba45648] = 64
 main code      [0x000000011ba45660,0x000000011ba458a0] = 576
 stub code      [0x000000011ba458a0,0x000000011ba45948] = 168
 metadata       [0x000000011ba45948,0x000000011ba45950] = 8
 scopes data    [0x000000011ba45950,0x000000011ba45998] = 72
 scopes pcs     [0x000000011ba45998,0x000000011ba45a58] = 192
 dependencies   [0x000000011ba45a58,0x000000011ba45a60] = 8
 nul chk table  [0x000000011ba45a60,0x000000011ba45a70] = 16
----------------------------------------------------------------------
java/util/Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z  [0x000000011ba45660, 0x000000011ba45948]  744 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba45660: mov    %eax,-0x14000(%rsp)
  0x000000011ba45667: push   %rbp
  0x000000011ba45668: sub    $0x30,%rsp
  0x000000011ba4566c: movabs $0x13285f1a8,%rdi  ;   {metadata(method data for {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba45676: mov    0x104(%rdi),%ebx
  0x000000011ba4567c: add    $0x8,%ebx
  0x000000011ba4567f: mov    %ebx,0x104(%rdi)
  0x000000011ba45685: and    $0x1ff8,%ebx
  0x000000011ba4568b: cmp    $0x0,%ebx
  0x000000011ba4568e: je     0x000000011ba45827  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@0 (line 77)

  0x000000011ba45694: cmp    %rdx,%rsi
  0x000000011ba45697: movabs $0x13285f1a8,%rdi  ;   {metadata(method data for {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba456a1: movabs $0x140,%rbx
  0x000000011ba456ab: je     0x000000011ba456bb
  0x000000011ba456b1: movabs $0x150,%rbx
  0x000000011ba456bb: mov    (%rdi,%rbx,1),%rax
  0x000000011ba456bf: lea    0x1(%rax),%rax
  0x000000011ba456c3: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba456c7: je     0x000000011ba457ff  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@2 (line 77)

  0x000000011ba456cd: cmp    $0x0,%rsi
  0x000000011ba456d1: movabs $0x13285f1a8,%rdi  ;   {metadata(method data for {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba456db: movabs $0x160,%rbx
  0x000000011ba456e5: je     0x000000011ba456f5
  0x000000011ba456eb: movabs $0x170,%rbx
  0x000000011ba456f5: mov    (%rdi,%rbx,1),%rax
  0x000000011ba456f9: lea    0x1(%rax),%rax
  0x000000011ba456fd: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba45701: je     0x000000011ba457f5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@6 (line 77)

  0x000000011ba45707: cmp    (%rsi),%rax        ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11 (line 77)
                                                ; implicit exception: dispatches to 0x000000011ba45848
  0x000000011ba4570a: mov    %rsi,%rdi
  0x000000011ba4570d: movabs $0x13285f1a8,%rbx  ;   {metadata(method data for {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba45717: mov    0x8(%rdi),%edi
  0x000000011ba4571a: movabs $0x800000000,%r12
  0x000000011ba45724: add    %r12,%rdi
  0x000000011ba45727: xor    %r12,%r12
  0x000000011ba4572a: cmp    0x190(%rbx),%rdi
  0x000000011ba45731: jne    0x000000011ba45740
  0x000000011ba45733: addq   $0x1,0x198(%rbx)
  0x000000011ba4573b: jmpq   0x000000011ba457a6
  0x000000011ba45740: cmp    0x1a0(%rbx),%rdi
  0x000000011ba45747: jne    0x000000011ba45756
  0x000000011ba45749: addq   $0x1,0x1a8(%rbx)
  0x000000011ba45751: jmpq   0x000000011ba457a6
  0x000000011ba45756: cmpq   $0x0,0x190(%rbx)
  0x000000011ba45761: jne    0x000000011ba4577a
  0x000000011ba45763: mov    %rdi,0x190(%rbx)
  0x000000011ba4576a: movq   $0x1,0x198(%rbx)
  0x000000011ba45775: jmpq   0x000000011ba457a6
  0x000000011ba4577a: cmpq   $0x0,0x1a0(%rbx)
  0x000000011ba45785: jne    0x000000011ba4579e
  0x000000011ba45787: mov    %rdi,0x1a0(%rbx)
  0x000000011ba4578e: movq   $0x1,0x1a8(%rbx)
  0x000000011ba45799: jmpq   0x000000011ba457a6
  0x000000011ba4579e: addq   $0x1,0x180(%rbx)
  0x000000011ba457a6: nopl   0x0(%rax)
  0x000000011ba457ad: movabs $0x800001808,%rax
  0x000000011ba457b7: callq  0x000000011ba40420  ; ImmutableOopMap{}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11 (line 77)
                                                ;   {virtual_call}
  0x000000011ba457bc: cmp    $0x0,%eax
  0x000000011ba457bf: movabs $0x13285f1a8,%rax  ;   {metadata(method data for {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba457c9: movabs $0x1c8,%rsi
  0x000000011ba457d3: jne    0x000000011ba457e3
  0x000000011ba457d9: movabs $0x1b8,%rsi
  0x000000011ba457e3: mov    (%rax,%rsi,1),%rdi
  0x000000011ba457e7: lea    0x1(%rdi),%rdi
  0x000000011ba457eb: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba457ef: jne    0x000000011ba457ff  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@14 (line 77)

  0x000000011ba457f5: mov    $0x0,%eax
  0x000000011ba457fa: jmpq   0x000000011ba45814  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@22 (line 77)

  0x000000011ba457ff: movabs $0x13285f1a8,%rax  ;   {metadata(method data for {method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba45809: incl   0x1d8(%rax)
  0x000000011ba4580f: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@18 (line 77)

  0x000000011ba45814: and    $0x1,%eax
  0x000000011ba45817: add    $0x30,%rsp
  0x000000011ba4581b: pop    %rbp
  0x000000011ba4581c: mov    0x108(%r15),%r10
  0x000000011ba45823: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba45826: retq   
  0x000000011ba45827: movabs $0x1325c8fc8,%r10  ;   {metadata({method} {0x00000001325c8fc8} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x000000011ba45831: mov    %r10,0x8(%rsp)
  0x000000011ba45836: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4583e: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::equals@-1 (line 77)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba45843: jmpq   0x000000011ba45694
  0x000000011ba45848: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11 (line 77)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4584d: nop
  0x000000011ba4584e: nop
  0x000000011ba4584f: mov    0x420(%r15),%rax
  0x000000011ba45856: movabs $0x0,%r10
  0x000000011ba45860: mov    %r10,0x420(%r15)
  0x000000011ba45867: movabs $0x0,%r10
  0x000000011ba45871: mov    %r10,0x428(%r15)
  0x000000011ba45878: add    $0x30,%rsp
  0x000000011ba4587c: pop    %rbp
  0x000000011ba4587d: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba45882: hlt    
  0x000000011ba45883: hlt    
  0x000000011ba45884: hlt    
  0x000000011ba45885: hlt    
  0x000000011ba45886: hlt    
  0x000000011ba45887: hlt    
  0x000000011ba45888: hlt    
  0x000000011ba45889: hlt    
  0x000000011ba4588a: hlt    
  0x000000011ba4588b: hlt    
  0x000000011ba4588c: hlt    
  0x000000011ba4588d: hlt    
  0x000000011ba4588e: hlt    
  0x000000011ba4588f: hlt    
  0x000000011ba45890: hlt    
  0x000000011ba45891: hlt    
  0x000000011ba45892: hlt    
  0x000000011ba45893: hlt    
  0x000000011ba45894: hlt    
  0x000000011ba45895: hlt    
  0x000000011ba45896: hlt    
  0x000000011ba45897: hlt    
  0x000000011ba45898: hlt    
  0x000000011ba45899: hlt    
  0x000000011ba4589a: hlt    
  0x000000011ba4589b: hlt    
  0x000000011ba4589c: hlt    
  0x000000011ba4589d: hlt    
  0x000000011ba4589e: hlt    
  0x000000011ba4589f: hlt    
[Stub Code]
  0x000000011ba458a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba458a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba458af: jmpq   0x000000011ba458af  ;   {runtime_call}
[Exception Handler]
  0x000000011ba458b4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba458b9: mov    %rsp,-0x28(%rsp)
  0x000000011ba458be: sub    $0x80,%rsp
  0x000000011ba458c5: mov    %rax,0x78(%rsp)
  0x000000011ba458ca: mov    %rcx,0x70(%rsp)
  0x000000011ba458cf: mov    %rdx,0x68(%rsp)
  0x000000011ba458d4: mov    %rbx,0x60(%rsp)
  0x000000011ba458d9: mov    %rbp,0x50(%rsp)
  0x000000011ba458de: mov    %rsi,0x48(%rsp)
  0x000000011ba458e3: mov    %rdi,0x40(%rsp)
  0x000000011ba458e8: mov    %r8,0x38(%rsp)
  0x000000011ba458ed: mov    %r9,0x30(%rsp)
  0x000000011ba458f2: mov    %r10,0x28(%rsp)
  0x000000011ba458f7: mov    %r11,0x20(%rsp)
  0x000000011ba458fc: mov    %r12,0x18(%rsp)
  0x000000011ba45901: mov    %r13,0x10(%rsp)
  0x000000011ba45906: mov    %r14,0x8(%rsp)
  0x000000011ba4590b: mov    %r15,(%rsp)
  0x000000011ba4590f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba45919: movabs $0x11ba458b9,%rsi  ;   {internal_word}
  0x000000011ba45923: mov    %rsp,%rdx
  0x000000011ba45926: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4592a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4592f: hlt    
[Deopt Handler Code]
  0x000000011ba45930: movabs $0x11ba45930,%r10  ;   {section_word}
  0x000000011ba4593a: push   %r10
  0x000000011ba4593c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba45941: hlt    
  0x000000011ba45942: hlt    
  0x000000011ba45943: hlt    
  0x000000011ba45944: hlt    
  0x000000011ba45945: hlt    
  0x000000011ba45946: hlt    
  0x000000011ba45947: hlt    

ImmutableOopMap{}pc offsets: 348 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 483 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 493 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='49' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f77f20' size='432' address='0x0000000122f77d90' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.182'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000122f77f20, 0x0000000122f77f40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132861338} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f77f20: mov    0x24(%rcx),%ebx
  0x0000000122f77f23: shl    $0x3,%rbx
  0x0000000122f77f27: mov    0x10(%rbx),%rbx
  0x0000000122f77f2b: test   %rbx,%rbx
  0x0000000122f77f2e: je     0x0000000122f77f37
  0x0000000122f77f34: jmpq   *0x38(%rbx)
  0x0000000122f77f37: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f77f3c: hlt    
  0x0000000122f77f3d: hlt    
  0x0000000122f77f3e: hlt    
  0x0000000122f77f3f: hlt    
<task_queued compile_id='50' method='java.lang.invoke.MemberName testFlags (II)Z' bytes='16' count='256' iicount='256' level='3' stamp='0.182' comment='tiered' hot_count='256'/>
<task_queued compile_id='51' method='java.lang.invoke.MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='233' count='256' iicount='256' level='3' stamp='0.182' comment='tiered' hot_count='256'/>
<writer thread='15875'/>
<nmethod compile_id='50' compiler='c1' level='3' entry='0x000000011ba45c40' size='1056' address='0x000000011ba45a90' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='872' scopes_pcs_offset='920' dependencies_offset='1048' metadata_offset='864' method='java.lang.invoke.MemberName testFlags (II)Z' bytes='16' count='264' iicount='264' stamp='0.183'/>
<print_nmethod stamp='0.183'>
Compiled method (c1)     182   50       3       java.lang.invoke.MemberName::testFlags (16 bytes)
 total in heap  [0x000000011ba45a90,0x000000011ba45eb0] = 1056
 relocation     [0x000000011ba45c08,0x000000011ba45c38] = 48
 main code      [0x000000011ba45c40,0x000000011ba45d60] = 288
 stub code      [0x000000011ba45d60,0x000000011ba45df0] = 144
 metadata       [0x000000011ba45df0,0x000000011ba45df8] = 8
 scopes data    [0x000000011ba45df8,0x000000011ba45e28] = 48
 scopes pcs     [0x000000011ba45e28,0x000000011ba45ea8] = 128
 dependencies   [0x000000011ba45ea8,0x000000011ba45eb0] = 8
----------------------------------------------------------------------
java/lang/invoke/MemberName.testFlags(II)Z  [0x000000011ba45c40, 0x000000011ba45df0]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba45c40: mov    0x8(%rsi),%r10d
  0x000000011ba45c44: movabs $0x800000000,%r12
  0x000000011ba45c4e: add    %r12,%r10
  0x000000011ba45c51: xor    %r12,%r12
  0x000000011ba45c54: cmp    %rax,%r10
  0x000000011ba45c57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba45c5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba45c60: mov    %eax,-0x14000(%rsp)
  0x000000011ba45c67: push   %rbp
  0x000000011ba45c68: sub    $0x30,%rsp
  0x000000011ba45c6c: movabs $0x1328613a0,%rax  ;   {metadata(method data for {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba45c76: mov    0x104(%rax),%edi
  0x000000011ba45c7c: add    $0x8,%edi
  0x000000011ba45c7f: mov    %edi,0x104(%rax)
  0x000000011ba45c85: and    $0x1ff8,%edi
  0x000000011ba45c8b: cmp    $0x0,%edi
  0x000000011ba45c8e: je     0x000000011ba45d04  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@0 (line 363)

  0x000000011ba45c94: mov    0xc(%rsi),%eax     ;*getfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 363)

  0x000000011ba45c97: and    %rdx,%rax
  0x000000011ba45c9a: cmp    %ecx,%eax
  0x000000011ba45c9c: movabs $0x1328613a0,%rax  ;   {metadata(method data for {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba45ca6: movabs $0x140,%rsi
  0x000000011ba45cb0: jne    0x000000011ba45cc0
  0x000000011ba45cb6: movabs $0x150,%rsi
  0x000000011ba45cc0: mov    (%rax,%rsi,1),%rdi
  0x000000011ba45cc4: lea    0x1(%rdi),%rdi
  0x000000011ba45cc8: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba45ccc: jne    0x000000011ba45cec  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 363)

  0x000000011ba45cd2: movabs $0x1328613a0,%rax  ;   {metadata(method data for {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba45cdc: incl   0x160(%rax)
  0x000000011ba45ce2: mov    $0x1,%eax
  0x000000011ba45ce7: jmpq   0x000000011ba45cf1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 363)

  0x000000011ba45cec: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 363)

  0x000000011ba45cf1: and    $0x1,%eax
  0x000000011ba45cf4: add    $0x30,%rsp
  0x000000011ba45cf8: pop    %rbp
  0x000000011ba45cf9: mov    0x108(%r15),%r10
  0x000000011ba45d00: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba45d03: retq   
  0x000000011ba45d04: movabs $0x13252a800,%r10  ;   {metadata({method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba45d0e: mov    %r10,0x8(%rsp)
  0x000000011ba45d13: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba45d1b: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 363)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba45d20: jmpq   0x000000011ba45c94
  0x000000011ba45d25: nop
  0x000000011ba45d26: nop
  0x000000011ba45d27: mov    0x420(%r15),%rax
  0x000000011ba45d2e: movabs $0x0,%r10
  0x000000011ba45d38: mov    %r10,0x420(%r15)
  0x000000011ba45d3f: movabs $0x0,%r10
  0x000000011ba45d49: mov    %r10,0x428(%r15)
  0x000000011ba45d50: add    $0x30,%rsp
  0x000000011ba45d54: pop    %rbp
  0x000000011ba45d55: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba45d5a: hlt    
  0x000000011ba45d5b: hlt    
  0x000000011ba45d5c: hlt    
  0x000000011ba45d5d: hlt    
  0x000000011ba45d5e: hlt    
  0x000000011ba45d5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba45d60: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba45d65: mov    %rsp,-0x28(%rsp)
  0x000000011ba45d6a: sub    $0x80,%rsp
  0x000000011ba45d71: mov    %rax,0x78(%rsp)
  0x000000011ba45d76: mov    %rcx,0x70(%rsp)
  0x000000011ba45d7b: mov    %rdx,0x68(%rsp)
  0x000000011ba45d80: mov    %rbx,0x60(%rsp)
  0x000000011ba45d85: mov    %rbp,0x50(%rsp)
  0x000000011ba45d8a: mov    %rsi,0x48(%rsp)
  0x000000011ba45d8f: mov    %rdi,0x40(%rsp)
  0x000000011ba45d94: mov    %r8,0x38(%rsp)
  0x000000011ba45d99: mov    %r9,0x30(%rsp)
  0x000000011ba45d9e: mov    %r10,0x28(%rsp)
  0x000000011ba45da3: mov    %r11,0x20(%rsp)
  0x000000011ba45da8: mov    %r12,0x18(%rsp)
  0x000000011ba45dad: mov    %r13,0x10(%rsp)
  0x000000011ba45db2: mov    %r14,0x8(%rsp)
  0x000000011ba45db7: mov    %r15,(%rsp)
  0x000000011ba45dbb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba45dc5: movabs $0x11ba45d65,%rsi  ;   {internal_word}
  0x000000011ba45dcf: mov    %rsp,%rdx
  0x000000011ba45dd2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba45dd6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba45ddb: hlt    
[Deopt Handler Code]
  0x000000011ba45ddc: movabs $0x11ba45ddc,%r10  ;   {section_word}
  0x000000011ba45de6: push   %r10
  0x000000011ba45de8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba45ded: hlt    
  0x000000011ba45dee: hlt    
  0x000000011ba45def: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 224 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='52' method='java.lang.Math min (II)I' bytes='11' count='256' iicount='256' level='3' stamp='0.184' comment='tiered' hot_count='256'/>
<task_queued compile_id='53' method='java.lang.String isLatin1 ()Z' bytes='19' count='5632' iicount='5632' stamp='0.184' comment='tiered' hot_count='5632'/>
<nmethod compile_id='54' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f78120' size='432' address='0x0000000122f77f90' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.184'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f78120, 0x0000000122f78140]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132864ed0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f78120: mov    0x24(%rdx),%ebx
  0x0000000122f78123: shl    $0x3,%rbx
  0x0000000122f78127: mov    0x10(%rbx),%rbx
  0x0000000122f7812b: test   %rbx,%rbx
  0x0000000122f7812e: je     0x0000000122f78137
  0x0000000122f78134: jmpq   *0x38(%rbx)
  0x0000000122f78137: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f7813c: hlt    
  0x0000000122f7813d: hlt    
  0x0000000122f7813e: hlt    
  0x0000000122f7813f: hlt    
<writer thread='15363'/>
<nmethod compile_id='53' compiler='c2' level='4' entry='0x0000000122f78320' size='680' address='0x0000000122f78190' relocation_offset='376' insts_offset='400' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='560' dependencies_offset='672' metadata_offset='520' method='java.lang.String isLatin1 ()Z' bytes='19' count='5859' iicount='5859' stamp='0.185'/>
<make_not_entrant thread='15363' compile_id='7' compiler='c1' level='3' stamp='0.185'/>
<print_nmethod stamp='0.185'>
Compiled method (c2)     184   53       4       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x0000000122f78190,0x0000000122f78438] = 680
 relocation     [0x0000000122f78308,0x0000000122f78318] = 16
 main code      [0x0000000122f78320,0x0000000122f78380] = 96
 stub code      [0x0000000122f78380,0x0000000122f78398] = 24
 metadata       [0x0000000122f78398,0x0000000122f783a0] = 8
 scopes data    [0x0000000122f783a0,0x0000000122f783c0] = 32
 scopes pcs     [0x0000000122f783c0,0x0000000122f78430] = 112
 dependencies   [0x0000000122f78430,0x0000000122f78438] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x0000000122f78320, 0x0000000122f78398]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000122f78320: mov    0x8(%rsi),%r10d
  0x0000000122f78324: movabs $0x800000000,%r12
  0x0000000122f7832e: add    %r12,%r10
  0x0000000122f78331: xor    %r12,%r12
  0x0000000122f78334: cmp    %r10,%rax
  0x0000000122f78337: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7833d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f78340: mov    %eax,-0x14000(%rsp)
  0x0000000122f78347: push   %rbp
  0x0000000122f78348: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)

  0x0000000122f7834c: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x0000000122f78351: test   %r11d,%r11d
  0x0000000122f78354: jne    0x0000000122f7836b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x0000000122f78356: mov    $0x1,%eax
  0x0000000122f7835b: add    $0x10,%rsp
  0x0000000122f7835f: pop    %rbp
  0x0000000122f78360: mov    0x108(%r15),%r10
  0x0000000122f78367: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7836a: retq   
  0x0000000122f7836b: mov    $0xffffff4d,%esi
  0x0000000122f78370: mov    %r11d,%ebp
  0x0000000122f78373: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f78378: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x0000000122f7837a: hlt    
  0x0000000122f7837b: hlt    
  0x0000000122f7837c: hlt    
  0x0000000122f7837d: hlt    
  0x0000000122f7837e: hlt    
  0x0000000122f7837f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f78380: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f78385: callq  0x0000000122f7838a
  0x0000000122f7838a: subq   $0x5,(%rsp)
  0x0000000122f7838f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f78394: hlt    
  0x0000000122f78395: hlt    
  0x0000000122f78396: hlt    
  0x0000000122f78397: hlt    

ImmutableOopMap{}pc offsets: 88 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='51' compiler='c1' level='3' entry='0x000000011ba461a0' size='5192' address='0x000000011ba45f10' relocation_offset='376' insts_offset='656' stub_offset='3312' scopes_data_offset='3576' scopes_pcs_offset='4104' dependencies_offset='5128' nul_chk_table_offset='5136' oops_offset='3528' metadata_offset='3536' method='java.lang.invoke.MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='233' count='260' iicount='260' stamp='0.186'/>
<writer thread='9987'/>
<nmethod compile_id='55' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f78620' size='448' address='0x0000000122f78490' relocation_offset='376' consts_offset='448' insts_offset='400' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.186'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;)Ljava/lang/Object;  [0x0000000122f78620, 0x0000000122f78650]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132864fe8} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f78620: mov    0x14(%rsi),%ebx
  0x0000000122f78623: shl    $0x3,%rbx
  0x0000000122f78627: mov    0x28(%rbx),%ebx
  0x0000000122f7862a: shl    $0x3,%rbx
  0x0000000122f7862e: mov    0x24(%rbx),%ebx
  0x0000000122f78631: shl    $0x3,%rbx
  0x0000000122f78635: mov    0x10(%rbx),%rbx
  0x0000000122f78639: test   %rbx,%rbx
  0x0000000122f7863c: je     0x0000000122f78645
  0x0000000122f78642: jmpq   *0x38(%rbx)
  0x0000000122f78645: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f7864a: hlt    
  0x0000000122f7864b: hlt    
  0x0000000122f7864c: hlt    
  0x0000000122f7864d: hlt    
  0x0000000122f7864e: hlt    
  0x0000000122f7864f: hlt    
<writer thread='15875'/>
<print_nmethod stamp='0.186'>
Compiled method (c1)     186   51       3       java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)
 total in heap  [0x000000011ba45f10,0x000000011ba47358] = 5192
 relocation     [0x000000011ba46088,0x000000011ba46188] = 256
 main code      [0x000000011ba461a0,0x000000011ba46c00] = 2656
 stub code      [0x000000011ba46c00,0x000000011ba46cd8] = 216
 oops           [0x000000011ba46cd8,0x000000011ba46ce0] = 8
 metadata       [0x000000011ba46ce0,0x000000011ba46d08] = 40
 scopes data    [0x000000011ba46d08,0x000000011ba46f18] = 528
 scopes pcs     [0x000000011ba46f18,0x000000011ba47318] = 1024
 dependencies   [0x000000011ba47318,0x000000011ba47320] = 8
 nul chk table  [0x000000011ba47320,0x000000011ba47358] = 56
----------------------------------------------------------------------
java/lang/invoke/MethodTypeForm.canonicalize(Ljava/lang/Class;I)Ljava/lang/Class;  [0x000000011ba461a0, 0x000000011ba46cd8]  2872 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Class&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011ba461a0: mov    %eax,-0x14000(%rsp)
  0x000000011ba461a7: push   %rbp
  0x000000011ba461a8: sub    $0x60,%rsp
  0x000000011ba461ac: mov    %rsi,0x48(%rsp)
  0x000000011ba461b1: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba461bb: mov    0x104(%rdi),%ebx
  0x000000011ba461c1: add    $0x8,%ebx
  0x000000011ba461c4: mov    %ebx,0x104(%rdi)
  0x000000011ba461ca: and    $0x1ff8,%ebx
  0x000000011ba461d0: cmp    $0x0,%ebx
  0x000000011ba461d3: je     0x000000011ba46b07  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@0 (line 363)

  0x000000011ba461d9: movabs $0x70ff00780,%rdi  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00780} = &apos;java/lang/Object&apos;)}
  0x000000011ba461e3: cmp    %rdi,%rsi
  0x000000011ba461e6: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba461f0: movabs $0x150,%rbx
  0x000000011ba461fa: je     0x000000011ba4620a
  0x000000011ba46200: movabs $0x140,%rbx
  0x000000011ba4620a: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4620e: lea    0x1(%rax),%rax
  0x000000011ba46212: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba46216: je     0x000000011ba46add  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@3 (line 363)

  0x000000011ba4621c: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011ba46b28
  0x000000011ba4621f: mov    %rsi,%rdi
  0x000000011ba46222: movabs $0x1328636f0,%rbx  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba4622c: addq   $0x1,0x178(%rbx)
  0x000000011ba46234: mov    0x50(%rsi),%rdi
  0x000000011ba46238: cmp    $0x0,%edi
  0x000000011ba4623b: mov    $0x0,%edi
  0x000000011ba46240: jne    0x000000011ba4624b
  0x000000011ba46246: mov    $0x1,%edi          ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 365)

  0x000000011ba4624b: cmp    $0x0,%edi
  0x000000011ba4624e: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46258: movabs $0x1b0,%rbx
  0x000000011ba46262: jne    0x000000011ba46272
  0x000000011ba46268: movabs $0x1c0,%rbx
  0x000000011ba46272: mov    (%rdi,%rbx,1),%rax
  0x000000011ba46276: lea    0x1(%rax),%rax
  0x000000011ba4627a: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4627e: jne    0x000000011ba46514  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@13 (line 365)

  0x000000011ba46284: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba4628e: movabs $0x1d8,%rbx
  0x000000011ba46298: cmp    $0x1,%edx
  0x000000011ba4629b: mov    %rbx,%rax
  0x000000011ba4629e: movabs $0x1e8,%rbx
  0x000000011ba462a8: cmovne %rax,%rbx
  0x000000011ba462ac: cmp    $0x3,%edx
  0x000000011ba462af: mov    %rbx,%rax
  0x000000011ba462b2: movabs $0x1f8,%rbx
  0x000000011ba462bc: cmovne %rax,%rbx
  0x000000011ba462c0: cmp    $0x6,%edx
  0x000000011ba462c3: mov    %rbx,%rax
  0x000000011ba462c6: movabs $0x208,%rbx
  0x000000011ba462d0: cmovne %rax,%rbx
  0x000000011ba462d4: mov    (%rdi,%rbx,1),%rax
  0x000000011ba462d8: movabs $0x1,%r10
  0x000000011ba462e2: add    %r10,%rax
  0x000000011ba462e5: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba462e9: cmp    $0x1,%edx
  0x000000011ba462ec: je     0x000000011ba46ac3
  0x000000011ba462f2: cmp    $0x3,%edx
  0x000000011ba462f5: je     0x000000011ba46309
  0x000000011ba462fb: cmp    $0x6,%edx
  0x000000011ba462fe: je     0x000000011ba46ac3
  0x000000011ba46304: jmpq   0x000000011ba46a9e  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@17 (line 366)

  0x000000011ba46309: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46313: addq   $0x1,0x220(%rdi)
  0x000000011ba4631b: movabs $0x132863c20,%rdi  ;   {metadata(method data for {method} {0x00000001327941c0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46325: mov    0x104(%rdi),%ebx
  0x000000011ba4632b: add    $0x8,%ebx
  0x000000011ba4632e: mov    %ebx,0x104(%rdi)
  0x000000011ba46334: and    $0x7ffff8,%ebx
  0x000000011ba4633a: cmp    $0x0,%ebx
  0x000000011ba4633d: je     0x000000011ba46b2d
  0x000000011ba46343: movabs $0x132863c20,%rdi  ;   {metadata(method data for {method} {0x00000001327941c0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba4634d: addq   $0x1,0x140(%rdi)
  0x000000011ba46355: movabs $0x132863e18,%rdi  ;   {metadata(method data for {method} {0x00000001327938b8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba4635f: mov    0x104(%rdi),%ebx
  0x000000011ba46365: add    $0x8,%ebx
  0x000000011ba46368: mov    %ebx,0x104(%rdi)
  0x000000011ba4636e: and    $0x7ffff8,%ebx
  0x000000011ba46374: cmp    $0x0,%ebx
  0x000000011ba46377: je     0x000000011ba46b4e
  0x000000011ba4637d: movabs $0x132863e18,%rdi  ;   {metadata(method data for {method} {0x00000001327938b8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46387: addq   $0x1,0x140(%rdi)
  0x000000011ba4638f: mov    %rsi,%rdi
  0x000000011ba46392: mov    %rdi,%rsi          ;*invokestatic hashWrap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@4 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba46395: xchg   %ax,%ax
  0x000000011ba46397: callq  0x000000011b4d2400  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokestatic hashWrap {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@4 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {static_call}
  0x000000011ba4639c: movabs $0x70ff67a30,%rsi  ;   {oop(a &apos;sun/invoke/util/Wrapper&apos;[16] {0x000000070ff67a30})}
  0x000000011ba463a6: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000011ba46b6f
  0x000000011ba463a9: jae    0x000000011ba46b79
  0x000000011ba463af: movslq %eax,%rax
  0x000000011ba463b2: mov    0x10(%rsi,%rax,4),%esi
  0x000000011ba463b6: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba463ba: cmp    $0x0,%rsi
  0x000000011ba463be: movabs $0x132863e18,%rdx  ;   {metadata(method data for {method} {0x00000001327938b8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba463c8: movabs $0x150,%rdi
  0x000000011ba463d2: je     0x000000011ba463e2
  0x000000011ba463d8: movabs $0x160,%rdi
  0x000000011ba463e2: mov    (%rdx,%rdi,1),%rbx
  0x000000011ba463e6: lea    0x1(%rbx),%rbx
  0x000000011ba463ea: mov    %rbx,(%rdx,%rdi,1)
  0x000000011ba463ee: mov    0x48(%rsp),%rdi
  0x000000011ba463f3: je     0x000000011ba46439  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@10 (line 320)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba463f9: mov    0x1c(%rsi),%edx    ; implicit exception: dispatches to 0x000000011ba46b87
  0x000000011ba463fc: shl    $0x3,%rdx          ;*getfield wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@14 (line 320)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba46400: cmp    %rdi,%rdx
  0x000000011ba46403: movabs $0x132863e18,%rdx  ;   {metadata(method data for {method} {0x00000001327938b8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba4640d: movabs $0x180,%rbx
  0x000000011ba46417: je     0x000000011ba46427
  0x000000011ba4641d: movabs $0x170,%rbx
  0x000000011ba46427: mov    (%rdx,%rbx,1),%rax
  0x000000011ba4642b: lea    0x1(%rax),%rax
  0x000000011ba4642f: mov    %rax,(%rdx,%rbx,1)
  0x000000011ba46433: je     0x000000011ba46443  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@18 (line 320)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba46439: movabs $0x0,%rsi          ;*astore_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@4 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {oop(NULL)}
  0x000000011ba46443: cmp    $0x0,%rsi
  0x000000011ba46447: movabs $0x132863c20,%rdx  ;   {metadata(method data for {method} {0x00000001327941c0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46451: movabs $0x150,%rbx
  0x000000011ba4645b: je     0x000000011ba4646b
  0x000000011ba46461: movabs $0x160,%rbx
  0x000000011ba4646b: mov    (%rdx,%rbx,1),%rax
  0x000000011ba4646f: lea    0x1(%rax),%rax
  0x000000011ba46473: mov    %rax,(%rdx,%rbx,1)
  0x000000011ba46477: je     0x000000011ba464c1  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@6 (line 431)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba4647d: cmp    (%rsi),%rax        ;*invokevirtual primitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 432)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ; implicit exception: dispatches to 0x000000011ba46b8c
  0x000000011ba46480: mov    %rsi,%rdx
  0x000000011ba46483: movabs $0x132863c20,%rbx  ;   {metadata(method data for {method} {0x00000001327941c0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba4648d: addq   $0x1,0x170(%rbx)
  0x000000011ba46495: mov    0x20(%rsi),%esi
  0x000000011ba46498: shl    $0x3,%rsi          ;*getfield primitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::primitiveType@1 (line 389)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 432)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba4649c: movabs $0x132863c20,%rdx  ;   {metadata(method data for {method} {0x00000001327941c0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba464a6: addq   $0x1,0x1a8(%rdx)
  0x000000011ba464ae: mov    %rdi,%rdx          ;*invokestatic forceType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 432)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)

  0x000000011ba464b1: nopw   0x0(%rax,%rax,1)
  0x000000011ba464b7: callq  0x000000011b4d2400  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokestatic forceType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@14 (line 432)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {static_call}
  0x000000011ba464bc: jmpq   0x000000011ba464c6
  0x000000011ba464c1: mov    0x48(%rsp),%rax    ;*astore_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@56 (line 368)

  0x000000011ba464c6: mov    0x48(%rsp),%rsi
  0x000000011ba464cb: cmp    %rsi,%rax
  0x000000011ba464ce: movabs $0x1328636f0,%rsi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba464d8: movabs $0x230,%rdi
  0x000000011ba464e2: je     0x000000011ba464f2
  0x000000011ba464e8: movabs $0x240,%rdi
  0x000000011ba464f2: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba464f6: lea    0x1(%rbx),%rbx
  0x000000011ba464fa: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba464fe: je     0x000000011ba46a9e  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@59 (line 369)

  0x000000011ba46504: add    $0x60,%rsp
  0x000000011ba46508: pop    %rbp
  0x000000011ba46509: mov    0x108(%r15),%r10
  0x000000011ba46510: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46513: retq   
  0x000000011ba46514: movabs $0x70ff00390,%r10  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00390} = void)}
  0x000000011ba4651e: cmp    %r10,%rsi
  0x000000011ba46521: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba4652b: movabs $0x268,%rbx
  0x000000011ba46535: jne    0x000000011ba46545
  0x000000011ba4653b: movabs $0x278,%rbx
  0x000000011ba46545: mov    (%rdi,%rbx,1),%rax
  0x000000011ba46549: lea    0x1(%rax),%rax
  0x000000011ba4654d: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba46551: jne    0x000000011ba465bf  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@74 (line 375)

  0x000000011ba46557: movabs $0x1328636f0,%rsi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46561: movabs $0x290,%rdi
  0x000000011ba4656b: cmp    $0x2,%edx
  0x000000011ba4656e: mov    %rdi,%rbx
  0x000000011ba46571: movabs $0x2a0,%rdi
  0x000000011ba4657b: cmovne %rbx,%rdi
  0x000000011ba4657f: cmp    $0x6,%edx
  0x000000011ba46582: mov    %rdi,%rbx
  0x000000011ba46585: movabs $0x2b0,%rdi
  0x000000011ba4658f: cmovne %rbx,%rdi
  0x000000011ba46593: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba46597: movabs $0x1,%r10
  0x000000011ba465a1: add    %r10,%rbx
  0x000000011ba465a4: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba465a8: cmp    $0x2,%edx
  0x000000011ba465ab: je     0x000000011ba46a84
  0x000000011ba465b1: cmp    $0x6,%edx
  0x000000011ba465b4: je     0x000000011ba46a6a
  0x000000011ba465ba: jmpq   0x000000011ba46a55  ;*lookupswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@78 (line 377)

  0x000000011ba465bf: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba465c9: movabs $0x2e8,%rbx
  0x000000011ba465d3: cmp    $0x2,%edx
  0x000000011ba465d6: mov    %rbx,%rax
  0x000000011ba465d9: movabs $0x2f8,%rbx
  0x000000011ba465e3: cmovne %rax,%rbx
  0x000000011ba465e7: cmp    $0x3,%edx
  0x000000011ba465ea: mov    %rbx,%rax
  0x000000011ba465ed: movabs $0x308,%rbx
  0x000000011ba465f7: cmovne %rax,%rbx
  0x000000011ba465fb: cmp    $0x4,%edx
  0x000000011ba465fe: mov    %rbx,%rax
  0x000000011ba46601: movabs $0x318,%rbx
  0x000000011ba4660b: cmovne %rax,%rbx
  0x000000011ba4660f: cmp    $0x5,%edx
  0x000000011ba46612: mov    %rbx,%rax
  0x000000011ba46615: movabs $0x328,%rbx
  0x000000011ba4661f: cmovne %rax,%rbx
  0x000000011ba46623: cmp    $0x6,%edx
  0x000000011ba46626: mov    %rbx,%rax
  0x000000011ba46629: movabs $0x338,%rbx
  0x000000011ba46633: cmovne %rax,%rbx
  0x000000011ba46637: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4663b: movabs $0x1,%r10
  0x000000011ba46645: add    %r10,%rax
  0x000000011ba46648: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4664c: cmp    $0x2,%edx
  0x000000011ba4664f: je     0x000000011ba46897
  0x000000011ba46655: cmp    $0x4,%edx
  0x000000011ba46658: je     0x000000011ba467c9
  0x000000011ba4665e: cmp    $0x5,%edx
  0x000000011ba46661: je     0x000000011ba46781
  0x000000011ba46667: cmp    $0x6,%edx
  0x000000011ba4666a: jne    0x000000011ba46aed  ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@115 (line 385)

  0x000000011ba46670: movabs $0x70ff00010,%rdi  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00010} = int)}
  0x000000011ba4667a: cmp    %rdi,%rsi
  0x000000011ba4667d: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46687: movabs $0x3e0,%rbx
  0x000000011ba46691: je     0x000000011ba466a1
  0x000000011ba46697: movabs $0x3f0,%rbx
  0x000000011ba466a1: mov    (%rdi,%rbx,1),%rax
  0x000000011ba466a5: lea    0x1(%rax),%rax
  0x000000011ba466a9: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba466ad: je     0x000000011ba46a21  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@201 (line 399)

  0x000000011ba466b3: movabs $0x70ff002b0,%r10  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff002b0} = long)}
  0x000000011ba466bd: cmp    %r10,%rsi
  0x000000011ba466c0: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba466ca: movabs $0x400,%rbx
  0x000000011ba466d4: je     0x000000011ba466e4
  0x000000011ba466da: movabs $0x410,%rbx
  0x000000011ba466e4: mov    (%rdi,%rbx,1),%rax
  0x000000011ba466e8: lea    0x1(%rax),%rax
  0x000000011ba466ec: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba466f0: je     0x000000011ba46a21  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@208 (line 399)

  0x000000011ba466f6: movabs $0x70ff00080,%r10  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00080} = float)}
  0x000000011ba46700: cmp    %r10,%rsi
  0x000000011ba46703: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba4670d: movabs $0x420,%rbx
  0x000000011ba46717: je     0x000000011ba46727
  0x000000011ba4671d: movabs $0x430,%rbx
  0x000000011ba46727: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4672b: lea    0x1(%rax),%rax
  0x000000011ba4672f: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba46733: je     0x000000011ba46a21  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@215 (line 399)

  0x000000011ba46739: movabs $0x70ff000f0,%r10  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff000f0} = double)}
  0x000000011ba46743: cmp    %r10,%rsi
  0x000000011ba46746: movabs $0x1328636f0,%rsi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46750: movabs $0x440,%rdi
  0x000000011ba4675a: jne    0x000000011ba4676a
  0x000000011ba46760: movabs $0x450,%rdi
  0x000000011ba4676a: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba4676e: lea    0x1(%rbx),%rbx
  0x000000011ba46772: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba46776: jne    0x000000011ba46a3b
  0x000000011ba4677c: jmpq   0x000000011ba46a21  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@222 (line 399)

  0x000000011ba46781: movabs $0x70ff002b0,%rdi  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff002b0} = long)}
  0x000000011ba4678b: cmp    %rdi,%rsi
  0x000000011ba4678e: movabs $0x1328636f0,%rsi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46798: movabs $0x3c0,%rdi
  0x000000011ba467a2: jne    0x000000011ba467b2
  0x000000011ba467a8: movabs $0x3d0,%rdi
  0x000000011ba467b2: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba467b6: lea    0x1(%rbx),%rbx
  0x000000011ba467ba: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba467be: jne    0x000000011ba46a07
  0x000000011ba467c4: jmpq   0x000000011ba469ed  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@188 (line 395)

  0x000000011ba467c9: movabs $0x70ff00010,%rdi  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00010} = int)}
  0x000000011ba467d3: cmp    %rdi,%rsi
  0x000000011ba467d6: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba467e0: movabs $0x360,%rbx
  0x000000011ba467ea: je     0x000000011ba467fa
  0x000000011ba467f0: movabs $0x370,%rbx
  0x000000011ba467fa: mov    (%rdi,%rbx,1),%rax
  0x000000011ba467fe: lea    0x1(%rax),%rax
  0x000000011ba46802: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba46806: je     0x000000011ba469d3  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@157 (line 389)

  0x000000011ba4680c: movabs $0x70ff002b0,%rdi  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff002b0} = long)}
  0x000000011ba46816: cmp    %rdi,%rsi
  0x000000011ba46819: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46823: movabs $0x390,%rbx
  0x000000011ba4682d: je     0x000000011ba4683d
  0x000000011ba46833: movabs $0x380,%rbx
  0x000000011ba4683d: mov    (%rdi,%rbx,1),%rax
  0x000000011ba46841: lea    0x1(%rax),%rax
  0x000000011ba46845: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba46849: je     0x000000011ba469d3  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@164 (line 389)

  0x000000011ba4684f: movabs $0x70ff000f0,%r10  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff000f0} = double)}
  0x000000011ba46859: cmp    %r10,%rsi
  0x000000011ba4685c: movabs $0x1328636f0,%rsi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46866: movabs $0x3a0,%rdi
  0x000000011ba46870: jne    0x000000011ba46880
  0x000000011ba46876: movabs $0x3b0,%rdi
  0x000000011ba46880: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba46884: lea    0x1(%rbx),%rbx
  0x000000011ba46888: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba4688c: jne    0x000000011ba469b9
  0x000000011ba46892: jmpq   0x000000011ba4699f  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@173 (line 391)

  0x000000011ba46897: movabs $0x1328636f0,%rdi  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba468a1: addq   $0x1,0x350(%rdi)
  0x000000011ba468a9: movabs $0x1328646c0,%rdi  ;   {metadata(method data for {method} {0x00000001327940f8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba468b3: mov    0x104(%rdi),%ebx
  0x000000011ba468b9: add    $0x8,%ebx
  0x000000011ba468bc: mov    %ebx,0x104(%rdi)
  0x000000011ba468c2: and    $0x7ffff8,%ebx
  0x000000011ba468c8: cmp    $0x0,%ebx
  0x000000011ba468cb: je     0x000000011ba46b91
  0x000000011ba468d1: mov    %rsi,%rdi
  0x000000011ba468d4: movabs $0x1328646c0,%rbx  ;   {metadata(method data for {method} {0x00000001327940f8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba468de: addq   $0x1,0x140(%rbx)
  0x000000011ba468e6: mov    0x50(%rsi),%rdi
  0x000000011ba468ea: cmp    $0x0,%edi
  0x000000011ba468ed: mov    $0x0,%edi
  0x000000011ba468f2: jne    0x000000011ba468fd
  0x000000011ba468f8: mov    $0x1,%edi          ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@1 (line 420)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)

  0x000000011ba468fd: cmp    $0x0,%edi
  0x000000011ba46900: movabs $0x1328646c0,%rdi  ;   {metadata(method data for {method} {0x00000001327940f8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba4690a: movabs $0x178,%rbx
  0x000000011ba46914: je     0x000000011ba46924
  0x000000011ba4691a: movabs $0x188,%rbx
  0x000000011ba46924: mov    (%rdi,%rbx,1),%rax
  0x000000011ba46928: lea    0x1(%rax),%rax
  0x000000011ba4692c: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba46930: je     0x000000011ba4698c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@4 (line 420)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)

  0x000000011ba46936: movabs $0x1328646c0,%rdi  ;   {metadata(method data for {method} {0x00000001327940f8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46940: addq   $0x1,0x198(%rdi)
  0x000000011ba46948: mov    %rsi,%rdi
  0x000000011ba4694b: mov    %rdi,%rsi          ;*invokestatic forPrimitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 421)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)

  0x000000011ba4694e: nop
  0x000000011ba4694f: callq  0x000000011b4d2400  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokestatic forPrimitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@8 (line 421)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)
                                                ;   {static_call}
  0x000000011ba46954: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000011ba46bb2
  0x000000011ba46957: mov    %rax,%rdx
  0x000000011ba4695a: movabs $0x1328646c0,%rsi  ;   {metadata(method data for {method} {0x00000001327940f8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46964: addq   $0x1,0x1a8(%rsi)
  0x000000011ba4696c: mov    0x48(%rsp),%rdx
  0x000000011ba46971: mov    %rax,%rsi          ;*invokevirtual wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 421)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)

  0x000000011ba46974: data16 xchg %ax,%ax
  0x000000011ba46977: callq  0x000000011b4d1f00  ; ImmutableOopMap{}
                                                ;*invokevirtual wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 421)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)
                                                ;   {optimized virtual_call}
  0x000000011ba4697c: add    $0x60,%rsp
  0x000000011ba46980: pop    %rbp
  0x000000011ba46981: mov    0x108(%r15),%r10
  0x000000011ba46988: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4698b: retq   
  0x000000011ba4698c: mov    %rsi,%rax
  0x000000011ba4698f: add    $0x60,%rsp
  0x000000011ba46993: pop    %rbp
  0x000000011ba46994: mov    0x108(%r15),%r10
  0x000000011ba4699b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4699e: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@152 (line 387)

  0x000000011ba4699f: movabs $0x70ff002b0,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff002b0} = long)}
  0x000000011ba469a9: add    $0x60,%rsp
  0x000000011ba469ad: pop    %rbp
  0x000000011ba469ae: mov    0x108(%r15),%r10
  0x000000011ba469b5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba469b8: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@179 (line 392)

  0x000000011ba469b9: movabs $0x70ff00010,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00010} = int)}
  0x000000011ba469c3: add    $0x60,%rsp
  0x000000011ba469c7: pop    %rbp
  0x000000011ba469c8: mov    0x108(%r15),%r10
  0x000000011ba469cf: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba469d2: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@183 (line 393)

  0x000000011ba469d3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba469dd: add    $0x60,%rsp
  0x000000011ba469e1: pop    %rbp
  0x000000011ba469e2: mov    0x108(%r15),%r10
  0x000000011ba469e9: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba469ec: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@168 (line 390)

  0x000000011ba469ed: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba469f7: add    $0x60,%rsp
  0x000000011ba469fb: pop    %rbp
  0x000000011ba469fc: mov    0x108(%r15),%r10
  0x000000011ba46a03: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46a06: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@192 (line 396)

  0x000000011ba46a07: movabs $0x70ff002b0,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff002b0} = long)}
  0x000000011ba46a11: add    $0x60,%rsp
  0x000000011ba46a15: pop    %rbp
  0x000000011ba46a16: mov    0x108(%r15),%r10
  0x000000011ba46a1d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46a20: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@196 (line 397)

  0x000000011ba46a21: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba46a2b: add    $0x60,%rsp
  0x000000011ba46a2f: pop    %rbp
  0x000000011ba46a30: mov    0x108(%r15),%r10
  0x000000011ba46a37: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46a3a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@226 (line 401)

  0x000000011ba46a3b: movabs $0x70ff00010,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00010} = int)}
  0x000000011ba46a45: add    $0x60,%rsp
  0x000000011ba46a49: pop    %rbp
  0x000000011ba46a4a: mov    0x108(%r15),%r10
  0x000000011ba46a51: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46a54: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@230 (line 403)

  0x000000011ba46a55: movabs $0x1328636f0,%rax  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46a5f: incl   0x2c8(%rax)
  0x000000011ba46a65: jmpq   0x000000011ba46aed  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@111 (line 381)

  0x000000011ba46a6a: movabs $0x70ff00010,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00010} = int)}
  0x000000011ba46a74: add    $0x60,%rsp
  0x000000011ba46a78: pop    %rbp
  0x000000011ba46a79: mov    0x108(%r15),%r10
  0x000000011ba46a80: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46a83: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@107 (line 379)

  0x000000011ba46a84: movabs $0x70ff64dd8,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff64dd8} = &apos;java/lang/Void&apos;)}
  0x000000011ba46a8e: add    $0x60,%rsp
  0x000000011ba46a92: pop    %rbp
  0x000000011ba46a93: mov    0x108(%r15),%r10
  0x000000011ba46a9a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46a9d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@110 (line 381)

  0x000000011ba46a9e: movabs $0x1328636f0,%rax  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46aa8: incl   0x250(%rax)
  0x000000011ba46aae: jmpq   0x000000011ba46aed  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@67 (line 373)

  0x000000011ba46ab3: add    $0x60,%rsp
  0x000000011ba46ab7: pop    %rbp
  0x000000011ba46ab8: mov    0x108(%r15),%r10
  0x000000011ba46abf: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46ac2: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@63 (line 369)

  0x000000011ba46ac3: movabs $0x70ff00780,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000070ff00780} = &apos;java/lang/Object&apos;)}
  0x000000011ba46acd: add    $0x60,%rsp
  0x000000011ba46ad1: pop    %rbp
  0x000000011ba46ad2: mov    0x108(%r15),%r10
  0x000000011ba46ad9: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46adc: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@66 (line 373)

  0x000000011ba46add: movabs $0x1328636f0,%rax  ;   {metadata(method data for {method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46ae7: incl   0x160(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@6 (line 363)

  0x000000011ba46aed: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba46af7: add    $0x60,%rsp
  0x000000011ba46afb: pop    %rbp
  0x000000011ba46afc: mov    0x108(%r15),%r10
  0x000000011ba46b03: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba46b06: retq   
  0x000000011ba46b07: movabs $0x132777b78,%r10  ;   {metadata({method} {0x0000000132777b78} &apos;canonicalize&apos; &apos;(Ljava/lang/Class;I)Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodTypeForm&apos;)}
  0x000000011ba46b11: mov    %r10,0x8(%rsp)
  0x000000011ba46b16: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba46b1e: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [72]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@-1 (line 363)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba46b23: jmpq   0x000000011ba461d9
  0x000000011ba46b28: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [72]=Oop }
                                                ;*invokevirtual isPrimitive {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@10 (line 365)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba46b2d: movabs $0x1327941c0,%r10  ;   {metadata({method} {0x00000001327941c0} &apos;asPrimitiveType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46b37: mov    %r10,0x8(%rsp)
  0x000000011ba46b3c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba46b44: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [72]=Oop }
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@-1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba46b49: jmpq   0x000000011ba46343
  0x000000011ba46b4e: movabs $0x1327938b8,%r10  ;   {metadata({method} {0x00000001327938b8} &apos;findWrapperType&apos; &apos;(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46b58: mov    %r10,0x8(%rsp)
  0x000000011ba46b5d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba46b65: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [72]=Oop }
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::findWrapperType@-1 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba46b6a: jmpq   0x000000011ba4637d
  0x000000011ba46b6f: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba46b74: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba46b79: mov    %rax,(%rsp)
  0x000000011ba46b7d: mov    %rsi,0x8(%rsp)
  0x000000011ba46b82: callq  0x000000011b595320  ; ImmutableOopMap{[72]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@7 (line 319)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba46b87: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop [72]=Oop rsi=Oop }
                                                ;*getfield wrapperType {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::findWrapperType@14 (line 320)
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@1 (line 430)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba46b8c: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop [72]=Oop rsi=Oop }
                                                ;*invokevirtual primitiveType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asPrimitiveType@10 (line 432)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@53 (line 368)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba46b91: movabs $0x1327940f8,%r10  ;   {metadata({method} {0x00000001327940f8} &apos;asWrapperType&apos; &apos;(Ljava/lang/Class;)Ljava/lang/Class;&apos; in &apos;sun/invoke/util/Wrapper&apos;)}
  0x000000011ba46b9b: mov    %r10,0x8(%rsp)
  0x000000011ba46ba0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba46ba8: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [72]=Oop }
                                                ;*synchronization entry
                                                ; - sun.invoke.util.Wrapper::asWrapperType@-1 (line 420)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba46bad: jmpq   0x000000011ba468d1
  0x000000011ba46bb2: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*invokevirtual wrapperType {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.invoke.util.Wrapper::asWrapperType@12 (line 421)
                                                ; - java.lang.invoke.MethodTypeForm::canonicalize@149 (line 387)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba46bb7: nop
  0x000000011ba46bb8: nop
  0x000000011ba46bb9: mov    0x420(%r15),%rax
  0x000000011ba46bc0: movabs $0x0,%r10
  0x000000011ba46bca: mov    %r10,0x420(%r15)
  0x000000011ba46bd1: movabs $0x0,%r10
  0x000000011ba46bdb: mov    %r10,0x428(%r15)
  0x000000011ba46be2: add    $0x60,%rsp
  0x000000011ba46be6: pop    %rbp
  0x000000011ba46be7: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba46bec: hlt    
  0x000000011ba46bed: hlt    
  0x000000011ba46bee: hlt    
  0x000000011ba46bef: hlt    
  0x000000011ba46bf0: hlt    
  0x000000011ba46bf1: hlt    
  0x000000011ba46bf2: hlt    
  0x000000011ba46bf3: hlt    
  0x000000011ba46bf4: hlt    
  0x000000011ba46bf5: hlt    
  0x000000011ba46bf6: hlt    
  0x000000011ba46bf7: hlt    
  0x000000011ba46bf8: hlt    
  0x000000011ba46bf9: hlt    
  0x000000011ba46bfa: hlt    
  0x000000011ba46bfb: hlt    
  0x000000011ba46bfc: hlt    
  0x000000011ba46bfd: hlt    
  0x000000011ba46bfe: hlt    
  0x000000011ba46bff: hlt    
[Stub Code]
  0x000000011ba46c00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba46c05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba46c0f: jmpq   0x000000011ba46c0f  ;   {runtime_call}
  0x000000011ba46c14: nop
  0x000000011ba46c15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba46c1f: jmpq   0x000000011ba46c1f  ;   {runtime_call}
  0x000000011ba46c24: nop
  0x000000011ba46c25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba46c2f: jmpq   0x000000011ba46c2f  ;   {runtime_call}
  0x000000011ba46c34: nop
  0x000000011ba46c35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba46c3f: jmpq   0x000000011ba46c3f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba46c44: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba46c49: mov    %rsp,-0x28(%rsp)
  0x000000011ba46c4e: sub    $0x80,%rsp
  0x000000011ba46c55: mov    %rax,0x78(%rsp)
  0x000000011ba46c5a: mov    %rcx,0x70(%rsp)
  0x000000011ba46c5f: mov    %rdx,0x68(%rsp)
  0x000000011ba46c64: mov    %rbx,0x60(%rsp)
  0x000000011ba46c69: mov    %rbp,0x50(%rsp)
  0x000000011ba46c6e: mov    %rsi,0x48(%rsp)
  0x000000011ba46c73: mov    %rdi,0x40(%rsp)
  0x000000011ba46c78: mov    %r8,0x38(%rsp)
  0x000000011ba46c7d: mov    %r9,0x30(%rsp)
  0x000000011ba46c82: mov    %r10,0x28(%rsp)
  0x000000011ba46c87: mov    %r11,0x20(%rsp)
  0x000000011ba46c8c: mov    %r12,0x18(%rsp)
  0x000000011ba46c91: mov    %r13,0x10(%rsp)
  0x000000011ba46c96: mov    %r14,0x8(%rsp)
  0x000000011ba46c9b: mov    %r15,(%rsp)
  0x000000011ba46c9f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba46ca9: movabs $0x11ba46c49,%rsi  ;   {internal_word}
  0x000000011ba46cb3: mov    %rsp,%rdx
  0x000000011ba46cb6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba46cba: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba46cbf: hlt    
[Deopt Handler Code]
  0x000000011ba46cc0: movabs $0x11ba46cc0,%r10  ;   {section_word}
  0x000000011ba46cca: push   %r10
  0x000000011ba46ccc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba46cd1: hlt    
  0x000000011ba46cd2: hlt    
  0x000000011ba46cd3: hlt    
  0x000000011ba46cd4: hlt    
  0x000000011ba46cd5: hlt    
  0x000000011ba46cd6: hlt    
  0x000000011ba46cd7: hlt    

ImmutableOopMap{[72]=Oop }pc offsets: 508 796 1972 
ImmutableOopMap{}pc offsets: 2012 
ImmutableOopMap{rsi=Oop [72]=Oop }pc offsets: 2435 2445 2473 2506 
ImmutableOopMap{[72]=Oop rsi=Oop }pc offsets: 2516 2521 2535 
ImmutableOopMap{rdi=Oop [72]=Oop rsi=Oop }pc offsets: 2540 2545 
ImmutableOopMap{rsi=Oop [72]=Oop }pc offsets: 2573 
ImmutableOopMap{[72]=Oop rax=Oop }pc offsets: 2583 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='56' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f78820' size='432' address='0x0000000122f78690' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.196'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f78820, 0x0000000122f78840]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132865100} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f78820: cmp    (%rsi),%rax
  0x0000000122f78823: mov    0x24(%rcx),%ebx
  0x0000000122f78826: shl    $0x3,%rbx
  0x0000000122f7882a: mov    0x10(%rbx),%rbx
  0x0000000122f7882e: test   %rbx,%rbx
  0x0000000122f78831: je     0x0000000122f7883a
  0x0000000122f78837: jmpq   *0x38(%rbx)
  0x0000000122f7883a: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f7883f: hlt    
<writer thread='15875'/>
<nmethod compile_id='52' compiler='c1' level='3' entry='0x000000011ba47540' size='1000' address='0x000000011ba47390' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='880' dependencies_offset='992' metadata_offset='832' method='java.lang.Math min (II)I' bytes='11' count='274' iicount='274' stamp='0.196'/>
<print_nmethod stamp='0.196'>
Compiled method (c1)     196   52       3       java.lang.Math::min (11 bytes)
 total in heap  [0x000000011ba47390,0x000000011ba47778] = 1000
 relocation     [0x000000011ba47508,0x000000011ba47538] = 48
 main code      [0x000000011ba47540,0x000000011ba47640] = 256
 stub code      [0x000000011ba47640,0x000000011ba476d0] = 144
 metadata       [0x000000011ba476d0,0x000000011ba476d8] = 8
 scopes data    [0x000000011ba476d8,0x000000011ba47700] = 40
 scopes pcs     [0x000000011ba47700,0x000000011ba47770] = 112
 dependencies   [0x000000011ba47770,0x000000011ba47778] = 8
----------------------------------------------------------------------
java/lang/Math.min(II)I  [0x000000011ba47540, 0x000000011ba476d0]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba47540: mov    %eax,-0x14000(%rsp)
  0x000000011ba47547: push   %rbp
  0x000000011ba47548: sub    $0x30,%rsp
  0x000000011ba4754c: movabs $0x132865168,%rax  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba47556: mov    0x104(%rax),%edi
  0x000000011ba4755c: add    $0x8,%edi
  0x000000011ba4755f: mov    %edi,0x104(%rax)
  0x000000011ba47565: and    $0x1ff8,%edi
  0x000000011ba4756b: cmp    $0x0,%edi
  0x000000011ba4756e: je     0x000000011ba475d7  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@0 (line 1513)

  0x000000011ba47574: cmp    %edx,%esi
  0x000000011ba47576: movabs $0x132865168,%rax  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba47580: movabs $0x140,%rdi
  0x000000011ba4758a: jg     0x000000011ba4759a
  0x000000011ba47590: movabs $0x150,%rdi
  0x000000011ba4759a: mov    (%rax,%rdi,1),%rbx
  0x000000011ba4759e: lea    0x1(%rbx),%rbx
  0x000000011ba475a2: mov    %rbx,(%rax,%rdi,1)
  0x000000011ba475a6: jg     0x000000011ba475c1  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1513)

  0x000000011ba475ac: movabs $0x132865168,%rax  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba475b6: incl   0x160(%rax)
  0x000000011ba475bc: jmpq   0x000000011ba475c4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1513)

  0x000000011ba475c1: mov    %rdx,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1513)

  0x000000011ba475c4: mov    %rsi,%rax
  0x000000011ba475c7: add    $0x30,%rsp
  0x000000011ba475cb: pop    %rbp
  0x000000011ba475cc: mov    0x108(%r15),%r10
  0x000000011ba475d3: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba475d6: retq   
  0x000000011ba475d7: movabs $0x132629900,%r10  ;   {metadata({method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba475e1: mov    %r10,0x8(%rsp)
  0x000000011ba475e6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba475ee: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1513)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba475f3: jmpq   0x000000011ba47574
  0x000000011ba475f8: nop
  0x000000011ba475f9: nop
  0x000000011ba475fa: mov    0x420(%r15),%rax
  0x000000011ba47601: movabs $0x0,%r10
  0x000000011ba4760b: mov    %r10,0x420(%r15)
  0x000000011ba47612: movabs $0x0,%r10
  0x000000011ba4761c: mov    %r10,0x428(%r15)
  0x000000011ba47623: add    $0x30,%rsp
  0x000000011ba47627: pop    %rbp
  0x000000011ba47628: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4762d: hlt    
  0x000000011ba4762e: hlt    
  0x000000011ba4762f: hlt    
  0x000000011ba47630: hlt    
  0x000000011ba47631: hlt    
  0x000000011ba47632: hlt    
  0x000000011ba47633: hlt    
  0x000000011ba47634: hlt    
  0x000000011ba47635: hlt    
  0x000000011ba47636: hlt    
  0x000000011ba47637: hlt    
  0x000000011ba47638: hlt    
  0x000000011ba47639: hlt    
  0x000000011ba4763a: hlt    
  0x000000011ba4763b: hlt    
  0x000000011ba4763c: hlt    
  0x000000011ba4763d: hlt    
  0x000000011ba4763e: hlt    
  0x000000011ba4763f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba47640: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba47645: mov    %rsp,-0x28(%rsp)
  0x000000011ba4764a: sub    $0x80,%rsp
  0x000000011ba47651: mov    %rax,0x78(%rsp)
  0x000000011ba47656: mov    %rcx,0x70(%rsp)
  0x000000011ba4765b: mov    %rdx,0x68(%rsp)
  0x000000011ba47660: mov    %rbx,0x60(%rsp)
  0x000000011ba47665: mov    %rbp,0x50(%rsp)
  0x000000011ba4766a: mov    %rsi,0x48(%rsp)
  0x000000011ba4766f: mov    %rdi,0x40(%rsp)
  0x000000011ba47674: mov    %r8,0x38(%rsp)
  0x000000011ba47679: mov    %r9,0x30(%rsp)
  0x000000011ba4767e: mov    %r10,0x28(%rsp)
  0x000000011ba47683: mov    %r11,0x20(%rsp)
  0x000000011ba47688: mov    %r12,0x18(%rsp)
  0x000000011ba4768d: mov    %r13,0x10(%rsp)
  0x000000011ba47692: mov    %r14,0x8(%rsp)
  0x000000011ba47697: mov    %r15,(%rsp)
  0x000000011ba4769b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba476a5: movabs $0x11ba47645,%rsi  ;   {internal_word}
  0x000000011ba476af: mov    %rsp,%rdx
  0x000000011ba476b2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba476b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba476bb: hlt    
[Deopt Handler Code]
  0x000000011ba476bc: movabs $0x11ba476bc,%r10  ;   {section_word}
  0x000000011ba476c6: push   %r10
  0x000000011ba476c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba476cd: hlt    
  0x000000011ba476ce: hlt    
  0x000000011ba476cf: hlt    

ImmutableOopMap{}pc offsets: 179 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='57' method='java.lang.ref.Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='256' iicount='256' level='3' stamp='0.198' comment='tiered' hot_count='256'/>
<nmethod compile_id='58' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f78a20' size='456' address='0x0000000122f78890' relocation_offset='376' consts_offset='456' insts_offset='400' method='java.lang.invoke.MethodHandle linkToVirtual (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.198'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToVirtual(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x0000000122f78a20, 0x0000000122f78a58]  56 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132865628} &apos;linkToVirtual&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f78a20: mov    0x8(%rsi),%r10d
  0x0000000122f78a24: movabs $0x800000000,%r12
  0x0000000122f78a2e: add    %r12,%r10
  0x0000000122f78a31: xor    %r12,%r12
  0x0000000122f78a34: mov    0x10(%rdx),%r11
  0x0000000122f78a38: mov    0x1d0(%r10,%r11,8),%rbx
  0x0000000122f78a40: test   %rbx,%rbx
  0x0000000122f78a43: je     0x0000000122f78a4c
  0x0000000122f78a49: jmpq   *0x38(%rbx)
  0x0000000122f78a4c: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f78a51: hlt    
  0x0000000122f78a52: hlt    
  0x0000000122f78a53: hlt    
  0x0000000122f78a54: hlt    
  0x0000000122f78a55: hlt    
  0x0000000122f78a56: hlt    
  0x0000000122f78a57: hlt    
<writer thread='15875'/>
<nmethod compile_id='57' compiler='c1' level='3' entry='0x000000011ba47960' size='1424' address='0x000000011ba47790' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1208' scopes_pcs_offset='1272' dependencies_offset='1416' metadata_offset='1184' method='java.lang.ref.Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='263' iicount='263' stamp='0.198'/>
<print_nmethod stamp='0.198'>
Compiled method (c1)     198   57       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
 total in heap  [0x000000011ba47790,0x000000011ba47d20] = 1424
 relocation     [0x000000011ba47908,0x000000011ba47948] = 64
 main code      [0x000000011ba47960,0x000000011ba47ba0] = 576
 stub code      [0x000000011ba47ba0,0x000000011ba47c30] = 144
 metadata       [0x000000011ba47c30,0x000000011ba47c48] = 24
 scopes data    [0x000000011ba47c48,0x000000011ba47c88] = 64
 scopes pcs     [0x000000011ba47c88,0x000000011ba47d18] = 144
 dependencies   [0x000000011ba47d18,0x000000011ba47d20] = 8
----------------------------------------------------------------------
java/lang/ref/Reference.&lt;init&gt;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V  [0x000000011ba47960, 0x000000011ba47c30]  720 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324e0640} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rsi:rsi   = &apos;java/lang/ref/Reference&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba47960: mov    0x8(%rsi),%r10d
  0x000000011ba47964: movabs $0x800000000,%r12
  0x000000011ba4796e: add    %r12,%r10
  0x000000011ba47971: xor    %r12,%r12
  0x000000011ba47974: cmp    %rax,%r10
  0x000000011ba47977: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4797d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba47980: mov    %eax,-0x14000(%rsp)
  0x000000011ba47987: push   %rbp
  0x000000011ba47988: sub    $0x30,%rsp
  0x000000011ba4798c: movabs $0x1328653a0,%rdi  ;   {metadata(method data for {method} {0x00000001324e0640} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011ba47996: mov    0x104(%rdi),%ebx
  0x000000011ba4799c: add    $0x8,%ebx
  0x000000011ba4799f: mov    %ebx,0x104(%rdi)
  0x000000011ba479a5: and    $0x1ff8,%ebx
  0x000000011ba479ab: cmp    $0x0,%ebx
  0x000000011ba479ae: je     0x000000011ba47ab5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 398)

  0x000000011ba479b4: mov    %rsi,%rdi
  0x000000011ba479b7: movabs $0x1328653a0,%rbx  ;   {metadata(method data for {method} {0x00000001324e0640} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011ba479c1: addq   $0x1,0x140(%rbx)
  0x000000011ba479c9: movabs $0x1326ded60,%rdi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba479d3: mov    0x104(%rdi),%ebx
  0x000000011ba479d9: add    $0x8,%ebx
  0x000000011ba479dc: mov    %ebx,0x104(%rdi)
  0x000000011ba479e2: and    $0x7ffff8,%ebx
  0x000000011ba479e8: cmp    $0x0,%ebx
  0x000000011ba479eb: je     0x000000011ba47ad6
  0x000000011ba479f1: movsbl 0x30(%r15),%edi
  0x000000011ba479f6: cmp    $0x0,%edi
  0x000000011ba479f9: jne    0x000000011ba47af7
  0x000000011ba479ff: mov    %rdx,%r10
  0x000000011ba47a02: shr    $0x3,%r10
  0x000000011ba47a06: mov    %r10d,0xc(%rsi)
  0x000000011ba47a0a: mov    %rsi,%rdi
  0x000000011ba47a0d: xor    %rdx,%rdi
  0x000000011ba47a10: shr    $0x14,%rdi
  0x000000011ba47a14: cmp    $0x0,%rdi
  0x000000011ba47a18: jne    0x000000011ba47b16  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)

  0x000000011ba47a1e: cmp    $0x0,%rcx
  0x000000011ba47a22: movabs $0x1328653a0,%rdi  ;   {metadata(method data for {method} {0x00000001324e0640} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011ba47a2c: movabs $0x150,%rbx
  0x000000011ba47a36: jne    0x000000011ba47a46
  0x000000011ba47a3c: movabs $0x160,%rbx
  0x000000011ba47a46: mov    (%rdi,%rbx,1),%rax
  0x000000011ba47a4a: lea    0x1(%rax),%rax
  0x000000011ba47a4e: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba47a52: jne    0x000000011ba47a72  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 400)

  0x000000011ba47a58: movabs $0x1328653a0,%rdi  ;   {metadata(method data for {method} {0x00000001324e0640} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011ba47a62: incl   0x170(%rdi)
  0x000000011ba47a68: movabs $0x70ff08950,%rcx  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 400)
                                                ;   {oop(a &apos;java/lang/ref/ReferenceQueue$Null&apos;{0x000000070ff08950})}
  0x000000011ba47a72: movsbl 0x30(%r15),%edi
  0x000000011ba47a77: cmp    $0x0,%edi
  0x000000011ba47a7a: jne    0x000000011ba47b2e
  0x000000011ba47a80: mov    %rcx,%r10
  0x000000011ba47a83: shr    $0x3,%r10
  0x000000011ba47a87: mov    %r10d,0x10(%rsi)
  0x000000011ba47a8b: lock addl $0x0,-0x40(%rsp)
  0x000000011ba47a91: mov    %rsi,%rdi
  0x000000011ba47a94: xor    %rcx,%rdi
  0x000000011ba47a97: shr    $0x14,%rdi
  0x000000011ba47a9b: cmp    $0x0,%rdi
  0x000000011ba47a9f: jne    0x000000011ba47b4d  ;*putfield queue {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 400)

  0x000000011ba47aa5: add    $0x30,%rsp
  0x000000011ba47aa9: pop    %rbp
  0x000000011ba47aaa: mov    0x108(%r15),%r10
  0x000000011ba47ab1: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba47ab4: retq   
  0x000000011ba47ab5: movabs $0x1324e0640,%r10  ;   {metadata({method} {0x00000001324e0640} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011ba47abf: mov    %r10,0x8(%rsp)
  0x000000011ba47ac4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba47acc: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 398)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba47ad1: jmpq   0x000000011ba479b4
  0x000000011ba47ad6: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba47ae0: mov    %r10,0x8(%rsp)
  0x000000011ba47ae5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba47aed: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 398)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba47af2: jmpq   0x000000011ba479f1
  0x000000011ba47af7: mov    0xc(%rsi),%edi
  0x000000011ba47afa: shl    $0x3,%rdi
  0x000000011ba47afe: cmp    $0x0,%rdi
  0x000000011ba47b02: je     0x000000011ba479ff
  0x000000011ba47b08: mov    %rdi,(%rsp)
  0x000000011ba47b0c: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba47b11: jmpq   0x000000011ba479ff
  0x000000011ba47b16: cmp    $0x0,%rdx
  0x000000011ba47b1a: je     0x000000011ba47a1e
  0x000000011ba47b20: mov    %rsi,(%rsp)
  0x000000011ba47b24: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba47b29: jmpq   0x000000011ba47a1e
  0x000000011ba47b2e: mov    0x10(%rsi),%edi
  0x000000011ba47b31: shl    $0x3,%rdi
  0x000000011ba47b35: cmp    $0x0,%rdi
  0x000000011ba47b39: je     0x000000011ba47a80
  0x000000011ba47b3f: mov    %rdi,(%rsp)
  0x000000011ba47b43: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba47b48: jmpq   0x000000011ba47a80
  0x000000011ba47b4d: cmp    $0x0,%rcx
  0x000000011ba47b51: je     0x000000011ba47aa5
  0x000000011ba47b57: mov    %rsi,(%rsp)
  0x000000011ba47b5b: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba47b60: jmpq   0x000000011ba47aa5
  0x000000011ba47b65: nop
  0x000000011ba47b66: nop
  0x000000011ba47b67: mov    0x420(%r15),%rax
  0x000000011ba47b6e: movabs $0x0,%r10
  0x000000011ba47b78: mov    %r10,0x420(%r15)
  0x000000011ba47b7f: movabs $0x0,%r10
  0x000000011ba47b89: mov    %r10,0x428(%r15)
  0x000000011ba47b90: add    $0x30,%rsp
  0x000000011ba47b94: pop    %rbp
  0x000000011ba47b95: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba47b9a: hlt    
  0x000000011ba47b9b: hlt    
  0x000000011ba47b9c: hlt    
  0x000000011ba47b9d: hlt    
  0x000000011ba47b9e: hlt    
  0x000000011ba47b9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba47ba0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba47ba5: mov    %rsp,-0x28(%rsp)
  0x000000011ba47baa: sub    $0x80,%rsp
  0x000000011ba47bb1: mov    %rax,0x78(%rsp)
  0x000000011ba47bb6: mov    %rcx,0x70(%rsp)
  0x000000011ba47bbb: mov    %rdx,0x68(%rsp)
  0x000000011ba47bc0: mov    %rbx,0x60(%rsp)
  0x000000011ba47bc5: mov    %rbp,0x50(%rsp)
  0x000000011ba47bca: mov    %rsi,0x48(%rsp)
  0x000000011ba47bcf: mov    %rdi,0x40(%rsp)
  0x000000011ba47bd4: mov    %r8,0x38(%rsp)
  0x000000011ba47bd9: mov    %r9,0x30(%rsp)
  0x000000011ba47bde: mov    %r10,0x28(%rsp)
  0x000000011ba47be3: mov    %r11,0x20(%rsp)
  0x000000011ba47be8: mov    %r12,0x18(%rsp)
  0x000000011ba47bed: mov    %r13,0x10(%rsp)
  0x000000011ba47bf2: mov    %r14,0x8(%rsp)
  0x000000011ba47bf7: mov    %r15,(%rsp)
  0x000000011ba47bfb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba47c05: movabs $0x11ba47ba5,%rsi  ;   {internal_word}
  0x000000011ba47c0f: mov    %rsp,%rdx
  0x000000011ba47c12: and    $0xfffffffffffffff0,%rsp
  0x000000011ba47c16: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba47c1b: hlt    
[Deopt Handler Code]
  0x000000011ba47c1c: movabs $0x11ba47c1c,%r10  ;   {section_word}
  0x000000011ba47c26: push   %r10
  0x000000011ba47c28: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba47c2d: hlt    
  0x000000011ba47c2e: hlt    
  0x000000011ba47c2f: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 369 402 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='59' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='256' iicount='256' level='3' stamp='0.201' comment='tiered' hot_count='256'/>
<writer thread='15875'/>
<nmethod compile_id='59' compiler='c1' level='3' entry='0x000000011ba47f40' size='1000' address='0x000000011ba47d90' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='880' dependencies_offset='992' metadata_offset='832' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='274' iicount='274' stamp='0.201'/>
<print_nmethod stamp='0.201'>
Compiled method (c1)     201   59       3       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x000000011ba47d90,0x000000011ba48178] = 1000
 relocation     [0x000000011ba47f08,0x000000011ba47f38] = 48
 main code      [0x000000011ba47f40,0x000000011ba48040] = 256
 stub code      [0x000000011ba48040,0x000000011ba480d0] = 144
 metadata       [0x000000011ba480d0,0x000000011ba480d8] = 8
 scopes data    [0x000000011ba480d8,0x000000011ba48100] = 40
 scopes pcs     [0x000000011ba48100,0x000000011ba48170] = 112
 dependencies   [0x000000011ba48170,0x000000011ba48178] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x000000011ba47f40, 0x000000011ba480d0]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba47f40: mov    %eax,-0x14000(%rsp)
  0x000000011ba47f47: push   %rbp
  0x000000011ba47f48: sub    $0x30,%rsp
  0x000000011ba47f4c: movabs $0x132865690,%rax  ;   {metadata(method data for {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba47f56: mov    0x104(%rax),%edi
  0x000000011ba47f5c: add    $0x8,%edi
  0x000000011ba47f5f: mov    %edi,0x104(%rax)
  0x000000011ba47f65: and    $0x1ff8,%edi
  0x000000011ba47f6b: cmp    $0x0,%edi
  0x000000011ba47f6e: je     0x000000011ba47fe2  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@0 (line 53)

  0x000000011ba47f74: shr    $0x8,%esi
  0x000000011ba47f77: cmp    $0x0,%esi
  0x000000011ba47f7a: movabs $0x132865690,%rax  ;   {metadata(method data for {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba47f84: movabs $0x140,%rsi
  0x000000011ba47f8e: jne    0x000000011ba47f9e
  0x000000011ba47f94: movabs $0x150,%rsi
  0x000000011ba47f9e: mov    (%rax,%rsi,1),%rdi
  0x000000011ba47fa2: lea    0x1(%rdi),%rdi
  0x000000011ba47fa6: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba47faa: jne    0x000000011ba47fca  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)

  0x000000011ba47fb0: movabs $0x132865690,%rax  ;   {metadata(method data for {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba47fba: incl   0x160(%rax)
  0x000000011ba47fc0: mov    $0x1,%eax
  0x000000011ba47fc5: jmpq   0x000000011ba47fcf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)

  0x000000011ba47fca: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)

  0x000000011ba47fcf: and    $0x1,%eax
  0x000000011ba47fd2: add    $0x30,%rsp
  0x000000011ba47fd6: pop    %rbp
  0x000000011ba47fd7: mov    0x108(%r15),%r10
  0x000000011ba47fde: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba47fe1: retq   
  0x000000011ba47fe2: movabs $0x132602590,%r10  ;   {metadata({method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba47fec: mov    %r10,0x8(%rsp)
  0x000000011ba47ff1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba47ff9: callq  0x000000011b59a600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba47ffe: jmpq   0x000000011ba47f74
  0x000000011ba48003: nop
  0x000000011ba48004: nop
  0x000000011ba48005: mov    0x420(%r15),%rax
  0x000000011ba4800c: movabs $0x0,%r10
  0x000000011ba48016: mov    %r10,0x420(%r15)
  0x000000011ba4801d: movabs $0x0,%r10
  0x000000011ba48027: mov    %r10,0x428(%r15)
  0x000000011ba4802e: add    $0x30,%rsp
  0x000000011ba48032: pop    %rbp
  0x000000011ba48033: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba48038: hlt    
  0x000000011ba48039: hlt    
  0x000000011ba4803a: hlt    
  0x000000011ba4803b: hlt    
  0x000000011ba4803c: hlt    
  0x000000011ba4803d: hlt    
  0x000000011ba4803e: hlt    
  0x000000011ba4803f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba48040: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba48045: mov    %rsp,-0x28(%rsp)
  0x000000011ba4804a: sub    $0x80,%rsp
  0x000000011ba48051: mov    %rax,0x78(%rsp)
  0x000000011ba48056: mov    %rcx,0x70(%rsp)
  0x000000011ba4805b: mov    %rdx,0x68(%rsp)
  0x000000011ba48060: mov    %rbx,0x60(%rsp)
  0x000000011ba48065: mov    %rbp,0x50(%rsp)
  0x000000011ba4806a: mov    %rsi,0x48(%rsp)
  0x000000011ba4806f: mov    %rdi,0x40(%rsp)
  0x000000011ba48074: mov    %r8,0x38(%rsp)
  0x000000011ba48079: mov    %r9,0x30(%rsp)
  0x000000011ba4807e: mov    %r10,0x28(%rsp)
  0x000000011ba48083: mov    %r11,0x20(%rsp)
  0x000000011ba48088: mov    %r12,0x18(%rsp)
  0x000000011ba4808d: mov    %r13,0x10(%rsp)
  0x000000011ba48092: mov    %r14,0x8(%rsp)
  0x000000011ba48097: mov    %r15,(%rsp)
  0x000000011ba4809b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba480a5: movabs $0x11ba48045,%rsi  ;   {internal_word}
  0x000000011ba480af: mov    %rsp,%rdx
  0x000000011ba480b2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba480b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba480bb: hlt    
[Deopt Handler Code]
  0x000000011ba480bc: movabs $0x11ba480bc,%r10  ;   {section_word}
  0x000000011ba480c6: push   %r10
  0x000000011ba480c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba480cd: hlt    
  0x000000011ba480ce: hlt    
  0x000000011ba480cf: hlt    

ImmutableOopMap{}pc offsets: 190 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='60' method='java.lang.ref.ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='256' iicount='256' level='3' stamp='0.203' comment='tiered' hot_count='256'/>
<task_queued compile_id='61' method='java.lang.invoke.MethodType hashCode ()I' bytes='53' count='256' backedge_count='606' iicount='256' level='3' stamp='0.203' comment='tiered' hot_count='256'/>
<nmethod compile_id='62' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f78c20' size='432' address='0x0000000122f78a90' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.203'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V  [0x0000000122f78c20, 0x0000000122f78c40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000013287a3b8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f78c20: cmp    (%rsi),%rax
  0x0000000122f78c23: mov    0x24(%rdx),%ebx
  0x0000000122f78c26: shl    $0x3,%rbx
  0x0000000122f78c2a: mov    0x10(%rbx),%rbx
  0x0000000122f78c2e: test   %rbx,%rbx
  0x0000000122f78c31: je     0x0000000122f78c3a
  0x0000000122f78c37: jmpq   *0x38(%rbx)
  0x0000000122f78c3a: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f78c3f: hlt    
<writer thread='15875'/>
<nmethod compile_id='60' compiler='c1' level='3' entry='0x000000011ba48360' size='1840' address='0x000000011ba48190' relocation_offset='376' insts_offset='464' stub_offset='1232' scopes_data_offset='1408' scopes_pcs_offset='1536' dependencies_offset='1792' handler_table_offset='1800' nul_chk_table_offset='1824' metadata_offset='1400' method='java.lang.ref.ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='263' iicount='263' stamp='0.204'/>
<print_nmethod stamp='0.204'>
Compiled method (c1)     203   60   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)
 total in heap  [0x000000011ba48190,0x000000011ba488c0] = 1840
 relocation     [0x000000011ba48308,0x000000011ba48350] = 72
 main code      [0x000000011ba48360,0x000000011ba48660] = 768
 stub code      [0x000000011ba48660,0x000000011ba48708] = 168
 metadata       [0x000000011ba48708,0x000000011ba48710] = 8
 scopes data    [0x000000011ba48710,0x000000011ba48790] = 128
 scopes pcs     [0x000000011ba48790,0x000000011ba48890] = 256
 dependencies   [0x000000011ba48890,0x000000011ba48898] = 8
 handler table  [0x000000011ba48898,0x000000011ba488b0] = 24
 nul chk table  [0x000000011ba488b0,0x000000011ba488c0] = 16
----------------------------------------------------------------------
java/lang/ref/ReferenceQueue.poll()Ljava/lang/ref/Reference;  [0x000000011ba48360, 0x000000011ba48708]  936 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325f7748} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ba48360: mov    0x8(%rsi),%r10d
  0x000000011ba48364: movabs $0x800000000,%r12
  0x000000011ba4836e: add    %r12,%r10
  0x000000011ba48371: xor    %r12,%r12
  0x000000011ba48374: cmp    %rax,%r10
  0x000000011ba48377: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4837d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba48380: mov    %eax,-0x14000(%rsp)
  0x000000011ba48387: push   %rbp
  0x000000011ba48388: sub    $0x40,%rsp
  0x000000011ba4838c: movabs $0x13287a130,%rax  ;   {metadata(method data for {method} {0x00000001325f7748} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011ba48396: mov    0x104(%rax),%edi
  0x000000011ba4839c: add    $0x8,%edi
  0x000000011ba4839f: mov    %edi,0x104(%rax)
  0x000000011ba483a5: and    $0x1ff8,%edi
  0x000000011ba483ab: cmp    $0x0,%edi
  0x000000011ba483ae: je     0x000000011ba485c4  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@0 (line 117)

  0x000000011ba483b4: mov    0x18(%rsi),%eax
  0x000000011ba483b7: shl    $0x3,%rax          ;*getfield head {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@1 (line 117)

  0x000000011ba483bb: cmp    $0x0,%rax
  0x000000011ba483bf: movabs $0x13287a130,%rax  ;   {metadata(method data for {method} {0x00000001325f7748} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011ba483c9: movabs $0x150,%rdi
  0x000000011ba483d3: je     0x000000011ba483e3
  0x000000011ba483d9: movabs $0x140,%rdi
  0x000000011ba483e3: mov    (%rax,%rdi,1),%rbx
  0x000000011ba483e7: lea    0x1(%rbx),%rbx
  0x000000011ba483eb: mov    %rbx,(%rax,%rdi,1)
  0x000000011ba483ef: je     0x000000011ba48553  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@4 (line 117)

  0x000000011ba483f5: mov    0xc(%rsi),%edi
  0x000000011ba483f8: shl    $0x3,%rdi          ;*getfield lock {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@10 (line 119)

  0x000000011ba483fc: lea    0x28(%rsp),%rbx
  0x000000011ba48401: mov    %rdi,0x8(%rbx)
  0x000000011ba48405: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011ba485e5
  0x000000011ba48408: mov    %rax,%rdx
  0x000000011ba4840b: and    $0x7,%rdx
  0x000000011ba4840f: cmp    $0x5,%rdx
  0x000000011ba48413: jne    0x000000011ba484be
  0x000000011ba48419: mov    0x8(%rdi),%edx
  0x000000011ba4841c: movabs $0x800000000,%r12
  0x000000011ba48426: add    %r12,%rdx
  0x000000011ba48429: xor    %r12,%r12
  0x000000011ba4842c: mov    0xb8(%rdx),%rdx
  0x000000011ba48433: or     %r15,%rdx
  0x000000011ba48436: xor    %rax,%rdx
  0x000000011ba48439: and    $0xffffffffffffff87,%rdx
  0x000000011ba4843d: je     0x000000011ba484e6
  0x000000011ba48443: test   $0x7,%rdx
  0x000000011ba4844a: jne    0x000000011ba4849f
  0x000000011ba4844c: test   $0x300,%rdx
  0x000000011ba48453: jne    0x000000011ba48472
  0x000000011ba48455: and    $0x37f,%rax
  0x000000011ba4845c: mov    %rax,%rdx
  0x000000011ba4845f: or     %r15,%rdx
  0x000000011ba48462: lock cmpxchg %rdx,(%rdi)
  0x000000011ba48467: jne    0x000000011ba485ea
  0x000000011ba4846d: jmpq   0x000000011ba484e6
  0x000000011ba48472: mov    0x8(%rdi),%edx
  0x000000011ba48475: movabs $0x800000000,%r12
  0x000000011ba4847f: add    %r12,%rdx
  0x000000011ba48482: xor    %r12,%r12
  0x000000011ba48485: mov    0xb8(%rdx),%rdx
  0x000000011ba4848c: or     %r15,%rdx
  0x000000011ba4848f: lock cmpxchg %rdx,(%rdi)
  0x000000011ba48494: jne    0x000000011ba485ea
  0x000000011ba4849a: jmpq   0x000000011ba484e6
  0x000000011ba4849f: mov    0x8(%rdi),%edx
  0x000000011ba484a2: movabs $0x800000000,%r12
  0x000000011ba484ac: add    %r12,%rdx
  0x000000011ba484af: xor    %r12,%r12
  0x000000011ba484b2: mov    0xb8(%rdx),%rdx
  0x000000011ba484b9: lock cmpxchg %rdx,(%rdi)
  0x000000011ba484be: mov    (%rdi),%rax
  0x000000011ba484c1: or     $0x1,%rax
  0x000000011ba484c5: mov    %rax,(%rbx)
  0x000000011ba484c8: lock cmpxchg %rbx,(%rdi)
  0x000000011ba484cd: je     0x000000011ba484e6
  0x000000011ba484d3: sub    %rsp,%rax
  0x000000011ba484d6: and    $0xfffffffffffff007,%rax
  0x000000011ba484dd: mov    %rax,(%rbx)
  0x000000011ba484e0: jne    0x000000011ba485ea  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 119)

  0x000000011ba484e6: mov    %rdi,0x20(%rsp)
  0x000000011ba484eb: mov    %rsi,%rbx
  0x000000011ba484ee: movabs $0x13287a130,%rax  ;   {metadata(method data for {method} {0x00000001325f7748} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011ba484f8: addq   $0x1,0x160(%rax)
  0x000000011ba48500: nopl   0x0(%rax)
  0x000000011ba48507: callq  0x000000011b4d1f00  ; ImmutableOopMap{[32]=Oop [48]=Oop }
                                                ;*invokevirtual reallyPoll {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 120)
                                                ;   {optimized virtual_call}
  0x000000011ba4850c: mov    %rax,%rsi          ;*invokevirtual reallyPoll {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@17 (line 120)

  0x000000011ba4850f: lea    0x28(%rsp),%rax
  0x000000011ba48514: mov    0x8(%rax),%rbx
  0x000000011ba48518: mov    (%rbx),%rdi
  0x000000011ba4851b: and    $0x7,%rdi
  0x000000011ba4851f: cmp    $0x5,%rdi
  0x000000011ba48523: je     0x000000011ba48540
  0x000000011ba48529: mov    (%rax),%rdi
  0x000000011ba4852c: test   %rdi,%rdi
  0x000000011ba4852f: je     0x000000011ba48540
  0x000000011ba48535: lock cmpxchg %rdi,(%rbx)
  0x000000011ba4853a: jne    0x000000011ba485fd  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@21 (line 120)

  0x000000011ba48540: mov    %rsi,%rax
  0x000000011ba48543: add    $0x40,%rsp
  0x000000011ba48547: pop    %rbp
  0x000000011ba48548: mov    0x108(%r15),%r10
  0x000000011ba4854f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba48552: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@22 (line 120)

  0x000000011ba48553: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba4855d: add    $0x40,%rsp
  0x000000011ba48561: pop    %rbp
  0x000000011ba48562: mov    0x108(%r15),%r10
  0x000000011ba48569: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4856c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@8 (line 118)

  0x000000011ba4856d: mov    0x420(%r15),%rax
  0x000000011ba48574: xor    %r10,%r10
  0x000000011ba48577: mov    %r10,0x420(%r15)
  0x000000011ba4857e: xor    %r10,%r10
  0x000000011ba48581: mov    %r10,0x428(%r15)
  0x000000011ba48588: mov    %rax,%rsi
  0x000000011ba4858b: lea    0x28(%rsp),%rax
  0x000000011ba48590: mov    0x8(%rax),%rbx
  0x000000011ba48594: mov    (%rbx),%rdi
  0x000000011ba48597: and    $0x7,%rdi
  0x000000011ba4859b: cmp    $0x5,%rdi
  0x000000011ba4859f: je     0x000000011ba485bc
  0x000000011ba485a5: mov    (%rax),%rdi
  0x000000011ba485a8: test   %rdi,%rdi
  0x000000011ba485ab: je     0x000000011ba485bc
  0x000000011ba485b1: lock cmpxchg %rdi,(%rbx)
  0x000000011ba485b6: jne    0x000000011ba48610  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@25 (line 121)

  0x000000011ba485bc: mov    %rsi,%rax
  0x000000011ba485bf: jmpq   0x000000011ba4864b
  0x000000011ba485c4: movabs $0x1325f7748,%r10  ;   {metadata({method} {0x00000001325f7748} &apos;poll&apos; &apos;()Ljava/lang/ref/Reference;&apos; in &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000011ba485ce: mov    %r10,0x8(%rsp)
  0x000000011ba485d3: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba485db: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.ref.ReferenceQueue::poll@-1 (line 117)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba485e0: jmpq   0x000000011ba483b4
  0x000000011ba485e5: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 119)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba485ea: mov    %rdi,0x8(%rsp)
  0x000000011ba485ef: mov    %rbx,(%rsp)
  0x000000011ba485f3: callq  0x000000011b598900  ; ImmutableOopMap{rsi=Oop rdi=Oop [48]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.ReferenceQueue::poll@15 (line 119)
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x000000011ba485f8: jmpq   0x000000011ba484e6
  0x000000011ba485fd: lea    0x28(%rsp),%rax
  0x000000011ba48602: mov    %rax,(%rsp)
  0x000000011ba48606: callq  0x000000011b598d80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011ba4860b: jmpq   0x000000011ba48540
  0x000000011ba48610: lea    0x28(%rsp),%rax
  0x000000011ba48615: mov    %rax,(%rsp)
  0x000000011ba48619: callq  0x000000011b598d80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011ba4861e: jmp    0x000000011ba485bc
  0x000000011ba48620: nop
  0x000000011ba48621: nop
  0x000000011ba48622: mov    0x420(%r15),%rax
  0x000000011ba48629: movabs $0x0,%r10
  0x000000011ba48633: mov    %r10,0x420(%r15)
  0x000000011ba4863a: movabs $0x0,%r10
  0x000000011ba48644: mov    %r10,0x428(%r15)
  0x000000011ba4864b: add    $0x40,%rsp
  0x000000011ba4864f: pop    %rbp
  0x000000011ba48650: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba48655: hlt    
  0x000000011ba48656: hlt    
  0x000000011ba48657: hlt    
  0x000000011ba48658: hlt    
  0x000000011ba48659: hlt    
  0x000000011ba4865a: hlt    
  0x000000011ba4865b: hlt    
  0x000000011ba4865c: hlt    
  0x000000011ba4865d: hlt    
  0x000000011ba4865e: hlt    
  0x000000011ba4865f: hlt    
[Stub Code]
  0x000000011ba48660: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba48665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4866f: jmpq   0x000000011ba4866f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba48674: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba48679: mov    %rsp,-0x28(%rsp)
  0x000000011ba4867e: sub    $0x80,%rsp
  0x000000011ba48685: mov    %rax,0x78(%rsp)
  0x000000011ba4868a: mov    %rcx,0x70(%rsp)
  0x000000011ba4868f: mov    %rdx,0x68(%rsp)
  0x000000011ba48694: mov    %rbx,0x60(%rsp)
  0x000000011ba48699: mov    %rbp,0x50(%rsp)
  0x000000011ba4869e: mov    %rsi,0x48(%rsp)
  0x000000011ba486a3: mov    %rdi,0x40(%rsp)
  0x000000011ba486a8: mov    %r8,0x38(%rsp)
  0x000000011ba486ad: mov    %r9,0x30(%rsp)
  0x000000011ba486b2: mov    %r10,0x28(%rsp)
  0x000000011ba486b7: mov    %r11,0x20(%rsp)
  0x000000011ba486bc: mov    %r12,0x18(%rsp)
  0x000000011ba486c1: mov    %r13,0x10(%rsp)
  0x000000011ba486c6: mov    %r14,0x8(%rsp)
  0x000000011ba486cb: mov    %r15,(%rsp)
  0x000000011ba486cf: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba486d9: movabs $0x11ba48679,%rsi  ;   {internal_word}
  0x000000011ba486e3: mov    %rsp,%rdx
  0x000000011ba486e6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba486ea: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba486ef: hlt    
[Deopt Handler Code]
  0x000000011ba486f0: movabs $0x11ba486f0,%r10  ;   {section_word}
  0x000000011ba486fa: push   %r10
  0x000000011ba486fc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba48701: hlt    
  0x000000011ba48702: hlt    
  0x000000011ba48703: hlt    
  0x000000011ba48704: hlt    
  0x000000011ba48705: hlt    
  0x000000011ba48706: hlt    
  0x000000011ba48707: hlt    

ImmutableOopMap{[32]=Oop [48]=Oop }pc offsets: 428 
ImmutableOopMap{rsi=Oop }pc offsets: 640 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 650 
ImmutableOopMap{rsi=Oop rdi=Oop [48]=Oop }pc offsets: 664 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='63' method='java.lang.invoke.MemberName isInvocable ()Z' bytes='7' count='256' iicount='256' level='3' stamp='0.207' comment='tiered' hot_count='256'/>
<task_queued compile_id='64' method='java.lang.invoke.MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.207' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='61' compiler='c1' level='3' entry='0x000000011ba48ae0' size='2048' address='0x000000011ba48910' relocation_offset='376' insts_offset='464' stub_offset='1296' scopes_data_offset='1488' scopes_pcs_offset='1672' dependencies_offset='2008' nul_chk_table_offset='2016' metadata_offset='1480' method='java.lang.invoke.MethodType hashCode ()I' bytes='53' count='267' backedge_count='612' iicount='267' stamp='0.207'/>
<print_nmethod stamp='0.207'>
Compiled method (c1)     207   61       3       java.lang.invoke.MethodType::hashCode (53 bytes)
 total in heap  [0x000000011ba48910,0x000000011ba49110] = 2048
 relocation     [0x000000011ba48a88,0x000000011ba48ae0] = 88
 main code      [0x000000011ba48ae0,0x000000011ba48e20] = 832
 stub code      [0x000000011ba48e20,0x000000011ba48ed8] = 184
 metadata       [0x000000011ba48ed8,0x000000011ba48ee0] = 8
 scopes data    [0x000000011ba48ee0,0x000000011ba48f98] = 184
 scopes pcs     [0x000000011ba48f98,0x000000011ba490e8] = 336
 dependencies   [0x000000011ba490e8,0x000000011ba490f0] = 8
 nul chk table  [0x000000011ba490f0,0x000000011ba49110] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodType.hashCode()I  [0x000000011ba48ae0, 0x000000011ba48ed8]  1016 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000011ba48ae0: mov    0x8(%rsi),%r10d
  0x000000011ba48ae4: movabs $0x800000000,%r12
  0x000000011ba48aee: add    %r12,%r10
  0x000000011ba48af1: xor    %r12,%r12
  0x000000011ba48af4: cmp    %rax,%r10
  0x000000011ba48af7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba48afd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba48b00: mov    %eax,-0x14000(%rsp)
  0x000000011ba48b07: push   %rbp
  0x000000011ba48b08: sub    $0x50,%rsp
  0x000000011ba48b0c: movabs $0x13287a9b0,%rdi  ;   {metadata(method data for {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48b16: mov    0x104(%rdi),%ebx
  0x000000011ba48b1c: add    $0x8,%ebx
  0x000000011ba48b1f: mov    %ebx,0x104(%rdi)
  0x000000011ba48b25: and    $0x1ff8,%ebx
  0x000000011ba48b2b: cmp    $0x0,%ebx
  0x000000011ba48b2e: je     0x000000011ba48d7e  ;*bipush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@0 (line 811)

  0x000000011ba48b34: mov    0xc(%rsi),%edi
  0x000000011ba48b37: shl    $0x3,%rdi          ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@3 (line 811)

  0x000000011ba48b3b: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011ba48d9f
  0x000000011ba48b3e: mov    %rdi,%rbx
  0x000000011ba48b41: movabs $0x13287a9b0,%rax  ;   {metadata(method data for {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48b4b: mov    0x8(%rbx),%ebx
  0x000000011ba48b4e: movabs $0x800000000,%r12
  0x000000011ba48b58: add    %r12,%rbx
  0x000000011ba48b5b: xor    %r12,%r12
  0x000000011ba48b5e: cmp    0x150(%rax),%rbx
  0x000000011ba48b65: jne    0x000000011ba48b74
  0x000000011ba48b67: addq   $0x1,0x158(%rax)
  0x000000011ba48b6f: jmpq   0x000000011ba48bda
  0x000000011ba48b74: cmp    0x160(%rax),%rbx
  0x000000011ba48b7b: jne    0x000000011ba48b8a
  0x000000011ba48b7d: addq   $0x1,0x168(%rax)
  0x000000011ba48b85: jmpq   0x000000011ba48bda
  0x000000011ba48b8a: cmpq   $0x0,0x150(%rax)
  0x000000011ba48b95: jne    0x000000011ba48bae
  0x000000011ba48b97: mov    %rbx,0x150(%rax)
  0x000000011ba48b9e: movq   $0x1,0x158(%rax)
  0x000000011ba48ba9: jmpq   0x000000011ba48bda
  0x000000011ba48bae: cmpq   $0x0,0x160(%rax)
  0x000000011ba48bb9: jne    0x000000011ba48bd2
  0x000000011ba48bbb: mov    %rbx,0x160(%rax)
  0x000000011ba48bc2: movq   $0x1,0x168(%rax)
  0x000000011ba48bcd: jmpq   0x000000011ba48bda
  0x000000011ba48bd2: addq   $0x1,0x140(%rax)
  0x000000011ba48bda: mov    %rsi,0x20(%rsp)
  0x000000011ba48bdf: mov    %rdi,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 811)

  0x000000011ba48be2: nopl   0x0(%rax,%rax,1)
  0x000000011ba48be7: callq  0x0000000122f760e8  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 811)
                                                ;   {optimized virtual_call}
  0x000000011ba48bec: add    $0x1f,%eax
  0x000000011ba48bef: mov    0x20(%rsp),%rsi
  0x000000011ba48bf4: mov    0x10(%rsi),%edi
  0x000000011ba48bf7: shl    $0x3,%rdi          ;*getfield ptypes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@12 (line 812)

  0x000000011ba48bfb: mov    %rdi,0x38(%rsp)
  0x000000011ba48c00: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 812)
                                                ; implicit exception: dispatches to 0x000000011ba48da4
  0x000000011ba48c03: mov    %ebx,0x30(%rsp)
  0x000000011ba48c07: mov    $0x0,%edx
  0x000000011ba48c0c: jmpq   0x000000011ba48d36  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@22 (line 812)

  0x000000011ba48c11: nopl   0x0(%rax)
  0x000000011ba48c18: movslq %edx,%rsi
  0x000000011ba48c1b: mov    0x10(%rdi,%rsi,4),%esi
  0x000000011ba48c1f: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@31 (line 812)

  0x000000011ba48c23: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 813)
                                                ; implicit exception: dispatches to 0x000000011ba48da9
  0x000000011ba48c26: mov    %rsi,%rcx
  0x000000011ba48c29: movabs $0x13287a9b0,%r8   ;   {metadata(method data for {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48c33: mov    0x8(%rcx),%ecx
  0x000000011ba48c36: movabs $0x800000000,%r12
  0x000000011ba48c40: add    %r12,%rcx
  0x000000011ba48c43: xor    %r12,%r12
  0x000000011ba48c46: cmp    0x1a8(%r8),%rcx
  0x000000011ba48c4d: jne    0x000000011ba48c5c
  0x000000011ba48c4f: addq   $0x1,0x1b0(%r8)
  0x000000011ba48c57: jmpq   0x000000011ba48cc2
  0x000000011ba48c5c: cmp    0x1b8(%r8),%rcx
  0x000000011ba48c63: jne    0x000000011ba48c72
  0x000000011ba48c65: addq   $0x1,0x1c0(%r8)
  0x000000011ba48c6d: jmpq   0x000000011ba48cc2
  0x000000011ba48c72: cmpq   $0x0,0x1a8(%r8)
  0x000000011ba48c7d: jne    0x000000011ba48c96
  0x000000011ba48c7f: mov    %rcx,0x1a8(%r8)
  0x000000011ba48c86: movq   $0x1,0x1b0(%r8)
  0x000000011ba48c91: jmpq   0x000000011ba48cc2
  0x000000011ba48c96: cmpq   $0x0,0x1b8(%r8)
  0x000000011ba48ca1: jne    0x000000011ba48cba
  0x000000011ba48ca3: mov    %rcx,0x1b8(%r8)
  0x000000011ba48caa: movq   $0x1,0x1c0(%r8)
  0x000000011ba48cb5: jmpq   0x000000011ba48cc2
  0x000000011ba48cba: addq   $0x1,0x198(%r8)
  0x000000011ba48cc2: mov    %rax,%rcx
  0x000000011ba48cc5: shl    $0x5,%eax
  0x000000011ba48cc8: sub    %ecx,%eax
  0x000000011ba48cca: mov    %edx,0x2c(%rsp)
  0x000000011ba48cce: mov    %eax,0x28(%rsp)
  0x000000011ba48cd2: nopl   0x0(%rax,%rax,1)
  0x000000011ba48cd7: callq  0x0000000122f760e8  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 813)
                                                ;   {optimized virtual_call}
  0x000000011ba48cdc: mov    0x28(%rsp),%esi
  0x000000011ba48ce0: add    %eax,%esi
  0x000000011ba48ce2: mov    0x2c(%rsp),%edx
  0x000000011ba48ce6: inc    %edx
  0x000000011ba48ce8: movabs $0x13287a9b0,%rax  ;   {metadata(method data for {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48cf2: mov    0x108(%rax),%edi
  0x000000011ba48cf8: add    $0x8,%edi
  0x000000011ba48cfb: mov    %edi,0x108(%rax)
  0x000000011ba48d01: and    $0xfff8,%edi
  0x000000011ba48d07: cmp    $0x0,%edi
  0x000000011ba48d0a: je     0x000000011ba48dae  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 812)

  0x000000011ba48d10: mov    0x108(%r15),%r10   ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 812)

  0x000000011ba48d17: test   %eax,(%r10)        ;   {poll}
  0x000000011ba48d1a: movabs $0x13287a9b0,%rax  ;   {metadata(method data for {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48d24: incl   0x1d0(%rax)
  0x000000011ba48d2a: mov    %rsi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 812)

  0x000000011ba48d2d: mov    0x30(%rsp),%ebx
  0x000000011ba48d31: mov    0x38(%rsp),%rdi
  0x000000011ba48d36: cmp    %ebx,%edx
  0x000000011ba48d38: movabs $0x13287a9b0,%rsi  ;   {metadata(method data for {method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48d42: movabs $0x188,%rcx
  0x000000011ba48d4c: jl     0x000000011ba48d5c
  0x000000011ba48d52: movabs $0x178,%rcx
  0x000000011ba48d5c: mov    (%rsi,%rcx,1),%r8
  0x000000011ba48d60: lea    0x1(%r8),%r8
  0x000000011ba48d64: mov    %r8,(%rsi,%rcx,1)
  0x000000011ba48d68: jl     0x000000011ba48c18  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@25 (line 812)

  0x000000011ba48d6e: add    $0x50,%rsp
  0x000000011ba48d72: pop    %rbp
  0x000000011ba48d73: mov    0x108(%r15),%r10
  0x000000011ba48d7a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba48d7d: retq   
  0x000000011ba48d7e: movabs $0x1325408e8,%r10  ;   {metadata({method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48d88: mov    %r10,0x8(%rsp)
  0x000000011ba48d8d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba48d95: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::hashCode@-1 (line 811)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba48d9a: jmpq   0x000000011ba48b34
  0x000000011ba48d9f: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 811)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba48da4: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop [56]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 812)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba48da9: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop [56]=Oop rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 813)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba48dae: movabs $0x1325408e8,%r10  ;   {metadata({method} {0x00000001325408e8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x000000011ba48db8: mov    %r10,0x8(%rsp)
  0x000000011ba48dbd: movq   $0x30,(%rsp)
  0x000000011ba48dc5: callq  0x000000011b59a600  ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 812)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba48dca: jmpq   0x000000011ba48d10
  0x000000011ba48dcf: nop
  0x000000011ba48dd0: nop
  0x000000011ba48dd1: mov    0x420(%r15),%rax
  0x000000011ba48dd8: movabs $0x0,%r10
  0x000000011ba48de2: mov    %r10,0x420(%r15)
  0x000000011ba48de9: movabs $0x0,%r10
  0x000000011ba48df3: mov    %r10,0x428(%r15)
  0x000000011ba48dfa: add    $0x50,%rsp
  0x000000011ba48dfe: pop    %rbp
  0x000000011ba48dff: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba48e04: hlt    
  0x000000011ba48e05: hlt    
  0x000000011ba48e06: hlt    
  0x000000011ba48e07: hlt    
  0x000000011ba48e08: hlt    
  0x000000011ba48e09: hlt    
  0x000000011ba48e0a: hlt    
  0x000000011ba48e0b: hlt    
  0x000000011ba48e0c: hlt    
  0x000000011ba48e0d: hlt    
  0x000000011ba48e0e: hlt    
  0x000000011ba48e0f: hlt    
  0x000000011ba48e10: hlt    
  0x000000011ba48e11: hlt    
  0x000000011ba48e12: hlt    
  0x000000011ba48e13: hlt    
  0x000000011ba48e14: hlt    
  0x000000011ba48e15: hlt    
  0x000000011ba48e16: hlt    
  0x000000011ba48e17: hlt    
  0x000000011ba48e18: hlt    
  0x000000011ba48e19: hlt    
  0x000000011ba48e1a: hlt    
  0x000000011ba48e1b: hlt    
  0x000000011ba48e1c: hlt    
  0x000000011ba48e1d: hlt    
  0x000000011ba48e1e: hlt    
  0x000000011ba48e1f: hlt    
[Stub Code]
  0x000000011ba48e20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba48e25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba48e2f: jmpq   0x000000011ba48e2f  ;   {runtime_call}
  0x000000011ba48e34: nop
  0x000000011ba48e35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba48e3f: jmpq   0x000000011ba48e3f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba48e44: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba48e49: mov    %rsp,-0x28(%rsp)
  0x000000011ba48e4e: sub    $0x80,%rsp
  0x000000011ba48e55: mov    %rax,0x78(%rsp)
  0x000000011ba48e5a: mov    %rcx,0x70(%rsp)
  0x000000011ba48e5f: mov    %rdx,0x68(%rsp)
  0x000000011ba48e64: mov    %rbx,0x60(%rsp)
  0x000000011ba48e69: mov    %rbp,0x50(%rsp)
  0x000000011ba48e6e: mov    %rsi,0x48(%rsp)
  0x000000011ba48e73: mov    %rdi,0x40(%rsp)
  0x000000011ba48e78: mov    %r8,0x38(%rsp)
  0x000000011ba48e7d: mov    %r9,0x30(%rsp)
  0x000000011ba48e82: mov    %r10,0x28(%rsp)
  0x000000011ba48e87: mov    %r11,0x20(%rsp)
  0x000000011ba48e8c: mov    %r12,0x18(%rsp)
  0x000000011ba48e91: mov    %r13,0x10(%rsp)
  0x000000011ba48e96: mov    %r14,0x8(%rsp)
  0x000000011ba48e9b: mov    %r15,(%rsp)
  0x000000011ba48e9f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba48ea9: movabs $0x11ba48e49,%rsi  ;   {internal_word}
  0x000000011ba48eb3: mov    %rsp,%rdx
  0x000000011ba48eb6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba48eba: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba48ebf: hlt    
[Deopt Handler Code]
  0x000000011ba48ec0: movabs $0x11ba48ec0,%r10  ;   {section_word}
  0x000000011ba48eca: push   %r10
  0x000000011ba48ecc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba48ed1: hlt    
  0x000000011ba48ed2: hlt    
  0x000000011ba48ed3: hlt    
  0x000000011ba48ed4: hlt    
  0x000000011ba48ed5: hlt    
  0x000000011ba48ed6: hlt    
  0x000000011ba48ed7: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 268 
ImmutableOopMap{[56]=Oop }pc offsets: 508 567 
ImmutableOopMap{rsi=Oop }pc offsets: 698 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 708 
ImmutableOopMap{rdi=Oop [56]=Oop }pc offsets: 713 
ImmutableOopMap{rdi=Oop [56]=Oop rsi=Oop }pc offsets: 718 
ImmutableOopMap{[56]=Oop }pc offsets: 746 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='65' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f78e20' size='520' address='0x0000000122f78c90' relocation_offset='376' consts_offset='520' insts_offset='400' method='java.lang.invoke.MethodHandle linkToInterface (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.211'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToInterface(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000122f78e20, 0x0000000122f78e98]  120 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000013287b278} &apos;linkToInterface&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f78e20: mov    0x8(%rsi),%r10d
  0x0000000122f78e24: movabs $0x800000000,%r12
  0x0000000122f78e2e: add    %r12,%r10
  0x0000000122f78e31: xor    %r12,%r12
  0x0000000122f78e34: mov    0x18(%rcx),%eax
  0x0000000122f78e37: shl    $0x3,%rax
  0x0000000122f78e3b: mov    0x50(%rax),%rax
  0x0000000122f78e3f: mov    0x10(%rcx),%rbx
  0x0000000122f78e43: mov    0xc4(%r10),%r11d
  0x0000000122f78e4a: lea    0x1d0(%r10,%r11,8),%r11
  0x0000000122f78e52: lea    (%r10,%rbx,8),%r10
  0x0000000122f78e56: mov    (%r11),%rbx
  0x0000000122f78e59: cmp    %rbx,%rax
  0x0000000122f78e5c: je     0x0000000122f78e73
  0x0000000122f78e5e: test   %rbx,%rbx
  0x0000000122f78e61: je     0x0000000122f78e8c
  0x0000000122f78e67: add    $0x10,%r11
  0x0000000122f78e6b: mov    (%r11),%rbx
  0x0000000122f78e6e: cmp    %rbx,%rax
  0x0000000122f78e71: jne    0x0000000122f78e5e
  0x0000000122f78e73: mov    0x8(%r11),%r11d
  0x0000000122f78e77: mov    (%r10,%r11,1),%rbx
  0x0000000122f78e7b: test   %rbx,%rbx
  0x0000000122f78e7e: je     0x0000000122f78e87
  0x0000000122f78e84: jmpq   *0x38(%rbx)
  0x0000000122f78e87: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f78e8c: jmpq   0x000000011b4eba80  ;   {runtime_call IncompatibleClassChangeError throw_exception}
  0x0000000122f78e91: hlt    
  0x0000000122f78e92: hlt    
  0x0000000122f78e93: hlt    
  0x0000000122f78e94: hlt    
  0x0000000122f78e95: hlt    
  0x0000000122f78e96: hlt    
  0x0000000122f78e97: hlt    
<writer thread='15875'/>
<nmethod compile_id='63' compiler='c1' level='3' entry='0x000000011ba49360' size='1552' address='0x000000011ba49190' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1208' scopes_pcs_offset='1336' dependencies_offset='1544' metadata_offset='1184' method='java.lang.invoke.MemberName isInvocable ()Z' bytes='7' count='287' iicount='287' stamp='0.212'/>
<print_nmethod stamp='0.212'>
Compiled method (c1)     211   63       3       java.lang.invoke.MemberName::isInvocable (7 bytes)
 total in heap  [0x000000011ba49190,0x000000011ba497a0] = 1552
 relocation     [0x000000011ba49308,0x000000011ba49348] = 64
 main code      [0x000000011ba49360,0x000000011ba495a0] = 576
 stub code      [0x000000011ba495a0,0x000000011ba49630] = 144
 metadata       [0x000000011ba49630,0x000000011ba49648] = 24
 scopes data    [0x000000011ba49648,0x000000011ba496c8] = 128
 scopes pcs     [0x000000011ba496c8,0x000000011ba49798] = 208
 dependencies   [0x000000011ba49798,0x000000011ba497a0] = 8
----------------------------------------------------------------------
java/lang/invoke/MemberName.isInvocable()Z  [0x000000011ba49360, 0x000000011ba49630]  720 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013252b620} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011ba49360: mov    0x8(%rsi),%r10d
  0x000000011ba49364: movabs $0x800000000,%r12
  0x000000011ba4936e: add    %r12,%r10
  0x000000011ba49371: xor    %r12,%r12
  0x000000011ba49374: cmp    %rax,%r10
  0x000000011ba49377: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4937d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba49380: mov    %eax,-0x14000(%rsp)
  0x000000011ba49387: push   %rbp
  0x000000011ba49388: sub    $0x60,%rsp
  0x000000011ba4938c: movabs $0x13287b2e0,%rax  ;   {metadata(method data for {method} {0x000000013252b620} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba49396: mov    0x104(%rax),%edi
  0x000000011ba4939c: add    $0x8,%edi
  0x000000011ba4939f: mov    %edi,0x104(%rax)
  0x000000011ba493a5: and    $0x1ff8,%edi
  0x000000011ba493ab: cmp    $0x0,%edi
  0x000000011ba493ae: je     0x000000011ba49500  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::isInvocable@0 (line 489)

  0x000000011ba493b4: mov    %rsi,%rax
  0x000000011ba493b7: movabs $0x13287b2e0,%rdi  ;   {metadata(method data for {method} {0x000000013252b620} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba493c1: addq   $0x1,0x140(%rdi)
  0x000000011ba493c9: movabs $0x13287b498,%rax  ;   {metadata(method data for {method} {0x000000013252a978} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba493d3: mov    0x104(%rax),%edi
  0x000000011ba493d9: add    $0x8,%edi
  0x000000011ba493dc: mov    %edi,0x104(%rax)
  0x000000011ba493e2: and    $0x7ffff8,%edi
  0x000000011ba493e8: cmp    $0x0,%edi
  0x000000011ba493eb: je     0x000000011ba49521
  0x000000011ba493f1: mov    %rsi,%rax
  0x000000011ba493f4: movabs $0x13287b498,%rdi  ;   {metadata(method data for {method} {0x000000013252a978} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba493fe: addq   $0x1,0x140(%rdi)
  0x000000011ba49406: movabs $0x1328613a0,%rax  ;   {metadata(method data for {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba49410: mov    0x104(%rax),%edi
  0x000000011ba49416: add    $0x8,%edi
  0x000000011ba49419: mov    %edi,0x104(%rax)
  0x000000011ba4941f: and    $0x7ffff8,%edi
  0x000000011ba49425: cmp    $0x0,%edi
  0x000000011ba49428: je     0x000000011ba49542
  0x000000011ba4942e: mov    0xc(%rsi),%eax     ;*getfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 363)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba49431: and    $0x30000,%eax
  0x000000011ba49437: cmp    $0x0,%eax
  0x000000011ba4943a: movabs $0x1328613a0,%rax  ;   {metadata(method data for {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba49444: movabs $0x140,%rsi
  0x000000011ba4944e: jne    0x000000011ba4945e
  0x000000011ba49454: movabs $0x150,%rsi
  0x000000011ba4945e: mov    (%rax,%rsi,1),%rdi
  0x000000011ba49462: lea    0x1(%rdi),%rdi
  0x000000011ba49466: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba4946a: jne    0x000000011ba4948a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 363)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba49470: movabs $0x1328613a0,%rax  ;   {metadata(method data for {method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba4947a: incl   0x160(%rax)
  0x000000011ba49480: mov    $0x1,%eax
  0x000000011ba49485: jmpq   0x000000011ba4948f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 363)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba4948a: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 363)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba4948f: and    $0x1,%eax
  0x000000011ba49492: cmp    $0x0,%eax
  0x000000011ba49495: movabs $0x13287b498,%rax  ;   {metadata(method data for {method} {0x000000013252a978} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba4949f: movabs $0x178,%rsi
  0x000000011ba494a9: jne    0x000000011ba494b9
  0x000000011ba494af: movabs $0x188,%rsi
  0x000000011ba494b9: mov    (%rax,%rsi,1),%rdi
  0x000000011ba494bd: lea    0x1(%rdi),%rdi
  0x000000011ba494c1: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba494c5: jne    0x000000011ba494e5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testAnyFlags@6 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba494cb: movabs $0x13287b498,%rax  ;   {metadata(method data for {method} {0x000000013252a978} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba494d5: incl   0x198(%rax)
  0x000000011ba494db: mov    $0x1,%eax
  0x000000011ba494e0: jmpq   0x000000011ba494ea  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testAnyFlags@10 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba494e5: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testAnyFlags@14 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)

  0x000000011ba494ea: and    $0x1,%eax
  0x000000011ba494ed: and    $0x1,%eax
  0x000000011ba494f0: add    $0x60,%rsp
  0x000000011ba494f4: pop    %rbp
  0x000000011ba494f5: mov    0x108(%r15),%r10
  0x000000011ba494fc: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba494ff: retq   
  0x000000011ba49500: movabs $0x13252b620,%r10  ;   {metadata({method} {0x000000013252b620} &apos;isInvocable&apos; &apos;()Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba4950a: mov    %r10,0x8(%rsp)
  0x000000011ba4950f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba49517: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::isInvocable@-1 (line 489)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4951c: jmpq   0x000000011ba493b4
  0x000000011ba49521: movabs $0x13252a978,%r10  ;   {metadata({method} {0x000000013252a978} &apos;testAnyFlags&apos; &apos;(I)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba4952b: mov    %r10,0x8(%rsp)
  0x000000011ba49530: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba49538: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testAnyFlags@-1 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4953d: jmpq   0x000000011ba493f1
  0x000000011ba49542: movabs $0x13252a800,%r10  ;   {metadata({method} {0x000000013252a800} &apos;testFlags&apos; &apos;(II)Z&apos; in &apos;java/lang/invoke/MemberName&apos;)}
  0x000000011ba4954c: mov    %r10,0x8(%rsp)
  0x000000011ba49551: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba49559: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 363)
                                                ; - java.lang.invoke.MemberName::testAnyFlags@3 (line 369)
                                                ; - java.lang.invoke.MemberName::isInvocable@3 (line 489)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4955e: jmpq   0x000000011ba4942e
  0x000000011ba49563: nop
  0x000000011ba49564: nop
  0x000000011ba49565: mov    0x420(%r15),%rax
  0x000000011ba4956c: movabs $0x0,%r10
  0x000000011ba49576: mov    %r10,0x420(%r15)
  0x000000011ba4957d: movabs $0x0,%r10
  0x000000011ba49587: mov    %r10,0x428(%r15)
  0x000000011ba4958e: add    $0x60,%rsp
  0x000000011ba49592: pop    %rbp
  0x000000011ba49593: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba49598: hlt    
  0x000000011ba49599: hlt    
  0x000000011ba4959a: hlt    
  0x000000011ba4959b: hlt    
  0x000000011ba4959c: hlt    
  0x000000011ba4959d: hlt    
  0x000000011ba4959e: hlt    
  0x000000011ba4959f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba495a0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba495a5: mov    %rsp,-0x28(%rsp)
  0x000000011ba495aa: sub    $0x80,%rsp
  0x000000011ba495b1: mov    %rax,0x78(%rsp)
  0x000000011ba495b6: mov    %rcx,0x70(%rsp)
  0x000000011ba495bb: mov    %rdx,0x68(%rsp)
  0x000000011ba495c0: mov    %rbx,0x60(%rsp)
  0x000000011ba495c5: mov    %rbp,0x50(%rsp)
  0x000000011ba495ca: mov    %rsi,0x48(%rsp)
  0x000000011ba495cf: mov    %rdi,0x40(%rsp)
  0x000000011ba495d4: mov    %r8,0x38(%rsp)
  0x000000011ba495d9: mov    %r9,0x30(%rsp)
  0x000000011ba495de: mov    %r10,0x28(%rsp)
  0x000000011ba495e3: mov    %r11,0x20(%rsp)
  0x000000011ba495e8: mov    %r12,0x18(%rsp)
  0x000000011ba495ed: mov    %r13,0x10(%rsp)
  0x000000011ba495f2: mov    %r14,0x8(%rsp)
  0x000000011ba495f7: mov    %r15,(%rsp)
  0x000000011ba495fb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba49605: movabs $0x11ba495a5,%rsi  ;   {internal_word}
  0x000000011ba4960f: mov    %rsp,%rdx
  0x000000011ba49612: and    $0xfffffffffffffff0,%rsp
  0x000000011ba49616: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4961b: hlt    
[Deopt Handler Code]
  0x000000011ba4961c: movabs $0x11ba4961c,%r10  ;   {section_word}
  0x000000011ba49626: push   %r10
  0x000000011ba49628: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4962d: hlt    
  0x000000011ba4962e: hlt    
  0x000000011ba4962f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 444 477 510 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='66' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='256' backedge_count='1' iicount='256' level='3' stamp='0.214' comment='tiered' hot_count='256'/>
<writer thread='15875'/>
<nmethod compile_id='66' compiler='c1' level='3' entry='0x000000011ba49a80' size='5888' address='0x000000011ba49810' relocation_offset='376' insts_offset='624' stub_offset='3888' scopes_data_offset='4144' scopes_pcs_offset='4752' dependencies_offset='5824' nul_chk_table_offset='5832' oops_offset='4104' metadata_offset='4112' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='272' backedge_count='1' iicount='272' stamp='0.215'/>
<writer thread='9987'/>
<task_queued compile_id='67' method='jdk.internal.org.objectweb.asm.ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='256' iicount='256' level='3' stamp='0.215' comment='tiered' hot_count='256'/>
<writer thread='15875'/>
<print_nmethod stamp='0.215'>
Compiled method (c1)     215   66       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
 total in heap  [0x000000011ba49810,0x000000011ba4af10] = 5888
 relocation     [0x000000011ba49988,0x000000011ba49a68] = 224
 main code      [0x000000011ba49a80,0x000000011ba4a740] = 3264
 stub code      [0x000000011ba4a740,0x000000011ba4a818] = 216
 oops           [0x000000011ba4a818,0x000000011ba4a820] = 8
 metadata       [0x000000011ba4a820,0x000000011ba4a840] = 32
 scopes data    [0x000000011ba4a840,0x000000011ba4aaa0] = 608
 scopes pcs     [0x000000011ba4aaa0,0x000000011ba4aed0] = 1072
 dependencies   [0x000000011ba4aed0,0x000000011ba4aed8] = 8
 nul chk table  [0x000000011ba4aed8,0x000000011ba4af10] = 56
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011ba49a80, 0x000000011ba4a818]  3480 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0xc0]  (sp of caller)
  0x000000011ba49a80: mov    0x8(%rsi),%r10d
  0x000000011ba49a84: movabs $0x800000000,%r12
  0x000000011ba49a8e: add    %r12,%r10
  0x000000011ba49a91: xor    %r12,%r12
  0x000000011ba49a94: cmp    %rax,%r10
  0x000000011ba49a97: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba49a9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba49aa0: mov    %eax,-0x14000(%rsp)
  0x000000011ba49aa7: push   %rbp
  0x000000011ba49aa8: sub    $0xb0,%rsp
  0x000000011ba49aaf: mov    %rdx,0x88(%rsp)
  0x000000011ba49ab7: movabs $0x13287c260,%rdi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49ac1: mov    0x104(%rdi),%ebx
  0x000000011ba49ac7: add    $0x8,%ebx
  0x000000011ba49aca: mov    %ebx,0x104(%rdi)
  0x000000011ba49ad0: and    $0x1ff8,%ebx
  0x000000011ba49ad6: cmp    $0x0,%ebx
  0x000000011ba49ad9: je     0x000000011ba4a5ce  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@0 (line 936)

  0x000000011ba49adf: mov    %rsi,0x80(%rsp)
  0x000000011ba49ae7: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba4a5ef
  0x000000011ba49aea: mov    %rdx,%rdi
  0x000000011ba49aed: movabs $0x13287c260,%rbx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49af7: mov    0x8(%rdi),%edi
  0x000000011ba49afa: movabs $0x800000000,%r12
  0x000000011ba49b04: add    %r12,%rdi
  0x000000011ba49b07: xor    %r12,%r12
  0x000000011ba49b0a: cmp    0x150(%rbx),%rdi
  0x000000011ba49b11: jne    0x000000011ba49b20
  0x000000011ba49b13: addq   $0x1,0x158(%rbx)
  0x000000011ba49b1b: jmpq   0x000000011ba49b86
  0x000000011ba49b20: cmp    0x160(%rbx),%rdi
  0x000000011ba49b27: jne    0x000000011ba49b36
  0x000000011ba49b29: addq   $0x1,0x168(%rbx)
  0x000000011ba49b31: jmpq   0x000000011ba49b86
  0x000000011ba49b36: cmpq   $0x0,0x150(%rbx)
  0x000000011ba49b41: jne    0x000000011ba49b5a
  0x000000011ba49b43: mov    %rdi,0x150(%rbx)
  0x000000011ba49b4a: movq   $0x1,0x158(%rbx)
  0x000000011ba49b55: jmpq   0x000000011ba49b86
  0x000000011ba49b5a: cmpq   $0x0,0x160(%rbx)
  0x000000011ba49b65: jne    0x000000011ba49b7e
  0x000000011ba49b67: mov    %rdi,0x160(%rbx)
  0x000000011ba49b6e: movq   $0x1,0x168(%rbx)
  0x000000011ba49b79: jmpq   0x000000011ba49b86
  0x000000011ba49b7e: addq   $0x1,0x140(%rbx)
  0x000000011ba49b86: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)

  0x000000011ba49b89: nopl   0x0(%rax)
  0x000000011ba49b8d: movabs $0x800043330,%rax
  0x000000011ba49b97: callq  0x000000011b4d3c60  ; ImmutableOopMap{[136]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {virtual_call}
  0x000000011ba49b9c: movabs $0x13287c260,%rcx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49ba6: addq   $0x1,0x178(%rcx)
  0x000000011ba49bae: movabs $0x132828e40,%rcx  ;   {metadata(method data for {method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49bb8: mov    0x104(%rcx),%edx
  0x000000011ba49bbe: add    $0x8,%edx
  0x000000011ba49bc1: mov    %edx,0x104(%rcx)
  0x000000011ba49bc7: and    $0x7ffff8,%edx
  0x000000011ba49bcd: cmp    $0x0,%edx
  0x000000011ba49bd0: je     0x000000011ba4a5f4
  0x000000011ba49bd6: mov    %rax,%rcx
  0x000000011ba49bd9: shr    $0x10,%ecx
  0x000000011ba49bdc: xor    %rax,%rcx
  0x000000011ba49bdf: and    $0x7fffffff,%ecx
  0x000000011ba49be5: mov    %ecx,0x98(%rsp)
  0x000000011ba49bec: mov    0x80(%rsp),%rsi
  0x000000011ba49bf4: mov    0x28(%rsi),%edx
  0x000000011ba49bf7: shl    $0x3,%rdx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@10 (line 937)

  0x000000011ba49bfb: cmp    $0x0,%rdx
  0x000000011ba49bff: movabs $0x13287c260,%rsi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49c09: movabs $0x188,%rdi
  0x000000011ba49c13: je     0x000000011ba49c23
  0x000000011ba49c19: movabs $0x198,%rdi
  0x000000011ba49c23: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba49c27: lea    0x1(%rbx),%rbx
  0x000000011ba49c2b: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba49c2f: je     0x000000011ba4a57d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@15 (line 937)

  0x000000011ba49c35: mov    0xc(%rdx),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ; implicit exception: dispatches to 0x000000011ba4a615
  0x000000011ba49c38: cmp    $0x0,%esi
  0x000000011ba49c3b: movabs $0x13287c260,%rdi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49c45: movabs $0x1a8,%rbx
  0x000000011ba49c4f: jle    0x000000011ba49c5f
  0x000000011ba49c55: movabs $0x1b8,%rbx
  0x000000011ba49c5f: mov    (%rdi,%rbx,1),%rax
  0x000000011ba49c63: lea    0x1(%rax),%rax
  0x000000011ba49c67: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba49c6b: jle    0x000000011ba4a57d  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@23 (line 937)

  0x000000011ba49c71: movabs $0x13287c260,%rdi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49c7b: addq   $0x1,0x1c8(%rdi)
  0x000000011ba49c83: dec    %esi
  0x000000011ba49c85: and    %rcx,%rsi
  0x000000011ba49c88: movabs $0x1326b8aa8,%rdi  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49c92: mov    0x104(%rdi),%ebx
  0x000000011ba49c98: add    $0x8,%ebx
  0x000000011ba49c9b: mov    %ebx,0x104(%rdi)
  0x000000011ba49ca1: and    $0x7ffff8,%ebx
  0x000000011ba49ca7: cmp    $0x0,%ebx
  0x000000011ba49caa: je     0x000000011ba4a61a
  0x000000011ba49cb0: movabs $0x1326b8aa8,%rdi  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49cba: lea    0x178(%rdi),%rdi
  0x000000011ba49cc1: mov    %rdx,%rbx
  0x000000011ba49cc4: mov    0x8(%rbx),%ebx
  0x000000011ba49cc7: movabs $0x800000000,%r12
  0x000000011ba49cd1: add    %r12,%rbx
  0x000000011ba49cd4: xor    %r12,%r12
  0x000000011ba49cd7: xor    0x8(%rdi),%rbx
  0x000000011ba49cdb: test   $0xfffffffffffffffc,%rbx
  0x000000011ba49ce2: je     0x000000011ba49cf5
  0x000000011ba49ce4: test   $0x2,%rbx
  0x000000011ba49ceb: jne    0x000000011ba49cf5
  0x000000011ba49ced: orq    $0x2,0x8(%rdi)
  0x000000011ba49cf5: movabs $0x70ff080f8,%rdi  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000070ff080f8})}
  0x000000011ba49cff: movabs $0x1326b8aa8,%rbx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49d09: addq   $0x1,0x140(%rbx)
  0x000000011ba49d11: movslq %esi,%rsi
  0x000000011ba49d14: mov    %rcx,%rdi
  0x000000011ba49d17: mov    $0x2,%ecx
  0x000000011ba49d1c: shl    %cl,%rsi
  0x000000011ba49d1f: movabs $0x10,%r10
  0x000000011ba49d29: add    %r10,%rsi
  0x000000011ba49d2c: movabs $0x1326b8cb8,%rbx  ;   {metadata(method data for {method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba49d36: mov    0x104(%rbx),%eax
  0x000000011ba49d3c: add    $0x8,%eax
  0x000000011ba49d3f: mov    %eax,0x104(%rbx)
  0x000000011ba49d45: and    $0x7ffff8,%eax
  0x000000011ba49d4b: cmp    $0x0,%eax
  0x000000011ba49d4e: je     0x000000011ba4a63b
  0x000000011ba49d54: mov    (%rdx,%rsi,1),%edx
  0x000000011ba49d57: shl    $0x3,%rdx
  0x000000011ba49d5b: movsbl 0x30(%r15),%esi
  0x000000011ba49d60: cmp    $0x0,%esi
  0x000000011ba49d63: jne    0x000000011ba4a65c
  0x000000011ba49d69: cmp    $0x0,%rdx
  0x000000011ba49d6d: jne    0x000000011ba49d85
  0x000000011ba49d6f: movabs $0x1326b8aa8,%rax  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49d79: orb    $0x1,0x189(%rax)
  0x000000011ba49d80: jmpq   0x000000011ba49e5e
  0x000000011ba49d85: movabs $0x80001b570,%rsi  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba49d8f: mov    0x8(%rdx),%eax
  0x000000011ba49d92: movabs $0x800000000,%r12
  0x000000011ba49d9c: add    %r12,%rax
  0x000000011ba49d9f: xor    %r12,%r12
  0x000000011ba49da2: cmp    0x38(%rax),%rsi
  0x000000011ba49da6: jne    0x000000011ba49e42
  0x000000011ba49dac: movabs $0x1326b8aa8,%rax  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49db6: mov    0x8(%rdx),%esi
  0x000000011ba49db9: movabs $0x800000000,%r12
  0x000000011ba49dc3: add    %r12,%rsi
  0x000000011ba49dc6: xor    %r12,%r12
  0x000000011ba49dc9: cmp    0x1a0(%rax),%rsi
  0x000000011ba49dd0: jne    0x000000011ba49ddf
  0x000000011ba49dd2: addq   $0x1,0x1a8(%rax)
  0x000000011ba49dda: jmpq   0x000000011ba49e5e
  0x000000011ba49ddf: cmp    0x1b0(%rax),%rsi
  0x000000011ba49de6: jne    0x000000011ba49df5
  0x000000011ba49de8: addq   $0x1,0x1b8(%rax)
  0x000000011ba49df0: jmpq   0x000000011ba49e5e
  0x000000011ba49df5: cmpq   $0x0,0x1a0(%rax)
  0x000000011ba49e00: jne    0x000000011ba49e19
  0x000000011ba49e02: mov    %rsi,0x1a0(%rax)
  0x000000011ba49e09: movq   $0x1,0x1a8(%rax)
  0x000000011ba49e14: jmpq   0x000000011ba49e5e
  0x000000011ba49e19: cmpq   $0x0,0x1b0(%rax)
  0x000000011ba49e24: jne    0x000000011ba49e3d
  0x000000011ba49e26: mov    %rsi,0x1b0(%rax)
  0x000000011ba49e2d: movq   $0x1,0x1b8(%rax)
  0x000000011ba49e38: jmpq   0x000000011ba49e5e
  0x000000011ba49e3d: jmpq   0x000000011ba49e5e
  0x000000011ba49e42: movabs $0x1326b8aa8,%rax  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49e4c: subq   $0x1,0x190(%rax)
  0x000000011ba49e54: jmpq   0x000000011ba4a674
  0x000000011ba49e59: jmpq   0x000000011ba49e5e
  0x000000011ba49e5e: mov    %rdx,%rbx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)

  0x000000011ba49e61: cmp    $0x0,%rbx
  0x000000011ba49e65: movabs $0x13287c260,%rdx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49e6f: movabs $0x1d8,%rsi
  0x000000011ba49e79: je     0x000000011ba49e89
  0x000000011ba49e7f: movabs $0x1e8,%rsi
  0x000000011ba49e89: mov    (%rdx,%rsi,1),%rax
  0x000000011ba49e8d: lea    0x1(%rax),%rax
  0x000000011ba49e91: mov    %rax,(%rdx,%rsi,1)
  0x000000011ba49e95: je     0x000000011ba4a57d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@39 (line 938)

  0x000000011ba49e9b: mov    0xc(%rbx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ; implicit exception: dispatches to 0x000000011ba4a67d
  0x000000011ba49e9e: cmp    %edi,%esi
  0x000000011ba49ea0: movabs $0x13287c260,%rdx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49eaa: movabs $0x1f8,%rax
  0x000000011ba49eb4: jne    0x000000011ba49ec4
  0x000000011ba49eba: movabs $0x208,%rax
  0x000000011ba49ec4: mov    (%rdx,%rax,1),%rcx
  0x000000011ba49ec8: lea    0x1(%rcx),%rcx
  0x000000011ba49ecc: mov    %rcx,(%rdx,%rax,1)
  0x000000011ba49ed0: jne    0x000000011ba4a071  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@51 (line 939)

  0x000000011ba49ed6: mov    0x88(%rsp),%rdx
  0x000000011ba49ede: mov    0x10(%rbx),%esi
  0x000000011ba49ee1: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@55 (line 940)

  0x000000011ba49ee5: cmp    %rdx,%rsi
  0x000000011ba49ee8: movabs $0x13287c260,%rax  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49ef2: movabs $0x218,%rcx
  0x000000011ba49efc: je     0x000000011ba49f0c
  0x000000011ba49f02: movabs $0x228,%rcx
  0x000000011ba49f0c: mov    (%rax,%rcx,1),%r8
  0x000000011ba49f10: lea    0x1(%r8),%r8
  0x000000011ba49f14: mov    %r8,(%rax,%rcx,1)
  0x000000011ba49f18: je     0x000000011ba4a5b4  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@62 (line 940)

  0x000000011ba49f1e: cmp    $0x0,%rsi
  0x000000011ba49f22: movabs $0x13287c260,%rax  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49f2c: movabs $0x248,%rcx
  0x000000011ba49f36: jne    0x000000011ba49f46
  0x000000011ba49f3c: movabs $0x238,%rcx
  0x000000011ba49f46: mov    (%rax,%rcx,1),%r8
  0x000000011ba49f4a: lea    0x1(%r8),%r8
  0x000000011ba49f4e: mov    %r8,(%rax,%rcx,1)
  0x000000011ba49f52: jne    0x000000011ba49f60  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@67 (line 940)

  0x000000011ba49f58: mov    %rdi,%rcx
  0x000000011ba49f5b: jmpq   0x000000011ba4a0d0  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000011ba49f60: mov    %rbx,0x90(%rsp)
  0x000000011ba49f68: mov    %rdx,%rdi
  0x000000011ba49f6b: movabs $0x13287c260,%rax  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba49f75: mov    0x8(%rdi),%edi
  0x000000011ba49f78: movabs $0x800000000,%r12
  0x000000011ba49f82: add    %r12,%rdi
  0x000000011ba49f85: xor    %r12,%r12
  0x000000011ba49f88: cmp    0x268(%rax),%rdi
  0x000000011ba49f8f: jne    0x000000011ba49f9e
  0x000000011ba49f91: addq   $0x1,0x270(%rax)
  0x000000011ba49f99: jmpq   0x000000011ba4a004
  0x000000011ba49f9e: cmp    0x278(%rax),%rdi
  0x000000011ba49fa5: jne    0x000000011ba49fb4
  0x000000011ba49fa7: addq   $0x1,0x280(%rax)
  0x000000011ba49faf: jmpq   0x000000011ba4a004
  0x000000011ba49fb4: cmpq   $0x0,0x268(%rax)
  0x000000011ba49fbf: jne    0x000000011ba49fd8
  0x000000011ba49fc1: mov    %rdi,0x268(%rax)
  0x000000011ba49fc8: movq   $0x1,0x270(%rax)
  0x000000011ba49fd3: jmpq   0x000000011ba4a004
  0x000000011ba49fd8: cmpq   $0x0,0x278(%rax)
  0x000000011ba49fe3: jne    0x000000011ba49ffc
  0x000000011ba49fe5: mov    %rdi,0x278(%rax)
  0x000000011ba49fec: movq   $0x1,0x280(%rax)
  0x000000011ba49ff7: jmpq   0x000000011ba4a004
  0x000000011ba49ffc: addq   $0x1,0x258(%rax)
  0x000000011ba4a004: mov    %rdx,%rdi
  0x000000011ba4a007: mov    %rsi,%rdx
  0x000000011ba4a00a: mov    %rdi,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)

  0x000000011ba4a00d: movabs $0xffffffffffffffff,%rax
  0x000000011ba4a017: callq  0x000000011b4d3ce0  ; ImmutableOopMap{[144]=Oop [136]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)
                                                ;   {virtual_call}
  0x000000011ba4a01c: cmp    $0x0,%eax
  0x000000011ba4a01f: movabs $0x13287c260,%rdx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a029: movabs $0x2a0,%rsi
  0x000000011ba4a033: jne    0x000000011ba4a043
  0x000000011ba4a039: movabs $0x290,%rsi
  0x000000011ba4a043: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba4a047: lea    0x1(%rdi),%rdi
  0x000000011ba4a04b: mov    %rdi,(%rdx,%rsi,1)  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x000000011ba4a04f: mov    0x90(%rsp),%rbx    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000011ba4a057: jne    0x000000011ba4a5b4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x000000011ba4a05d: mov    0x98(%rsp),%ecx
  0x000000011ba4a064: mov    0x88(%rsp),%rdx
  0x000000011ba4a06c: jmpq   0x000000011ba4a0d0  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000011ba4a071: mov    %rbx,0x90(%rsp)
  0x000000011ba4a079: cmp    $0x0,%esi
  0x000000011ba4a07c: movabs $0x13287c260,%rdx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a086: movabs $0x2c0,%rsi
  0x000000011ba4a090: jl     0x000000011ba4a0a0
  0x000000011ba4a096: movabs $0x2b0,%rsi
  0x000000011ba4a0a0: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba4a0a4: lea    0x1(%rdi),%rdi
  0x000000011ba4a0a8: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba4a0ac: jl     0x000000011ba4a428  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@86 (line 943)

  0x000000011ba4a0b2: mov    0x90(%rsp),%rbx    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000011ba4a0ba: mov    0x98(%rsp),%ecx
  0x000000011ba4a0c1: mov    0x88(%rsp),%rdx
  0x000000011ba4a0c9: nopl   0x0(%rax)
  0x000000011ba4a0d0: mov    0x18(%rbx),%edi    ; implicit exception: dispatches to 0x000000011ba4a682
  0x000000011ba4a0d3: shl    $0x3,%rdi          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)

  0x000000011ba4a0d7: cmp    $0x0,%rdi
  0x000000011ba4a0db: movabs $0x13287c260,%rsi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a0e5: movabs $0x340,%rbx
  0x000000011ba4a0ef: je     0x000000011ba4a0ff
  0x000000011ba4a0f5: movabs $0x350,%rbx
  0x000000011ba4a0ff: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4a103: lea    0x1(%rax),%rax
  0x000000011ba4a107: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4a10b: je     0x000000011ba4a57d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@118 (line 945)

  0x000000011ba4a111: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ; implicit exception: dispatches to 0x000000011ba4a687
  0x000000011ba4a114: cmp    %ecx,%esi
  0x000000011ba4a116: mov    $0x8,%ebx
  0x000000011ba4a11b: jne    0x000000011ba4a126
  0x000000011ba4a121: mov    $0x0,%ebx
  0x000000011ba4a126: movabs $0x13287c260,%rax  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a130: mov    0x108(%rax),%r8d
  0x000000011ba4a137: add    %ebx,%r8d
  0x000000011ba4a13a: mov    %r8d,0x108(%rax)
  0x000000011ba4a141: cmp    $0x0,%ebx
  0x000000011ba4a144: jne    0x000000011ba4a150
  0x000000011ba4a14a: mov    $0x8,%r8d
  0x000000011ba4a150: and    $0xfff8,%r8d
  0x000000011ba4a157: cmp    $0x0,%r8d
  0x000000011ba4a15b: je     0x000000011ba4a68c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x000000011ba4a161: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x000000011ba4a168: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4a16b: cmp    %ecx,%esi
  0x000000011ba4a16d: movabs $0x13287c260,%rsi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a177: movabs $0x360,%rbx
  0x000000011ba4a181: jne    0x000000011ba4a191
  0x000000011ba4a187: movabs $0x370,%rbx
  0x000000011ba4a191: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4a195: lea    0x1(%rax),%rax
  0x000000011ba4a199: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4a19d: jne    0x000000011ba4a3f7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x000000011ba4a1a3: mov    0x10(%rdi),%esi
  0x000000011ba4a1a6: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@131 (line 946)

  0x000000011ba4a1aa: cmp    %rdx,%rsi
  0x000000011ba4a1ad: movabs $0x13287c260,%rbx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a1b7: movabs $0x380,%rax
  0x000000011ba4a1c1: je     0x000000011ba4a1d1
  0x000000011ba4a1c7: movabs $0x390,%rax
  0x000000011ba4a1d1: mov    (%rbx,%rax,1),%r8
  0x000000011ba4a1d5: lea    0x1(%r8),%r8
  0x000000011ba4a1d9: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4a1dd: je     0x000000011ba4a59a  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@138 (line 946)

  0x000000011ba4a1e3: cmp    $0x0,%rsi
  0x000000011ba4a1e7: mov    $0x8,%ebx
  0x000000011ba4a1ec: je     0x000000011ba4a1f7
  0x000000011ba4a1f2: mov    $0x0,%ebx
  0x000000011ba4a1f7: movabs $0x13287c260,%rax  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a201: mov    0x108(%rax),%r8d
  0x000000011ba4a208: add    %ebx,%r8d
  0x000000011ba4a20b: mov    %r8d,0x108(%rax)
  0x000000011ba4a212: cmp    $0x0,%ebx
  0x000000011ba4a215: jne    0x000000011ba4a221
  0x000000011ba4a21b: mov    $0x8,%r8d
  0x000000011ba4a221: and    $0xfff8,%r8d
  0x000000011ba4a228: cmp    $0x0,%r8d
  0x000000011ba4a22c: je     0x000000011ba4a6ad  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x000000011ba4a232: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x000000011ba4a239: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4a23c: cmp    $0x0,%rsi
  0x000000011ba4a240: movabs $0x13287c260,%rbx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a24a: movabs $0x3a0,%rax
  0x000000011ba4a254: je     0x000000011ba4a264
  0x000000011ba4a25a: movabs $0x3b0,%rax
  0x000000011ba4a264: mov    (%rbx,%rax,1),%r8
  0x000000011ba4a268: lea    0x1(%r8),%r8
  0x000000011ba4a26c: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4a270: mov    %rdi,0xa0(%rsp)
  0x000000011ba4a278: je     0x000000011ba4a3db  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x000000011ba4a27e: mov    %rdx,%rbx
  0x000000011ba4a281: movabs $0x13287c260,%rax  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a28b: mov    0x8(%rbx),%ebx
  0x000000011ba4a28e: movabs $0x800000000,%r12
  0x000000011ba4a298: add    %r12,%rbx
  0x000000011ba4a29b: xor    %r12,%r12
  0x000000011ba4a29e: cmp    0x3d0(%rax),%rbx
  0x000000011ba4a2a5: jne    0x000000011ba4a2b4
  0x000000011ba4a2a7: addq   $0x1,0x3d8(%rax)
  0x000000011ba4a2af: jmpq   0x000000011ba4a31a
  0x000000011ba4a2b4: cmp    0x3e0(%rax),%rbx
  0x000000011ba4a2bb: jne    0x000000011ba4a2ca
  0x000000011ba4a2bd: addq   $0x1,0x3e8(%rax)
  0x000000011ba4a2c5: jmpq   0x000000011ba4a31a
  0x000000011ba4a2ca: cmpq   $0x0,0x3d0(%rax)
  0x000000011ba4a2d5: jne    0x000000011ba4a2ee
  0x000000011ba4a2d7: mov    %rbx,0x3d0(%rax)
  0x000000011ba4a2de: movq   $0x1,0x3d8(%rax)
  0x000000011ba4a2e9: jmpq   0x000000011ba4a31a
  0x000000011ba4a2ee: cmpq   $0x0,0x3e0(%rax)
  0x000000011ba4a2f9: jne    0x000000011ba4a312
  0x000000011ba4a2fb: mov    %rbx,0x3e0(%rax)
  0x000000011ba4a302: movq   $0x1,0x3e8(%rax)
  0x000000011ba4a30d: jmpq   0x000000011ba4a31a
  0x000000011ba4a312: addq   $0x1,0x3c0(%rax)
  0x000000011ba4a31a: mov    %rdx,%rbx
  0x000000011ba4a31d: mov    %rsi,%rdx
  0x000000011ba4a320: mov    %rbx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)

  0x000000011ba4a323: xchg   %ax,%ax
  0x000000011ba4a325: movabs $0xffffffffffffffff,%rax
  0x000000011ba4a32f: callq  0x000000011b4d3ca0  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)
                                                ;   {virtual_call}
  0x000000011ba4a334: cmp    $0x0,%eax
  0x000000011ba4a337: mov    $0x8,%edx
  0x000000011ba4a33c: je     0x000000011ba4a347
  0x000000011ba4a342: mov    $0x0,%edx
  0x000000011ba4a347: movabs $0x13287c260,%rcx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a351: mov    0x108(%rcx),%esi
  0x000000011ba4a357: add    %edx,%esi
  0x000000011ba4a359: mov    %esi,0x108(%rcx)
  0x000000011ba4a35f: cmp    $0x0,%edx
  0x000000011ba4a362: jne    0x000000011ba4a36d
  0x000000011ba4a368: mov    $0x8,%esi
  0x000000011ba4a36d: and    $0xfff8,%esi
  0x000000011ba4a373: cmp    $0x0,%esi
  0x000000011ba4a376: je     0x000000011ba4a6ce  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x000000011ba4a37c: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x000000011ba4a383: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4a386: cmp    $0x0,%eax
  0x000000011ba4a389: movabs $0x13287c260,%rdx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a393: movabs $0x408,%rcx
  0x000000011ba4a39d: jne    0x000000011ba4a3ad
  0x000000011ba4a3a3: movabs $0x3f8,%rcx
  0x000000011ba4a3ad: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba4a3b1: lea    0x1(%rsi),%rsi
  0x000000011ba4a3b5: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba4a3b9: jne    0x000000011ba4a41b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x000000011ba4a3bf: mov    0xa0(%rsp),%rbx
  0x000000011ba4a3c7: mov    0x98(%rsp),%ecx
  0x000000011ba4a3ce: mov    0x88(%rsp),%rdx
  0x000000011ba4a3d6: jmpq   0x000000011ba4a0d0
  0x000000011ba4a3db: mov    0xa0(%rsp),%rbx
  0x000000011ba4a3e3: mov    0x98(%rsp),%ecx
  0x000000011ba4a3ea: mov    0x88(%rsp),%rdx
  0x000000011ba4a3f2: jmpq   0x000000011ba4a0d0
  0x000000011ba4a3f7: mov    %rdi,0xa0(%rsp)
  0x000000011ba4a3ff: mov    0xa0(%rsp),%rbx
  0x000000011ba4a407: mov    0x98(%rsp),%ecx
  0x000000011ba4a40e: mov    0x88(%rsp),%rdx
  0x000000011ba4a416: jmpq   0x000000011ba4a0d0  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x000000011ba4a41b: mov    0xa0(%rsp),%rdi
  0x000000011ba4a423: jmpq   0x000000011ba4a59a  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@155 (line 948)

  0x000000011ba4a428: mov    0x98(%rsp),%ecx
  0x000000011ba4a42f: mov    0x88(%rsp),%rsi
  0x000000011ba4a437: mov    0x90(%rsp),%rbx
  0x000000011ba4a43f: movabs $0x13287c260,%rdx  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a449: mov    0x8(%rbx),%ebx
  0x000000011ba4a44c: movabs $0x800000000,%r12
  0x000000011ba4a456: add    %r12,%rbx
  0x000000011ba4a459: xor    %r12,%r12
  0x000000011ba4a45c: cmp    0x2e0(%rdx),%rbx
  0x000000011ba4a463: jne    0x000000011ba4a472
  0x000000011ba4a465: addq   $0x1,0x2e8(%rdx)
  0x000000011ba4a46d: jmpq   0x000000011ba4a4d8
  0x000000011ba4a472: cmp    0x2f0(%rdx),%rbx
  0x000000011ba4a479: jne    0x000000011ba4a488
  0x000000011ba4a47b: addq   $0x1,0x2f8(%rdx)
  0x000000011ba4a483: jmpq   0x000000011ba4a4d8
  0x000000011ba4a488: cmpq   $0x0,0x2e0(%rdx)
  0x000000011ba4a493: jne    0x000000011ba4a4ac
  0x000000011ba4a495: mov    %rbx,0x2e0(%rdx)
  0x000000011ba4a49c: movq   $0x1,0x2e8(%rdx)
  0x000000011ba4a4a7: jmpq   0x000000011ba4a4d8
  0x000000011ba4a4ac: cmpq   $0x0,0x2f0(%rdx)
  0x000000011ba4a4b7: jne    0x000000011ba4a4d0
  0x000000011ba4a4b9: mov    %rbx,0x2f0(%rdx)
  0x000000011ba4a4c0: movq   $0x1,0x2f8(%rdx)
  0x000000011ba4a4cb: jmpq   0x000000011ba4a4d8
  0x000000011ba4a4d0: addq   $0x1,0x2d0(%rdx)
  0x000000011ba4a4d8: mov    %rcx,%rdx
  0x000000011ba4a4db: mov    %rsi,%rcx
  0x000000011ba4a4de: mov    0x90(%rsp),%rsi    ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)

  0x000000011ba4a4e6: nopl   0x0(%rax)
  0x000000011ba4a4ed: movabs $0xffffffffffffffff,%rax
  0x000000011ba4a4f7: callq  0x000000011b4d2180  ; ImmutableOopMap{}
                                                ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)
                                                ;   {virtual_call}
  0x000000011ba4a4fc: cmp    $0x0,%rax
  0x000000011ba4a500: movabs $0x13287c260,%rsi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a50a: movabs $0x308,%rdi
  0x000000011ba4a514: je     0x000000011ba4a524
  0x000000011ba4a51a: movabs $0x318,%rdi
  0x000000011ba4a524: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba4a528: lea    0x1(%rbx),%rbx
  0x000000011ba4a52c: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba4a530: je     0x000000011ba4a560  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@99 (line 944)

  0x000000011ba4a536: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000011ba4a6ef
  0x000000011ba4a539: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)

  0x000000011ba4a53d: movabs $0x13287c260,%rsi  ;   {metadata(method data for {method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a547: incl   0x328(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@107 (line 944)

  0x000000011ba4a54d: add    $0xb0,%rsp
  0x000000011ba4a554: pop    %rbp
  0x000000011ba4a555: mov    0x108(%r15),%r10
  0x000000011ba4a55c: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4a55f: retq   
  0x000000011ba4a560: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba4a56a: add    $0xb0,%rsp
  0x000000011ba4a571: pop    %rbp
  0x000000011ba4a572: mov    0x108(%r15),%r10
  0x000000011ba4a579: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4a57c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@111 (line 944)

  0x000000011ba4a57d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba4a587: add    $0xb0,%rsp
  0x000000011ba4a58e: pop    %rbp
  0x000000011ba4a58f: mov    0x108(%r15),%r10
  0x000000011ba4a596: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4a599: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@161 (line 951)

  0x000000011ba4a59a: mov    0x14(%rdi),%eax
  0x000000011ba4a59d: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@156 (line 948)

  0x000000011ba4a5a1: add    $0xb0,%rsp
  0x000000011ba4a5a8: pop    %rbp
  0x000000011ba4a5a9: mov    0x108(%r15),%r10
  0x000000011ba4a5b0: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4a5b3: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@159 (line 948)

  0x000000011ba4a5b4: mov    0x14(%rbx),%eax
  0x000000011ba4a5b7: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@80 (line 941)

  0x000000011ba4a5bb: add    $0xb0,%rsp
  0x000000011ba4a5c2: pop    %rbp
  0x000000011ba4a5c3: mov    0x108(%r15),%r10
  0x000000011ba4a5ca: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4a5cd: retq   
  0x000000011ba4a5ce: movabs $0x1325de628,%r10  ;   {metadata({method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a5d8: mov    %r10,0x8(%rsp)
  0x000000011ba4a5dd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4a5e5: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::get@-1 (line 936)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a5ea: jmpq   0x000000011ba49adf
  0x000000011ba4a5ef: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [136]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4a5f4: movabs $0x1325dd908,%r10  ;   {metadata({method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a5fe: mov    %r10,0x8(%rsp)
  0x000000011ba4a603: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4a60b: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop [128]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@4 (line 936)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a610: jmpq   0x000000011ba49bd6
  0x000000011ba4a615: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4a61a: movabs $0x1325ddce8,%r10  ;   {metadata({method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a624: mov    %r10,0x8(%rsp)
  0x000000011ba4a629: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4a631: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a636: jmpq   0x000000011ba49cb0
  0x000000011ba4a63b: movabs $0x132564948,%r10  ;   {metadata({method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba4a645: mov    %r10,0x8(%rsp)
  0x000000011ba4a64a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4a652: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a657: jmpq   0x000000011ba49d54
  0x000000011ba4a65c: cmp    $0x0,%rdx
  0x000000011ba4a660: je     0x000000011ba49d69
  0x000000011ba4a666: mov    %rdx,(%rsp)
  0x000000011ba4a66a: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba4a66f: jmpq   0x000000011ba49d69
  0x000000011ba4a674: mov    %rdx,(%rsp)
  0x000000011ba4a678: callq  0x000000011b597fa0  ; ImmutableOopMap{[136]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba4a67d: callq  0x000000011b595f20  ; ImmutableOopMap{rbx=Oop [136]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4a682: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4a687: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4a68c: movabs $0x1325de628,%r10  ;   {metadata({method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a696: mov    %r10,0x8(%rsp)
  0x000000011ba4a69b: movq   $0x7f,(%rsp)
  0x000000011ba4a6a3: callq  0x000000011b59a600  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a6a8: jmpq   0x000000011ba4a161
  0x000000011ba4a6ad: movabs $0x1325de628,%r10  ;   {metadata({method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a6b7: mov    %r10,0x8(%rsp)
  0x000000011ba4a6bc: movq   $0x8f,(%rsp)
  0x000000011ba4a6c4: callq  0x000000011b59a600  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a6c9: jmpq   0x000000011ba4a232
  0x000000011ba4a6ce: movabs $0x1325de628,%r10  ;   {metadata({method} {0x00000001325de628} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba4a6d8: mov    %r10,0x8(%rsp)
  0x000000011ba4a6dd: movq   $0x98,(%rsp)
  0x000000011ba4a6e5: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4a6ea: jmpq   0x000000011ba4a37c
  0x000000011ba4a6ef: callq  0x000000011b595f20  ; ImmutableOopMap{}
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4a6f4: nop
  0x000000011ba4a6f5: nop
  0x000000011ba4a6f6: mov    0x420(%r15),%rax
  0x000000011ba4a6fd: movabs $0x0,%r10
  0x000000011ba4a707: mov    %r10,0x420(%r15)
  0x000000011ba4a70e: movabs $0x0,%r10
  0x000000011ba4a718: mov    %r10,0x428(%r15)
  0x000000011ba4a71f: add    $0xb0,%rsp
  0x000000011ba4a726: pop    %rbp
  0x000000011ba4a727: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4a72c: hlt    
  0x000000011ba4a72d: hlt    
  0x000000011ba4a72e: hlt    
  0x000000011ba4a72f: hlt    
  0x000000011ba4a730: hlt    
  0x000000011ba4a731: hlt    
  0x000000011ba4a732: hlt    
  0x000000011ba4a733: hlt    
  0x000000011ba4a734: hlt    
  0x000000011ba4a735: hlt    
  0x000000011ba4a736: hlt    
  0x000000011ba4a737: hlt    
  0x000000011ba4a738: hlt    
  0x000000011ba4a739: hlt    
  0x000000011ba4a73a: hlt    
  0x000000011ba4a73b: hlt    
  0x000000011ba4a73c: hlt    
  0x000000011ba4a73d: hlt    
  0x000000011ba4a73e: hlt    
  0x000000011ba4a73f: hlt    
[Stub Code]
  0x000000011ba4a740: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4a745: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4a74f: jmpq   0x000000011ba4a74f  ;   {runtime_call}
  0x000000011ba4a754: nop
  0x000000011ba4a755: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4a75f: jmpq   0x000000011ba4a75f  ;   {runtime_call}
  0x000000011ba4a764: nop
  0x000000011ba4a765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4a76f: jmpq   0x000000011ba4a76f  ;   {runtime_call}
  0x000000011ba4a774: nop
  0x000000011ba4a775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4a77f: jmpq   0x000000011ba4a77f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4a784: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4a789: mov    %rsp,-0x28(%rsp)
  0x000000011ba4a78e: sub    $0x80,%rsp
  0x000000011ba4a795: mov    %rax,0x78(%rsp)
  0x000000011ba4a79a: mov    %rcx,0x70(%rsp)
  0x000000011ba4a79f: mov    %rdx,0x68(%rsp)
  0x000000011ba4a7a4: mov    %rbx,0x60(%rsp)
  0x000000011ba4a7a9: mov    %rbp,0x50(%rsp)
  0x000000011ba4a7ae: mov    %rsi,0x48(%rsp)
  0x000000011ba4a7b3: mov    %rdi,0x40(%rsp)
  0x000000011ba4a7b8: mov    %r8,0x38(%rsp)
  0x000000011ba4a7bd: mov    %r9,0x30(%rsp)
  0x000000011ba4a7c2: mov    %r10,0x28(%rsp)
  0x000000011ba4a7c7: mov    %r11,0x20(%rsp)
  0x000000011ba4a7cc: mov    %r12,0x18(%rsp)
  0x000000011ba4a7d1: mov    %r13,0x10(%rsp)
  0x000000011ba4a7d6: mov    %r14,0x8(%rsp)
  0x000000011ba4a7db: mov    %r15,(%rsp)
  0x000000011ba4a7df: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4a7e9: movabs $0x11ba4a789,%rsi  ;   {internal_word}
  0x000000011ba4a7f3: mov    %rsp,%rdx
  0x000000011ba4a7f6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4a7fa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4a7ff: hlt    
[Deopt Handler Code]
  0x000000011ba4a800: movabs $0x11ba4a800,%r10  ;   {section_word}
  0x000000011ba4a80a: push   %r10
  0x000000011ba4a80c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4a811: hlt    
  0x000000011ba4a812: hlt    
  0x000000011ba4a813: hlt    
  0x000000011ba4a814: hlt    
  0x000000011ba4a815: hlt    
  0x000000011ba4a816: hlt    
  0x000000011ba4a817: hlt    

ImmutableOopMap{[136]=Oop [128]=Oop }pc offsets: 284 
ImmutableOopMap{[144]=Oop [136]=Oop }pc offsets: 1436 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 1768 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }pc offsets: 1977 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 2228 2307 
ImmutableOopMap{}pc offsets: 2684 
ImmutableOopMap{rsi=Oop rdx=Oop [136]=Oop }pc offsets: 2922 
ImmutableOopMap{rdx=Oop [136]=Oop [128]=Oop }pc offsets: 2932 
ImmutableOopMap{[136]=Oop [128]=Oop }pc offsets: 2960 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 2970 
ImmutableOopMap{[136]=Oop rdx=Oop }pc offsets: 2998 3031 
ImmutableOopMap{[136]=Oop }pc offsets: 3069 
ImmutableOopMap{rbx=Oop [136]=Oop }pc offsets: 3074 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 3079 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 3084 3112 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }pc offsets: 3145 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 3178 
ImmutableOopMap{}pc offsets: 3188 </print_nmethod>
<writer thread='9987'/>
<nmethod compile_id='68' compile_kind='c2n' compiler='' level='0' entry='0x0000000122f790a0' size='432' address='0x0000000122f78f10' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.228'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x0000000122f790a0, 0x0000000122f790c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000132889420} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000122f790a0: cmp    (%rsi),%rax
  0x0000000122f790a3: mov    0x24(%rdx),%ebx
  0x0000000122f790a6: shl    $0x3,%rbx
  0x0000000122f790aa: mov    0x10(%rbx),%rbx
  0x0000000122f790ae: test   %rbx,%rbx
  0x0000000122f790b1: je     0x0000000122f790ba
  0x0000000122f790b7: jmpq   *0x38(%rbx)
  0x0000000122f790ba: jmpq   0x000000011b4eb880  ;   {runtime_call AbstractMethodError throw_exception}
  0x0000000122f790bf: hlt    
<writer thread='15875'/>
<nmethod compile_id='67' compiler='c1' level='3' entry='0x000000011ba4b160' size='1568' address='0x000000011ba4af90' relocation_offset='376' insts_offset='464' stub_offset='912' scopes_data_offset='1096' scopes_pcs_offset='1224' dependencies_offset='1528' nul_chk_table_offset='1536' metadata_offset='1080' method='jdk.internal.org.objectweb.asm.ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='360' iicount='360' stamp='0.228'/>
<print_nmethod stamp='0.228'>
Compiled method (c1)     228   67       3       jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)
 total in heap  [0x000000011ba4af90,0x000000011ba4b5b0] = 1568
 relocation     [0x000000011ba4b108,0x000000011ba4b150] = 72
 main code      [0x000000011ba4b160,0x000000011ba4b320] = 448
 stub code      [0x000000011ba4b320,0x000000011ba4b3c8] = 168
 metadata       [0x000000011ba4b3c8,0x000000011ba4b3d8] = 16
 scopes data    [0x000000011ba4b3d8,0x000000011ba4b458] = 128
 scopes pcs     [0x000000011ba4b458,0x000000011ba4b588] = 304
 dependencies   [0x000000011ba4b588,0x000000011ba4b590] = 8
 nul chk table  [0x000000011ba4b590,0x000000011ba4b5b0] = 32
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/ByteVector.putShort(I)Ljdk/internal/org/objectweb/asm/ByteVector;  [0x000000011ba4b160, 0x000000011ba4b3c8]  616 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132800160} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011ba4b160: mov    0x8(%rsi),%r10d
  0x000000011ba4b164: movabs $0x800000000,%r12
  0x000000011ba4b16e: add    %r12,%r10
  0x000000011ba4b171: xor    %r12,%r12
  0x000000011ba4b174: cmp    %rax,%r10
  0x000000011ba4b177: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4b17d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4b180: mov    %eax,-0x14000(%rsp)
  0x000000011ba4b187: push   %rbp
  0x000000011ba4b188: sub    $0x40,%rsp
  0x000000011ba4b18c: movabs $0x132889488,%rdi  ;   {metadata(method data for {method} {0x0000000132800160} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b196: mov    0x104(%rdi),%ebx
  0x000000011ba4b19c: add    $0x8,%ebx
  0x000000011ba4b19f: mov    %ebx,0x104(%rdi)
  0x000000011ba4b1a5: and    $0x1ff8,%ebx
  0x000000011ba4b1ab: cmp    $0x0,%ebx
  0x000000011ba4b1ae: je     0x000000011ba4b28b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@0 (line 147)

  0x000000011ba4b1b4: mov    0xc(%rsi),%edi     ;*getfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@1 (line 147)

  0x000000011ba4b1b7: mov    0x10(%rsi),%ebx
  0x000000011ba4b1ba: shl    $0x3,%rbx          ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@9 (line 148)

  0x000000011ba4b1be: mov    0xc(%rbx),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 148)
                                                ; implicit exception: dispatches to 0x000000011ba4b2ac
  0x000000011ba4b1c1: mov    %rdi,%rax
  0x000000011ba4b1c4: add    $0x2,%eax
  0x000000011ba4b1c7: cmp    %ebx,%eax
  0x000000011ba4b1c9: movabs $0x132889488,%rbx  ;   {metadata(method data for {method} {0x0000000132800160} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b1d3: movabs $0x140,%rax
  0x000000011ba4b1dd: jle    0x000000011ba4b1ed
  0x000000011ba4b1e3: movabs $0x150,%rax
  0x000000011ba4b1ed: mov    (%rbx,%rax,1),%rcx
  0x000000011ba4b1f1: lea    0x1(%rcx),%rcx
  0x000000011ba4b1f5: mov    %rcx,(%rbx,%rax,1)
  0x000000011ba4b1f9: jle    0x000000011ba4b241  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@13 (line 148)

  0x000000011ba4b1ff: mov    %edi,0x34(%rsp)
  0x000000011ba4b203: mov    %edx,0x30(%rsp)
  0x000000011ba4b207: mov    %rsi,%rbx
  0x000000011ba4b20a: movabs $0x132889488,%rax  ;   {metadata(method data for {method} {0x0000000132800160} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b214: addq   $0x1,0x160(%rax)
  0x000000011ba4b21c: mov    $0x2,%edx
  0x000000011ba4b221: mov    %rsi,%rax
  0x000000011ba4b224: mov    %rax,%rsi          ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 149)

  0x000000011ba4b227: mov    %rax,0x28(%rsp)
  0x000000011ba4b22c: data16 xchg %ax,%ax
  0x000000011ba4b22f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[40]=Oop }
                                                ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@18 (line 149)
                                                ;   {optimized virtual_call}
  0x000000011ba4b234: mov    0x34(%rsp),%edi
  0x000000011ba4b238: mov    0x30(%rsp),%edx
  0x000000011ba4b23c: mov    0x28(%rsp),%rsi
  0x000000011ba4b241: mov    0x10(%rsi),%eax
  0x000000011ba4b244: shl    $0x3,%rax          ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@22 (line 151)

  0x000000011ba4b248: mov    %rdx,%rbx
  0x000000011ba4b24b: shr    $0x8,%ebx
  0x000000011ba4b24e: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000011ba4b2b1
  0x000000011ba4b251: jae    0x000000011ba4b2bb
  0x000000011ba4b257: movslq %edi,%rcx
  0x000000011ba4b25a: mov    %bl,0x10(%rax,%rcx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)

  0x000000011ba4b25e: inc    %edi
  0x000000011ba4b260: mov    %rdi,%rbx
  0x000000011ba4b263: inc    %ebx
  0x000000011ba4b265: cmp    0xc(%rax),%edi
  0x000000011ba4b268: jae    0x000000011ba4b2c9
  0x000000011ba4b26e: movslq %edi,%rdi
  0x000000011ba4b271: mov    %dl,0x10(%rax,%rdi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 153)

  0x000000011ba4b275: mov    %ebx,0xc(%rsi)     ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@47 (line 154)

  0x000000011ba4b278: mov    %rsi,%rax
  0x000000011ba4b27b: add    $0x40,%rsp
  0x000000011ba4b27f: pop    %rbp
  0x000000011ba4b280: mov    0x108(%r15),%r10
  0x000000011ba4b287: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4b28a: retq   
  0x000000011ba4b28b: movabs $0x132800160,%r10  ;   {metadata({method} {0x0000000132800160} &apos;putShort&apos; &apos;(I)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b295: mov    %r10,0x8(%rsp)
  0x000000011ba4b29a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4b2a2: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@-1 (line 147)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4b2a7: jmpq   0x000000011ba4b1b4
  0x000000011ba4b2ac: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@12 (line 148)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4b2b1: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rax=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4b2b6: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rax=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4b2bb: mov    %rdi,(%rsp)
  0x000000011ba4b2bf: mov    %rax,0x8(%rsp)
  0x000000011ba4b2c4: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop rax=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@36 (line 152)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4b2c9: mov    %rdi,(%rsp)
  0x000000011ba4b2cd: mov    %rax,0x8(%rsp)
  0x000000011ba4b2d2: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop rax=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putShort@44 (line 153)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4b2d7: nop
  0x000000011ba4b2d8: nop
  0x000000011ba4b2d9: mov    0x420(%r15),%rax
  0x000000011ba4b2e0: movabs $0x0,%r10
  0x000000011ba4b2ea: mov    %r10,0x420(%r15)
  0x000000011ba4b2f1: movabs $0x0,%r10
  0x000000011ba4b2fb: mov    %r10,0x428(%r15)
  0x000000011ba4b302: add    $0x40,%rsp
  0x000000011ba4b306: pop    %rbp
  0x000000011ba4b307: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4b30c: hlt    
  0x000000011ba4b30d: hlt    
  0x000000011ba4b30e: hlt    
  0x000000011ba4b30f: hlt    
  0x000000011ba4b310: hlt    
  0x000000011ba4b311: hlt    
  0x000000011ba4b312: hlt    
  0x000000011ba4b313: hlt    
  0x000000011ba4b314: hlt    
  0x000000011ba4b315: hlt    
  0x000000011ba4b316: hlt    
  0x000000011ba4b317: hlt    
  0x000000011ba4b318: hlt    
  0x000000011ba4b319: hlt    
  0x000000011ba4b31a: hlt    
  0x000000011ba4b31b: hlt    
  0x000000011ba4b31c: hlt    
  0x000000011ba4b31d: hlt    
  0x000000011ba4b31e: hlt    
  0x000000011ba4b31f: hlt    
[Stub Code]
  0x000000011ba4b320: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4b325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4b32f: jmpq   0x000000011ba4b32f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4b334: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4b339: mov    %rsp,-0x28(%rsp)
  0x000000011ba4b33e: sub    $0x80,%rsp
  0x000000011ba4b345: mov    %rax,0x78(%rsp)
  0x000000011ba4b34a: mov    %rcx,0x70(%rsp)
  0x000000011ba4b34f: mov    %rdx,0x68(%rsp)
  0x000000011ba4b354: mov    %rbx,0x60(%rsp)
  0x000000011ba4b359: mov    %rbp,0x50(%rsp)
  0x000000011ba4b35e: mov    %rsi,0x48(%rsp)
  0x000000011ba4b363: mov    %rdi,0x40(%rsp)
  0x000000011ba4b368: mov    %r8,0x38(%rsp)
  0x000000011ba4b36d: mov    %r9,0x30(%rsp)
  0x000000011ba4b372: mov    %r10,0x28(%rsp)
  0x000000011ba4b377: mov    %r11,0x20(%rsp)
  0x000000011ba4b37c: mov    %r12,0x18(%rsp)
  0x000000011ba4b381: mov    %r13,0x10(%rsp)
  0x000000011ba4b386: mov    %r14,0x8(%rsp)
  0x000000011ba4b38b: mov    %r15,(%rsp)
  0x000000011ba4b38f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4b399: movabs $0x11ba4b339,%rsi  ;   {internal_word}
  0x000000011ba4b3a3: mov    %rsp,%rdx
  0x000000011ba4b3a6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4b3aa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4b3af: hlt    
[Deopt Handler Code]
  0x000000011ba4b3b0: movabs $0x11ba4b3b0,%r10  ;   {section_word}
  0x000000011ba4b3ba: push   %r10
  0x000000011ba4b3bc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4b3c1: hlt    
  0x000000011ba4b3c2: hlt    
  0x000000011ba4b3c3: hlt    
  0x000000011ba4b3c4: hlt    
  0x000000011ba4b3c5: hlt    
  0x000000011ba4b3c6: hlt    
  0x000000011ba4b3c7: hlt    

ImmutableOopMap{[40]=Oop }pc offsets: 212 
ImmutableOopMap{rsi=Oop }pc offsets: 327 337 
ImmutableOopMap{rsi=Oop rax=Oop }pc offsets: 342 347 361 375 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='69' method='jdk.internal.org.objectweb.asm.ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='141' backedge_count='3072' iicount='141' level='3' stamp='0.231' comment='tiered' hot_count='141'/>
<task_queued compile_id='70' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='256' iicount='256' level='3' stamp='0.232' comment='tiered' hot_count='256'/>
<task_queued compile_id='71' method='java.lang.String charAt (I)C' bytes='25' count='5632' iicount='5632' stamp='0.232' comment='tiered' hot_count='5632'/>
<task_queued compile_id='72' method='jdk.internal.org.objectweb.asm.Item set (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' bytes='219' count='384' iicount='384' level='3' stamp='0.232' comment='tiered' hot_count='384'/>
<task_queued compile_id='73' method='jdk.internal.org.objectweb.asm.ClassWriter get (Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' bytes='49' count='384' backedge_count='11' iicount='384' level='3' stamp='0.232' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='69' compiler='c1' level='3' entry='0x000000011ba4b880' size='5224' address='0x000000011ba4b610' relocation_offset='376' insts_offset='624' stub_offset='2896' scopes_data_offset='3184' scopes_pcs_offset='3912' dependencies_offset='5160' nul_chk_table_offset='5168' metadata_offset='3128' method='jdk.internal.org.objectweb.asm.ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='186' backedge_count='3894' iicount='186' stamp='0.233'/>
<print_nmethod stamp='0.233'>
Compiled method (c1)     232   69       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
 total in heap  [0x000000011ba4b610,0x000000011ba4ca78] = 5224
 relocation     [0x000000011ba4b788,0x000000011ba4b870] = 232
 main code      [0x000000011ba4b880,0x000000011ba4c160] = 2272
 stub code      [0x000000011ba4c160,0x000000011ba4c248] = 232
 metadata       [0x000000011ba4c248,0x000000011ba4c280] = 56
 scopes data    [0x000000011ba4c280,0x000000011ba4c558] = 728
 scopes pcs     [0x000000011ba4c558,0x000000011ba4ca38] = 1248
 dependencies   [0x000000011ba4ca38,0x000000011ba4ca40] = 8
 nul chk table  [0x000000011ba4ca40,0x000000011ba4ca78] = 56
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/ByteVector.putUTF8(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;  [0x000000011ba4b880, 0x000000011ba4c248]  2504 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xb0]  (sp of caller)
  0x000000011ba4b880: mov    0x8(%rsi),%r10d
  0x000000011ba4b884: movabs $0x800000000,%r12
  0x000000011ba4b88e: add    %r12,%r10
  0x000000011ba4b891: xor    %r12,%r12
  0x000000011ba4b894: cmp    %rax,%r10
  0x000000011ba4b897: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4b89d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4b8a0: mov    %eax,-0x14000(%rsp)
  0x000000011ba4b8a7: push   %rbp
  0x000000011ba4b8a8: sub    $0xa0,%rsp
  0x000000011ba4b8af: mov    %rsi,0x60(%rsp)
  0x000000011ba4b8b4: mov    %rdx,0x70(%rsp)
  0x000000011ba4b8b9: movabs $0x132889838,%rcx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b8c3: mov    0x104(%rcx),%edi
  0x000000011ba4b8c9: add    $0x8,%edi
  0x000000011ba4b8cc: mov    %edi,0x104(%rcx)
  0x000000011ba4b8d2: and    $0x1ff8,%edi
  0x000000011ba4b8d8: cmp    $0x0,%edi
  0x000000011ba4b8db: je     0x000000011ba4bf99  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@0 (line 240)

  0x000000011ba4b8e1: cmp    (%rdx),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000011ba4bfba
  0x000000011ba4b8e4: mov    %rdx,%rcx
  0x000000011ba4b8e7: movabs $0x132889838,%rdi  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b8f1: addq   $0x1,0x140(%rdi)
  0x000000011ba4b8f9: movabs $0x132837808,%rcx  ;   {metadata(method data for {method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4b903: mov    0x104(%rcx),%edi
  0x000000011ba4b909: add    $0x8,%edi
  0x000000011ba4b90c: mov    %edi,0x104(%rcx)
  0x000000011ba4b912: and    $0x7ffff8,%edi
  0x000000011ba4b918: cmp    $0x0,%edi
  0x000000011ba4b91b: je     0x000000011ba4bfbf
  0x000000011ba4b921: mov    0xc(%rdx),%ecx
  0x000000011ba4b924: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x000000011ba4b928: mov    0xc(%rcx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000011ba4bfe0
  0x000000011ba4b92b: mov    %rdx,%rcx
  0x000000011ba4b92e: movabs $0x132837808,%rbx  ;   {metadata(method data for {method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4b938: addq   $0x1,0x140(%rbx)
  0x000000011ba4b940: movabs $0x1326e9230,%rcx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4b94a: mov    0x104(%rcx),%ebx
  0x000000011ba4b950: add    $0x8,%ebx
  0x000000011ba4b953: mov    %ebx,0x104(%rcx)
  0x000000011ba4b959: and    $0x7ffff8,%ebx
  0x000000011ba4b95f: cmp    $0x0,%ebx
  0x000000011ba4b962: je     0x000000011ba4bfe5
  0x000000011ba4b968: movabs $0x1326e9230,%rcx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4b972: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x000000011ba4b978: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x000000011ba4b97c: movabs $0x1326e9230,%rbx  ;   {metadata(method data for {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4b986: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)

  0x000000011ba4b98c: shl    $0x18,%ecx
  0x000000011ba4b98f: sar    $0x18,%ecx
  0x000000011ba4b992: sar    %cl,%edi
  0x000000011ba4b994: mov    %edi,0x68(%rsp)
  0x000000011ba4b998: cmp    $0xffff,%edi
  0x000000011ba4b99e: movabs $0x132889838,%rbx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b9a8: movabs $0x188,%rax
  0x000000011ba4b9b2: jg     0x000000011ba4b9c2
  0x000000011ba4b9b8: movabs $0x178,%rax
  0x000000011ba4b9c2: mov    (%rbx,%rax,1),%rcx
  0x000000011ba4b9c6: lea    0x1(%rcx),%rcx
  0x000000011ba4b9ca: mov    %rcx,(%rbx,%rax,1)
  0x000000011ba4b9ce: jg     0x000000011ba4bf01  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x000000011ba4b9d4: mov    0xc(%rsi),%ebx     ;*getfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x000000011ba4b9d7: mov    0x10(%rsi),%eax
  0x000000011ba4b9da: shl    $0x3,%rax          ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x000000011ba4b9de: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ; implicit exception: dispatches to 0x000000011ba4c006
  0x000000011ba4b9e1: mov    %rbx,%rcx
  0x000000011ba4b9e4: add    $0x2,%ecx
  0x000000011ba4b9e7: add    %edi,%ecx
  0x000000011ba4b9e9: cmp    %eax,%ecx
  0x000000011ba4b9eb: movabs $0x132889838,%rax  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4b9f5: movabs $0x1a8,%rcx
  0x000000011ba4b9ff: jle    0x000000011ba4ba0f
  0x000000011ba4ba05: movabs $0x1b8,%rcx
  0x000000011ba4ba0f: mov    (%rax,%rcx,1),%r8
  0x000000011ba4ba13: lea    0x1(%r8),%r8
  0x000000011ba4ba17: mov    %r8,(%rax,%rcx,1)
  0x000000011ba4ba1b: jle    0x000000011ba4ba5d  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x000000011ba4ba21: mov    %ebx,0x6c(%rsp)
  0x000000011ba4ba25: mov    %rsi,%rax
  0x000000011ba4ba28: movabs $0x132889838,%rcx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4ba32: addq   $0x1,0x1c8(%rcx)
  0x000000011ba4ba3a: mov    %rdi,%rax
  0x000000011ba4ba3d: add    $0x2,%eax
  0x000000011ba4ba40: mov    %rax,%rdx
  0x000000011ba4ba43: mov    %rsi,%rax
  0x000000011ba4ba46: mov    %rax,%rsi          ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)

  0x000000011ba4ba49: nopw   0x0(%rax,%rax,1)
  0x000000011ba4ba4f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[112]=Oop [96]=Oop }
                                                ;*invokevirtual enlarge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x000000011ba4ba54: mov    0x6c(%rsp),%ebx
  0x000000011ba4ba58: mov    0x60(%rsp),%rsi
  0x000000011ba4ba5d: mov    0x10(%rsi),%edi
  0x000000011ba4ba60: shl    $0x3,%rdi          ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x000000011ba4ba64: mov    %rdi,0x80(%rsp)
  0x000000011ba4ba6c: mov    0x68(%rsp),%edx
  0x000000011ba4ba70: shr    $0x8,%edx
  0x000000011ba4ba73: cmp    0xc(%rdi),%ebx     ; implicit exception: dispatches to 0x000000011ba4c00b
  0x000000011ba4ba76: jae    0x000000011ba4c015
  0x000000011ba4ba7c: movslq %ebx,%rax
  0x000000011ba4ba7f: mov    %dl,0x10(%rdi,%rax,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000011ba4ba83: inc    %ebx
  0x000000011ba4ba85: mov    %rbx,%rdx
  0x000000011ba4ba88: inc    %edx
  0x000000011ba4ba8a: mov    0x68(%rsp),%eax
  0x000000011ba4ba8e: cmp    0xc(%rdi),%ebx
  0x000000011ba4ba91: jae    0x000000011ba4c023
  0x000000011ba4ba97: movslq %ebx,%rbx
  0x000000011ba4ba9a: mov    %al,0x10(%rdi,%rbx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x000000011ba4ba9e: mov    $0x0,%ebx          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@74 (line 257)

  0x000000011ba4baa3: nopl   0x0(%rax,%rax,1)
  0x000000011ba4baa8: mov    %edx,0x78(%rsp)
  0x000000011ba4baac: mov    0x68(%rsp),%edi
  0x000000011ba4bab0: mov    0x70(%rsp),%rdx
  0x000000011ba4bab5: cmp    %edi,%ebx
  0x000000011ba4bab7: movabs $0x132889838,%r8   ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bac1: movabs $0x200,%r9
  0x000000011ba4bacb: jge    0x000000011ba4badb
  0x000000011ba4bad1: movabs $0x210,%r9
  0x000000011ba4badb: mov    (%r8,%r9,1),%r11
  0x000000011ba4badf: lea    0x1(%r11),%r11
  0x000000011ba4bae3: mov    %r11,(%r8,%r9,1)
  0x000000011ba4bae7: jge    0x000000011ba4be8f  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000011ba4baed: mov    %rdx,%r8
  0x000000011ba4baf0: movabs $0x132889838,%r9   ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bafa: addq   $0x1,0x220(%r9)
  0x000000011ba4bb02: movabs $0x13272c228,%r8   ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bb0c: mov    0x104(%r8),%r9d
  0x000000011ba4bb13: add    $0x8,%r9d
  0x000000011ba4bb17: mov    %r9d,0x104(%r8)
  0x000000011ba4bb1e: and    $0x7ffff8,%r9d
  0x000000011ba4bb25: cmp    $0x0,%r9d
  0x000000011ba4bb29: je     0x000000011ba4c031
  0x000000011ba4bb2f: mov    %rdx,%r8
  0x000000011ba4bb32: movabs $0x13272c228,%r9   ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bb3c: addq   $0x1,0x140(%r9)
  0x000000011ba4bb44: movabs $0x1326e4890,%r8   ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bb4e: mov    0x104(%r8),%r9d
  0x000000011ba4bb55: add    $0x8,%r9d
  0x000000011ba4bb59: mov    %r9d,0x104(%r8)
  0x000000011ba4bb60: and    $0x7ffff8,%r9d
  0x000000011ba4bb67: cmp    $0x0,%r9d
  0x000000011ba4bb6b: je     0x000000011ba4c052
  0x000000011ba4bb71: movabs $0x1326e4890,%r8   ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bb7b: incl   0x150(%r8)         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bb82: movsbl 0x14(%rdx),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bb87: cmp    $0x0,%r8d
  0x000000011ba4bb8b: movabs $0x1326e4890,%r8   ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bb95: movabs $0x160,%r9
  0x000000011ba4bb9f: jne    0x000000011ba4bbaf
  0x000000011ba4bba5: movabs $0x170,%r9
  0x000000011ba4bbaf: mov    (%r8,%r9,1),%r11
  0x000000011ba4bbb3: lea    0x1(%r11),%r11
  0x000000011ba4bbb7: mov    %r11,(%r8,%r9,1)
  0x000000011ba4bbbb: jne    0x000000011ba4bbdd  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bbc1: movabs $0x1326e4890,%r8   ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bbcb: incl   0x180(%r8)
  0x000000011ba4bbd2: mov    $0x1,%r8d
  0x000000011ba4bbd8: jmpq   0x000000011ba4bbe3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bbdd: mov    $0x0,%r8d          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bbe3: and    $0x1,%r8d
  0x000000011ba4bbe7: cmp    $0x0,%r8d
  0x000000011ba4bbeb: movabs $0x13272c228,%r8   ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bbf5: movabs $0x178,%r9
  0x000000011ba4bbff: je     0x000000011ba4bc0f
  0x000000011ba4bc05: movabs $0x188,%r9
  0x000000011ba4bc0f: mov    (%r8,%r9,1),%r11
  0x000000011ba4bc13: lea    0x1(%r11),%r11
  0x000000011ba4bc17: mov    %r11,(%r8,%r9,1)
  0x000000011ba4bc1b: je     0x000000011ba4bd0e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bc21: mov    0xc(%rdx),%r8d
  0x000000011ba4bc25: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bc29: movabs $0x13272c228,%r9   ;   {metadata(method data for {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bc33: addq   $0x1,0x198(%r9)
  0x000000011ba4bc3b: movabs $0x13272c428,%r9   ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba4bc45: mov    0x104(%r9),%r11d
  0x000000011ba4bc4c: add    $0x8,%r11d
  0x000000011ba4bc50: mov    %r11d,0x104(%r9)
  0x000000011ba4bc57: and    $0x7ffff8,%r11d
  0x000000011ba4bc5e: cmp    $0x0,%r11d
  0x000000011ba4bc62: je     0x000000011ba4c073
  0x000000011ba4bc68: cmp    $0x0,%ebx
  0x000000011ba4bc6b: movabs $0x13272c428,%r9   ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba4bc75: movabs $0x140,%r11
  0x000000011ba4bc7f: jl     0x000000011ba4bc8f
  0x000000011ba4bc85: movabs $0x150,%r11
  0x000000011ba4bc8f: mov    (%r9,%r11,1),%r13
  0x000000011ba4bc93: lea    0x1(%r13),%r13
  0x000000011ba4bc97: mov    %r13,(%r9,%r11,1)
  0x000000011ba4bc9b: jl     0x000000011ba4beb1  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bca1: mov    0xc(%r8),%r9d      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x000000011ba4c094
  0x000000011ba4bca5: cmp    %r9d,%ebx
  0x000000011ba4bca8: movabs $0x13272c428,%r11  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba4bcb2: movabs $0x170,%r13
  0x000000011ba4bcbc: jge    0x000000011ba4bccc
  0x000000011ba4bcc2: movabs $0x160,%r13
  0x000000011ba4bccc: mov    (%r11,%r13,1),%r14
  0x000000011ba4bcd0: lea    0x1(%r14),%r14
  0x000000011ba4bcd4: mov    %r14,(%r11,%r13,1)
  0x000000011ba4bcd8: jge    0x000000011ba4beb1  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bcde: cmp    %ebx,%r9d
  0x000000011ba4bce1: jbe    0x000000011ba4c099
  0x000000011ba4bce7: movslq %ebx,%r9
  0x000000011ba4bcea: movsbl 0x10(%r8,%r9,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bcf0: and    $0xff,%r8d
  0x000000011ba4bcf7: and    $0xffff,%r8d
  0x000000011ba4bcfe: and    $0xffff,%r8d
  0x000000011ba4bd05: mov    %ebx,0x7c(%rsp)
  0x000000011ba4bd09: jmpq   0x000000011ba4bd35  ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@86 (line 258)

  0x000000011ba4bd0e: mov    0xc(%rdx),%r8d
  0x000000011ba4bd12: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17 (line 695)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bd16: mov    %r8,%rsi
  0x000000011ba4bd19: mov    %rbx,%rdx          ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bd1c: mov    %ebx,0x7c(%rsp)
  0x000000011ba4bd20: nopl   0x0(%rax)
  0x000000011ba4bd27: callq  0x000000011b4d2400  ; ImmutableOopMap{[112]=Oop [96]=Oop [128]=Oop }
                                                ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {static_call}
  0x000000011ba4bd2c: and    $0xffff,%eax
  0x000000011ba4bd32: mov    %rax,%r8           ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@86 (line 258)

  0x000000011ba4bd35: cmp    $0x1,%r8d
  0x000000011ba4bd39: movabs $0x132889838,%rdx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bd43: movabs $0x258,%rcx
  0x000000011ba4bd4d: jl     0x000000011ba4bd5d
  0x000000011ba4bd53: movabs $0x268,%rcx
  0x000000011ba4bd5d: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba4bd61: lea    0x1(%rsi),%rsi
  0x000000011ba4bd65: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba4bd69: jl     0x000000011ba4be30  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000011ba4bd6f: cmp    $0x7f,%r8d
  0x000000011ba4bd73: movabs $0x132889838,%rdx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bd7d: movabs $0x278,%rcx
  0x000000011ba4bd87: jg     0x000000011ba4bd97
  0x000000011ba4bd8d: movabs $0x288,%rcx
  0x000000011ba4bd97: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba4bd9b: lea    0x1(%rsi),%rsi
  0x000000011ba4bd9f: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba4bda3: jg     0x000000011ba4be30  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000011ba4bda9: mov    0x78(%rsp),%edx
  0x000000011ba4bdad: mov    0x80(%rsp),%rdi
  0x000000011ba4bdb5: mov    %rdx,%rcx
  0x000000011ba4bdb8: inc    %ecx
  0x000000011ba4bdba: cmp    0xc(%rdi),%edx
  0x000000011ba4bdbd: jae    0x000000011ba4c0a7
  0x000000011ba4bdc3: movslq %edx,%rdx
  0x000000011ba4bdc6: mov    %r8b,0x10(%rdi,%rdx,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000011ba4bdcb: movabs $0x132889838,%rdx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bdd5: incl   0x298(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@111 (line 260)

  0x000000011ba4bddb: mov    0x7c(%rsp),%ebx
  0x000000011ba4bddf: inc    %ebx
  0x000000011ba4bde1: movabs $0x132889838,%rdx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bdeb: mov    0x108(%rdx),%r8d
  0x000000011ba4bdf2: add    $0x8,%r8d
  0x000000011ba4bdf6: mov    %r8d,0x108(%rdx)
  0x000000011ba4bdfd: and    $0xfff8,%r8d
  0x000000011ba4be04: cmp    $0x0,%r8d
  0x000000011ba4be08: je     0x000000011ba4c0b5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x000000011ba4be0e: mov    0x108(%r15),%r10   ; ImmutableOopMap{[112]=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x000000011ba4be15: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4be18: movabs $0x132889838,%rdx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4be22: incl   0x2e8(%rdx)
  0x000000011ba4be28: mov    %rcx,%rdx
  0x000000011ba4be2b: jmpq   0x000000011ba4baa8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)

  0x000000011ba4be30: mov    0x7c(%rsp),%ebx
  0x000000011ba4be34: mov    0x78(%rsp),%edx
  0x000000011ba4be38: mov    0x60(%rsp),%rsi
  0x000000011ba4be3d: mov    %edx,0xc(%rsi)     ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@116 (line 262)

  0x000000011ba4be40: mov    %rsi,%rdx
  0x000000011ba4be43: movabs $0x132889838,%rcx  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4be4d: movabs $0x80004ab98,%r10  ;   {metadata(&apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4be57: mov    %r10,0x2c0(%rcx)
  0x000000011ba4be5e: addq   $0x1,0x2c8(%rcx)
  0x000000011ba4be66: mov    0x70(%rsp),%rdx
  0x000000011ba4be6b: mov    %rbx,%rcx
  0x000000011ba4be6e: mov    $0xffff,%r8d       ;*invokevirtual encodeUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@125 (line 263)

  0x000000011ba4be74: data16 xchg %ax,%ax
  0x000000011ba4be77: callq  0x000000011b4d1f00  ; ImmutableOopMap{}
                                                ;*invokevirtual encodeUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@125 (line 263)
                                                ;   {optimized virtual_call}
  0x000000011ba4be7c: add    $0xa0,%rsp
  0x000000011ba4be83: pop    %rbp
  0x000000011ba4be84: mov    0x108(%r15),%r10
  0x000000011ba4be8b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4be8e: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@128 (line 263)

  0x000000011ba4be8f: mov    0x78(%rsp),%edx
  0x000000011ba4be93: mov    0x60(%rsp),%rsi
  0x000000011ba4be98: mov    %edx,0xc(%rsi)     ;*putfield length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x000000011ba4be9b: mov    %rsi,%rax
  0x000000011ba4be9e: add    $0xa0,%rsp
  0x000000011ba4bea5: pop    %rbp
  0x000000011ba4bea6: mov    0x108(%r15),%r10
  0x000000011ba4bead: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4beb0: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@141 (line 267)

  0x000000011ba4beb1: nopl   0x0(%rax)
  0x000000011ba4beb8: jmpq   0x000000011ba4c0e5  ;   {no_reloc}
  0x000000011ba4bebd: add    %al,(%rax)
  0x000000011ba4bebf: add    %al,(%rax)
  0x000000011ba4bec1: add    %ch,%cl
  0x000000011ba4bec3: sub    %al,(%rdx)
  0x000000011ba4bec5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bec7: mov    %rax,%rdx
  0x000000011ba4beca: movabs $0x13272c428,%r11  ;   {metadata(method data for {method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba4bed4: addq   $0x1,0x180(%r11)
  0x000000011ba4bedc: mov    %rbx,%rdx
  0x000000011ba4bedf: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bee2: mov    %ebx,0x7c(%rsp)
  0x000000011ba4bee6: mov    %rax,0x88(%rsp)
  0x000000011ba4beee: nop
  0x000000011ba4beef: callq  0x000000011b4d1f00  ; ImmutableOopMap{[128]=Oop [96]=Oop [136]=Oop [112]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {optimized virtual_call}
  0x000000011ba4bef4: mov    0x88(%rsp),%rax
  0x000000011ba4befc: jmpq   0x000000011ba4c14d  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@18 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000011ba4bf01: nopl   0x0(%rax)
  0x000000011ba4bf08: jmpq   0x000000011ba4c10b  ;   {no_reloc}
  0x000000011ba4bf0d: add    %al,(%rax)
  0x000000011ba4bf0f: add    %al,(%rax)
  0x000000011ba4bf11: add    %cl,-0x75(%rcx)
  0x000000011ba4bf14: xchg   %ebx,(%rax)
  0x000000011ba4bf16: add    %eax,(%rax)
  0x000000011ba4bf18: add    %cl,-0x73(%rax)
  0x000000011ba4bf1b: js     0x000000011ba4bf45
  0x000000011ba4bf1d: cmp    0x128(%r15),%rdi
  0x000000011ba4bf24: ja     0x000000011ba4c115
  0x000000011ba4bf2a: mov    %rdi,0x118(%r15)
  0x000000011ba4bf31: mov    0xb8(%rdx),%rcx
  0x000000011ba4bf38: mov    %rcx,(%rax)
  0x000000011ba4bf3b: mov    %rdx,%rcx
  0x000000011ba4bf3e: movabs $0x800000000,%r12
  0x000000011ba4bf48: sub    %r12,%rcx
  0x000000011ba4bf4b: xor    %r12,%r12
  0x000000011ba4bf4e: mov    %ecx,0x8(%rax)
  0x000000011ba4bf51: xor    %rcx,%rcx
  0x000000011ba4bf54: mov    %ecx,0xc(%rax)
  0x000000011ba4bf57: xor    %rcx,%rcx
  0x000000011ba4bf5a: mov    %rcx,0x10(%rax)
  0x000000011ba4bf5e: mov    %rcx,0x18(%rax)
  0x000000011ba4bf62: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)

  0x000000011ba4bf66: mov    %rax,%rsi
  0x000000011ba4bf69: movabs $0x132889838,%rdi  ;   {metadata(method data for {method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bf73: addq   $0x1,0x198(%rdi)
  0x000000011ba4bf7b: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@15 (line 242)

  0x000000011ba4bf7e: mov    %rax,0x90(%rsp)
  0x000000011ba4bf86: nop
  0x000000011ba4bf87: callq  0x000000011b4d1f00  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@15 (line 242)
                                                ;   {optimized virtual_call}
  0x000000011ba4bf8c: mov    0x90(%rsp),%rax
  0x000000011ba4bf94: jmpq   0x000000011ba4c14d
  0x000000011ba4bf99: movabs $0x1328006a8,%r10  ;   {metadata({method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4bfa3: mov    %r10,0x8(%rsp)
  0x000000011ba4bfa8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4bfb0: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4bfb5: jmpq   0x000000011ba4b8e1
  0x000000011ba4bfba: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4bfbf: movabs $0x1324b0320,%r10  ;   {metadata({method} {0x00000001324b0320} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bfc9: mov    %r10,0x8(%rsp)
  0x000000011ba4bfce: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4bfd6: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4bfdb: jmpq   0x000000011ba4b921
  0x000000011ba4bfe0: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4bfe5: movabs $0x1324b5190,%r10  ;   {metadata({method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4bfef: mov    %r10,0x8(%rsp)
  0x000000011ba4bff4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4bffc: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4c001: jmpq   0x000000011ba4b968
  0x000000011ba4c006: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4c00b: callq  0x000000011b595f20  ; ImmutableOopMap{[112]=Oop rsi=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4c010: callq  0x000000011b595f20  ; ImmutableOopMap{[112]=Oop rsi=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4c015: mov    %rbx,(%rsp)
  0x000000011ba4c019: mov    %rdi,0x8(%rsp)
  0x000000011ba4c01e: callq  0x000000011b595320  ; ImmutableOopMap{[112]=Oop rsi=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4c023: mov    %rbx,(%rsp)
  0x000000011ba4c027: mov    %rdi,0x8(%rsp)
  0x000000011ba4c02c: callq  0x000000011b595320  ; ImmutableOopMap{[112]=Oop rsi=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4c031: movabs $0x1324b04a8,%r10  ;   {metadata({method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4c03b: mov    %r10,0x8(%rsp)
  0x000000011ba4c040: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4c048: callq  0x000000011b59a600  ; ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4c04d: jmpq   0x000000011ba4bb2f
  0x000000011ba4c052: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba4c05c: mov    %r10,0x8(%rsp)
  0x000000011ba4c061: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4c069: callq  0x000000011b59a600  ; ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4c06e: jmpq   0x000000011ba4bb71
  0x000000011ba4c073: movabs $0x1326024e0,%r10  ;   {metadata({method} {0x00000001326024e0} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba4c07d: mov    %r10,0x8(%rsp)
  0x000000011ba4c082: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4c08a: callq  0x000000011b59a600  ; ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4c08f: jmpq   0x000000011ba4bc68
  0x000000011ba4c094: callq  0x000000011b595f20  ; ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4c099: mov    %rbx,(%rsp)
  0x000000011ba4c09d: mov    %r8,0x8(%rsp)
  0x000000011ba4c0a2: callq  0x000000011b595320  ; ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop r8=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4c0a7: mov    %rdx,(%rsp)
  0x000000011ba4c0ab: mov    %rdi,0x8(%rsp)
  0x000000011ba4c0b0: callq  0x000000011b595320  ; ImmutableOopMap{[112]=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4c0b5: movabs $0x1328006a8,%r10  ;   {metadata({method} {0x00000001328006a8} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;)}
  0x000000011ba4c0bf: mov    %r10,0x8(%rsp)
  0x000000011ba4c0c4: movq   $0x84,(%rsp)
  0x000000011ba4c0cc: callq  0x000000011b59a600  ; ImmutableOopMap{[112]=Oop [96]=Oop rdi=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@132 (line 257)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4c0d1: jmpq   0x000000011ba4be0e
  0x000000011ba4c0d6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba4c0e0: mov    $0xa050f00,%eax
  0x000000011ba4c0e5: callq  0x000000011b599680  ; ImmutableOopMap{[112]=Oop [96]=Oop [128]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba4c0ea: jmpq   0x000000011ba4beb8
  0x000000011ba4c0ef: mov    %rdx,%rdx
  0x000000011ba4c0f2: callq  0x000000011b596480  ; ImmutableOopMap{[112]=Oop [96]=Oop [128]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba4c0f7: jmpq   0x000000011ba4bec7
  0x000000011ba4c0fc: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba4c106: mov    $0xa050f00,%eax
  0x000000011ba4c10b: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba4c110: jmpq   0x000000011ba4bf08
  0x000000011ba4c115: mov    %rdx,%rdx
  0x000000011ba4c118: callq  0x000000011b596780  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@11 (line 242)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba4c11d: jmpq   0x000000011ba4bf66
  0x000000011ba4c122: nop
  0x000000011ba4c123: nop
  0x000000011ba4c124: mov    0x420(%r15),%rax
  0x000000011ba4c12b: movabs $0x0,%r10
  0x000000011ba4c135: mov    %r10,0x420(%r15)
  0x000000011ba4c13c: movabs $0x0,%r10
  0x000000011ba4c146: mov    %r10,0x428(%r15)
  0x000000011ba4c14d: add    $0xa0,%rsp
  0x000000011ba4c154: pop    %rbp
  0x000000011ba4c155: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4c15a: hlt    
  0x000000011ba4c15b: hlt    
  0x000000011ba4c15c: hlt    
  0x000000011ba4c15d: hlt    
  0x000000011ba4c15e: hlt    
  0x000000011ba4c15f: hlt    
[Stub Code]
  0x000000011ba4c160: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4c165: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4c16f: jmpq   0x000000011ba4c16f  ;   {runtime_call}
  0x000000011ba4c174: nop
  0x000000011ba4c175: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4c17f: jmpq   0x000000011ba4c17f  ;   {runtime_call}
  0x000000011ba4c184: nop
  0x000000011ba4c185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4c18f: jmpq   0x000000011ba4c18f  ;   {runtime_call}
  0x000000011ba4c194: nop
  0x000000011ba4c195: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4c19f: jmpq   0x000000011ba4c19f  ;   {runtime_call}
  0x000000011ba4c1a4: nop
  0x000000011ba4c1a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4c1af: jmpq   0x000000011ba4c1af  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4c1b4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4c1b9: mov    %rsp,-0x28(%rsp)
  0x000000011ba4c1be: sub    $0x80,%rsp
  0x000000011ba4c1c5: mov    %rax,0x78(%rsp)
  0x000000011ba4c1ca: mov    %rcx,0x70(%rsp)
  0x000000011ba4c1cf: mov    %rdx,0x68(%rsp)
  0x000000011ba4c1d4: mov    %rbx,0x60(%rsp)
  0x000000011ba4c1d9: mov    %rbp,0x50(%rsp)
  0x000000011ba4c1de: mov    %rsi,0x48(%rsp)
  0x000000011ba4c1e3: mov    %rdi,0x40(%rsp)
  0x000000011ba4c1e8: mov    %r8,0x38(%rsp)
  0x000000011ba4c1ed: mov    %r9,0x30(%rsp)
  0x000000011ba4c1f2: mov    %r10,0x28(%rsp)
  0x000000011ba4c1f7: mov    %r11,0x20(%rsp)
  0x000000011ba4c1fc: mov    %r12,0x18(%rsp)
  0x000000011ba4c201: mov    %r13,0x10(%rsp)
  0x000000011ba4c206: mov    %r14,0x8(%rsp)
  0x000000011ba4c20b: mov    %r15,(%rsp)
  0x000000011ba4c20f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4c219: movabs $0x11ba4c1b9,%rsi  ;   {internal_word}
  0x000000011ba4c223: mov    %rsp,%rdx
  0x000000011ba4c226: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4c22a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4c22f: hlt    
[Deopt Handler Code]
  0x000000011ba4c230: movabs $0x11ba4c230,%r10  ;   {section_word}
  0x000000011ba4c23a: push   %r10
  0x000000011ba4c23c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4c241: hlt    
  0x000000011ba4c242: hlt    
  0x000000011ba4c243: hlt    
  0x000000011ba4c244: hlt    
  0x000000011ba4c245: hlt    
  0x000000011ba4c246: hlt    
  0x000000011ba4c247: hlt    

ImmutableOopMap{[112]=Oop [96]=Oop }pc offsets: 468 
ImmutableOopMap{[112]=Oop [96]=Oop [128]=Oop }pc offsets: 1196 
ImmutableOopMap{[112]=Oop [96]=Oop rdi=Oop [128]=Oop }pc offsets: 1429 
ImmutableOopMap{}pc offsets: 1532 
ImmutableOopMap{[128]=Oop [96]=Oop [136]=Oop [112]=Oop }pc offsets: 1652 
ImmutableOopMap{[144]=Oop }pc offsets: 1804 
ImmutableOopMap{rsi=Oop [96]=Oop rdx=Oop [112]=Oop }pc offsets: 1845 1855 1883 1893 1921 1931 
ImmutableOopMap{[112]=Oop rsi=Oop [96]=Oop rdi=Oop [128]=Oop }pc offsets: 1936 1941 1955 1969 
ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop }pc offsets: 1997 2030 
ImmutableOopMap{[128]=Oop [96]=Oop rdx=Oop [112]=Oop r8=Oop }pc offsets: 2063 2073 2087 
ImmutableOopMap{[112]=Oop [96]=Oop rdi=Oop [128]=Oop }pc offsets: 2101 2129 
ImmutableOopMap{[112]=Oop [96]=Oop [128]=Oop }pc offsets: 2154 2167 
ImmutableOopMap{}pc offsets: 2192 2205 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='74' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='384' backedge_count='363' iicount='384' level='3' stamp='0.246' comment='tiered' hot_count='384'/>
<writer thread='15363'/>
<nmethod compile_id='71' compiler='c2' level='4' entry='0x0000000122f792a0' size='936' address='0x0000000122f79110' relocation_offset='376' insts_offset='400' stub_offset='560' scopes_data_offset='608' scopes_pcs_offset='704' dependencies_offset='912' nul_chk_table_offset='920' metadata_offset='584' method='java.lang.String charAt (I)C' bytes='25' count='5967' iicount='5967' stamp='0.246'/>
<make_not_entrant thread='15363' compile_id='22' compiler='c1' level='3' stamp='0.246'/>
<print_nmethod stamp='0.246'>
Compiled method (c2)     246   71       4       java.lang.String::charAt (25 bytes)
 total in heap  [0x0000000122f79110,0x0000000122f794b8] = 936
 relocation     [0x0000000122f79288,0x0000000122f79298] = 16
 main code      [0x0000000122f792a0,0x0000000122f79340] = 160
 stub code      [0x0000000122f79340,0x0000000122f79358] = 24
 metadata       [0x0000000122f79358,0x0000000122f79370] = 24
 scopes data    [0x0000000122f79370,0x0000000122f793d0] = 96
 scopes pcs     [0x0000000122f793d0,0x0000000122f794a0] = 208
 dependencies   [0x0000000122f794a0,0x0000000122f794a8] = 8
 nul chk table  [0x0000000122f794a8,0x0000000122f794b8] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x0000000122f792a0, 0x0000000122f79358]  184 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b04a8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000122f792a0: mov    0x8(%rsi),%r10d
  0x0000000122f792a4: movabs $0x800000000,%r12
  0x0000000122f792ae: add    %r12,%r10
  0x0000000122f792b1: xor    %r12,%r12
  0x0000000122f792b4: cmp    %r10,%rax
  0x0000000122f792b7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f792bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f792c0: mov    %eax,-0x14000(%rsp)
  0x0000000122f792c7: push   %rbp
  0x0000000122f792c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)

  0x0000000122f792cc: movsbl 0x14(%rsi),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x0000000122f792d1: test   %r10d,%r10d
  0x0000000122f792d4: jne    0x0000000122f792fd  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x0000000122f792d6: mov    0xc(%rsi),%ebp     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)

  0x0000000122f792d9: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x0000000122f79326
  0x0000000122f792de: cmp    %r10d,%edx
  0x0000000122f792e1: jae    0x0000000122f79316
  0x0000000122f792e3: lea    (%r12,%rbp,8),%r10
  0x0000000122f792e7: movzbl 0x10(%r10,%rdx,1),%eax  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x0000000122f792ed: add    $0x20,%rsp
  0x0000000122f792f1: pop    %rbp
  0x0000000122f792f2: mov    0x108(%r15),%r10
  0x0000000122f792f9: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f792fc: retq   
  0x0000000122f792fd: mov    %rsi,%rbp
  0x0000000122f79300: mov    %edx,(%rsp)
  0x0000000122f79303: mov    %r10d,0x4(%rsp)
  0x0000000122f79308: mov    $0xffffff4d,%esi
  0x0000000122f7930d: xchg   %ax,%ax
  0x0000000122f7930f: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f79314: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x0000000122f79316: mov    $0xffffffe5,%esi
  0x0000000122f7931b: mov    %edx,0x4(%rsp)
  0x0000000122f7931f: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f79324: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x0000000122f79326: mov    $0xfffffff6,%esi
  0x0000000122f7932b: mov    %edx,0x4(%rsp)
  0x0000000122f7932f: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f79334: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x0000000122f79336: hlt    
  0x0000000122f79337: hlt    
  0x0000000122f79338: hlt    
  0x0000000122f79339: hlt    
  0x0000000122f7933a: hlt    
  0x0000000122f7933b: hlt    
  0x0000000122f7933c: hlt    
  0x0000000122f7933d: hlt    
  0x0000000122f7933e: hlt    
  0x0000000122f7933f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f79340: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f79345: callq  0x0000000122f7934a
  0x0000000122f7934a: subq   $0x5,(%rsp)
  0x0000000122f7934f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f79354: hlt    
  0x0000000122f79355: hlt    
  0x0000000122f79356: hlt    
  0x0000000122f79357: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 116 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 132 148 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='75' method='java.util.stream.FindOps$FindSink cancellationRequested ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.248' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='74' compiler='c1' level='3' entry='0x000000011ba4cc80' size='2248' address='0x000000011ba4ca90' relocation_offset='376' insts_offset='496' stub_offset='1328' scopes_data_offset='1528' scopes_pcs_offset='1720' dependencies_offset='2216' nul_chk_table_offset='2224' metadata_offset='1512' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='429' backedge_count='416' iicount='429' stamp='0.248'/>
<print_nmethod stamp='0.248'>
Compiled method (c1)     248   74       3       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
 total in heap  [0x000000011ba4ca90,0x000000011ba4d358] = 2248
 relocation     [0x000000011ba4cc08,0x000000011ba4cc78] = 112
 main code      [0x000000011ba4cc80,0x000000011ba4cfc0] = 832
 stub code      [0x000000011ba4cfc0,0x000000011ba4d078] = 184
 metadata       [0x000000011ba4d078,0x000000011ba4d088] = 16
 scopes data    [0x000000011ba4d088,0x000000011ba4d148] = 192
 scopes pcs     [0x000000011ba4d148,0x000000011ba4d338] = 496
 dependencies   [0x000000011ba4d338,0x000000011ba4d340] = 8
 nul chk table  [0x000000011ba4d340,0x000000011ba4d358] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.next()Ljava/lang/Object;  [0x000000011ba4cc80, 0x000000011ba4d078]  1016 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000011ba4cc80: mov    0x8(%rsi),%r10d
  0x000000011ba4cc84: movabs $0x800000000,%r12
  0x000000011ba4cc8e: add    %r12,%r10
  0x000000011ba4cc91: xor    %r12,%r12
  0x000000011ba4cc94: cmp    %rax,%r10
  0x000000011ba4cc97: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4cc9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4cca0: mov    %eax,-0x14000(%rsp)
  0x000000011ba4cca7: push   %rbp
  0x000000011ba4cca8: sub    $0x50,%rsp
  0x000000011ba4ccac: mov    %rsi,0x38(%rsp)
  0x000000011ba4ccb1: movabs $0x13288b030,%rdi  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4ccbb: mov    0x104(%rdi),%ebx
  0x000000011ba4ccc1: add    $0x8,%ebx
  0x000000011ba4ccc4: mov    %ebx,0x104(%rdi)
  0x000000011ba4ccca: and    $0x1ff8,%ebx
  0x000000011ba4ccd0: cmp    $0x0,%ebx
  0x000000011ba4ccd3: je     0x000000011ba4cee6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@0 (line 639)

  0x000000011ba4ccd9: mov    %rsi,%rdi
  0x000000011ba4ccdc: movabs $0x13288b030,%rbx  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cce6: addq   $0x1,0x140(%rbx)
  0x000000011ba4ccee: movabs $0x132739080,%rdi  ;   {metadata(method data for {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4ccf8: mov    0x104(%rdi),%ebx
  0x000000011ba4ccfe: add    $0x8,%ebx
  0x000000011ba4cd01: mov    %ebx,0x104(%rdi)
  0x000000011ba4cd07: and    $0x7ffff8,%ebx
  0x000000011ba4cd0d: cmp    $0x0,%ebx
  0x000000011ba4cd10: je     0x000000011ba4cf07
  0x000000011ba4cd16: mov    0xc(%rsi),%edi     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)

  0x000000011ba4cd19: cmp    $0x0,%edi
  0x000000011ba4cd1c: movabs $0x132739080,%rdi  ;   {metadata(method data for {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cd26: movabs $0x140,%rbx
  0x000000011ba4cd30: jle    0x000000011ba4cd40
  0x000000011ba4cd36: movabs $0x150,%rbx
  0x000000011ba4cd40: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4cd44: lea    0x1(%rax),%rax
  0x000000011ba4cd48: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4cd4c: jle    0x000000011ba4cd6c  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)

  0x000000011ba4cd52: movabs $0x132739080,%rdi  ;   {metadata(method data for {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cd5c: incl   0x160(%rdi)
  0x000000011ba4cd62: mov    $0x1,%edi
  0x000000011ba4cd67: jmpq   0x000000011ba4cd71  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@8 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)

  0x000000011ba4cd6c: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)

  0x000000011ba4cd71: and    $0x1,%edi
  0x000000011ba4cd74: cmp    $0x0,%edi
  0x000000011ba4cd77: movabs $0x13288b030,%rdi  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cd81: movabs $0x178,%rbx
  0x000000011ba4cd8b: je     0x000000011ba4cd9b
  0x000000011ba4cd91: movabs $0x188,%rbx
  0x000000011ba4cd9b: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4cd9f: lea    0x1(%rax),%rax
  0x000000011ba4cda3: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4cda7: je     0x000000011ba4cea6
  0x000000011ba4cdad: jmpq   0x000000011ba4cdff  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@4 (line 639)

  0x000000011ba4cdb2: nopw   0x0(%rax,%rax,1)
  0x000000011ba4cdb8: movabs $0x13288b030,%rax  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cdc2: mov    0x108(%rax),%edx
  0x000000011ba4cdc8: add    $0x8,%edx
  0x000000011ba4cdcb: mov    %edx,0x108(%rax)
  0x000000011ba4cdd1: and    $0xfff8,%edx
  0x000000011ba4cdd7: cmp    $0x0,%edx
  0x000000011ba4cdda: je     0x000000011ba4cf28  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)

  0x000000011ba4cde0: mov    0x108(%r15),%r10   ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)

  0x000000011ba4cde7: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4cdea: movabs $0x13288b030,%rax  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cdf4: incl   0x1f0(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)

  0x000000011ba4cdfa: mov    0x38(%rsp),%rsi
  0x000000011ba4cdff: mov    0x14(%rsi),%edi
  0x000000011ba4ce02: shl    $0x3,%rdi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@8 (line 642)

  0x000000011ba4ce06: mov    0x10(%rdi),%edi    ; implicit exception: dispatches to 0x000000011ba4cf49
  0x000000011ba4ce09: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 642)

  0x000000011ba4ce0d: mov    %rsi,%rbx
  0x000000011ba4ce10: movabs $0x13288b030,%rax  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4ce1a: addq   $0x1,0x198(%rax)
  0x000000011ba4ce22: mov    %rsi,%rbx
  0x000000011ba4ce25: mov    %rbx,%rsi          ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x000000011ba4ce28: mov    %rdi,0x30(%rsp)
  0x000000011ba4ce2d: xchg   %ax,%ax
  0x000000011ba4ce2f: callq  0x000000011ba42760  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)
                                                ;   {optimized virtual_call}
  0x000000011ba4ce34: mov    0x30(%rsp),%rdi
  0x000000011ba4ce39: mov    0xc(%rdi),%edx     ; implicit exception: dispatches to 0x000000011ba4cf4e
  0x000000011ba4ce3c: cmp    %eax,%edx
  0x000000011ba4ce3e: jbe    0x000000011ba4cf53
  0x000000011ba4ce44: movslq %eax,%rax
  0x000000011ba4ce47: mov    0x10(%rdi,%rax,4),%eax
  0x000000011ba4ce4b: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)

  0x000000011ba4ce4f: cmp    $0x0,%rax
  0x000000011ba4ce53: movabs $0x13288b030,%rdx  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4ce5d: movabs $0x1e0,%rsi
  0x000000011ba4ce67: je     0x000000011ba4ce77
  0x000000011ba4ce6d: movabs $0x1d0,%rsi
  0x000000011ba4ce77: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba4ce7b: lea    0x1(%rdi),%rdi
  0x000000011ba4ce7f: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba4ce83: je     0x000000011ba4cdb8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@21 (line 642)

  0x000000011ba4ce89: mov    0x38(%rsp),%rsi
  0x000000011ba4ce8e: mov    0xc(%rsi),%edx     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@29 (line 643)

  0x000000011ba4ce91: dec    %edx
  0x000000011ba4ce93: mov    %edx,0xc(%rsi)     ;*putfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@34 (line 643)

  0x000000011ba4ce96: add    $0x50,%rsp
  0x000000011ba4ce9a: pop    %rbp
  0x000000011ba4ce9b: mov    0x108(%r15),%r10
  0x000000011ba4cea2: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4cea5: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@38 (line 644)

  0x000000011ba4cea6: xchg   %ax,%ax
  0x000000011ba4cea8: jmpq   0x000000011ba4cf70  ;   {no_reloc}
  0x000000011ba4cead: add    %al,(%rax)
  0x000000011ba4ceaf: add    %al,(%rax)
  0x000000011ba4ceb1: add    %ch,%cl
  0x000000011ba4ceb3: retq   
  0x000000011ba4ceb4: add    %al,(%rax)
  0x000000011ba4ceb6: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 646)

  0x000000011ba4ceb9: lock movabs $0x13288b030,%rdi  ;   {metadata(method data for {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cec4: addq   $0x1,0x208(%rdi)
  0x000000011ba4cecc: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 646)

  0x000000011ba4cecf: mov    %rax,0x40(%rsp)
  0x000000011ba4ced4: data16 xchg %ax,%ax
  0x000000011ba4ced7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 646)
                                                ;   {optimized virtual_call}
  0x000000011ba4cedc: mov    0x40(%rsp),%rax
  0x000000011ba4cee1: jmpq   0x000000011ba4cfb2
  0x000000011ba4cee6: movabs $0x132737d90,%r10  ;   {metadata({method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cef0: mov    %r10,0x8(%rsp)
  0x000000011ba4cef5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4cefd: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 639)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4cf02: jmpq   0x000000011ba4ccd9
  0x000000011ba4cf07: movabs $0x132737bb8,%r10  ;   {metadata({method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cf11: mov    %r10,0x8(%rsp)
  0x000000011ba4cf16: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4cf1e: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4cf23: jmpq   0x000000011ba4cd16
  0x000000011ba4cf28: movabs $0x132737d90,%r10  ;   {metadata({method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x000000011ba4cf32: mov    %r10,0x8(%rsp)
  0x000000011ba4cf37: movq   $0x18,(%rsp)
  0x000000011ba4cf3f: callq  0x000000011b59a600  ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4cf44: jmpq   0x000000011ba4cde0
  0x000000011ba4cf49: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 642)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4cf4e: callq  0x000000011b595f20  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4cf53: mov    %rax,(%rsp)
  0x000000011ba4cf57: mov    %rdi,0x8(%rsp)
  0x000000011ba4cf5c: callq  0x000000011b595320  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4cf61: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba4cf6b: mov    $0xa050f00,%eax
  0x000000011ba4cf70: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 646)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba4cf75: jmpq   0x000000011ba4cea8
  0x000000011ba4cf7a: mov    %rdx,%rdx
  0x000000011ba4cf7d: callq  0x000000011b596480  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 646)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba4cf82: jmpq   0x000000011ba4ceb7
  0x000000011ba4cf87: nop
  0x000000011ba4cf88: nop
  0x000000011ba4cf89: mov    0x420(%r15),%rax
  0x000000011ba4cf90: movabs $0x0,%r10
  0x000000011ba4cf9a: mov    %r10,0x420(%r15)
  0x000000011ba4cfa1: movabs $0x0,%r10
  0x000000011ba4cfab: mov    %r10,0x428(%r15)
  0x000000011ba4cfb2: add    $0x50,%rsp
  0x000000011ba4cfb6: pop    %rbp
  0x000000011ba4cfb7: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4cfbc: hlt    
  0x000000011ba4cfbd: hlt    
  0x000000011ba4cfbe: hlt    
  0x000000011ba4cfbf: hlt    
[Stub Code]
  0x000000011ba4cfc0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4cfc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4cfcf: jmpq   0x000000011ba4cfcf  ;   {runtime_call}
  0x000000011ba4cfd4: nop
  0x000000011ba4cfd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4cfdf: jmpq   0x000000011ba4cfdf  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4cfe4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4cfe9: mov    %rsp,-0x28(%rsp)
  0x000000011ba4cfee: sub    $0x80,%rsp
  0x000000011ba4cff5: mov    %rax,0x78(%rsp)
  0x000000011ba4cffa: mov    %rcx,0x70(%rsp)
  0x000000011ba4cfff: mov    %rdx,0x68(%rsp)
  0x000000011ba4d004: mov    %rbx,0x60(%rsp)
  0x000000011ba4d009: mov    %rbp,0x50(%rsp)
  0x000000011ba4d00e: mov    %rsi,0x48(%rsp)
  0x000000011ba4d013: mov    %rdi,0x40(%rsp)
  0x000000011ba4d018: mov    %r8,0x38(%rsp)
  0x000000011ba4d01d: mov    %r9,0x30(%rsp)
  0x000000011ba4d022: mov    %r10,0x28(%rsp)
  0x000000011ba4d027: mov    %r11,0x20(%rsp)
  0x000000011ba4d02c: mov    %r12,0x18(%rsp)
  0x000000011ba4d031: mov    %r13,0x10(%rsp)
  0x000000011ba4d036: mov    %r14,0x8(%rsp)
  0x000000011ba4d03b: mov    %r15,(%rsp)
  0x000000011ba4d03f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4d049: movabs $0x11ba4cfe9,%rsi  ;   {internal_word}
  0x000000011ba4d053: mov    %rsp,%rdx
  0x000000011ba4d056: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4d05a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4d05f: hlt    
[Deopt Handler Code]
  0x000000011ba4d060: movabs $0x11ba4d060,%r10  ;   {section_word}
  0x000000011ba4d06a: push   %r10
  0x000000011ba4d06c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4d071: hlt    
  0x000000011ba4d072: hlt    
  0x000000011ba4d073: hlt    
  0x000000011ba4d074: hlt    
  0x000000011ba4d075: hlt    
  0x000000011ba4d076: hlt    
  0x000000011ba4d077: hlt    

ImmutableOopMap{[56]=Oop }pc offsets: 359 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 436 
ImmutableOopMap{[64]=Oop }pc offsets: 604 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 642 675 
ImmutableOopMap{[56]=Oop }pc offsets: 708 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 718 
ImmutableOopMap{[56]=Oop rdi=Oop }pc offsets: 723 737 
ImmutableOopMap{}pc offsets: 757 770 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='76' method='java.util.Spliterators$IteratorSpliterator characteristics ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.253' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='73' compiler='c1' level='3' entry='0x000000011ba4d560' size='1912' address='0x000000011ba4d390' relocation_offset='376' insts_offset='464' stub_offset='1104' scopes_data_offset='1280' scopes_pcs_offset='1448' dependencies_offset='1864' nul_chk_table_offset='1872' metadata_offset='1272' method='jdk.internal.org.objectweb.asm.ClassWriter get (Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' bytes='49' count='421' backedge_count='11' iicount='421' stamp='0.254'/>
<print_nmethod stamp='0.254'>
Compiled method (c1)     253   73       3       jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)
 total in heap  [0x000000011ba4d390,0x000000011ba4db08] = 1912
 relocation     [0x000000011ba4d508,0x000000011ba4d558] = 80
 main code      [0x000000011ba4d560,0x000000011ba4d7e0] = 640
 stub code      [0x000000011ba4d7e0,0x000000011ba4d888] = 168
 metadata       [0x000000011ba4d888,0x000000011ba4d890] = 8
 scopes data    [0x000000011ba4d890,0x000000011ba4d938] = 168
 scopes pcs     [0x000000011ba4d938,0x000000011ba4dad8] = 416
 dependencies   [0x000000011ba4dad8,0x000000011ba4dae0] = 8
 nul chk table  [0x000000011ba4dae0,0x000000011ba4db08] = 40
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/ClassWriter.get(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;  [0x000000011ba4d560, 0x000000011ba4d888]  808 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;
  # parm0:    rdx:rdx   = &apos;jdk/internal/org/objectweb/asm/Item&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ba4d560: mov    0x8(%rsi),%r10d
  0x000000011ba4d564: movabs $0x800000000,%r12
  0x000000011ba4d56e: add    %r12,%r10
  0x000000011ba4d571: xor    %r12,%r12
  0x000000011ba4d574: cmp    %rax,%r10
  0x000000011ba4d577: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4d57d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4d580: mov    %eax,-0x14000(%rsp)
  0x000000011ba4d587: push   %rbp
  0x000000011ba4d588: sub    $0x40,%rsp
  0x000000011ba4d58c: mov    %rdx,0x28(%rsp)
  0x000000011ba4d591: movabs $0x13288b288,%rax  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d59b: mov    0x104(%rax),%edi
  0x000000011ba4d5a1: add    $0x8,%edi
  0x000000011ba4d5a4: mov    %edi,0x104(%rax)
  0x000000011ba4d5aa: and    $0x1ff8,%edi
  0x000000011ba4d5b0: cmp    $0x0,%edi
  0x000000011ba4d5b3: je     0x000000011ba4d743  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@0 (line 1816)

  0x000000011ba4d5b9: mov    0x58(%rsi),%esi
  0x000000011ba4d5bc: shl    $0x3,%rsi          ;*getfield items {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@1 (line 1816)

  0x000000011ba4d5c0: mov    0x20(%rdx),%eax    ;*getfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1816)
                                                ; implicit exception: dispatches to 0x000000011ba4d764
  0x000000011ba4d5c3: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1816)
                                                ; implicit exception: dispatches to 0x000000011ba4d769
  0x000000011ba4d5c6: mov    %rdx,%rbx
  0x000000011ba4d5c9: cmp    $0x80000000,%eax
  0x000000011ba4d5cf: jne    0x000000011ba4d5e0
  0x000000011ba4d5d5: xor    %edx,%edx
  0x000000011ba4d5d7: cmp    $0xffffffff,%edi
  0x000000011ba4d5da: je     0x000000011ba4d5e3
  0x000000011ba4d5e0: cltd   
  0x000000011ba4d5e1: idiv   %edi               ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1816)
                                                ; implicit exception: dispatches to 0x000000011ba4d76e
  0x000000011ba4d5e3: cmp    0xc(%rsi),%edx
  0x000000011ba4d5e6: jae    0x000000011ba4d773
  0x000000011ba4d5ec: movslq %edx,%rdx
  0x000000011ba4d5ef: mov    0x10(%rsi,%rdx,4),%edx
  0x000000011ba4d5f3: shl    $0x3,%rdx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1816)

  0x000000011ba4d5f7: nop
  0x000000011ba4d5f8: cmp    $0x0,%rdx
  0x000000011ba4d5fc: movabs $0x13288b288,%rsi  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d606: movabs $0x140,%rdi
  0x000000011ba4d610: je     0x000000011ba4d620
  0x000000011ba4d616: movabs $0x150,%rdi
  0x000000011ba4d620: mov    (%rsi,%rdi,1),%rax
  0x000000011ba4d624: lea    0x1(%rax),%rax
  0x000000011ba4d628: mov    %rax,(%rsi,%rdi,1)
  0x000000011ba4d62c: je     0x000000011ba4d730  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@17 (line 1817)

  0x000000011ba4d632: mov    0x18(%rdx),%esi    ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1817)
                                                ; implicit exception: dispatches to 0x000000011ba4d781
  0x000000011ba4d635: mov    0x18(%rbx),%edi    ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@25 (line 1817)

  0x000000011ba4d638: cmp    %edi,%esi
  0x000000011ba4d63a: movabs $0x13288b288,%rsi  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d644: movabs $0x160,%rdi
  0x000000011ba4d64e: jne    0x000000011ba4d65e
  0x000000011ba4d654: movabs $0x170,%rdi
  0x000000011ba4d65e: mov    (%rsi,%rdi,1),%rax
  0x000000011ba4d662: lea    0x1(%rax),%rax
  0x000000011ba4d666: mov    %rax,(%rsi,%rdi,1)
  0x000000011ba4d66a: jne    0x000000011ba4d6da  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@28 (line 1817)

  0x000000011ba4d670: mov    %rbx,%rsi
  0x000000011ba4d673: movabs $0x13288b288,%rdi  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d67d: addq   $0x1,0x180(%rdi)
  0x000000011ba4d685: mov    %rdx,%rdi
  0x000000011ba4d688: mov    %rdi,%rdx
  0x000000011ba4d68b: mov    %rbx,%rsi          ;*invokevirtual isEqualTo {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1817)

  0x000000011ba4d68e: mov    %rdi,0x20(%rsp)
  0x000000011ba4d693: nopl   0x0(%rax)
  0x000000011ba4d697: callq  0x000000011b4d1f00  ; ImmutableOopMap{[32]=Oop [40]=Oop }
                                                ;*invokevirtual isEqualTo {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1817)
                                                ;   {optimized virtual_call}
  0x000000011ba4d69c: cmp    $0x0,%eax
  0x000000011ba4d69f: movabs $0x13288b288,%rax  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d6a9: movabs $0x1b8,%rsi
  0x000000011ba4d6b3: jne    0x000000011ba4d6c3
  0x000000011ba4d6b9: movabs $0x1c8,%rsi
  0x000000011ba4d6c3: mov    (%rax,%rsi,1),%rdi
  0x000000011ba4d6c7: lea    0x1(%rdi),%rdi
  0x000000011ba4d6cb: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba4d6cf: mov    0x20(%rsp),%rdx
  0x000000011ba4d6d4: jne    0x000000011ba4d730  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@36 (line 1817)

  0x000000011ba4d6da: mov    0x30(%rdx),%eax
  0x000000011ba4d6dd: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@40 (line 1818)

  0x000000011ba4d6e1: movabs $0x13288b288,%rsi  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d6eb: mov    0x108(%rsi),%edi
  0x000000011ba4d6f1: add    $0x8,%edi
  0x000000011ba4d6f4: mov    %edi,0x108(%rsi)
  0x000000011ba4d6fa: and    $0xfff8,%edi
  0x000000011ba4d700: cmp    $0x0,%edi
  0x000000011ba4d703: je     0x000000011ba4d786  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)

  0x000000011ba4d709: mov    0x108(%r15),%r10   ; ImmutableOopMap{[40]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)

  0x000000011ba4d710: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4d713: movabs $0x13288b288,%rsi  ;   {metadata(method data for {method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d71d: incl   0x1d8(%rsi)
  0x000000011ba4d723: mov    %rax,%rdx
  0x000000011ba4d726: mov    0x28(%rsp),%rbx
  0x000000011ba4d72b: jmpq   0x000000011ba4d5f8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)

  0x000000011ba4d730: mov    %rdx,%rax
  0x000000011ba4d733: add    $0x40,%rsp
  0x000000011ba4d737: pop    %rbp
  0x000000011ba4d738: mov    0x108(%r15),%r10
  0x000000011ba4d73f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4d742: retq   
  0x000000011ba4d743: movabs $0x1327fcbc0,%r10  ;   {metadata({method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d74d: mov    %r10,0x8(%rsp)
  0x000000011ba4d752: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4d75a: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop [40]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@-1 (line 1816)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4d75f: jmpq   0x000000011ba4d5b9
  0x000000011ba4d764: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [40]=Oop rsi=Oop }
                                                ;*getfield hashCode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1816)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4d769: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [40]=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1816)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4d76e: callq  0x000000011b595ca0  ; ImmutableOopMap{rsi=Oop rbx=Oop [40]=Oop }
                                                ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1816)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011ba4d773: mov    %rdx,(%rsp)
  0x000000011ba4d777: mov    %rsi,0x8(%rsp)
  0x000000011ba4d77c: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop rbx=Oop [40]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1816)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4d781: callq  0x000000011b595f20  ; ImmutableOopMap{rbx=Oop [40]=Oop rdx=Oop }
                                                ;*getfield type {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1817)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4d786: movabs $0x1327fcbc0,%r10  ;   {metadata({method} {0x00000001327fcbc0} &apos;get&apos; &apos;(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;&apos; in &apos;jdk/internal/org/objectweb/asm/ClassWriter&apos;)}
  0x000000011ba4d790: mov    %r10,0x8(%rsp)
  0x000000011ba4d795: movq   $0x2c,(%rsp)
  0x000000011ba4d79d: callq  0x000000011b59a600  ; ImmutableOopMap{[40]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4d7a2: jmpq   0x000000011ba4d709
  0x000000011ba4d7a7: nop
  0x000000011ba4d7a8: nop
  0x000000011ba4d7a9: mov    0x420(%r15),%rax
  0x000000011ba4d7b0: movabs $0x0,%r10
  0x000000011ba4d7ba: mov    %r10,0x420(%r15)
  0x000000011ba4d7c1: movabs $0x0,%r10
  0x000000011ba4d7cb: mov    %r10,0x428(%r15)
  0x000000011ba4d7d2: add    $0x40,%rsp
  0x000000011ba4d7d6: pop    %rbp
  0x000000011ba4d7d7: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4d7dc: hlt    
  0x000000011ba4d7dd: hlt    
  0x000000011ba4d7de: hlt    
  0x000000011ba4d7df: hlt    
[Stub Code]
  0x000000011ba4d7e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4d7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4d7ef: jmpq   0x000000011ba4d7ef  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4d7f4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4d7f9: mov    %rsp,-0x28(%rsp)
  0x000000011ba4d7fe: sub    $0x80,%rsp
  0x000000011ba4d805: mov    %rax,0x78(%rsp)
  0x000000011ba4d80a: mov    %rcx,0x70(%rsp)
  0x000000011ba4d80f: mov    %rdx,0x68(%rsp)
  0x000000011ba4d814: mov    %rbx,0x60(%rsp)
  0x000000011ba4d819: mov    %rbp,0x50(%rsp)
  0x000000011ba4d81e: mov    %rsi,0x48(%rsp)
  0x000000011ba4d823: mov    %rdi,0x40(%rsp)
  0x000000011ba4d828: mov    %r8,0x38(%rsp)
  0x000000011ba4d82d: mov    %r9,0x30(%rsp)
  0x000000011ba4d832: mov    %r10,0x28(%rsp)
  0x000000011ba4d837: mov    %r11,0x20(%rsp)
  0x000000011ba4d83c: mov    %r12,0x18(%rsp)
  0x000000011ba4d841: mov    %r13,0x10(%rsp)
  0x000000011ba4d846: mov    %r14,0x8(%rsp)
  0x000000011ba4d84b: mov    %r15,(%rsp)
  0x000000011ba4d84f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4d859: movabs $0x11ba4d7f9,%rsi  ;   {internal_word}
  0x000000011ba4d863: mov    %rsp,%rdx
  0x000000011ba4d866: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4d86a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4d86f: hlt    
[Deopt Handler Code]
  0x000000011ba4d870: movabs $0x11ba4d870,%r10  ;   {section_word}
  0x000000011ba4d87a: push   %r10
  0x000000011ba4d87c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4d881: hlt    
  0x000000011ba4d882: hlt    
  0x000000011ba4d883: hlt    
  0x000000011ba4d884: hlt    
  0x000000011ba4d885: hlt    
  0x000000011ba4d886: hlt    
  0x000000011ba4d887: hlt    

ImmutableOopMap{[32]=Oop [40]=Oop }pc offsets: 316 
ImmutableOopMap{[40]=Oop rax=Oop }pc offsets: 432 
ImmutableOopMap{rsi=Oop rdx=Oop [40]=Oop }pc offsets: 511 
ImmutableOopMap{rdx=Oop [40]=Oop rsi=Oop }pc offsets: 521 526 
ImmutableOopMap{rsi=Oop rbx=Oop [40]=Oop }pc offsets: 531 545 
ImmutableOopMap{rbx=Oop [40]=Oop rdx=Oop }pc offsets: 550 
ImmutableOopMap{[40]=Oop rax=Oop }pc offsets: 578 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='77' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='512' iicount='512' level='3' stamp='0.260' comment='tiered' hot_count='512'/>
<task_queued compile_id='78' method='java.util.ImmutableCollections$SetN size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.260' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='77' compiler='c1' level='3' entry='0x000000011ba4dd60' size='1304' address='0x000000011ba4db90' relocation_offset='376' insts_offset='464' stub_offset='912' scopes_data_offset='1088' scopes_pcs_offset='1136' dependencies_offset='1280' nul_chk_table_offset='1288' metadata_offset='1080' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='632' iicount='632' stamp='0.260'/>
<print_nmethod stamp='0.260'>
Compiled method (c1)     260   77       3       java.util.HashMap::hash (20 bytes)
 total in heap  [0x000000011ba4db90,0x000000011ba4e0a8] = 1304
 relocation     [0x000000011ba4dd08,0x000000011ba4dd48] = 64
 main code      [0x000000011ba4dd60,0x000000011ba4df20] = 448
 stub code      [0x000000011ba4df20,0x000000011ba4dfc8] = 168
 metadata       [0x000000011ba4dfc8,0x000000011ba4dfd0] = 8
 scopes data    [0x000000011ba4dfd0,0x000000011ba4e000] = 48
 scopes pcs     [0x000000011ba4e000,0x000000011ba4e090] = 144
 dependencies   [0x000000011ba4e090,0x000000011ba4e098] = 8
 nul chk table  [0x000000011ba4e098,0x000000011ba4e0a8] = 16
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x000000011ba4dd60, 0x000000011ba4dfc8]  616 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba4dd60: mov    %eax,-0x14000(%rsp)
  0x000000011ba4dd67: push   %rbp
  0x000000011ba4dd68: sub    $0x30,%rsp
  0x000000011ba4dd6c: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4dd76: mov    0x104(%rdi),%ebx
  0x000000011ba4dd7c: add    $0x8,%ebx
  0x000000011ba4dd7f: mov    %ebx,0x104(%rdi)
  0x000000011ba4dd85: and    $0x1ff8,%ebx
  0x000000011ba4dd8b: cmp    $0x0,%ebx
  0x000000011ba4dd8e: je     0x000000011ba4deb8  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x000000011ba4dd94: cmp    $0x0,%rsi
  0x000000011ba4dd98: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4dda2: movabs $0x140,%rbx
  0x000000011ba4ddac: jne    0x000000011ba4ddbc
  0x000000011ba4ddb2: movabs $0x150,%rbx
  0x000000011ba4ddbc: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4ddc0: lea    0x1(%rax),%rax
  0x000000011ba4ddc4: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4ddc8: jne    0x000000011ba4dde8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x000000011ba4ddce: movabs $0x132898ed8,%rsi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ddd8: incl   0x160(%rsi)
  0x000000011ba4ddde: mov    $0x0,%esi
  0x000000011ba4dde3: jmpq   0x000000011ba4dea5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x000000011ba4dde8: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x000000011ba4ded9
  0x000000011ba4ddeb: mov    %rsi,%rdi
  0x000000011ba4ddee: movabs $0x132898ed8,%rbx  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ddf8: mov    0x8(%rdi),%edi
  0x000000011ba4ddfb: movabs $0x800000000,%r12
  0x000000011ba4de05: add    %r12,%rdi
  0x000000011ba4de08: xor    %r12,%r12
  0x000000011ba4de0b: cmp    0x188(%rbx),%rdi
  0x000000011ba4de12: jne    0x000000011ba4de21
  0x000000011ba4de14: addq   $0x1,0x190(%rbx)
  0x000000011ba4de1c: jmpq   0x000000011ba4de87
  0x000000011ba4de21: cmp    0x198(%rbx),%rdi
  0x000000011ba4de28: jne    0x000000011ba4de37
  0x000000011ba4de2a: addq   $0x1,0x1a0(%rbx)
  0x000000011ba4de32: jmpq   0x000000011ba4de87
  0x000000011ba4de37: cmpq   $0x0,0x188(%rbx)
  0x000000011ba4de42: jne    0x000000011ba4de5b
  0x000000011ba4de44: mov    %rdi,0x188(%rbx)
  0x000000011ba4de4b: movq   $0x1,0x190(%rbx)
  0x000000011ba4de56: jmpq   0x000000011ba4de87
  0x000000011ba4de5b: cmpq   $0x0,0x198(%rbx)
  0x000000011ba4de66: jne    0x000000011ba4de7f
  0x000000011ba4de68: mov    %rdi,0x198(%rbx)
  0x000000011ba4de6f: movq   $0x1,0x1a0(%rbx)
  0x000000011ba4de7a: jmpq   0x000000011ba4de87
  0x000000011ba4de7f: addq   $0x1,0x178(%rbx)
  0x000000011ba4de87: nopw   0x0(%rax,%rax,1)
  0x000000011ba4de8d: movabs $0xffffffffffffffff,%rax
  0x000000011ba4de97: callq  0x000000011b4d3d60  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x000000011ba4de9c: mov    %rax,%rsi
  0x000000011ba4de9f: shr    $0x10,%esi
  0x000000011ba4dea2: xor    %rax,%rsi
  0x000000011ba4dea5: mov    %rsi,%rax
  0x000000011ba4dea8: add    $0x30,%rsp
  0x000000011ba4deac: pop    %rbp
  0x000000011ba4dead: mov    0x108(%r15),%r10
  0x000000011ba4deb4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4deb7: retq   
  0x000000011ba4deb8: movabs $0x1325d17e0,%r10  ;   {metadata({method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4dec2: mov    %r10,0x8(%rsp)
  0x000000011ba4dec7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4decf: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4ded4: jmpq   0x000000011ba4dd94
  0x000000011ba4ded9: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4dede: nop
  0x000000011ba4dedf: nop
  0x000000011ba4dee0: mov    0x420(%r15),%rax
  0x000000011ba4dee7: movabs $0x0,%r10
  0x000000011ba4def1: mov    %r10,0x420(%r15)
  0x000000011ba4def8: movabs $0x0,%r10
  0x000000011ba4df02: mov    %r10,0x428(%r15)
  0x000000011ba4df09: add    $0x30,%rsp
  0x000000011ba4df0d: pop    %rbp
  0x000000011ba4df0e: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4df13: hlt    
  0x000000011ba4df14: hlt    
  0x000000011ba4df15: hlt    
  0x000000011ba4df16: hlt    
  0x000000011ba4df17: hlt    
  0x000000011ba4df18: hlt    
  0x000000011ba4df19: hlt    
  0x000000011ba4df1a: hlt    
  0x000000011ba4df1b: hlt    
  0x000000011ba4df1c: hlt    
  0x000000011ba4df1d: hlt    
  0x000000011ba4df1e: hlt    
  0x000000011ba4df1f: hlt    
[Stub Code]
  0x000000011ba4df20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4df25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4df2f: jmpq   0x000000011ba4df2f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4df34: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4df39: mov    %rsp,-0x28(%rsp)
  0x000000011ba4df3e: sub    $0x80,%rsp
  0x000000011ba4df45: mov    %rax,0x78(%rsp)
  0x000000011ba4df4a: mov    %rcx,0x70(%rsp)
  0x000000011ba4df4f: mov    %rdx,0x68(%rsp)
  0x000000011ba4df54: mov    %rbx,0x60(%rsp)
  0x000000011ba4df59: mov    %rbp,0x50(%rsp)
  0x000000011ba4df5e: mov    %rsi,0x48(%rsp)
  0x000000011ba4df63: mov    %rdi,0x40(%rsp)
  0x000000011ba4df68: mov    %r8,0x38(%rsp)
  0x000000011ba4df6d: mov    %r9,0x30(%rsp)
  0x000000011ba4df72: mov    %r10,0x28(%rsp)
  0x000000011ba4df77: mov    %r11,0x20(%rsp)
  0x000000011ba4df7c: mov    %r12,0x18(%rsp)
  0x000000011ba4df81: mov    %r13,0x10(%rsp)
  0x000000011ba4df86: mov    %r14,0x8(%rsp)
  0x000000011ba4df8b: mov    %r15,(%rsp)
  0x000000011ba4df8f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4df99: movabs $0x11ba4df39,%rsi  ;   {internal_word}
  0x000000011ba4dfa3: mov    %rsp,%rdx
  0x000000011ba4dfa6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4dfaa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4dfaf: hlt    
[Deopt Handler Code]
  0x000000011ba4dfb0: movabs $0x11ba4dfb0,%r10  ;   {section_word}
  0x000000011ba4dfba: push   %r10
  0x000000011ba4dfbc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4dfc1: hlt    
  0x000000011ba4dfc2: hlt    
  0x000000011ba4dfc3: hlt    
  0x000000011ba4dfc4: hlt    
  0x000000011ba4dfc5: hlt    
  0x000000011ba4dfc6: hlt    
  0x000000011ba4dfc7: hlt    

ImmutableOopMap{}pc offsets: 316 
ImmutableOopMap{rsi=Oop }pc offsets: 372 382 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='79' method='java.util.AbstractCollection &lt;init&gt; ()V' bytes='5' count='512' iicount='512' level='3' stamp='0.263' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='79' compiler='c1' level='3' entry='0x000000011ba4e2c0' size='1008' address='0x000000011ba4e110' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='920' dependencies_offset='1000' metadata_offset='864' method='java.util.AbstractCollection &lt;init&gt; ()V' bytes='5' count='542' iicount='542' stamp='0.263'/>
<print_nmethod stamp='0.263'>
Compiled method (c1)     263   79       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
 total in heap  [0x000000011ba4e110,0x000000011ba4e500] = 1008
 relocation     [0x000000011ba4e288,0x000000011ba4e2b8] = 48
 main code      [0x000000011ba4e2c0,0x000000011ba4e3e0] = 288
 stub code      [0x000000011ba4e3e0,0x000000011ba4e470] = 144
 metadata       [0x000000011ba4e470,0x000000011ba4e488] = 24
 scopes data    [0x000000011ba4e488,0x000000011ba4e4a8] = 32
 scopes pcs     [0x000000011ba4e4a8,0x000000011ba4e4f8] = 80
 dependencies   [0x000000011ba4e4f8,0x000000011ba4e500] = 8
----------------------------------------------------------------------
java/util/AbstractCollection.&lt;init&gt;()V  [0x000000011ba4e2c0, 0x000000011ba4e470]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325c6f28} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba4e2c0: mov    0x8(%rsi),%r10d
  0x000000011ba4e2c4: movabs $0x800000000,%r12
  0x000000011ba4e2ce: add    %r12,%r10
  0x000000011ba4e2d1: xor    %r12,%r12
  0x000000011ba4e2d4: cmp    %rax,%r10
  0x000000011ba4e2d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4e2dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4e2e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba4e2e7: push   %rbp
  0x000000011ba4e2e8: sub    $0x30,%rsp
  0x000000011ba4e2ec: movabs $0x13289e5c0,%rdi  ;   {metadata(method data for {method} {0x00000001325c6f28} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba4e2f6: mov    0x104(%rdi),%ebx
  0x000000011ba4e2fc: add    $0x8,%ebx
  0x000000011ba4e2ff: mov    %ebx,0x104(%rdi)
  0x000000011ba4e305: and    $0x1ff8,%ebx
  0x000000011ba4e30b: cmp    $0x0,%ebx
  0x000000011ba4e30e: je     0x000000011ba4e361  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::&lt;init&gt;@0 (line 66)

  0x000000011ba4e314: mov    %rsi,%rdi
  0x000000011ba4e317: movabs $0x13289e5c0,%rbx  ;   {metadata(method data for {method} {0x00000001325c6f28} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba4e321: addq   $0x1,0x140(%rbx)
  0x000000011ba4e329: movabs $0x1326ded60,%rdi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba4e333: mov    0x104(%rdi),%ebx
  0x000000011ba4e339: add    $0x8,%ebx
  0x000000011ba4e33c: mov    %ebx,0x104(%rdi)
  0x000000011ba4e342: and    $0x7ffff8,%ebx
  0x000000011ba4e348: cmp    $0x0,%ebx
  0x000000011ba4e34b: je     0x000000011ba4e37f
  0x000000011ba4e351: add    $0x30,%rsp
  0x000000011ba4e355: pop    %rbp
  0x000000011ba4e356: mov    0x108(%r15),%r10
  0x000000011ba4e35d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4e360: retq   
  0x000000011ba4e361: movabs $0x1325c6f28,%r10  ;   {metadata({method} {0x00000001325c6f28} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba4e36b: mov    %r10,0x8(%rsp)
  0x000000011ba4e370: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4e378: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::&lt;init&gt;@-1 (line 66)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4e37d: jmp    0x000000011ba4e314
  0x000000011ba4e37f: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba4e389: mov    %r10,0x8(%rsp)
  0x000000011ba4e38e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4e396: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.AbstractCollection::&lt;init&gt;@1 (line 66)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4e39b: jmp    0x000000011ba4e351
  0x000000011ba4e39d: nop
  0x000000011ba4e39e: nop
  0x000000011ba4e39f: mov    0x420(%r15),%rax
  0x000000011ba4e3a6: movabs $0x0,%r10
  0x000000011ba4e3b0: mov    %r10,0x420(%r15)
  0x000000011ba4e3b7: movabs $0x0,%r10
  0x000000011ba4e3c1: mov    %r10,0x428(%r15)
  0x000000011ba4e3c8: add    $0x30,%rsp
  0x000000011ba4e3cc: pop    %rbp
  0x000000011ba4e3cd: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4e3d2: hlt    
  0x000000011ba4e3d3: hlt    
  0x000000011ba4e3d4: hlt    
  0x000000011ba4e3d5: hlt    
  0x000000011ba4e3d6: hlt    
  0x000000011ba4e3d7: hlt    
  0x000000011ba4e3d8: hlt    
  0x000000011ba4e3d9: hlt    
  0x000000011ba4e3da: hlt    
  0x000000011ba4e3db: hlt    
  0x000000011ba4e3dc: hlt    
  0x000000011ba4e3dd: hlt    
  0x000000011ba4e3de: hlt    
  0x000000011ba4e3df: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba4e3e0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba4e3e5: mov    %rsp,-0x28(%rsp)
  0x000000011ba4e3ea: sub    $0x80,%rsp
  0x000000011ba4e3f1: mov    %rax,0x78(%rsp)
  0x000000011ba4e3f6: mov    %rcx,0x70(%rsp)
  0x000000011ba4e3fb: mov    %rdx,0x68(%rsp)
  0x000000011ba4e400: mov    %rbx,0x60(%rsp)
  0x000000011ba4e405: mov    %rbp,0x50(%rsp)
  0x000000011ba4e40a: mov    %rsi,0x48(%rsp)
  0x000000011ba4e40f: mov    %rdi,0x40(%rsp)
  0x000000011ba4e414: mov    %r8,0x38(%rsp)
  0x000000011ba4e419: mov    %r9,0x30(%rsp)
  0x000000011ba4e41e: mov    %r10,0x28(%rsp)
  0x000000011ba4e423: mov    %r11,0x20(%rsp)
  0x000000011ba4e428: mov    %r12,0x18(%rsp)
  0x000000011ba4e42d: mov    %r13,0x10(%rsp)
  0x000000011ba4e432: mov    %r14,0x8(%rsp)
  0x000000011ba4e437: mov    %r15,(%rsp)
  0x000000011ba4e43b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4e445: movabs $0x11ba4e3e5,%rsi  ;   {internal_word}
  0x000000011ba4e44f: mov    %rsp,%rdx
  0x000000011ba4e452: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4e456: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4e45b: hlt    
[Deopt Handler Code]
  0x000000011ba4e45c: movabs $0x11ba4e45c,%r10  ;   {section_word}
  0x000000011ba4e466: push   %r10
  0x000000011ba4e468: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4e46d: hlt    
  0x000000011ba4e46e: hlt    
  0x000000011ba4e46f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 189 219 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='80' method='java.lang.module.ModuleDescriptor$Requires modifiers ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.265' comment='tiered' hot_count='128'/>
<task_queued compile_id='81' method='java.lang.module.ModuleDescriptor$Requires name ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.265' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='78' compiler='c1' level='1' entry='0x0000000122f796c0' size='800' address='0x0000000122f79510' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.util.ImmutableCollections$SetN size ()I' bytes='5' count='200' iicount='200' stamp='0.266'/>
<print_nmethod stamp='0.266'>
Compiled method (c1)     265   78       1       java.util.ImmutableCollections$SetN::size (5 bytes)
 total in heap  [0x0000000122f79510,0x0000000122f79830] = 800
 relocation     [0x0000000122f79688,0x0000000122f796b0] = 40
 main code      [0x0000000122f796c0,0x0000000122f79740] = 128
 stub code      [0x0000000122f79740,0x0000000122f797d0] = 144
 metadata       [0x0000000122f797d0,0x0000000122f797d8] = 8
 scopes data    [0x0000000122f797d8,0x0000000122f797e8] = 16
 scopes pcs     [0x0000000122f797e8,0x0000000122f79828] = 64
 dependencies   [0x0000000122f79828,0x0000000122f79830] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.size()I  [0x0000000122f796c0, 0x0000000122f797d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326dce28} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f796c0: mov    0x8(%rsi),%r10d
  0x0000000122f796c4: movabs $0x800000000,%r12
  0x0000000122f796ce: add    %r12,%r10
  0x0000000122f796d1: xor    %r12,%r12
  0x0000000122f796d4: cmp    %rax,%r10
  0x0000000122f796d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f796dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f796e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f796e7: push   %rbp
  0x0000000122f796e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::size@0 (line 596)

  0x0000000122f796ec: mov    0xc(%rsi),%eax     ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::size@1 (line 596)

  0x0000000122f796ef: add    $0x30,%rsp
  0x0000000122f796f3: pop    %rbp
  0x0000000122f796f4: mov    0x108(%r15),%r10
  0x0000000122f796fb: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f796fe: retq   
  0x0000000122f796ff: nop
  0x0000000122f79700: nop
  0x0000000122f79701: mov    0x420(%r15),%rax
  0x0000000122f79708: movabs $0x0,%r10
  0x0000000122f79712: mov    %r10,0x420(%r15)
  0x0000000122f79719: movabs $0x0,%r10
  0x0000000122f79723: mov    %r10,0x428(%r15)
  0x0000000122f7972a: add    $0x30,%rsp
  0x0000000122f7972e: pop    %rbp
  0x0000000122f7972f: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f79734: hlt    
  0x0000000122f79735: hlt    
  0x0000000122f79736: hlt    
  0x0000000122f79737: hlt    
  0x0000000122f79738: hlt    
  0x0000000122f79739: hlt    
  0x0000000122f7973a: hlt    
  0x0000000122f7973b: hlt    
  0x0000000122f7973c: hlt    
  0x0000000122f7973d: hlt    
  0x0000000122f7973e: hlt    
  0x0000000122f7973f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f79740: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f79745: mov    %rsp,-0x28(%rsp)
  0x0000000122f7974a: sub    $0x80,%rsp
  0x0000000122f79751: mov    %rax,0x78(%rsp)
  0x0000000122f79756: mov    %rcx,0x70(%rsp)
  0x0000000122f7975b: mov    %rdx,0x68(%rsp)
  0x0000000122f79760: mov    %rbx,0x60(%rsp)
  0x0000000122f79765: mov    %rbp,0x50(%rsp)
  0x0000000122f7976a: mov    %rsi,0x48(%rsp)
  0x0000000122f7976f: mov    %rdi,0x40(%rsp)
  0x0000000122f79774: mov    %r8,0x38(%rsp)
  0x0000000122f79779: mov    %r9,0x30(%rsp)
  0x0000000122f7977e: mov    %r10,0x28(%rsp)
  0x0000000122f79783: mov    %r11,0x20(%rsp)
  0x0000000122f79788: mov    %r12,0x18(%rsp)
  0x0000000122f7978d: mov    %r13,0x10(%rsp)
  0x0000000122f79792: mov    %r14,0x8(%rsp)
  0x0000000122f79797: mov    %r15,(%rsp)
  0x0000000122f7979b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f797a5: movabs $0x122f79745,%rsi  ;   {internal_word}
  0x0000000122f797af: mov    %rsp,%rdx
  0x0000000122f797b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f797b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f797bb: hlt    
[Deopt Handler Code]
  0x0000000122f797bc: movabs $0x122f797bc,%r10  ;   {section_word}
  0x0000000122f797c6: push   %r10
  0x0000000122f797c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f797cd: hlt    
  0x0000000122f797ce: hlt    
  0x0000000122f797cf: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='82' method='java.util.HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='512' backedge_count='17' iicount='512' level='3' stamp='0.267' comment='tiered' hot_count='512'/>
<task_queued compile_id='83' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='512' backedge_count='44' iicount='512' level='3' stamp='0.267' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='82' compiler='c1' level='3' entry='0x000000011ba4e740' size='4416' address='0x000000011ba4e510' relocation_offset='376' insts_offset='560' stub_offset='2960' scopes_data_offset='3168' scopes_pcs_offset='3552' dependencies_offset='4352' nul_chk_table_offset='4360' metadata_offset='3160' method='java.util.HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='853' backedge_count='23' iicount='853' stamp='0.268'/>
<print_nmethod stamp='0.268'>
Compiled method (c1)     267   82       3       java.util.HashMap::getNode (148 bytes)
 total in heap  [0x000000011ba4e510,0x000000011ba4f650] = 4416
 relocation     [0x000000011ba4e688,0x000000011ba4e730] = 168
 main code      [0x000000011ba4e740,0x000000011ba4f0a0] = 2400
 stub code      [0x000000011ba4f0a0,0x000000011ba4f168] = 200
 metadata       [0x000000011ba4f168,0x000000011ba4f170] = 8
 scopes data    [0x000000011ba4f170,0x000000011ba4f2f0] = 384
 scopes pcs     [0x000000011ba4f2f0,0x000000011ba4f610] = 800
 dependencies   [0x000000011ba4f610,0x000000011ba4f618] = 8
 nul chk table  [0x000000011ba4f618,0x000000011ba4f650] = 56
----------------------------------------------------------------------
java/util/HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;  [0x000000011ba4e740, 0x000000011ba4f168]  2600 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000011ba4e740: mov    0x8(%rsi),%r10d
  0x000000011ba4e744: movabs $0x800000000,%r12
  0x000000011ba4e74e: add    %r12,%r10
  0x000000011ba4e751: xor    %r12,%r12
  0x000000011ba4e754: cmp    %rax,%r10
  0x000000011ba4e757: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4e75d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4e760: mov    %eax,-0x14000(%rsp)
  0x000000011ba4e767: push   %rbp
  0x000000011ba4e768: sub    $0x50,%rsp
  0x000000011ba4e76c: mov    %edx,0x28(%rsp)
  0x000000011ba4e770: mov    %rcx,0x30(%rsp)
  0x000000011ba4e775: movabs $0x13289f3b0,%rdi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e77f: mov    0x104(%rdi),%ebx
  0x000000011ba4e785: add    $0x8,%ebx
  0x000000011ba4e788: mov    %ebx,0x104(%rdi)
  0x000000011ba4e78e: and    $0x1ff8,%ebx
  0x000000011ba4e794: cmp    $0x0,%ebx
  0x000000011ba4e797: je     0x000000011ba4efe7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@0 (line 564)

  0x000000011ba4e79d: mov    0x24(%rsi),%esi
  0x000000011ba4e7a0: shl    $0x3,%rsi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@1 (line 564)

  0x000000011ba4e7a4: cmp    $0x0,%rsi
  0x000000011ba4e7a8: movabs $0x13289f3b0,%rdi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e7b2: movabs $0x140,%rbx
  0x000000011ba4e7bc: je     0x000000011ba4e7cc
  0x000000011ba4e7c2: movabs $0x150,%rbx
  0x000000011ba4e7cc: mov    (%rdi,%rbx,1),%rax
  0x000000011ba4e7d0: lea    0x1(%rax),%rax
  0x000000011ba4e7d4: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba4e7d8: je     0x000000011ba4ee01  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@6 (line 564)

  0x000000011ba4e7de: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 564)
                                                ; implicit exception: dispatches to 0x000000011ba4f008
  0x000000011ba4e7e1: cmp    $0x0,%edi
  0x000000011ba4e7e4: movabs $0x13289f3b0,%rbx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e7ee: movabs $0x160,%rax
  0x000000011ba4e7f8: jle    0x000000011ba4e808
  0x000000011ba4e7fe: movabs $0x170,%rax
  0x000000011ba4e808: mov    (%rbx,%rax,1),%r8
  0x000000011ba4e80c: lea    0x1(%r8),%r8
  0x000000011ba4e810: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4e814: jle    0x000000011ba4ee01  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@14 (line 564)

  0x000000011ba4e81a: dec    %edi
  0x000000011ba4e81c: and    %rdx,%rdi
  0x000000011ba4e81f: cmp    0xc(%rsi),%edi
  0x000000011ba4e822: jae    0x000000011ba4f00d
  0x000000011ba4e828: movslq %edi,%rdi
  0x000000011ba4e82b: mov    0x10(%rsi,%rdi,4),%edi
  0x000000011ba4e82f: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 564)

  0x000000011ba4e833: cmp    $0x0,%rdi
  0x000000011ba4e837: movabs $0x13289f3b0,%rsi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e841: movabs $0x180,%rbx
  0x000000011ba4e84b: je     0x000000011ba4e85b
  0x000000011ba4e851: movabs $0x190,%rbx
  0x000000011ba4e85b: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4e85f: lea    0x1(%rax),%rax
  0x000000011ba4e863: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4e867: je     0x000000011ba4ee01  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@28 (line 564)

  0x000000011ba4e86d: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 566)
                                                ; implicit exception: dispatches to 0x000000011ba4f01b
  0x000000011ba4e870: cmp    %edx,%esi
  0x000000011ba4e872: movabs $0x13289f3b0,%rsi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e87c: movabs $0x1a0,%rbx
  0x000000011ba4e886: jne    0x000000011ba4e896
  0x000000011ba4e88c: movabs $0x1b0,%rbx
  0x000000011ba4e896: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4e89a: lea    0x1(%rax),%rax
  0x000000011ba4e89e: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4e8a2: jne    0x000000011ba4ea1a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@37 (line 566)

  0x000000011ba4e8a8: mov    0x10(%rdi),%esi
  0x000000011ba4e8ab: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@42 (line 566)

  0x000000011ba4e8af: cmp    %rcx,%rsi
  0x000000011ba4e8b2: movabs $0x13289f3b0,%rbx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e8bc: movabs $0x1c0,%rax
  0x000000011ba4e8c6: je     0x000000011ba4e8d6
  0x000000011ba4e8cc: movabs $0x1d0,%rax
  0x000000011ba4e8d6: mov    (%rbx,%rax,1),%r8
  0x000000011ba4e8da: lea    0x1(%r8),%r8
  0x000000011ba4e8de: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4e8e2: je     0x000000011ba4efd4  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@49 (line 566)

  0x000000011ba4e8e8: cmp    $0x0,%rcx
  0x000000011ba4e8ec: movabs $0x13289f3b0,%rbx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e8f6: movabs $0x1e0,%rax
  0x000000011ba4e900: je     0x000000011ba4e910
  0x000000011ba4e906: movabs $0x1f0,%rax
  0x000000011ba4e910: mov    (%rbx,%rax,1),%r8
  0x000000011ba4e914: lea    0x1(%r8),%r8
  0x000000011ba4e918: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4e91c: je     0x000000011ba4ea1a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@53 (line 566)

  0x000000011ba4e922: mov    %rdi,0x20(%rsp)
  0x000000011ba4e927: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011ba4f020
  0x000000011ba4e92a: mov    %rcx,%rbx
  0x000000011ba4e92d: movabs $0x13289f3b0,%rax  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e937: mov    0x8(%rbx),%ebx
  0x000000011ba4e93a: movabs $0x800000000,%r12
  0x000000011ba4e944: add    %r12,%rbx
  0x000000011ba4e947: xor    %r12,%r12
  0x000000011ba4e94a: cmp    0x210(%rax),%rbx
  0x000000011ba4e951: jne    0x000000011ba4e960
  0x000000011ba4e953: addq   $0x1,0x218(%rax)
  0x000000011ba4e95b: jmpq   0x000000011ba4e9c6
  0x000000011ba4e960: cmp    0x220(%rax),%rbx
  0x000000011ba4e967: jne    0x000000011ba4e976
  0x000000011ba4e969: addq   $0x1,0x228(%rax)
  0x000000011ba4e971: jmpq   0x000000011ba4e9c6
  0x000000011ba4e976: cmpq   $0x0,0x210(%rax)
  0x000000011ba4e981: jne    0x000000011ba4e99a
  0x000000011ba4e983: mov    %rbx,0x210(%rax)
  0x000000011ba4e98a: movq   $0x1,0x218(%rax)
  0x000000011ba4e995: jmpq   0x000000011ba4e9c6
  0x000000011ba4e99a: cmpq   $0x0,0x220(%rax)
  0x000000011ba4e9a5: jne    0x000000011ba4e9be
  0x000000011ba4e9a7: mov    %rbx,0x220(%rax)
  0x000000011ba4e9ae: movq   $0x1,0x228(%rax)
  0x000000011ba4e9b9: jmpq   0x000000011ba4e9c6
  0x000000011ba4e9be: addq   $0x1,0x200(%rax)
  0x000000011ba4e9c6: mov    %rsi,%rdx
  0x000000011ba4e9c9: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)

  0x000000011ba4e9cc: nop
  0x000000011ba4e9cd: movabs $0xffffffffffffffff,%rax
  0x000000011ba4e9d7: callq  0x000000011b4d2180  ; ImmutableOopMap{[48]=Oop [32]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)
                                                ;   {virtual_call}
  0x000000011ba4e9dc: cmp    $0x0,%eax
  0x000000011ba4e9df: movabs $0x13289f3b0,%rdx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4e9e9: movabs $0x248,%rsi
  0x000000011ba4e9f3: jne    0x000000011ba4ea03
  0x000000011ba4e9f9: movabs $0x238,%rsi
  0x000000011ba4ea03: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba4ea07: lea    0x1(%rdi),%rdi
  0x000000011ba4ea0b: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba4ea0f: mov    0x20(%rsp),%rdi
  0x000000011ba4ea14: jne    0x000000011ba4efd4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@62 (line 567)

  0x000000011ba4ea1a: mov    0x18(%rdi),%edx
  0x000000011ba4ea1d: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@70 (line 569)

  0x000000011ba4ea21: cmp    $0x0,%rdx
  0x000000011ba4ea25: movabs $0x13289f3b0,%rsi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ea2f: movabs $0x258,%rbx
  0x000000011ba4ea39: je     0x000000011ba4ea49
  0x000000011ba4ea3f: movabs $0x268,%rbx
  0x000000011ba4ea49: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4ea4d: lea    0x1(%rax),%rax
  0x000000011ba4ea51: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4ea55: je     0x000000011ba4ee01  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@76 (line 569)

  0x000000011ba4ea5b: cmp    $0x0,%rdi
  0x000000011ba4ea5f: jne    0x000000011ba4ea77
  0x000000011ba4ea61: movabs $0x13289f3b0,%rcx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ea6b: orb    $0x1,0x271(%rcx)
  0x000000011ba4ea72: jmpq   0x000000011ba4eb4f
  0x000000011ba4ea77: movabs $0x800032798,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba4ea81: mov    0x8(%rdi),%ebx
  0x000000011ba4ea84: movabs $0x800000000,%r12
  0x000000011ba4ea8e: add    %r12,%rbx
  0x000000011ba4ea91: xor    %r12,%r12
  0x000000011ba4ea94: cmp    %rbx,%rax
  0x000000011ba4ea97: jne    0x000000011ba4eb33
  0x000000011ba4ea9d: movabs $0x13289f3b0,%rcx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4eaa7: mov    0x8(%rdi),%eax
  0x000000011ba4eaaa: movabs $0x800000000,%r12
  0x000000011ba4eab4: add    %r12,%rax
  0x000000011ba4eab7: xor    %r12,%r12
  0x000000011ba4eaba: cmp    0x288(%rcx),%rax
  0x000000011ba4eac1: jne    0x000000011ba4ead0
  0x000000011ba4eac3: addq   $0x1,0x290(%rcx)
  0x000000011ba4eacb: jmpq   0x000000011ba4eb54
  0x000000011ba4ead0: cmp    0x298(%rcx),%rax
  0x000000011ba4ead7: jne    0x000000011ba4eae6
  0x000000011ba4ead9: addq   $0x1,0x2a0(%rcx)
  0x000000011ba4eae1: jmpq   0x000000011ba4eb54
  0x000000011ba4eae6: cmpq   $0x0,0x288(%rcx)
  0x000000011ba4eaf1: jne    0x000000011ba4eb0a
  0x000000011ba4eaf3: mov    %rax,0x288(%rcx)
  0x000000011ba4eafa: movq   $0x1,0x290(%rcx)
  0x000000011ba4eb05: jmpq   0x000000011ba4eb54
  0x000000011ba4eb0a: cmpq   $0x0,0x298(%rcx)
  0x000000011ba4eb15: jne    0x000000011ba4eb2e
  0x000000011ba4eb17: mov    %rax,0x298(%rcx)
  0x000000011ba4eb1e: movq   $0x1,0x2a0(%rcx)
  0x000000011ba4eb29: jmpq   0x000000011ba4eb54
  0x000000011ba4eb2e: jmpq   0x000000011ba4eb54
  0x000000011ba4eb33: movabs $0x13289f3b0,%rcx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4eb3d: subq   $0x1,0x278(%rcx)
  0x000000011ba4eb45: jmpq   0x000000011ba4eb4f
  0x000000011ba4eb4a: jmpq   0x000000011ba4eb54
  0x000000011ba4eb4f: xor    %rsi,%rsi
  0x000000011ba4eb52: jmp    0x000000011ba4eb5e
  0x000000011ba4eb54: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@81 (line 570)

  0x000000011ba4eb5e: cmp    $0x0,%esi
  0x000000011ba4eb61: movabs $0x13289f3b0,%rsi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4eb6b: movabs $0x2c0,%rbx
  0x000000011ba4eb75: jne    0x000000011ba4eb85
  0x000000011ba4eb7b: movabs $0x2b0,%rbx
  0x000000011ba4eb85: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4eb89: lea    0x1(%rax),%rax
  0x000000011ba4eb8d: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4eb91: jne    0x000000011ba4ee1b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@84 (line 570)

  0x000000011ba4eb97: nop
  0x000000011ba4eb98: mov    0x30(%rsp),%rcx
  0x000000011ba4eb9d: mov    0x28(%rsp),%edi
  0x000000011ba4eba1: mov    0xc(%rdx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 573)
                                                ; implicit exception: dispatches to 0x000000011ba4f025
  0x000000011ba4eba4: cmp    %edi,%esi
  0x000000011ba4eba6: movabs $0x13289f3b0,%rsi  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ebb0: movabs $0x340,%rbx
  0x000000011ba4ebba: jne    0x000000011ba4ebca
  0x000000011ba4ebc0: movabs $0x350,%rbx
  0x000000011ba4ebca: mov    (%rsi,%rbx,1),%rax
  0x000000011ba4ebce: lea    0x1(%rax),%rax
  0x000000011ba4ebd2: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba4ebd6: jne    0x000000011ba4ed52  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@104 (line 573)

  0x000000011ba4ebdc: mov    0x10(%rdx),%esi
  0x000000011ba4ebdf: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@109 (line 573)

  0x000000011ba4ebe3: cmp    %rcx,%rsi
  0x000000011ba4ebe6: movabs $0x13289f3b0,%rbx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ebf0: movabs $0x360,%rax
  0x000000011ba4ebfa: je     0x000000011ba4ec0a
  0x000000011ba4ec00: movabs $0x370,%rax
  0x000000011ba4ec0a: mov    (%rbx,%rax,1),%r8
  0x000000011ba4ec0e: lea    0x1(%r8),%r8
  0x000000011ba4ec12: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4ec16: je     0x000000011ba4edee  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@116 (line 573)

  0x000000011ba4ec1c: cmp    $0x0,%rcx
  0x000000011ba4ec20: movabs $0x13289f3b0,%rbx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ec2a: movabs $0x380,%rax
  0x000000011ba4ec34: je     0x000000011ba4ec44
  0x000000011ba4ec3a: movabs $0x390,%rax
  0x000000011ba4ec44: mov    (%rbx,%rax,1),%r8
  0x000000011ba4ec48: lea    0x1(%r8),%r8
  0x000000011ba4ec4c: mov    %r8,(%rbx,%rax,1)
  0x000000011ba4ec50: je     0x000000011ba4ed52  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@120 (line 573)

  0x000000011ba4ec56: mov    %rdx,0x38(%rsp)
  0x000000011ba4ec5b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011ba4f02a
  0x000000011ba4ec5e: mov    %rcx,%rbx
  0x000000011ba4ec61: movabs $0x13289f3b0,%rax  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ec6b: mov    0x8(%rbx),%ebx
  0x000000011ba4ec6e: movabs $0x800000000,%r12
  0x000000011ba4ec78: add    %r12,%rbx
  0x000000011ba4ec7b: xor    %r12,%r12
  0x000000011ba4ec7e: cmp    0x3b0(%rax),%rbx
  0x000000011ba4ec85: jne    0x000000011ba4ec94
  0x000000011ba4ec87: addq   $0x1,0x3b8(%rax)
  0x000000011ba4ec8f: jmpq   0x000000011ba4ecfa
  0x000000011ba4ec94: cmp    0x3c0(%rax),%rbx
  0x000000011ba4ec9b: jne    0x000000011ba4ecaa
  0x000000011ba4ec9d: addq   $0x1,0x3c8(%rax)
  0x000000011ba4eca5: jmpq   0x000000011ba4ecfa
  0x000000011ba4ecaa: cmpq   $0x0,0x3b0(%rax)
  0x000000011ba4ecb5: jne    0x000000011ba4ecce
  0x000000011ba4ecb7: mov    %rbx,0x3b0(%rax)
  0x000000011ba4ecbe: movq   $0x1,0x3b8(%rax)
  0x000000011ba4ecc9: jmpq   0x000000011ba4ecfa
  0x000000011ba4ecce: cmpq   $0x0,0x3c0(%rax)
  0x000000011ba4ecd9: jne    0x000000011ba4ecf2
  0x000000011ba4ecdb: mov    %rbx,0x3c0(%rax)
  0x000000011ba4ece2: movq   $0x1,0x3c8(%rax)
  0x000000011ba4eced: jmpq   0x000000011ba4ecfa
  0x000000011ba4ecf2: addq   $0x1,0x3a0(%rax)
  0x000000011ba4ecfa: mov    %rsi,%rdx
  0x000000011ba4ecfd: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)

  0x000000011ba4ed00: nopl   0x0(%rax,%rax,1)
  0x000000011ba4ed05: movabs $0xffffffffffffffff,%rax
  0x000000011ba4ed0f: callq  0x000000011b4d2180  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)
                                                ;   {virtual_call}
  0x000000011ba4ed14: cmp    $0x0,%eax
  0x000000011ba4ed17: movabs $0x13289f3b0,%rax  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ed21: movabs $0x3e8,%rdx
  0x000000011ba4ed2b: jne    0x000000011ba4ed3b
  0x000000011ba4ed31: movabs $0x3d8,%rdx
  0x000000011ba4ed3b: mov    (%rax,%rdx,1),%rcx
  0x000000011ba4ed3f: lea    0x1(%rcx),%rcx
  0x000000011ba4ed43: mov    %rcx,(%rax,%rdx,1)
  0x000000011ba4ed47: mov    0x38(%rsp),%rdx
  0x000000011ba4ed4c: jne    0x000000011ba4edee  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@129 (line 574)

  0x000000011ba4ed52: mov    0x18(%rdx),%eax
  0x000000011ba4ed55: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@137 (line 576)

  0x000000011ba4ed59: cmp    $0x0,%rax
  0x000000011ba4ed5d: mov    $0x8,%edx
  0x000000011ba4ed62: jne    0x000000011ba4ed6d
  0x000000011ba4ed68: mov    $0x0,%edx
  0x000000011ba4ed6d: movabs $0x13289f3b0,%rcx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ed77: mov    0x108(%rcx),%esi
  0x000000011ba4ed7d: add    %edx,%esi
  0x000000011ba4ed7f: mov    %esi,0x108(%rcx)
  0x000000011ba4ed85: cmp    $0x0,%edx
  0x000000011ba4ed88: jne    0x000000011ba4ed93
  0x000000011ba4ed8e: mov    $0x8,%esi
  0x000000011ba4ed93: and    $0xfff8,%esi
  0x000000011ba4ed99: cmp    $0x0,%esi
  0x000000011ba4ed9c: je     0x000000011ba4f02f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x000000011ba4eda2: mov    0x108(%r15),%r10   ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x000000011ba4eda9: test   %eax,(%r10)        ;   {poll}
  0x000000011ba4edac: cmp    $0x0,%rax
  0x000000011ba4edb0: movabs $0x13289f3b0,%rdx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4edba: movabs $0x408,%rcx
  0x000000011ba4edc4: je     0x000000011ba4edd4
  0x000000011ba4edca: movabs $0x3f8,%rcx
  0x000000011ba4edd4: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba4edd8: lea    0x1(%rsi),%rsi
  0x000000011ba4eddc: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba4ede0: je     0x000000011ba4ee01  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x000000011ba4ede6: mov    %rax,%rdx
  0x000000011ba4ede9: jmpq   0x000000011ba4eb98  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@98 (line 573)

  0x000000011ba4edee: mov    %rdx,%rax
  0x000000011ba4edf1: add    $0x50,%rsp
  0x000000011ba4edf5: pop    %rbp
  0x000000011ba4edf6: mov    0x108(%r15),%r10
  0x000000011ba4edfd: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4ee00: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@134 (line 575)

  0x000000011ba4ee01: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba4ee0b: add    $0x50,%rsp
  0x000000011ba4ee0f: pop    %rbp
  0x000000011ba4ee10: mov    0x108(%r15),%r10
  0x000000011ba4ee17: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4ee1a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@147 (line 579)

  0x000000011ba4ee1b: mov    0x30(%rsp),%rcx
  0x000000011ba4ee20: mov    0x28(%rsp),%edx
  0x000000011ba4ee24: cmp    $0x0,%rdi
  0x000000011ba4ee28: jne    0x000000011ba4ee40
  0x000000011ba4ee2a: movabs $0x13289f3b0,%rax  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ee34: orb    $0x1,0x2c9(%rax)
  0x000000011ba4ee3b: jmpq   0x000000011ba4ef18
  0x000000011ba4ee40: movabs $0x800032798,%rbx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba4ee4a: mov    0x8(%rdi),%esi
  0x000000011ba4ee4d: movabs $0x800000000,%r12
  0x000000011ba4ee57: add    %r12,%rsi
  0x000000011ba4ee5a: xor    %r12,%r12
  0x000000011ba4ee5d: cmp    %rsi,%rbx
  0x000000011ba4ee60: jne    0x000000011ba4eefc
  0x000000011ba4ee66: movabs $0x13289f3b0,%rax  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ee70: mov    0x8(%rdi),%ebx
  0x000000011ba4ee73: movabs $0x800000000,%r12
  0x000000011ba4ee7d: add    %r12,%rbx
  0x000000011ba4ee80: xor    %r12,%r12
  0x000000011ba4ee83: cmp    0x2e0(%rax),%rbx
  0x000000011ba4ee8a: jne    0x000000011ba4ee99
  0x000000011ba4ee8c: addq   $0x1,0x2e8(%rax)
  0x000000011ba4ee94: jmpq   0x000000011ba4ef18
  0x000000011ba4ee99: cmp    0x2f0(%rax),%rbx
  0x000000011ba4eea0: jne    0x000000011ba4eeaf
  0x000000011ba4eea2: addq   $0x1,0x2f8(%rax)
  0x000000011ba4eeaa: jmpq   0x000000011ba4ef18
  0x000000011ba4eeaf: cmpq   $0x0,0x2e0(%rax)
  0x000000011ba4eeba: jne    0x000000011ba4eed3
  0x000000011ba4eebc: mov    %rbx,0x2e0(%rax)
  0x000000011ba4eec3: movq   $0x1,0x2e8(%rax)
  0x000000011ba4eece: jmpq   0x000000011ba4ef18
  0x000000011ba4eed3: cmpq   $0x0,0x2f0(%rax)
  0x000000011ba4eede: jne    0x000000011ba4eef7
  0x000000011ba4eee0: mov    %rbx,0x2f0(%rax)
  0x000000011ba4eee7: movq   $0x1,0x2f8(%rax)
  0x000000011ba4eef2: jmpq   0x000000011ba4ef18
  0x000000011ba4eef7: jmpq   0x000000011ba4ef18
  0x000000011ba4eefc: movabs $0x13289f3b0,%rax  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ef06: subq   $0x1,0x2d0(%rax)
  0x000000011ba4ef0e: jmpq   0x000000011ba4f050
  0x000000011ba4ef13: jmpq   0x000000011ba4ef18
  0x000000011ba4ef18: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 571)

  0x000000011ba4ef1b: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ; implicit exception: dispatches to 0x000000011ba4f059
  0x000000011ba4ef1e: mov    %rsi,%rdi
  0x000000011ba4ef21: movabs $0x13289f3b0,%rbx  ;   {metadata(method data for {method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ef2b: mov    0x8(%rdi),%edi
  0x000000011ba4ef2e: movabs $0x800000000,%r12
  0x000000011ba4ef38: add    %r12,%rdi
  0x000000011ba4ef3b: xor    %r12,%r12
  0x000000011ba4ef3e: cmp    0x318(%rbx),%rdi
  0x000000011ba4ef45: jne    0x000000011ba4ef54
  0x000000011ba4ef47: addq   $0x1,0x320(%rbx)
  0x000000011ba4ef4f: jmpq   0x000000011ba4efba
  0x000000011ba4ef54: cmp    0x328(%rbx),%rdi
  0x000000011ba4ef5b: jne    0x000000011ba4ef6a
  0x000000011ba4ef5d: addq   $0x1,0x330(%rbx)
  0x000000011ba4ef65: jmpq   0x000000011ba4efba
  0x000000011ba4ef6a: cmpq   $0x0,0x318(%rbx)
  0x000000011ba4ef75: jne    0x000000011ba4ef8e
  0x000000011ba4ef77: mov    %rdi,0x318(%rbx)
  0x000000011ba4ef7e: movq   $0x1,0x320(%rbx)
  0x000000011ba4ef89: jmpq   0x000000011ba4efba
  0x000000011ba4ef8e: cmpq   $0x0,0x328(%rbx)
  0x000000011ba4ef99: jne    0x000000011ba4efb2
  0x000000011ba4ef9b: mov    %rdi,0x328(%rbx)
  0x000000011ba4efa2: movq   $0x1,0x330(%rbx)
  0x000000011ba4efad: jmpq   0x000000011ba4efba
  0x000000011ba4efb2: addq   $0x1,0x308(%rbx)
  0x000000011ba4efba: nopl   0x0(%rax,%rax,1)
  0x000000011ba4efbf: callq  0x000000011b4d1f00  ; ImmutableOopMap{}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ;   {optimized virtual_call}
  0x000000011ba4efc4: add    $0x50,%rsp
  0x000000011ba4efc8: pop    %rbp
  0x000000011ba4efc9: mov    0x108(%r15),%r10
  0x000000011ba4efd0: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4efd3: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@97 (line 571)

  0x000000011ba4efd4: mov    %rdi,%rax
  0x000000011ba4efd7: add    $0x50,%rsp
  0x000000011ba4efdb: pop    %rbp
  0x000000011ba4efdc: mov    0x108(%r15),%r10
  0x000000011ba4efe3: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba4efe6: retq   
  0x000000011ba4efe7: movabs $0x1325d23e0,%r10  ;   {metadata({method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4eff1: mov    %r10,0x8(%rsp)
  0x000000011ba4eff6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba4effe: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 564)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4f003: jmpq   0x000000011ba4e79d
  0x000000011ba4f008: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 564)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4f00d: mov    %rdi,(%rsp)
  0x000000011ba4f011: mov    %rsi,0x8(%rsp)
  0x000000011ba4f016: callq  0x000000011b595320  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 564)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba4f01b: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 566)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4f020: callq  0x000000011b595f20  ; ImmutableOopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4f025: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 573)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4f02a: callq  0x000000011b595f20  ; ImmutableOopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4f02f: movabs $0x1325d23e0,%r10  ;   {metadata({method} {0x00000001325d23e0} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4f039: mov    %r10,0x8(%rsp)
  0x000000011ba4f03e: movq   $0x8f,(%rsp)
  0x000000011ba4f046: callq  0x000000011b59a600  ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba4f04b: jmpq   0x000000011ba4eda2
  0x000000011ba4f050: mov    %rdi,(%rsp)
  0x000000011ba4f054: callq  0x000000011b597fa0  ; ImmutableOopMap{rcx=Oop [48]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 571)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba4f059: callq  0x000000011b595f20  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba4f05e: nop
  0x000000011ba4f05f: nop
  0x000000011ba4f060: mov    0x420(%r15),%rax
  0x000000011ba4f067: movabs $0x0,%r10
  0x000000011ba4f071: mov    %r10,0x420(%r15)
  0x000000011ba4f078: movabs $0x0,%r10
  0x000000011ba4f082: mov    %r10,0x428(%r15)
  0x000000011ba4f089: add    $0x50,%rsp
  0x000000011ba4f08d: pop    %rbp
  0x000000011ba4f08e: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba4f093: hlt    
  0x000000011ba4f094: hlt    
  0x000000011ba4f095: hlt    
  0x000000011ba4f096: hlt    
  0x000000011ba4f097: hlt    
  0x000000011ba4f098: hlt    
  0x000000011ba4f099: hlt    
  0x000000011ba4f09a: hlt    
  0x000000011ba4f09b: hlt    
  0x000000011ba4f09c: hlt    
  0x000000011ba4f09d: hlt    
  0x000000011ba4f09e: hlt    
  0x000000011ba4f09f: hlt    
[Stub Code]
  0x000000011ba4f0a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba4f0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4f0af: jmpq   0x000000011ba4f0af  ;   {runtime_call}
  0x000000011ba4f0b4: nop
  0x000000011ba4f0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4f0bf: jmpq   0x000000011ba4f0bf  ;   {runtime_call}
  0x000000011ba4f0c4: nop
  0x000000011ba4f0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba4f0cf: jmpq   0x000000011ba4f0cf  ;   {runtime_call}
[Exception Handler]
  0x000000011ba4f0d4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba4f0d9: mov    %rsp,-0x28(%rsp)
  0x000000011ba4f0de: sub    $0x80,%rsp
  0x000000011ba4f0e5: mov    %rax,0x78(%rsp)
  0x000000011ba4f0ea: mov    %rcx,0x70(%rsp)
  0x000000011ba4f0ef: mov    %rdx,0x68(%rsp)
  0x000000011ba4f0f4: mov    %rbx,0x60(%rsp)
  0x000000011ba4f0f9: mov    %rbp,0x50(%rsp)
  0x000000011ba4f0fe: mov    %rsi,0x48(%rsp)
  0x000000011ba4f103: mov    %rdi,0x40(%rsp)
  0x000000011ba4f108: mov    %r8,0x38(%rsp)
  0x000000011ba4f10d: mov    %r9,0x30(%rsp)
  0x000000011ba4f112: mov    %r10,0x28(%rsp)
  0x000000011ba4f117: mov    %r11,0x20(%rsp)
  0x000000011ba4f11c: mov    %r12,0x18(%rsp)
  0x000000011ba4f121: mov    %r13,0x10(%rsp)
  0x000000011ba4f126: mov    %r14,0x8(%rsp)
  0x000000011ba4f12b: mov    %r15,(%rsp)
  0x000000011ba4f12f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba4f139: movabs $0x11ba4f0d9,%rsi  ;   {internal_word}
  0x000000011ba4f143: mov    %rsp,%rdx
  0x000000011ba4f146: and    $0xfffffffffffffff0,%rsp
  0x000000011ba4f14a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba4f14f: hlt    
[Deopt Handler Code]
  0x000000011ba4f150: movabs $0x11ba4f150,%r10  ;   {section_word}
  0x000000011ba4f15a: push   %r10
  0x000000011ba4f15c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba4f161: hlt    
  0x000000011ba4f162: hlt    
  0x000000011ba4f163: hlt    
  0x000000011ba4f164: hlt    
  0x000000011ba4f165: hlt    
  0x000000011ba4f166: hlt    
  0x000000011ba4f167: hlt    

ImmutableOopMap{[48]=Oop [32]=Oop }pc offsets: 668 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 1492 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 1641 
ImmutableOopMap{}pc offsets: 2180 
ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }pc offsets: 2243 2253 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 2267 
ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }pc offsets: 2272 
ImmutableOopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop }pc offsets: 2277 
ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }pc offsets: 2282 
ImmutableOopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop }pc offsets: 2287 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 2315 
ImmutableOopMap{rcx=Oop [48]=Oop }pc offsets: 2329 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 2334 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='84' method='java.lang.module.ModuleDescriptor requires ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.279' comment='tiered' hot_count='128'/>
<task_queued compile_id='85' method='java.util.HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='640' iicount='640' level='3' stamp='0.279' comment='tiered' hot_count='640'/>
<task_queued compile_id='86' method='java.util.HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='640' iicount='640' level='3' stamp='0.279' comment='tiered' hot_count='640'/>
<task_queued compile_id='87' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='640' iicount='640' level='3' stamp='0.279' comment='tiered' hot_count='640'/>
<task_queued compile_id='88' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='768' iicount='768' level='3' stamp='0.280' comment='tiered' hot_count='768'/>
<task_queued compile_id='89' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='768' iicount='768' level='3' stamp='0.280' comment='tiered' hot_count='768'/>
<task_queued compile_id='90' method='java.util.HashMap$HashIterator hasNext ()Z' bytes='13' count='768' iicount='768' level='3' stamp='0.280' comment='tiered' hot_count='768'/>
<task_queued compile_id='91' method='java.util.HashMap$HashIterator nextNode ()Ljava/util/HashMap$Node;' bytes='100' count='768' backedge_count='1491' iicount='768' level='3' stamp='0.280' comment='tiered' hot_count='768'/>
<task_queued compile_id='92' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.281' comment='tiered' hot_count='128'/>
<task_queued compile_id='93' method='java.util.Collections$EmptySet isEmpty ()Z' bytes='2' count='128' iicount='128' level='1' stamp='0.281' comment='tiered' hot_count='128'/>
<task_queued compile_id='94' method='java.lang.module.ModuleDescriptor$Exports targets ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.281' comment='tiered' hot_count='128'/>
<task_queued compile_id='95' method='java.lang.module.ModuleDescriptor$Exports source ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.281' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='83' compiler='c1' level='3' entry='0x000000011ba4f960' size='8144' address='0x000000011ba4f690' relocation_offset='376' insts_offset='720' stub_offset='5232' scopes_data_offset='5552' scopes_pcs_offset='6480' dependencies_offset='8032' nul_chk_table_offset='8040' metadata_offset='5544' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1255' backedge_count='100' iicount='1256' stamp='0.281'/>
<print_nmethod stamp='0.281'>
Compiled method (c1)     281   83       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x000000011ba4f690,0x000000011ba51660] = 8144
 relocation     [0x000000011ba4f808,0x000000011ba4f950] = 328
 main code      [0x000000011ba4f960,0x000000011ba50b00] = 4512
 stub code      [0x000000011ba50b00,0x000000011ba50c38] = 312
 metadata       [0x000000011ba50c38,0x000000011ba50c40] = 8
 scopes data    [0x000000011ba50c40,0x000000011ba50fe0] = 928
 scopes pcs     [0x000000011ba50fe0,0x000000011ba515f0] = 1552
 dependencies   [0x000000011ba515f0,0x000000011ba515f8] = 8
 nul chk table  [0x000000011ba515f8,0x000000011ba51660] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x000000011ba4f960, 0x000000011ba50c38]  4824 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000000011ba4f960: mov    0x8(%rsi),%r10d
  0x000000011ba4f964: movabs $0x800000000,%r12
  0x000000011ba4f96e: add    %r12,%r10
  0x000000011ba4f971: xor    %r12,%r12
  0x000000011ba4f974: cmp    %rax,%r10
  0x000000011ba4f977: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba4f97d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba4f980: mov    %eax,-0x14000(%rsp)
  0x000000011ba4f987: push   %rbp
  0x000000011ba4f988: sub    $0xa0,%rsp
  0x000000011ba4f98f: mov    %rsi,0x48(%rsp)
  0x000000011ba4f994: mov    %edx,0x40(%rsp)
  0x000000011ba4f998: mov    %rcx,0x50(%rsp)
  0x000000011ba4f99d: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4f9a7: mov    0x104(%rbx),%eax
  0x000000011ba4f9ad: add    $0x8,%eax
  0x000000011ba4f9b0: mov    %eax,0x104(%rbx)
  0x000000011ba4f9b6: and    $0x1ff8,%eax
  0x000000011ba4f9bc: cmp    $0x0,%eax
  0x000000011ba4f9bf: je     0x000000011ba50961  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 623)

  0x000000011ba4f9c5: mov    0x24(%rsi),%ebx
  0x000000011ba4f9c8: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 623)

  0x000000011ba4f9cc: cmp    $0x0,%rbx
  0x000000011ba4f9d0: movabs $0x13289f818,%rax  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4f9da: movabs $0x140,%r11
  0x000000011ba4f9e4: je     0x000000011ba4f9f4
  0x000000011ba4f9ea: movabs $0x150,%r11
  0x000000011ba4f9f4: mov    (%rax,%r11,1),%r13
  0x000000011ba4f9f8: lea    0x1(%r13),%r13
  0x000000011ba4f9fc: mov    %r13,(%rax,%r11,1)
  0x000000011ba4fa00: je     0x000000011ba4fa55  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 623)

  0x000000011ba4fa06: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ; implicit exception: dispatches to 0x000000011ba50982
  0x000000011ba4fa09: cmp    $0x0,%eax
  0x000000011ba4fa0c: movabs $0x13289f818,%r11  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fa16: movabs $0x170,%r13
  0x000000011ba4fa20: je     0x000000011ba4fa30
  0x000000011ba4fa26: movabs $0x160,%r13
  0x000000011ba4fa30: mov    (%r11,%r13,1),%r14
  0x000000011ba4fa34: lea    0x1(%r14),%r14
  0x000000011ba4fa38: mov    %r14,(%r11,%r13,1)
  0x000000011ba4fa3c: je     0x000000011ba4fa55  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)

  0x000000011ba4fa42: mov    %edi,0x60(%rsp)
  0x000000011ba4fa46: mov    %r9d,0x44(%rsp)
  0x000000011ba4fa4b: mov    %r8,0x58(%rsp)
  0x000000011ba4fa50: jmpq   0x000000011ba4fa90  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x000000011ba4fa55: mov    %edi,0x60(%rsp)
  0x000000011ba4fa59: mov    %r9d,0x44(%rsp)
  0x000000011ba4fa5e: mov    %r8,0x58(%rsp)
  0x000000011ba4fa63: mov    %rsi,%rbx
  0x000000011ba4fa66: movabs $0x13289f818,%rax  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fa70: addq   $0x1,0x180(%rax)
  0x000000011ba4fa78: mov    %rsi,%rbx
  0x000000011ba4fa7b: mov    %rbx,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x000000011ba4fa7e: nop
  0x000000011ba4fa7f: callq  0x000000011ba50b05  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)
                                                ;   {optimized virtual_call}
  0x000000011ba4fa84: mov    %rax,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x000000011ba4fa87: mov    0xc(%rdx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ; implicit exception: dispatches to 0x000000011ba50987
  0x000000011ba4fa8a: mov    %rcx,%rax
  0x000000011ba4fa8d: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x000000011ba4fa90: dec    %eax
  0x000000011ba4fa92: and    0x40(%rsp),%eax
  0x000000011ba4fa96: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011ba5098c
  0x000000011ba4fa99: jae    0x000000011ba50996
  0x000000011ba4fa9f: movslq %eax,%rdx
  0x000000011ba4faa2: mov    0x10(%rbx,%rdx,4),%edi
  0x000000011ba4faa6: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x000000011ba4faaa: cmp    $0x0,%rdi
  0x000000011ba4faae: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fab8: movabs $0x1b8,%rcx
  0x000000011ba4fac2: jne    0x000000011ba4fad2
  0x000000011ba4fac8: movabs $0x1c8,%rcx
  0x000000011ba4fad2: mov    (%rdx,%rcx,1),%r8
  0x000000011ba4fad6: lea    0x1(%r8),%r8
  0x000000011ba4fada: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba4fade: jne    0x000000011ba4fd3b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 625)

  0x000000011ba4fae4: mov    %eax,0x64(%rsp)
  0x000000011ba4fae8: mov    %rbx,0x68(%rsp)
  0x000000011ba4faed: mov    0x48(%rsp),%rsi
  0x000000011ba4faf2: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fafc: mov    0x8(%rsi),%esi
  0x000000011ba4faff: movabs $0x800000000,%r12
  0x000000011ba4fb09: add    %r12,%rsi
  0x000000011ba4fb0c: xor    %r12,%r12
  0x000000011ba4fb0f: cmp    0x1e8(%rdx),%rsi
  0x000000011ba4fb16: jne    0x000000011ba4fb25
  0x000000011ba4fb18: addq   $0x1,0x1f0(%rdx)
  0x000000011ba4fb20: jmpq   0x000000011ba4fb8b
  0x000000011ba4fb25: cmp    0x1f8(%rdx),%rsi
  0x000000011ba4fb2c: jne    0x000000011ba4fb3b
  0x000000011ba4fb2e: addq   $0x1,0x200(%rdx)
  0x000000011ba4fb36: jmpq   0x000000011ba4fb8b
  0x000000011ba4fb3b: cmpq   $0x0,0x1e8(%rdx)
  0x000000011ba4fb46: jne    0x000000011ba4fb5f
  0x000000011ba4fb48: mov    %rsi,0x1e8(%rdx)
  0x000000011ba4fb4f: movq   $0x1,0x1f0(%rdx)
  0x000000011ba4fb5a: jmpq   0x000000011ba4fb8b
  0x000000011ba4fb5f: cmpq   $0x0,0x1f8(%rdx)
  0x000000011ba4fb6a: jne    0x000000011ba4fb83
  0x000000011ba4fb6c: mov    %rsi,0x1f8(%rdx)
  0x000000011ba4fb73: movq   $0x1,0x200(%rdx)
  0x000000011ba4fb7e: jmpq   0x000000011ba4fb8b
  0x000000011ba4fb83: addq   $0x1,0x1d8(%rdx)
  0x000000011ba4fb8b: mov    0x40(%rsp),%edx
  0x000000011ba4fb8f: mov    0x50(%rsp),%rcx
  0x000000011ba4fb94: mov    0x58(%rsp),%r8
  0x000000011ba4fb99: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011ba4fba3: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x000000011ba4fba8: nopl   0x0(%rax,%rax,1)
  0x000000011ba4fbad: movabs $0xffffffffffffffff,%rax
  0x000000011ba4fbb7: callq  0x000000011b4d3da0  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)
                                                ;   {virtual_call}
  0x000000011ba4fbbc: mov    0x68(%rsp),%rbx
  0x000000011ba4fbc1: mov    0x64(%rsp),%edx
  0x000000011ba4fbc5: cmp    0xc(%rbx),%edx
  0x000000011ba4fbc8: jae    0x000000011ba509a4
  0x000000011ba4fbce: cmp    $0x0,%rax
  0x000000011ba4fbd2: jne    0x000000011ba4fbea
  0x000000011ba4fbd4: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fbde: orb    $0x1,0x209(%rdi)
  0x000000011ba4fbe5: jmpq   0x000000011ba4fcf2
  0x000000011ba4fbea: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011ba509b2
  0x000000011ba4fbed: movabs $0x800000000,%r12
  0x000000011ba4fbf7: add    %r12,%rsi
  0x000000011ba4fbfa: xor    %r12,%r12
  0x000000011ba4fbfd: mov    0x8(%rax),%edi
  0x000000011ba4fc00: movabs $0x800000000,%r12
  0x000000011ba4fc0a: add    %r12,%rdi
  0x000000011ba4fc0d: xor    %r12,%r12
  0x000000011ba4fc10: mov    0xe8(%rsi),%rsi
  0x000000011ba4fc17: cmp    %rsi,%rdi
  0x000000011ba4fc1a: je     0x000000011ba4fc48
  0x000000011ba4fc20: mov    0x10(%rsi),%ecx
  0x000000011ba4fc23: cmp    (%rdi,%rcx,1),%rsi
  0x000000011ba4fc27: je     0x000000011ba4fc48
  0x000000011ba4fc2d: cmp    $0x20,%ecx
  0x000000011ba4fc30: jne    0x000000011ba4fcdb
  0x000000011ba4fc36: push   %rdi
  0x000000011ba4fc37: push   %rsi
  0x000000011ba4fc38: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba4fc3d: pop    %rdi
  0x000000011ba4fc3e: pop    %rsi
  0x000000011ba4fc3f: cmp    $0x0,%esi
  0x000000011ba4fc42: je     0x000000011ba4fcdb
  0x000000011ba4fc48: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fc52: mov    0x8(%rax),%esi
  0x000000011ba4fc55: movabs $0x800000000,%r12
  0x000000011ba4fc5f: add    %r12,%rsi
  0x000000011ba4fc62: xor    %r12,%r12
  0x000000011ba4fc65: cmp    0x220(%rdi),%rsi
  0x000000011ba4fc6c: jne    0x000000011ba4fc7b
  0x000000011ba4fc6e: addq   $0x1,0x228(%rdi)
  0x000000011ba4fc76: jmpq   0x000000011ba4fcf2
  0x000000011ba4fc7b: cmp    0x230(%rdi),%rsi
  0x000000011ba4fc82: jne    0x000000011ba4fc91
  0x000000011ba4fc84: addq   $0x1,0x238(%rdi)
  0x000000011ba4fc8c: jmpq   0x000000011ba4fcf2
  0x000000011ba4fc91: cmpq   $0x0,0x220(%rdi)
  0x000000011ba4fc9c: jne    0x000000011ba4fcb5
  0x000000011ba4fc9e: mov    %rsi,0x220(%rdi)
  0x000000011ba4fca5: movq   $0x1,0x228(%rdi)
  0x000000011ba4fcb0: jmpq   0x000000011ba4fcf2
  0x000000011ba4fcb5: cmpq   $0x0,0x230(%rdi)
  0x000000011ba4fcc0: jne    0x000000011ba4fcd9
  0x000000011ba4fcc2: mov    %rsi,0x230(%rdi)
  0x000000011ba4fcc9: movq   $0x1,0x238(%rdi)
  0x000000011ba4fcd4: jmpq   0x000000011ba4fcf2
  0x000000011ba4fcd9: jmp    0x000000011ba4fcf2
  0x000000011ba4fcdb: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fce5: subq   $0x1,0x210(%rdi)
  0x000000011ba4fced: jmpq   0x000000011ba509b7
  0x000000011ba4fcf2: movslq %edx,%rdx
  0x000000011ba4fcf5: lea    0x10(%rbx,%rdx,4),%rdx
  0x000000011ba4fcfa: movsbl 0x30(%r15),%esi
  0x000000011ba4fcff: cmp    $0x0,%esi
  0x000000011ba4fd02: jne    0x000000011ba509c0
  0x000000011ba4fd08: mov    %rax,%r10
  0x000000011ba4fd0b: shr    $0x3,%r10
  0x000000011ba4fd0f: mov    %r10d,(%rdx)
  0x000000011ba4fd12: mov    %rdx,%rsi
  0x000000011ba4fd15: xor    %rax,%rsi
  0x000000011ba4fd18: shr    $0x14,%rsi
  0x000000011ba4fd1c: cmp    $0x0,%rsi
  0x000000011ba4fd20: jne    0x000000011ba509de  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x000000011ba4fd26: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fd30: incl   0x248(%rdx)
  0x000000011ba4fd36: jmpq   0x000000011ba50686  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 626)

  0x000000011ba4fd3b: mov    0xc(%rdi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ; implicit exception: dispatches to 0x000000011ba509f6
  0x000000011ba4fd3e: cmp    0x40(%rsp),%edx
  0x000000011ba4fd42: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fd4c: movabs $0x270,%rsi
  0x000000011ba4fd56: je     0x000000011ba4fd66
  0x000000011ba4fd5c: movabs $0x260,%rsi
  0x000000011ba4fd66: mov    (%rdx,%rsi,1),%rax
  0x000000011ba4fd6a: lea    0x1(%rax),%rax
  0x000000011ba4fd6e: mov    %rax,(%rdx,%rsi,1)
  0x000000011ba4fd72: je     0x000000011ba4fd82  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 629)

  0x000000011ba4fd78: mov    %rbx,0x68(%rsp)
  0x000000011ba4fd7d: jmpq   0x000000011ba4ff0a  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x000000011ba4fd82: mov    0x50(%rsp),%rcx
  0x000000011ba4fd87: mov    0x10(%rdi),%edx
  0x000000011ba4fd8a: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 629)

  0x000000011ba4fd8e: cmp    %rcx,%rdx
  0x000000011ba4fd91: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fd9b: movabs $0x280,%rax
  0x000000011ba4fda5: je     0x000000011ba4fdb5
  0x000000011ba4fdab: movabs $0x290,%rax
  0x000000011ba4fdb5: mov    (%rsi,%rax,1),%r8
  0x000000011ba4fdb9: lea    0x1(%r8),%r8
  0x000000011ba4fdbd: mov    %r8,(%rsi,%rax,1)
  0x000000011ba4fdc1: je     0x000000011ba50639  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 629)

  0x000000011ba4fdc7: cmp    $0x0,%rcx
  0x000000011ba4fdcb: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fdd5: movabs $0x2b0,%rax
  0x000000011ba4fddf: jne    0x000000011ba4fdef
  0x000000011ba4fde5: movabs $0x2a0,%rax
  0x000000011ba4fdef: mov    (%rsi,%rax,1),%r8
  0x000000011ba4fdf3: lea    0x1(%r8),%r8
  0x000000011ba4fdf7: mov    %r8,(%rsi,%rax,1)
  0x000000011ba4fdfb: jne    0x000000011ba4fe0b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 629)

  0x000000011ba4fe01: mov    %rbx,0x68(%rsp)
  0x000000011ba4fe06: jmpq   0x000000011ba4ff0a  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x000000011ba4fe0b: mov    %rdi,0x70(%rsp)
  0x000000011ba4fe10: mov    %rbx,0x68(%rsp)
  0x000000011ba4fe15: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011ba509fb
  0x000000011ba4fe18: mov    %rcx,%rsi
  0x000000011ba4fe1b: movabs $0x13289f818,%rax  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fe25: mov    0x8(%rsi),%esi
  0x000000011ba4fe28: movabs $0x800000000,%r12
  0x000000011ba4fe32: add    %r12,%rsi
  0x000000011ba4fe35: xor    %r12,%r12
  0x000000011ba4fe38: cmp    0x2d0(%rax),%rsi
  0x000000011ba4fe3f: jne    0x000000011ba4fe4e
  0x000000011ba4fe41: addq   $0x1,0x2d8(%rax)
  0x000000011ba4fe49: jmpq   0x000000011ba4feb4
  0x000000011ba4fe4e: cmp    0x2e0(%rax),%rsi
  0x000000011ba4fe55: jne    0x000000011ba4fe64
  0x000000011ba4fe57: addq   $0x1,0x2e8(%rax)
  0x000000011ba4fe5f: jmpq   0x000000011ba4feb4
  0x000000011ba4fe64: cmpq   $0x0,0x2d0(%rax)
  0x000000011ba4fe6f: jne    0x000000011ba4fe88
  0x000000011ba4fe71: mov    %rsi,0x2d0(%rax)
  0x000000011ba4fe78: movq   $0x1,0x2d8(%rax)
  0x000000011ba4fe83: jmpq   0x000000011ba4feb4
  0x000000011ba4fe88: cmpq   $0x0,0x2e0(%rax)
  0x000000011ba4fe93: jne    0x000000011ba4feac
  0x000000011ba4fe95: mov    %rsi,0x2e0(%rax)
  0x000000011ba4fe9c: movq   $0x1,0x2e8(%rax)
  0x000000011ba4fea7: jmpq   0x000000011ba4feb4
  0x000000011ba4feac: addq   $0x1,0x2c0(%rax)
  0x000000011ba4feb4: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)

  0x000000011ba4feb7: nopw   0x0(%rax,%rax,1)
  0x000000011ba4febd: movabs $0xffffffffffffffff,%rax
  0x000000011ba4fec7: callq  0x000000011b4d2180  ; ImmutableOopMap{[72]=Oop [88]=Oop [112]=Oop [80]=Oop [104]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {virtual_call}
  0x000000011ba4fecc: cmp    $0x0,%eax
  0x000000011ba4fecf: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4fed9: movabs $0x308,%rcx
  0x000000011ba4fee3: jne    0x000000011ba4fef3
  0x000000011ba4fee9: movabs $0x2f8,%rcx
  0x000000011ba4fef3: mov    (%rdx,%rcx,1),%r8
  0x000000011ba4fef7: lea    0x1(%r8),%r8
  0x000000011ba4fefb: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba4feff: mov    0x70(%rsp),%rdi
  0x000000011ba4ff04: jne    0x000000011ba50639  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 630)

  0x000000011ba4ff0a: cmp    $0x0,%rdi
  0x000000011ba4ff0e: jne    0x000000011ba4ff27
  0x000000011ba4ff10: movabs $0x13289f818,%r9   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ff1a: orb    $0x1,0x329(%r9)
  0x000000011ba4ff22: jmpq   0x000000011ba50000
  0x000000011ba4ff27: movabs $0x800032798,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba4ff31: mov    0x8(%rdi),%ecx
  0x000000011ba4ff34: movabs $0x800000000,%r12
  0x000000011ba4ff3e: add    %r12,%rcx
  0x000000011ba4ff41: xor    %r12,%r12
  0x000000011ba4ff44: cmp    %rcx,%r8
  0x000000011ba4ff47: jne    0x000000011ba4ffe4
  0x000000011ba4ff4d: movabs $0x13289f818,%r9   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ff57: mov    0x8(%rdi),%r8d
  0x000000011ba4ff5b: movabs $0x800000000,%r12
  0x000000011ba4ff65: add    %r12,%r8
  0x000000011ba4ff68: xor    %r12,%r12
  0x000000011ba4ff6b: cmp    0x340(%r9),%r8
  0x000000011ba4ff72: jne    0x000000011ba4ff81
  0x000000011ba4ff74: addq   $0x1,0x348(%r9)
  0x000000011ba4ff7c: jmpq   0x000000011ba50005
  0x000000011ba4ff81: cmp    0x350(%r9),%r8
  0x000000011ba4ff88: jne    0x000000011ba4ff97
  0x000000011ba4ff8a: addq   $0x1,0x358(%r9)
  0x000000011ba4ff92: jmpq   0x000000011ba50005
  0x000000011ba4ff97: cmpq   $0x0,0x340(%r9)
  0x000000011ba4ffa2: jne    0x000000011ba4ffbb
  0x000000011ba4ffa4: mov    %r8,0x340(%r9)
  0x000000011ba4ffab: movq   $0x1,0x348(%r9)
  0x000000011ba4ffb6: jmpq   0x000000011ba50005
  0x000000011ba4ffbb: cmpq   $0x0,0x350(%r9)
  0x000000011ba4ffc6: jne    0x000000011ba4ffdf
  0x000000011ba4ffc8: mov    %r8,0x350(%r9)
  0x000000011ba4ffcf: movq   $0x1,0x358(%r9)
  0x000000011ba4ffda: jmpq   0x000000011ba50005
  0x000000011ba4ffdf: jmpq   0x000000011ba50005
  0x000000011ba4ffe4: movabs $0x13289f818,%r9   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba4ffee: subq   $0x1,0x330(%r9)
  0x000000011ba4fff6: jmpq   0x000000011ba50000
  0x000000011ba4fffb: jmpq   0x000000011ba50005
  0x000000011ba50000: xor    %rdx,%rdx
  0x000000011ba50003: jmp    0x000000011ba5000f
  0x000000011ba50005: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 632)

  0x000000011ba5000f: cmp    $0x0,%edx
  0x000000011ba50012: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5001c: movabs $0x368,%rcx
  0x000000011ba50026: je     0x000000011ba50036
  0x000000011ba5002c: movabs $0x378,%rcx
  0x000000011ba50036: mov    (%rdx,%rcx,1),%r8
  0x000000011ba5003a: lea    0x1(%r8),%r8
  0x000000011ba5003e: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba50042: je     0x000000011ba50219  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 632)

  0x000000011ba50048: cmp    $0x0,%rdi
  0x000000011ba5004c: jne    0x000000011ba50065
  0x000000011ba5004e: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50058: orb    $0x1,0x381(%r8)
  0x000000011ba50060: jmpq   0x000000011ba5013d
  0x000000011ba50065: movabs $0x800032798,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba5006f: mov    0x8(%rdi),%edx
  0x000000011ba50072: movabs $0x800000000,%r12
  0x000000011ba5007c: add    %r12,%rdx
  0x000000011ba5007f: xor    %r12,%r12
  0x000000011ba50082: cmp    %rdx,%rcx
  0x000000011ba50085: jne    0x000000011ba50121
  0x000000011ba5008b: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50095: mov    0x8(%rdi),%ecx
  0x000000011ba50098: movabs $0x800000000,%r12
  0x000000011ba500a2: add    %r12,%rcx
  0x000000011ba500a5: xor    %r12,%r12
  0x000000011ba500a8: cmp    0x398(%r8),%rcx
  0x000000011ba500af: jne    0x000000011ba500be
  0x000000011ba500b1: addq   $0x1,0x3a0(%r8)
  0x000000011ba500b9: jmpq   0x000000011ba5013d
  0x000000011ba500be: cmp    0x3a8(%r8),%rcx
  0x000000011ba500c5: jne    0x000000011ba500d4
  0x000000011ba500c7: addq   $0x1,0x3b0(%r8)
  0x000000011ba500cf: jmpq   0x000000011ba5013d
  0x000000011ba500d4: cmpq   $0x0,0x398(%r8)
  0x000000011ba500df: jne    0x000000011ba500f8
  0x000000011ba500e1: mov    %rcx,0x398(%r8)
  0x000000011ba500e8: movq   $0x1,0x3a0(%r8)
  0x000000011ba500f3: jmpq   0x000000011ba5013d
  0x000000011ba500f8: cmpq   $0x0,0x3a8(%r8)
  0x000000011ba50103: jne    0x000000011ba5011c
  0x000000011ba50105: mov    %rcx,0x3a8(%r8)
  0x000000011ba5010c: movq   $0x1,0x3b0(%r8)
  0x000000011ba50117: jmpq   0x000000011ba5013d
  0x000000011ba5011c: jmpq   0x000000011ba5013d
  0x000000011ba50121: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5012b: subq   $0x1,0x388(%r8)
  0x000000011ba50133: jmpq   0x000000011ba50a00
  0x000000011ba50138: jmpq   0x000000011ba5013d
  0x000000011ba5013d: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)

  0x000000011ba50140: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011ba50a09
  0x000000011ba50143: mov    %rsi,%rdx
  0x000000011ba50146: movabs $0x13289f818,%rcx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50150: mov    0x8(%rdx),%edx
  0x000000011ba50153: movabs $0x800000000,%r12
  0x000000011ba5015d: add    %r12,%rdx
  0x000000011ba50160: xor    %r12,%r12
  0x000000011ba50163: cmp    0x3d0(%rcx),%rdx
  0x000000011ba5016a: jne    0x000000011ba50179
  0x000000011ba5016c: addq   $0x1,0x3d8(%rcx)
  0x000000011ba50174: jmpq   0x000000011ba501df
  0x000000011ba50179: cmp    0x3e0(%rcx),%rdx
  0x000000011ba50180: jne    0x000000011ba5018f
  0x000000011ba50182: addq   $0x1,0x3e8(%rcx)
  0x000000011ba5018a: jmpq   0x000000011ba501df
  0x000000011ba5018f: cmpq   $0x0,0x3d0(%rcx)
  0x000000011ba5019a: jne    0x000000011ba501b3
  0x000000011ba5019c: mov    %rdx,0x3d0(%rcx)
  0x000000011ba501a3: movq   $0x1,0x3d8(%rcx)
  0x000000011ba501ae: jmpq   0x000000011ba501df
  0x000000011ba501b3: cmpq   $0x0,0x3e0(%rcx)
  0x000000011ba501be: jne    0x000000011ba501d7
  0x000000011ba501c0: mov    %rdx,0x3e0(%rcx)
  0x000000011ba501c7: movq   $0x1,0x3e8(%rcx)
  0x000000011ba501d2: jmpq   0x000000011ba501df
  0x000000011ba501d7: addq   $0x1,0x3c0(%rcx)
  0x000000011ba501df: mov    0x48(%rsp),%rdx
  0x000000011ba501e4: mov    0x68(%rsp),%rcx
  0x000000011ba501e9: mov    0x40(%rsp),%r8d
  0x000000011ba501ee: mov    0x50(%rsp),%r9
  0x000000011ba501f3: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)

  0x000000011ba501f8: nopl   0x0(%rax)
  0x000000011ba501ff: callq  0x000000011b4d1f00  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {optimized virtual_call}
  0x000000011ba50204: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5020e: incl   0x3f8(%rdx)
  0x000000011ba50214: jmpq   0x000000011ba5064c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 633)

  0x000000011ba50219: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 636)

  0x000000011ba5021e: xchg   %ax,%ax
  0x000000011ba50220: mov    %ebx,0x78(%rsp)
  0x000000011ba50224: mov    0x50(%rsp),%rcx
  0x000000011ba50229: mov    0x40(%rsp),%edx
  0x000000011ba5022d: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x000000011ba50a0e
  0x000000011ba50230: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x000000011ba50234: mov    %rax,0x80(%rsp)
  0x000000011ba5023c: cmp    $0x0,%rax
  0x000000011ba50240: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5024a: movabs $0x420,%r8
  0x000000011ba50254: je     0x000000011ba50264
  0x000000011ba5025a: movabs $0x410,%r8
  0x000000011ba50264: mov    (%rsi,%r8,1),%r9
  0x000000011ba50268: lea    0x1(%r9),%r9
  0x000000011ba5026c: mov    %r9,(%rsi,%r8,1)
  0x000000011ba50270: je     0x000000011ba5049c  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 636)

  0x000000011ba50276: mov    0xc(%rax),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ; implicit exception: dispatches to 0x000000011ba50a13
  0x000000011ba50279: cmp    %edx,%esi
  0x000000011ba5027b: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50285: movabs $0x4d8,%rdi
  0x000000011ba5028f: jne    0x000000011ba5029f
  0x000000011ba50295: movabs $0x4e8,%rdi
  0x000000011ba5029f: mov    (%rsi,%rdi,1),%r8
  0x000000011ba502a3: lea    0x1(%r8),%r8
  0x000000011ba502a7: mov    %r8,(%rsi,%rdi,1)
  0x000000011ba502ab: jne    0x000000011ba5041d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 642)

  0x000000011ba502b1: mov    0x10(%rax),%esi
  0x000000011ba502b4: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 642)

  0x000000011ba502b8: cmp    %rcx,%rsi
  0x000000011ba502bb: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba502c5: movabs $0x4f8,%r8
  0x000000011ba502cf: je     0x000000011ba502df
  0x000000011ba502d5: movabs $0x508,%r8
  0x000000011ba502df: mov    (%rdi,%r8,1),%r9
  0x000000011ba502e3: lea    0x1(%r9),%r9
  0x000000011ba502e7: mov    %r9,(%rdi,%r8,1)
  0x000000011ba502eb: je     0x000000011ba50472  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 642)

  0x000000011ba502f1: cmp    $0x0,%rcx
  0x000000011ba502f5: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba502ff: movabs $0x518,%r8
  0x000000011ba50309: je     0x000000011ba50319
  0x000000011ba5030f: movabs $0x528,%r8
  0x000000011ba50319: mov    (%rdi,%r8,1),%r9
  0x000000011ba5031d: lea    0x1(%r9),%r9
  0x000000011ba50321: mov    %r9,(%rdi,%r8,1)
  0x000000011ba50325: je     0x000000011ba5041d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 642)

  0x000000011ba5032b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011ba50a18
  0x000000011ba5032e: mov    %rcx,%rdi
  0x000000011ba50331: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5033b: mov    0x8(%rdi),%edi
  0x000000011ba5033e: movabs $0x800000000,%r12
  0x000000011ba50348: add    %r12,%rdi
  0x000000011ba5034b: xor    %r12,%r12
  0x000000011ba5034e: cmp    0x548(%r8),%rdi
  0x000000011ba50355: jne    0x000000011ba50364
  0x000000011ba50357: addq   $0x1,0x550(%r8)
  0x000000011ba5035f: jmpq   0x000000011ba503ca
  0x000000011ba50364: cmp    0x558(%r8),%rdi
  0x000000011ba5036b: jne    0x000000011ba5037a
  0x000000011ba5036d: addq   $0x1,0x560(%r8)
  0x000000011ba50375: jmpq   0x000000011ba503ca
  0x000000011ba5037a: cmpq   $0x0,0x548(%r8)
  0x000000011ba50385: jne    0x000000011ba5039e
  0x000000011ba50387: mov    %rdi,0x548(%r8)
  0x000000011ba5038e: movq   $0x1,0x550(%r8)
  0x000000011ba50399: jmpq   0x000000011ba503ca
  0x000000011ba5039e: cmpq   $0x0,0x558(%r8)
  0x000000011ba503a9: jne    0x000000011ba503c2
  0x000000011ba503ab: mov    %rdi,0x558(%r8)
  0x000000011ba503b2: movq   $0x1,0x560(%r8)
  0x000000011ba503bd: jmpq   0x000000011ba503ca
  0x000000011ba503c2: addq   $0x1,0x538(%r8)
  0x000000011ba503ca: mov    %rsi,%rdx
  0x000000011ba503cd: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)

  0x000000011ba503d0: nopl   0x0(%rax,%rax,1)
  0x000000011ba503d5: movabs $0xffffffffffffffff,%rax
  0x000000011ba503df: callq  0x000000011b4d2180  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {virtual_call}
  0x000000011ba503e4: cmp    $0x0,%eax
  0x000000011ba503e7: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba503f1: movabs $0x580,%rcx
  0x000000011ba503fb: jne    0x000000011ba5040b
  0x000000011ba50401: movabs $0x570,%rcx
  0x000000011ba5040b: mov    (%rdx,%rcx,1),%r8
  0x000000011ba5040f: lea    0x1(%r8),%r8
  0x000000011ba50413: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba50417: jne    0x000000011ba5047f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 643)

  0x000000011ba5041d: mov    0x78(%rsp),%ebx
  0x000000011ba50421: inc    %ebx
  0x000000011ba50423: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5042d: mov    0x108(%rdx),%ecx
  0x000000011ba50433: add    $0x8,%ecx
  0x000000011ba50436: mov    %ecx,0x108(%rdx)
  0x000000011ba5043c: and    $0xfff8,%ecx
  0x000000011ba50442: cmp    $0x0,%ecx
  0x000000011ba50445: je     0x000000011ba50a1d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011ba5044b: mov    0x108(%r15),%r10   ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011ba50452: test   %eax,(%r10)        ;   {poll}
  0x000000011ba50455: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5045f: incl   0x5a8(%rdx)
  0x000000011ba50465: mov    0x80(%rsp),%rdi
  0x000000011ba5046d: jmpq   0x000000011ba50220  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011ba50472: mov    0x80(%rsp),%rax
  0x000000011ba5047a: jmpq   0x000000011ba5064c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x000000011ba5047f: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50489: incl   0x590(%rdx)
  0x000000011ba5048f: mov    0x80(%rsp),%rax
  0x000000011ba50497: jmpq   0x000000011ba5064c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 644)

  0x000000011ba5049c: mov    %rdi,0x88(%rsp)
  0x000000011ba504a4: mov    0x48(%rsp),%rsi
  0x000000011ba504a9: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba504b3: mov    0x8(%rsi),%esi
  0x000000011ba504b6: movabs $0x800000000,%r12
  0x000000011ba504c0: add    %r12,%rsi
  0x000000011ba504c3: xor    %r12,%r12
  0x000000011ba504c6: cmp    0x440(%rdx),%rsi
  0x000000011ba504cd: jne    0x000000011ba504dc
  0x000000011ba504cf: addq   $0x1,0x448(%rdx)
  0x000000011ba504d7: jmpq   0x000000011ba50542
  0x000000011ba504dc: cmp    0x450(%rdx),%rsi
  0x000000011ba504e3: jne    0x000000011ba504f2
  0x000000011ba504e5: addq   $0x1,0x458(%rdx)
  0x000000011ba504ed: jmpq   0x000000011ba50542
  0x000000011ba504f2: cmpq   $0x0,0x440(%rdx)
  0x000000011ba504fd: jne    0x000000011ba50516
  0x000000011ba504ff: mov    %rsi,0x440(%rdx)
  0x000000011ba50506: movq   $0x1,0x448(%rdx)
  0x000000011ba50511: jmpq   0x000000011ba50542
  0x000000011ba50516: cmpq   $0x0,0x450(%rdx)
  0x000000011ba50521: jne    0x000000011ba5053a
  0x000000011ba50523: mov    %rsi,0x450(%rdx)
  0x000000011ba5052a: movq   $0x1,0x458(%rdx)
  0x000000011ba50535: jmpq   0x000000011ba50542
  0x000000011ba5053a: addq   $0x1,0x430(%rdx)
  0x000000011ba50542: mov    0x40(%rsp),%edx
  0x000000011ba50546: mov    0x58(%rsp),%r8
  0x000000011ba5054b: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011ba50555: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x000000011ba5055a: data16 xchg %ax,%ax
  0x000000011ba5055d: movabs $0xffffffffffffffff,%rax
  0x000000011ba50567: callq  0x000000011b4d3e20  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)
                                                ;   {virtual_call}
  0x000000011ba5056c: movsbl 0x30(%r15),%edx
  0x000000011ba50571: cmp    $0x0,%edx
  0x000000011ba50574: mov    0x88(%rsp),%rdi
  0x000000011ba5057c: jne    0x000000011ba50a3e
  0x000000011ba50582: mov    %rax,%r10
  0x000000011ba50585: shr    $0x3,%r10
  0x000000011ba50589: mov    %r10d,0x18(%rdi)
  0x000000011ba5058d: mov    %rdi,%rdx
  0x000000011ba50590: xor    %rax,%rdx
  0x000000011ba50593: shr    $0x14,%rdx
  0x000000011ba50597: cmp    $0x0,%rdx
  0x000000011ba5059b: jne    0x000000011ba50a5d  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x000000011ba505a1: mov    0x78(%rsp),%ebx
  0x000000011ba505a5: cmp    $0x7,%ebx
  0x000000011ba505a8: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba505b2: movabs $0x478,%rcx
  0x000000011ba505bc: jge    0x000000011ba505cc
  0x000000011ba505c2: movabs $0x468,%rcx
  0x000000011ba505cc: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba505d0: lea    0x1(%rsi),%rsi
  0x000000011ba505d4: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba505d8: jge    0x000000011ba505eb  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 638)

  0x000000011ba505de: mov    0x80(%rsp),%rax
  0x000000011ba505e6: jmpq   0x000000011ba5064c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x000000011ba505eb: mov    0x68(%rsp),%rbx
  0x000000011ba505f0: mov    0x40(%rsp),%ecx
  0x000000011ba505f4: mov    0x48(%rsp),%rsi
  0x000000011ba505f9: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50603: addq   $0x1,0x488(%rdx)
  0x000000011ba5060b: mov    %rbx,%rdx
  0x000000011ba5060e: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)

  0x000000011ba50613: nopl   0x0(%rax)
  0x000000011ba50617: callq  0x000000011b4d1f00  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)
                                                ;   {optimized virtual_call}
  0x000000011ba5061c: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50626: incl   0x4c0(%rdx)
  0x000000011ba5062c: mov    0x80(%rsp),%rax
  0x000000011ba50634: jmpq   0x000000011ba5064c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 639)

  0x000000011ba50639: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50643: incl   0x318(%rdx)
  0x000000011ba50649: mov    %rdi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 631)

  0x000000011ba5064c: cmp    $0x0,%rax
  0x000000011ba50650: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5065a: movabs $0x5d0,%rsi
  0x000000011ba50664: jne    0x000000011ba50674
  0x000000011ba5066a: movabs $0x5c0,%rsi
  0x000000011ba50674: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba50678: lea    0x1(%rdi),%rdi
  0x000000011ba5067c: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba50680: jne    0x000000011ba506df  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 648)

  0x000000011ba50686: mov    0x48(%rsp),%rsi
  0x000000011ba5068b: mov    0x18(%rsi),%edx    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 656)

  0x000000011ba5068e: inc    %edx
  0x000000011ba50690: mov    %edx,0x18(%rsi)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 656)

  0x000000011ba50693: mov    0x14(%rsi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 657)

  0x000000011ba50696: inc    %edx
  0x000000011ba50698: mov    %edx,0x14(%rsi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 657)

  0x000000011ba5069b: mov    0x1c(%rsi),%edi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 657)

  0x000000011ba5069e: cmp    %edi,%edx
  0x000000011ba506a0: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba506aa: movabs $0x668,%rdi
  0x000000011ba506b4: jg     0x000000011ba506c4
  0x000000011ba506ba: movabs $0x658,%rdi
  0x000000011ba506c4: mov    (%rdx,%rdi,1),%rbx
  0x000000011ba506c8: lea    0x1(%rbx),%rbx
  0x000000011ba506cc: mov    %rbx,(%rdx,%rdi,1)
  0x000000011ba506d0: jg     0x000000011ba50867  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 657)

  0x000000011ba506d6: mov    0x60(%rsp),%edi
  0x000000011ba506da: jmpq   0x000000011ba50895  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 659)

  0x000000011ba506df: mov    0x44(%rsp),%r9d
  0x000000011ba506e4: mov    0x48(%rsp),%rsi
  0x000000011ba506e9: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000000011ba50a75
  0x000000011ba506ec: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)

  0x000000011ba506f0: cmp    $0x0,%r9d
  0x000000011ba506f4: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba506fe: movabs $0x5e0,%rbx
  0x000000011ba50708: je     0x000000011ba50718
  0x000000011ba5070e: movabs $0x5f0,%rbx
  0x000000011ba50718: mov    (%rdx,%rbx,1),%rcx
  0x000000011ba5071c: lea    0x1(%rcx),%rcx
  0x000000011ba50720: mov    %rcx,(%rdx,%rbx,1)
  0x000000011ba50724: je     0x000000011ba50764  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 650)

  0x000000011ba5072a: cmp    $0x0,%rdi
  0x000000011ba5072e: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50738: movabs $0x600,%rbx
  0x000000011ba50742: jne    0x000000011ba50752
  0x000000011ba50748: movabs $0x610,%rbx
  0x000000011ba50752: mov    (%rdx,%rbx,1),%rcx
  0x000000011ba50756: lea    0x1(%rcx),%rcx
  0x000000011ba5075a: mov    %rcx,(%rdx,%rbx,1)
  0x000000011ba5075e: jne    0x000000011ba50796  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 650)

  0x000000011ba50764: mov    0x58(%rsp),%r8
  0x000000011ba50769: movsbl 0x30(%r15),%edx
  0x000000011ba5076e: cmp    $0x0,%edx
  0x000000011ba50771: jne    0x000000011ba50a7a
  0x000000011ba50777: mov    %r8,%r10
  0x000000011ba5077a: shr    $0x3,%r10
  0x000000011ba5077e: mov    %r10d,0x14(%rax)
  0x000000011ba50782: mov    %rax,%rdx
  0x000000011ba50785: xor    %r8,%rdx
  0x000000011ba50788: shr    $0x14,%rdx
  0x000000011ba5078c: cmp    $0x0,%rdx
  0x000000011ba50790: jne    0x000000011ba50a99  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 651)

  0x000000011ba50796: mov    %rdi,0x90(%rsp)
  0x000000011ba5079e: mov    %rsi,%rdx
  0x000000011ba507a1: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba507ab: mov    0x8(%rdx),%edx
  0x000000011ba507ae: movabs $0x800000000,%r12
  0x000000011ba507b8: add    %r12,%rdx
  0x000000011ba507bb: xor    %r12,%r12
  0x000000011ba507be: cmp    0x630(%rbx),%rdx
  0x000000011ba507c5: jne    0x000000011ba507d4
  0x000000011ba507c7: addq   $0x1,0x638(%rbx)
  0x000000011ba507cf: jmpq   0x000000011ba5083a
  0x000000011ba507d4: cmp    0x640(%rbx),%rdx
  0x000000011ba507db: jne    0x000000011ba507ea
  0x000000011ba507dd: addq   $0x1,0x648(%rbx)
  0x000000011ba507e5: jmpq   0x000000011ba5083a
  0x000000011ba507ea: cmpq   $0x0,0x630(%rbx)
  0x000000011ba507f5: jne    0x000000011ba5080e
  0x000000011ba507f7: mov    %rdx,0x630(%rbx)
  0x000000011ba507fe: movq   $0x1,0x638(%rbx)
  0x000000011ba50809: jmpq   0x000000011ba5083a
  0x000000011ba5080e: cmpq   $0x0,0x640(%rbx)
  0x000000011ba50819: jne    0x000000011ba50832
  0x000000011ba5081b: mov    %rdx,0x640(%rbx)
  0x000000011ba50822: movq   $0x1,0x648(%rbx)
  0x000000011ba5082d: jmpq   0x000000011ba5083a
  0x000000011ba50832: addq   $0x1,0x620(%rbx)
  0x000000011ba5083a: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)

  0x000000011ba5083d: movabs $0xffffffffffffffff,%rax
  0x000000011ba50847: callq  0x000000011b4d2180  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)
                                                ;   {virtual_call}
  0x000000011ba5084c: mov    0x90(%rsp),%rax
  0x000000011ba50854: add    $0xa0,%rsp
  0x000000011ba5085b: pop    %rbp
  0x000000011ba5085c: mov    0x108(%r15),%r10
  0x000000011ba50863: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba50866: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 653)

  0x000000011ba50867: mov    %rsi,%rdi
  0x000000011ba5086a: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50874: addq   $0x1,0x678(%rbx)
  0x000000011ba5087c: mov    %rsi,%rdi
  0x000000011ba5087f: mov    %rdi,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)

  0x000000011ba50882: nopl   0x0(%rax,%rax,1)
  0x000000011ba50887: callq  0x000000011ba50b85  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)
                                                ;   {optimized virtual_call}
  0x000000011ba5088c: mov    0x60(%rsp),%edi
  0x000000011ba50890: mov    0x48(%rsp),%rsi
  0x000000011ba50895: mov    %rsi,%rdx
  0x000000011ba50898: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba508a2: mov    0x8(%rdx),%edx
  0x000000011ba508a5: movabs $0x800000000,%r12
  0x000000011ba508af: add    %r12,%rdx
  0x000000011ba508b2: xor    %r12,%r12
  0x000000011ba508b5: cmp    0x6c0(%rbx),%rdx
  0x000000011ba508bc: jne    0x000000011ba508cb
  0x000000011ba508be: addq   $0x1,0x6c8(%rbx)
  0x000000011ba508c6: jmpq   0x000000011ba50931
  0x000000011ba508cb: cmp    0x6d0(%rbx),%rdx
  0x000000011ba508d2: jne    0x000000011ba508e1
  0x000000011ba508d4: addq   $0x1,0x6d8(%rbx)
  0x000000011ba508dc: jmpq   0x000000011ba50931
  0x000000011ba508e1: cmpq   $0x0,0x6c0(%rbx)
  0x000000011ba508ec: jne    0x000000011ba50905
  0x000000011ba508ee: mov    %rdx,0x6c0(%rbx)
  0x000000011ba508f5: movq   $0x1,0x6c8(%rbx)
  0x000000011ba50900: jmpq   0x000000011ba50931
  0x000000011ba50905: cmpq   $0x0,0x6d0(%rbx)
  0x000000011ba50910: jne    0x000000011ba50929
  0x000000011ba50912: mov    %rdx,0x6d0(%rbx)
  0x000000011ba50919: movq   $0x1,0x6d8(%rbx)
  0x000000011ba50924: jmpq   0x000000011ba50931
  0x000000011ba50929: addq   $0x1,0x6b0(%rbx)
  0x000000011ba50931: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)

  0x000000011ba50934: nop
  0x000000011ba50935: movabs $0xffffffffffffffff,%rax
  0x000000011ba5093f: callq  0x000000011b4d3de0  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)
                                                ;   {virtual_call}
  0x000000011ba50944: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba5094e: add    $0xa0,%rsp
  0x000000011ba50955: pop    %rbp
  0x000000011ba50956: mov    0x108(%r15),%r10
  0x000000011ba5095d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba50960: retq   
  0x000000011ba50961: movabs $0x1325d2838,%r10  ;   {metadata({method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5096b: mov    %r10,0x8(%rsp)
  0x000000011ba50970: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba50978: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5097d: jmpq   0x000000011ba4f9c5
  0x000000011ba50982: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50987: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5098c: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50991: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50996: mov    %rax,(%rsp)
  0x000000011ba5099a: mov    %rbx,0x8(%rsp)
  0x000000011ba5099f: callq  0x000000011b595320  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba509a4: mov    %rdx,(%rsp)
  0x000000011ba509a8: mov    %rbx,0x8(%rsp)
  0x000000011ba509ad: callq  0x000000011b595320  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba509b2: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba509b7: mov    %rax,(%rsp)
  0x000000011ba509bb: callq  0x000000011b597d20  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011ba509c0: mov    (%rdx),%esi
  0x000000011ba509c2: shl    $0x3,%rsi
  0x000000011ba509c6: cmp    $0x0,%rsi
  0x000000011ba509ca: je     0x000000011ba4fd08
  0x000000011ba509d0: mov    %rsi,(%rsp)
  0x000000011ba509d4: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba509d9: jmpq   0x000000011ba4fd08
  0x000000011ba509de: cmp    $0x0,%rax
  0x000000011ba509e2: je     0x000000011ba4fd26
  0x000000011ba509e8: mov    %rdx,(%rsp)
  0x000000011ba509ec: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba509f1: jmpq   0x000000011ba4fd26
  0x000000011ba509f6: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba509fb: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50a00: mov    %rdi,(%rsp)
  0x000000011ba50a04: callq  0x000000011b597fa0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba50a09: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rsi=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50a0e: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50a13: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50a18: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50a1d: movabs $0x1325d2838,%r10  ;   {metadata({method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba50a27: mov    %r10,0x8(%rsp)
  0x000000011ba50a2c: movq   $0xdb,(%rsp)
  0x000000011ba50a34: callq  0x000000011b59a600  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba50a39: jmpq   0x000000011ba5044b
  0x000000011ba50a3e: mov    0x18(%rdi),%edx
  0x000000011ba50a41: shl    $0x3,%rdx
  0x000000011ba50a45: cmp    $0x0,%rdx
  0x000000011ba50a49: je     0x000000011ba50582
  0x000000011ba50a4f: mov    %rdx,(%rsp)
  0x000000011ba50a53: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba50a58: jmpq   0x000000011ba50582
  0x000000011ba50a5d: cmp    $0x0,%rax
  0x000000011ba50a61: je     0x000000011ba505a1
  0x000000011ba50a67: mov    %rdi,(%rsp)
  0x000000011ba50a6b: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba50a70: jmpq   0x000000011ba505a1
  0x000000011ba50a75: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba50a7a: mov    0x14(%rax),%edx
  0x000000011ba50a7d: shl    $0x3,%rdx
  0x000000011ba50a81: cmp    $0x0,%rdx
  0x000000011ba50a85: je     0x000000011ba50777
  0x000000011ba50a8b: mov    %rdx,(%rsp)
  0x000000011ba50a8f: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba50a94: jmpq   0x000000011ba50777
  0x000000011ba50a99: cmp    $0x0,%r8
  0x000000011ba50a9d: je     0x000000011ba50796
  0x000000011ba50aa3: mov    %rax,(%rsp)
  0x000000011ba50aa7: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba50aac: jmpq   0x000000011ba50796
  0x000000011ba50ab1: nop
  0x000000011ba50ab2: nop
  0x000000011ba50ab3: mov    0x420(%r15),%rax
  0x000000011ba50aba: movabs $0x0,%r10
  0x000000011ba50ac4: mov    %r10,0x420(%r15)
  0x000000011ba50acb: movabs $0x0,%r10
  0x000000011ba50ad5: mov    %r10,0x428(%r15)
  0x000000011ba50adc: add    $0xa0,%rsp
  0x000000011ba50ae3: pop    %rbp
  0x000000011ba50ae4: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba50ae9: hlt    
  0x000000011ba50aea: hlt    
  0x000000011ba50aeb: hlt    
  0x000000011ba50aec: hlt    
  0x000000011ba50aed: hlt    
  0x000000011ba50aee: hlt    
  0x000000011ba50aef: hlt    
  0x000000011ba50af0: hlt    
  0x000000011ba50af1: hlt    
  0x000000011ba50af2: hlt    
  0x000000011ba50af3: hlt    
  0x000000011ba50af4: hlt    
  0x000000011ba50af5: hlt    
  0x000000011ba50af6: hlt    
  0x000000011ba50af7: hlt    
  0x000000011ba50af8: hlt    
  0x000000011ba50af9: hlt    
  0x000000011ba50afa: hlt    
  0x000000011ba50afb: hlt    
  0x000000011ba50afc: hlt    
  0x000000011ba50afd: hlt    
  0x000000011ba50afe: hlt    
  0x000000011ba50aff: hlt    
[Stub Code]
  0x000000011ba50b00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba50b05: movabs $0x1325d2b38,%rbx  ;   {static_stub}
  0x000000011ba50b0f: jmpq   0x000000011b4d2c5c  ;   {runtime_call I2C/C2I adapters}
  0x000000011ba50b14: nop
  0x000000011ba50b15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b1f: jmpq   0x000000011ba50b1f  ;   {runtime_call}
  0x000000011ba50b24: nop
  0x000000011ba50b25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b2f: jmpq   0x000000011ba50b2f  ;   {runtime_call}
  0x000000011ba50b34: nop
  0x000000011ba50b35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b3f: jmpq   0x000000011ba50b3f  ;   {runtime_call}
  0x000000011ba50b44: nop
  0x000000011ba50b45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b4f: jmpq   0x000000011ba50b4f  ;   {runtime_call}
  0x000000011ba50b54: nop
  0x000000011ba50b55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b5f: jmpq   0x000000011ba50b5f  ;   {runtime_call}
  0x000000011ba50b64: nop
  0x000000011ba50b65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b6f: jmpq   0x000000011ba50b6f  ;   {runtime_call}
  0x000000011ba50b74: nop
  0x000000011ba50b75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b7f: jmpq   0x000000011ba50b7f  ;   {runtime_call}
  0x000000011ba50b84: nop
  0x000000011ba50b85: movabs $0x1325d2b38,%rbx  ;   {static_stub}
  0x000000011ba50b8f: jmpq   0x000000011b4d2c5c  ;   {runtime_call I2C/C2I adapters}
  0x000000011ba50b94: nop
  0x000000011ba50b95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba50b9f: jmpq   0x000000011ba50b9f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba50ba4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba50ba9: mov    %rsp,-0x28(%rsp)
  0x000000011ba50bae: sub    $0x80,%rsp
  0x000000011ba50bb5: mov    %rax,0x78(%rsp)
  0x000000011ba50bba: mov    %rcx,0x70(%rsp)
  0x000000011ba50bbf: mov    %rdx,0x68(%rsp)
  0x000000011ba50bc4: mov    %rbx,0x60(%rsp)
  0x000000011ba50bc9: mov    %rbp,0x50(%rsp)
  0x000000011ba50bce: mov    %rsi,0x48(%rsp)
  0x000000011ba50bd3: mov    %rdi,0x40(%rsp)
  0x000000011ba50bd8: mov    %r8,0x38(%rsp)
  0x000000011ba50bdd: mov    %r9,0x30(%rsp)
  0x000000011ba50be2: mov    %r10,0x28(%rsp)
  0x000000011ba50be7: mov    %r11,0x20(%rsp)
  0x000000011ba50bec: mov    %r12,0x18(%rsp)
  0x000000011ba50bf1: mov    %r13,0x10(%rsp)
  0x000000011ba50bf6: mov    %r14,0x8(%rsp)
  0x000000011ba50bfb: mov    %r15,(%rsp)
  0x000000011ba50bff: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba50c09: movabs $0x11ba50ba9,%rsi  ;   {internal_word}
  0x000000011ba50c13: mov    %rsp,%rdx
  0x000000011ba50c16: and    $0xfffffffffffffff0,%rsp
  0x000000011ba50c1a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba50c1f: hlt    
[Deopt Handler Code]
  0x000000011ba50c20: movabs $0x11ba50c20,%r10  ;   {section_word}
  0x000000011ba50c2a: push   %r10
  0x000000011ba50c2c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba50c31: hlt    
  0x000000011ba50c32: hlt    
  0x000000011ba50c33: hlt    
  0x000000011ba50c34: hlt    
  0x000000011ba50c35: hlt    
  0x000000011ba50c36: hlt    
  0x000000011ba50c37: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }pc offsets: 292 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 604 
ImmutableOopMap{[72]=Oop [88]=Oop [112]=Oop [80]=Oop [104]=Oop }pc offsets: 1388 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2212 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 2692 2802 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 3084 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3260 
ImmutableOopMap{[144]=Oop }pc offsets: 3820 
ImmutableOopMap{[72]=Oop }pc offsets: 3884 
ImmutableOopMap{}pc offsets: 4068 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }pc offsets: 4125 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }pc offsets: 4135 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rdx=Oop }pc offsets: 4140 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }pc offsets: 4145 4150 4164 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4178 4183 4192 
ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4251 
ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }pc offsets: 4256 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }pc offsets: 4265 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rsi=Oop }pc offsets: 4270 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }pc offsets: 4275 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }pc offsets: 4280 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }pc offsets: 4285 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 4313 
ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4378 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='96' method='java.lang.module.ModuleDescriptor$Exports isQualified ()Z' bytes='18' count='1024' iicount='1024' level='3' stamp='0.302' comment='tiered' hot_count='1024'/>
<task_queued compile_id='97' method='java.lang.String hashCode ()I' bytes='49' count='5632' iicount='5632' stamp='0.302' comment='tiered' hot_count='5632'/>
<writer thread='15875'/>
<nmethod compile_id='91' compiler='c1' level='3' entry='0x000000011ba518a0' size='2968' address='0x000000011ba51690' relocation_offset='376' insts_offset='528' stub_offset='1808' scopes_data_offset='2000' scopes_pcs_offset='2256' dependencies_offset='2928' nul_chk_table_offset='2936' metadata_offset='1992' method='java.util.HashMap$HashIterator nextNode ()Ljava/util/HashMap$Node;' bytes='100' count='978' backedge_count='1908' iicount='978' stamp='0.302'/>
<print_nmethod stamp='0.302'>
Compiled method (c1)     302   91       3       java.util.HashMap$HashIterator::nextNode (100 bytes)
 total in heap  [0x000000011ba51690,0x000000011ba52228] = 2968
 relocation     [0x000000011ba51808,0x000000011ba51888] = 128
 main code      [0x000000011ba518a0,0x000000011ba51da0] = 1280
 stub code      [0x000000011ba51da0,0x000000011ba51e58] = 184
 metadata       [0x000000011ba51e58,0x000000011ba51e60] = 8
 scopes data    [0x000000011ba51e60,0x000000011ba51f60] = 256
 scopes pcs     [0x000000011ba51f60,0x000000011ba52200] = 672
 dependencies   [0x000000011ba52200,0x000000011ba52208] = 8
 nul chk table  [0x000000011ba52208,0x000000011ba52228] = 32
----------------------------------------------------------------------
java/util/HashMap$HashIterator.nextNode()Ljava/util/HashMap$Node;  [0x000000011ba518a0, 0x000000011ba51e58]  1464 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000011ba518a0: mov    0x8(%rsi),%r10d
  0x000000011ba518a4: movabs $0x800000000,%r12
  0x000000011ba518ae: add    %r12,%r10
  0x000000011ba518b1: xor    %r12,%r12
  0x000000011ba518b4: cmp    %rax,%r10
  0x000000011ba518b7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba518bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba518c0: mov    %eax,-0x14000(%rsp)
  0x000000011ba518c7: push   %rbp
  0x000000011ba518c8: sub    $0x50,%rsp
  0x000000011ba518cc: movabs $0x1328a2b98,%rax  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba518d6: mov    0x104(%rax),%edx
  0x000000011ba518dc: add    $0x8,%edx
  0x000000011ba518df: mov    %edx,0x104(%rax)
  0x000000011ba518e5: and    $0x1ff8,%edx
  0x000000011ba518eb: cmp    $0x0,%edx
  0x000000011ba518ee: je     0x000000011ba51c0e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@0 (line 1491)

  0x000000011ba518f4: mov    0x14(%rsi),%eax
  0x000000011ba518f7: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@1 (line 1491)

  0x000000011ba518fb: mov    0x1c(%rsi),%edx
  0x000000011ba518fe: shl    $0x3,%rdx          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@6 (line 1492)

  0x000000011ba51902: mov    0x18(%rdx),%edi    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@9 (line 1492)
                                                ; implicit exception: dispatches to 0x000000011ba51c2f
  0x000000011ba51905: mov    0xc(%rsi),%ebx     ;*getfield expectedModCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@13 (line 1492)

  0x000000011ba51908: cmp    %ebx,%edi
  0x000000011ba5190a: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51914: movabs $0x150,%rbx
  0x000000011ba5191e: jne    0x000000011ba5192e
  0x000000011ba51924: movabs $0x140,%rbx
  0x000000011ba5192e: mov    (%rdi,%rbx,1),%rcx
  0x000000011ba51932: lea    0x1(%rcx),%rcx
  0x000000011ba51936: mov    %rcx,(%rdi,%rbx,1)
  0x000000011ba5193a: jne    0x000000011ba51bce  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@16 (line 1492)

  0x000000011ba51940: cmp    $0x0,%rax
  0x000000011ba51944: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba5194e: movabs $0x180,%rbx
  0x000000011ba51958: je     0x000000011ba51968
  0x000000011ba5195e: movabs $0x170,%rbx
  0x000000011ba51968: mov    (%rdi,%rbx,1),%rcx
  0x000000011ba5196c: lea    0x1(%rcx),%rcx
  0x000000011ba51970: mov    %rcx,(%rdi,%rbx,1)
  0x000000011ba51974: je     0x000000011ba51b8a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@28 (line 1494)

  0x000000011ba5197a: movsbl 0x30(%r15),%edi
  0x000000011ba5197f: cmp    $0x0,%edi
  0x000000011ba51982: jne    0x000000011ba51c34
  0x000000011ba51988: mov    %rax,%r10
  0x000000011ba5198b: shr    $0x3,%r10
  0x000000011ba5198f: mov    %r10d,0x18(%rsi)
  0x000000011ba51993: mov    %rsi,%rdi
  0x000000011ba51996: xor    %rax,%rdi
  0x000000011ba51999: shr    $0x14,%rdi
  0x000000011ba5199d: cmp    $0x0,%rdi
  0x000000011ba519a1: jne    0x000000011ba51c53  ;*putfield current {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@43 (line 1496)

  0x000000011ba519a7: mov    0x18(%rax),%edi    ; implicit exception: dispatches to 0x000000011ba51c6b
  0x000000011ba519aa: shl    $0x3,%rdi          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@46 (line 1496)

  0x000000011ba519ae: movsbl 0x30(%r15),%ebx
  0x000000011ba519b3: cmp    $0x0,%ebx
  0x000000011ba519b6: jne    0x000000011ba51c70
  0x000000011ba519bc: mov    %rdi,%r10
  0x000000011ba519bf: shr    $0x3,%r10
  0x000000011ba519c3: mov    %r10d,0x14(%rsi)
  0x000000011ba519c7: mov    %rsi,%rbx
  0x000000011ba519ca: xor    %rdi,%rbx
  0x000000011ba519cd: shr    $0x14,%rbx
  0x000000011ba519d1: cmp    $0x0,%rbx
  0x000000011ba519d5: jne    0x000000011ba51c8f  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@50 (line 1496)

  0x000000011ba519db: cmp    $0x0,%rdi
  0x000000011ba519df: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba519e9: movabs $0x1a0,%rbx
  0x000000011ba519f3: jne    0x000000011ba51a03
  0x000000011ba519f9: movabs $0x1b0,%rbx
  0x000000011ba51a03: mov    (%rdi,%rbx,1),%rcx
  0x000000011ba51a07: lea    0x1(%rcx),%rcx
  0x000000011ba51a0b: mov    %rcx,(%rdi,%rbx,1)
  0x000000011ba51a0f: jne    0x000000011ba51b7a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@53 (line 1496)

  0x000000011ba51a15: mov    0x24(%rdx),%edx
  0x000000011ba51a18: shl    $0x3,%rdx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@60 (line 1496)

  0x000000011ba51a1c: cmp    $0x0,%rdx
  0x000000011ba51a20: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51a2a: movabs $0x1c0,%rbx
  0x000000011ba51a34: je     0x000000011ba51a44
  0x000000011ba51a3a: movabs $0x1d0,%rbx
  0x000000011ba51a44: mov    (%rdi,%rbx,1),%rcx
  0x000000011ba51a48: lea    0x1(%rcx),%rcx
  0x000000011ba51a4c: mov    %rcx,(%rdi,%rbx,1)
  0x000000011ba51a50: je     0x000000011ba51b7a
  0x000000011ba51a56: jmpq   0x000000011ba51b3c  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@65 (line 1496)

  0x000000011ba51a5b: nopl   0x0(%rax,%rax,1)
  0x000000011ba51a60: mov    %rdi,%rbx
  0x000000011ba51a63: inc    %ebx
  0x000000011ba51a65: mov    %ebx,0x10(%rsi)    ;*putfield index {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@87 (line 1497)

  0x000000011ba51a68: cmp    0xc(%rdx),%edi
  0x000000011ba51a6b: jae    0x000000011ba51ca7
  0x000000011ba51a71: movslq %edi,%rdi
  0x000000011ba51a74: mov    0x10(%rdx,%rdi,4),%edi
  0x000000011ba51a78: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@90 (line 1497)

  0x000000011ba51a7c: movsbl 0x30(%r15),%ebx
  0x000000011ba51a81: cmp    $0x0,%ebx
  0x000000011ba51a84: jne    0x000000011ba51cb5
  0x000000011ba51a8a: mov    %rdi,%r10
  0x000000011ba51a8d: shr    $0x3,%r10
  0x000000011ba51a91: mov    %r10d,0x14(%rsi)
  0x000000011ba51a95: mov    %rsi,%rbx
  0x000000011ba51a98: xor    %rdi,%rbx
  0x000000011ba51a9b: shr    $0x14,%rbx
  0x000000011ba51a9f: cmp    $0x0,%rbx
  0x000000011ba51aa3: jne    0x000000011ba51cd4  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@92 (line 1497)

  0x000000011ba51aa9: cmp    $0x0,%rdi
  0x000000011ba51aad: mov    $0x8,%ebx
  0x000000011ba51ab2: je     0x000000011ba51abd
  0x000000011ba51ab8: mov    $0x0,%ebx
  0x000000011ba51abd: movabs $0x1328a2b98,%rcx  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51ac7: mov    0x108(%rcx),%r8d
  0x000000011ba51ace: add    %ebx,%r8d
  0x000000011ba51ad1: mov    %r8d,0x108(%rcx)
  0x000000011ba51ad8: cmp    $0x0,%ebx
  0x000000011ba51adb: jne    0x000000011ba51ae7
  0x000000011ba51ae1: mov    $0x8,%r8d
  0x000000011ba51ae7: and    $0xfff8,%r8d
  0x000000011ba51aee: cmp    $0x0,%r8d
  0x000000011ba51af2: je     0x000000011ba51cec  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@95 (line 1497)

  0x000000011ba51af8: mov    0x108(%r15),%r10   ; ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop rdi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@95 (line 1497)

  0x000000011ba51aff: test   %eax,(%r10)        ;   {poll}
  0x000000011ba51b02: cmp    $0x0,%rdi
  0x000000011ba51b06: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51b10: movabs $0x210,%rbx
  0x000000011ba51b1a: jne    0x000000011ba51b2a
  0x000000011ba51b20: movabs $0x200,%rbx
  0x000000011ba51b2a: mov    (%rdi,%rbx,1),%rcx
  0x000000011ba51b2e: lea    0x1(%rcx),%rcx
  0x000000011ba51b32: mov    %rcx,(%rdi,%rbx,1)
  0x000000011ba51b36: jne    0x000000011ba51b7a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@95 (line 1497)

  0x000000011ba51b3c: mov    0x10(%rsi),%edi    ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@69 (line 1497)

  0x000000011ba51b3f: mov    0xc(%rdx),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@73 (line 1497)
                                                ; implicit exception: dispatches to 0x000000011ba51d0d
  0x000000011ba51b42: cmp    %ebx,%edi
  0x000000011ba51b44: movabs $0x1328a2b98,%rbx  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51b4e: movabs $0x1f0,%rcx
  0x000000011ba51b58: jl     0x000000011ba51b68
  0x000000011ba51b5e: movabs $0x1e0,%rcx
  0x000000011ba51b68: mov    (%rbx,%rcx,1),%r8
  0x000000011ba51b6c: lea    0x1(%r8),%r8
  0x000000011ba51b70: mov    %r8,(%rbx,%rcx,1)
  0x000000011ba51b74: jl     0x000000011ba51a60  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@74 (line 1497)

  0x000000011ba51b7a: add    $0x50,%rsp
  0x000000011ba51b7e: pop    %rbp
  0x000000011ba51b7f: mov    0x108(%r15),%r10
  0x000000011ba51b86: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba51b89: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@99 (line 1499)

  0x000000011ba51b8a: nopw   0x0(%rax,%rax,1)
  0x000000011ba51b90: jmpq   0x000000011ba51d21  ;   {no_reloc}
  0x000000011ba51b95: add    %al,(%rax)
  0x000000011ba51b97: add    %al,(%rax)
  0x000000011ba51b99: add    %ch,%cl
  0x000000011ba51b9b: mov    %es,(%rcx)
  0x000000011ba51b9d: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@31 (line 1495)

  0x000000011ba51b9f: mov    %rax,%rsi
  0x000000011ba51ba2: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51bac: addq   $0x1,0x190(%rdi)
  0x000000011ba51bb4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@35 (line 1495)

  0x000000011ba51bb7: mov    %rax,0x38(%rsp)
  0x000000011ba51bbc: data16 xchg %ax,%ax
  0x000000011ba51bbf: callq  0x000000011b4d1f00  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@35 (line 1495)
                                                ;   {optimized virtual_call}
  0x000000011ba51bc4: mov    0x38(%rsp),%rax
  0x000000011ba51bc9: jmpq   0x000000011ba51d89  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@38 (line 1495)

  0x000000011ba51bce: xchg   %ax,%ax
  0x000000011ba51bd0: jmpq   0x000000011ba51d47  ;   {no_reloc}
  0x000000011ba51bd5: add    %al,(%rax)
  0x000000011ba51bd7: add    %al,(%rax)
  0x000000011ba51bd9: add    %ch,%cl
  0x000000011ba51bdb: jb     0x000000011ba51bde
  0x000000011ba51bdd: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@19 (line 1493)

  0x000000011ba51bdf: mov    %rax,%rsi
  0x000000011ba51be2: movabs $0x1328a2b98,%rdi  ;   {metadata(method data for {method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51bec: addq   $0x1,0x160(%rdi)
  0x000000011ba51bf4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@23 (line 1493)

  0x000000011ba51bf7: mov    %rax,0x40(%rsp)
  0x000000011ba51bfc: data16 xchg %ax,%ax
  0x000000011ba51bff: callq  0x000000011b4d1f00  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@23 (line 1493)
                                                ;   {optimized virtual_call}
  0x000000011ba51c04: mov    0x40(%rsp),%rax
  0x000000011ba51c09: jmpq   0x000000011ba51d89
  0x000000011ba51c0e: movabs $0x13273ae58,%r10  ;   {metadata({method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51c18: mov    %r10,0x8(%rsp)
  0x000000011ba51c1d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba51c25: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$HashIterator::nextNode@-1 (line 1491)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba51c2a: jmpq   0x000000011ba518f4
  0x000000011ba51c2f: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rax=Oop rdx=Oop }
                                                ;*getfield modCount {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@9 (line 1492)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba51c34: mov    0x18(%rsi),%edi
  0x000000011ba51c37: shl    $0x3,%rdi
  0x000000011ba51c3b: cmp    $0x0,%rdi
  0x000000011ba51c3f: je     0x000000011ba51988
  0x000000011ba51c45: mov    %rdi,(%rsp)
  0x000000011ba51c49: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba51c4e: jmpq   0x000000011ba51988
  0x000000011ba51c53: cmp    $0x0,%rax
  0x000000011ba51c57: je     0x000000011ba519a7
  0x000000011ba51c5d: mov    %rsi,(%rsp)
  0x000000011ba51c61: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba51c66: jmpq   0x000000011ba519a7
  0x000000011ba51c6b: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rax=Oop rdx=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@46 (line 1496)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba51c70: mov    0x14(%rsi),%ebx
  0x000000011ba51c73: shl    $0x3,%rbx
  0x000000011ba51c77: cmp    $0x0,%rbx
  0x000000011ba51c7b: je     0x000000011ba519bc
  0x000000011ba51c81: mov    %rbx,(%rsp)
  0x000000011ba51c85: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba51c8a: jmpq   0x000000011ba519bc
  0x000000011ba51c8f: cmp    $0x0,%rdi
  0x000000011ba51c93: je     0x000000011ba519db
  0x000000011ba51c99: mov    %rsi,(%rsp)
  0x000000011ba51c9d: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba51ca2: jmpq   0x000000011ba519db
  0x000000011ba51ca7: mov    %rdi,(%rsp)
  0x000000011ba51cab: mov    %rdx,0x8(%rsp)
  0x000000011ba51cb0: callq  0x000000011b595320  ; ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@90 (line 1497)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba51cb5: mov    0x14(%rsi),%ebx
  0x000000011ba51cb8: shl    $0x3,%rbx
  0x000000011ba51cbc: cmp    $0x0,%rbx
  0x000000011ba51cc0: je     0x000000011ba51a8a
  0x000000011ba51cc6: mov    %rbx,(%rsp)
  0x000000011ba51cca: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba51ccf: jmpq   0x000000011ba51a8a
  0x000000011ba51cd4: cmp    $0x0,%rdi
  0x000000011ba51cd8: je     0x000000011ba51aa9
  0x000000011ba51cde: mov    %rsi,(%rsp)
  0x000000011ba51ce2: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba51ce7: jmpq   0x000000011ba51aa9
  0x000000011ba51cec: movabs $0x13273ae58,%r10  ;   {metadata({method} {0x000000013273ae58} &apos;nextNode&apos; &apos;()Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba51cf6: mov    %r10,0x8(%rsp)
  0x000000011ba51cfb: movq   $0x5f,(%rsp)
  0x000000011ba51d03: callq  0x000000011b59a600  ; ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop rdi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@95 (line 1497)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba51d08: jmpq   0x000000011ba51af8
  0x000000011ba51d0d: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@73 (line 1497)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba51d12: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba51d1c: mov    $0xa050f00,%eax
  0x000000011ba51d21: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@31 (line 1495)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba51d26: jmpq   0x000000011ba51b90
  0x000000011ba51d2b: mov    %rdx,%rdx
  0x000000011ba51d2e: callq  0x000000011b596480  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@31 (line 1495)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba51d33: jmpq   0x000000011ba51b9f
  0x000000011ba51d38: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba51d42: mov    $0xa050f00,%eax
  0x000000011ba51d47: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@19 (line 1493)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba51d4c: jmpq   0x000000011ba51bd0
  0x000000011ba51d51: mov    %rdx,%rdx
  0x000000011ba51d54: callq  0x000000011b596480  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::nextNode@19 (line 1493)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba51d59: jmpq   0x000000011ba51bdf
  0x000000011ba51d5e: nop
  0x000000011ba51d5f: nop
  0x000000011ba51d60: mov    0x420(%r15),%rax
  0x000000011ba51d67: movabs $0x0,%r10
  0x000000011ba51d71: mov    %r10,0x420(%r15)
  0x000000011ba51d78: movabs $0x0,%r10
  0x000000011ba51d82: mov    %r10,0x428(%r15)
  0x000000011ba51d89: add    $0x50,%rsp
  0x000000011ba51d8d: pop    %rbp
  0x000000011ba51d8e: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba51d93: hlt    
  0x000000011ba51d94: hlt    
  0x000000011ba51d95: hlt    
  0x000000011ba51d96: hlt    
  0x000000011ba51d97: hlt    
  0x000000011ba51d98: hlt    
  0x000000011ba51d99: hlt    
  0x000000011ba51d9a: hlt    
  0x000000011ba51d9b: hlt    
  0x000000011ba51d9c: hlt    
  0x000000011ba51d9d: hlt    
  0x000000011ba51d9e: hlt    
  0x000000011ba51d9f: hlt    
[Stub Code]
  0x000000011ba51da0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba51da5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba51daf: jmpq   0x000000011ba51daf  ;   {runtime_call}
  0x000000011ba51db4: nop
  0x000000011ba51db5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba51dbf: jmpq   0x000000011ba51dbf  ;   {runtime_call}
[Exception Handler]
  0x000000011ba51dc4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba51dc9: mov    %rsp,-0x28(%rsp)
  0x000000011ba51dce: sub    $0x80,%rsp
  0x000000011ba51dd5: mov    %rax,0x78(%rsp)
  0x000000011ba51dda: mov    %rcx,0x70(%rsp)
  0x000000011ba51ddf: mov    %rdx,0x68(%rsp)
  0x000000011ba51de4: mov    %rbx,0x60(%rsp)
  0x000000011ba51de9: mov    %rbp,0x50(%rsp)
  0x000000011ba51dee: mov    %rsi,0x48(%rsp)
  0x000000011ba51df3: mov    %rdi,0x40(%rsp)
  0x000000011ba51df8: mov    %r8,0x38(%rsp)
  0x000000011ba51dfd: mov    %r9,0x30(%rsp)
  0x000000011ba51e02: mov    %r10,0x28(%rsp)
  0x000000011ba51e07: mov    %r11,0x20(%rsp)
  0x000000011ba51e0c: mov    %r12,0x18(%rsp)
  0x000000011ba51e11: mov    %r13,0x10(%rsp)
  0x000000011ba51e16: mov    %r14,0x8(%rsp)
  0x000000011ba51e1b: mov    %r15,(%rsp)
  0x000000011ba51e1f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba51e29: movabs $0x11ba51dc9,%rsi  ;   {internal_word}
  0x000000011ba51e33: mov    %rsp,%rdx
  0x000000011ba51e36: and    $0xfffffffffffffff0,%rsp
  0x000000011ba51e3a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba51e3f: hlt    
[Deopt Handler Code]
  0x000000011ba51e40: movabs $0x11ba51e40,%r10  ;   {section_word}
  0x000000011ba51e4a: push   %r10
  0x000000011ba51e4c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba51e51: hlt    
  0x000000011ba51e52: hlt    
  0x000000011ba51e53: hlt    
  0x000000011ba51e54: hlt    
  0x000000011ba51e55: hlt    
  0x000000011ba51e56: hlt    
  0x000000011ba51e57: hlt    

ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop rdi=Oop }pc offsets: 607 
ImmutableOopMap{[56]=Oop }pc offsets: 804 
ImmutableOopMap{[64]=Oop }pc offsets: 868 
ImmutableOopMap{rsi=Oop }pc offsets: 906 
ImmutableOopMap{rsi=Oop rax=Oop rdx=Oop }pc offsets: 916 976 
ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop }pc offsets: 1045 
ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop rdi=Oop }pc offsets: 1128 
ImmutableOopMap{rax=Oop rsi=Oop rdx=Oop }pc offsets: 1138 
ImmutableOopMap{}pc offsets: 1158 1171 1196 1209 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='98' method='java.util.AbstractCollection isEmpty ()Z' bytes='13' count='896' iicount='896' level='3' stamp='0.309' comment='tiered' hot_count='896'/>
<task_queued compile_id='99' method='java.util.ImmutableCollections$Set12 size ()I' bytes='13' count='896' iicount='896' level='3' stamp='0.309' comment='tiered' hot_count='896'/>
<writer thread='15363'/>
<nmethod compile_id='97' compiler='c2' level='4' entry='0x0000000122f79a20' size='1688' address='0x0000000122f79890' relocation_offset='376' insts_offset='400' stub_offset='880' scopes_data_offset='928' scopes_pcs_offset='1152' dependencies_offset='1664' nul_chk_table_offset='1672' metadata_offset='904' method='java.lang.String hashCode ()I' bytes='49' count='5859' iicount='5859' stamp='0.309'/>
<make_not_entrant thread='15363' compile_id='6' compiler='c1' level='3' stamp='0.309'/>
<print_nmethod stamp='0.309'>
Compiled method (c2)     308   97       4       java.lang.String::hashCode (49 bytes)
 total in heap  [0x0000000122f79890,0x0000000122f79f28] = 1688
 relocation     [0x0000000122f79a08,0x0000000122f79a20] = 24
 main code      [0x0000000122f79a20,0x0000000122f79c00] = 480
 stub code      [0x0000000122f79c00,0x0000000122f79c18] = 24
 metadata       [0x0000000122f79c18,0x0000000122f79c30] = 24
 scopes data    [0x0000000122f79c30,0x0000000122f79d10] = 224
 scopes pcs     [0x0000000122f79d10,0x0000000122f79f10] = 512
 dependencies   [0x0000000122f79f10,0x0000000122f79f18] = 8
 nul chk table  [0x0000000122f79f18,0x0000000122f79f28] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x0000000122f79a20, 0x0000000122f79c18]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b1bc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000122f79a20: mov    0x8(%rsi),%r10d
  0x0000000122f79a24: movabs $0x800000000,%r12
  0x0000000122f79a2e: add    %r12,%r10
  0x0000000122f79a31: xor    %r12,%r12
  0x0000000122f79a34: cmp    %r10,%rax
  0x0000000122f79a37: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f79a3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f79a40: mov    %eax,-0x14000(%rsp)
  0x0000000122f79a47: push   %rbp
  0x0000000122f79a48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x0000000122f79a4c: vmovq  %rsi,%xmm0
  0x0000000122f79a51: mov    0x10(%rsi),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x0000000122f79a54: test   %eax,%eax
  0x0000000122f79a56: jne    0x0000000122f79b9b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1503)

  0x0000000122f79a5c: mov    0xc(%rsi),%r8d     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x0000000122f79a60: mov    0xc(%r12,%r8,8),%r14d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x0000000122f79bde
  0x0000000122f79a65: test   %r14d,%r14d
  0x0000000122f79a68: jbe    0x0000000122f79bab  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x0000000122f79a6e: movsbl 0x14(%rsi),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x0000000122f79a72: test   %ebp,%ebp
  0x0000000122f79a74: jne    0x0000000122f79bca  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x0000000122f79a7a: mov    %r14d,%r10d
  0x0000000122f79a7d: dec    %r10d
  0x0000000122f79a80: cmp    %r14d,%r10d
  0x0000000122f79a83: jae    0x0000000122f79baf
  0x0000000122f79a89: movzbl 0x10(%r12,%r8,8),%edi  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79a8f: mov    %r14d,%r11d
  0x0000000122f79a92: add    $0xfffffff9,%r11d
  0x0000000122f79a96: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x0000000122f79a9a: mov    $0x80000000,%ecx
  0x0000000122f79a9f: cmp    %r11d,%r10d
  0x0000000122f79aa2: cmovl  %ecx,%r11d
  0x0000000122f79aa6: mov    $0x1,%ebp
  0x0000000122f79aab: cmp    $0x1,%r11d
  0x0000000122f79aaf: jle    0x0000000122f79b6e
  0x0000000122f79ab5: mov    %edi,%ecx
  0x0000000122f79ab7: shl    $0x5,%ecx
  0x0000000122f79aba: sub    %edi,%ecx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79abc: nopl   0x0(%rax)          ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79ac0: movslq %ebp,%rax          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79ac3: movzbl 0x10(%r8,%rax,1),%r10d
  0x0000000122f79ac9: movzbl 0x17(%r8,%rax,1),%r9d
  0x0000000122f79acf: movzbl 0x11(%r8,%rax,1),%edi
  0x0000000122f79ad5: movzbl 0x16(%r8,%rax,1),%ebx
  0x0000000122f79adb: movzbl 0x15(%r8,%rax,1),%esi
  0x0000000122f79ae1: movzbl 0x14(%r8,%rax,1),%edx
  0x0000000122f79ae7: movzbl 0x13(%r8,%rax,1),%r13d
  0x0000000122f79aed: movzbl 0x12(%r8,%rax,1),%eax
  0x0000000122f79af3: add    %r10d,%ecx
  0x0000000122f79af6: mov    %ecx,%r10d
  0x0000000122f79af9: shl    $0x5,%r10d
  0x0000000122f79afd: sub    %ecx,%r10d
  0x0000000122f79b00: add    %edi,%r10d
  0x0000000122f79b03: mov    %r10d,%edi
  0x0000000122f79b06: shl    $0x5,%edi
  0x0000000122f79b09: sub    %r10d,%edi
  0x0000000122f79b0c: add    %eax,%edi
  0x0000000122f79b0e: mov    %edi,%r10d
  0x0000000122f79b11: shl    $0x5,%r10d
  0x0000000122f79b15: sub    %edi,%r10d
  0x0000000122f79b18: add    %r13d,%r10d
  0x0000000122f79b1b: mov    %r10d,%edi
  0x0000000122f79b1e: shl    $0x5,%edi
  0x0000000122f79b21: sub    %r10d,%edi
  0x0000000122f79b24: add    %edx,%edi
  0x0000000122f79b26: mov    %edi,%r10d
  0x0000000122f79b29: shl    $0x5,%r10d
  0x0000000122f79b2d: sub    %edi,%r10d
  0x0000000122f79b30: add    %esi,%r10d
  0x0000000122f79b33: mov    %r10d,%ecx
  0x0000000122f79b36: shl    $0x5,%ecx
  0x0000000122f79b39: sub    %r10d,%ecx
  0x0000000122f79b3c: add    %ebx,%ecx
  0x0000000122f79b3e: mov    %ecx,%edi
  0x0000000122f79b40: shl    $0x5,%edi
  0x0000000122f79b43: sub    %ecx,%edi
  0x0000000122f79b45: add    %r9d,%edi          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b48: mov    %edi,%ecx
  0x0000000122f79b4a: shl    $0x5,%ecx
  0x0000000122f79b4d: sub    %edi,%ecx          ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b4f: add    $0x8,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b52: cmp    %r11d,%ebp
  0x0000000122f79b55: jl     0x0000000122f79ac0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b5b: mov    0x108(%r15),%r10   ; ImmutableOopMap{r8=Oop xmm0=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b62: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {poll}
  0x0000000122f79b65: cmp    %r11d,%ebp
  0x0000000122f79b68: jl     0x0000000122f79ac0
  0x0000000122f79b6e: cmp    %r14d,%ebp
  0x0000000122f79b71: jl     0x0000000122f79b77
  0x0000000122f79b73: mov    %edi,%eax
  0x0000000122f79b75: jmp    0x0000000122f79b92  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b77: movzbl 0x10(%r8,%rbp,1),%r10d
  0x0000000122f79b7d: mov    %edi,%eax
  0x0000000122f79b7f: shl    $0x5,%eax
  0x0000000122f79b82: sub    %edi,%eax
  0x0000000122f79b84: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b87: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b89: cmp    %r14d,%ebp
  0x0000000122f79b8c: jge    0x0000000122f79b92  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79b8e: mov    %eax,%edi
  0x0000000122f79b90: jmp    0x0000000122f79b77
  0x0000000122f79b92: vmovq  %xmm0,%r10
  0x0000000122f79b97: mov    %eax,0x10(%r10)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x0000000122f79b9b: add    $0x20,%rsp
  0x0000000122f79b9f: pop    %rbp
  0x0000000122f79ba0: mov    0x108(%r15),%r10
  0x0000000122f79ba7: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f79baa: retq   
  0x0000000122f79bab: xor    %eax,%eax
  0x0000000122f79bad: jmp    0x0000000122f79b9b
  0x0000000122f79baf: mov    $0xffffff7e,%esi
  0x0000000122f79bb4: vmovq  %xmm0,%rbp
  0x0000000122f79bb9: mov    %r8d,(%rsp)
  0x0000000122f79bbd: mov    %r14d,0x8(%rsp)
  0x0000000122f79bc2: nop
  0x0000000122f79bc3: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f79bc8: ud2                       ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79bca: mov    $0xffffff4d,%esi
  0x0000000122f79bcf: vmovsd %xmm0,0x8(%rsp)
  0x0000000122f79bd5: xchg   %ax,%ax
  0x0000000122f79bd7: callq  0x000000011b4d3900  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f79bdc: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x0000000122f79bde: mov    $0xfffffff6,%esi
  0x0000000122f79be3: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f79be8: ud2                       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x0000000122f79bea: hlt    
  0x0000000122f79beb: hlt    
  0x0000000122f79bec: hlt    
  0x0000000122f79bed: hlt    
  0x0000000122f79bee: hlt    
  0x0000000122f79bef: hlt    
  0x0000000122f79bf0: hlt    
  0x0000000122f79bf1: hlt    
  0x0000000122f79bf2: hlt    
  0x0000000122f79bf3: hlt    
  0x0000000122f79bf4: hlt    
  0x0000000122f79bf5: hlt    
  0x0000000122f79bf6: hlt    
  0x0000000122f79bf7: hlt    
  0x0000000122f79bf8: hlt    
  0x0000000122f79bf9: hlt    
  0x0000000122f79bfa: hlt    
  0x0000000122f79bfb: hlt    
  0x0000000122f79bfc: hlt    
  0x0000000122f79bfd: hlt    
  0x0000000122f79bfe: hlt    
  0x0000000122f79bff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f79c00: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f79c05: callq  0x0000000122f79c0a
  0x0000000122f79c0a: subq   $0x5,(%rsp)
  0x0000000122f79c0f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f79c14: hlt    
  0x0000000122f79c15: hlt    
  0x0000000122f79c16: hlt    
  0x0000000122f79c17: hlt    

ImmutableOopMap{r8=Oop xmm0=Oop }pc offsets: 322 
ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 424 
ImmutableOopMap{[8]=Oop }pc offsets: 444 
ImmutableOopMap{}pc offsets: 456 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='96' compiler='c1' level='3' entry='0x000000011ba52460' size='1376' address='0x000000011ba52290' relocation_offset='376' insts_offset='464' stub_offset='944' scopes_data_offset='1120' scopes_pcs_offset='1176' dependencies_offset='1352' nul_chk_table_offset='1360' metadata_offset='1112' method='java.lang.module.ModuleDescriptor$Exports isQualified ()Z' bytes='18' count='2033' iicount='2033' stamp='0.313'/>
<print_nmethod stamp='0.313'>
Compiled method (c1)     312   96       3       java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)
 total in heap  [0x000000011ba52290,0x000000011ba527f0] = 1376
 relocation     [0x000000011ba52408,0x000000011ba52448] = 64
 main code      [0x000000011ba52460,0x000000011ba52640] = 480
 stub code      [0x000000011ba52640,0x000000011ba526e8] = 168
 metadata       [0x000000011ba526e8,0x000000011ba526f0] = 8
 scopes data    [0x000000011ba526f0,0x000000011ba52728] = 56
 scopes pcs     [0x000000011ba52728,0x000000011ba527d8] = 176
 dependencies   [0x000000011ba527d8,0x000000011ba527e0] = 8
 nul chk table  [0x000000011ba527e0,0x000000011ba527f0] = 16
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Exports.isQualified()Z  [0x000000011ba52460, 0x000000011ba526e8]  648 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba52460: mov    0x8(%rsi),%r10d
  0x000000011ba52464: movabs $0x800000000,%r12
  0x000000011ba5246e: add    %r12,%r10
  0x000000011ba52471: xor    %r12,%r12
  0x000000011ba52474: cmp    %rax,%r10
  0x000000011ba52477: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5247d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba52480: mov    %eax,-0x14000(%rsp)
  0x000000011ba52487: push   %rbp
  0x000000011ba52488: sub    $0x30,%rsp
  0x000000011ba5248c: movabs $0x1328a41b0,%rdi  ;   {metadata(method data for {method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;)}
  0x000000011ba52496: mov    0x104(%rdi),%ebx
  0x000000011ba5249c: add    $0x8,%ebx
  0x000000011ba5249f: mov    %ebx,0x104(%rdi)
  0x000000011ba524a5: and    $0x1ff8,%ebx
  0x000000011ba524ab: cmp    $0x0,%ebx
  0x000000011ba524ae: je     0x000000011ba525d7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@0 (line 445)

  0x000000011ba524b4: mov    0x14(%rsi),%esi
  0x000000011ba524b7: shl    $0x3,%rsi          ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@1 (line 445)

  0x000000011ba524bb: cmp    (%rsi),%rax        ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 445)
                                                ; implicit exception: dispatches to 0x000000011ba525f8
  0x000000011ba524be: mov    %rsi,%rdi
  0x000000011ba524c1: movabs $0x1328a41b0,%rbx  ;   {metadata(method data for {method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;)}
  0x000000011ba524cb: mov    0x8(%rdi),%edi
  0x000000011ba524ce: movabs $0x800000000,%r12
  0x000000011ba524d8: add    %r12,%rdi
  0x000000011ba524db: xor    %r12,%r12
  0x000000011ba524de: cmp    0x150(%rbx),%rdi
  0x000000011ba524e5: jne    0x000000011ba524f4
  0x000000011ba524e7: addq   $0x1,0x158(%rbx)
  0x000000011ba524ef: jmpq   0x000000011ba5255a
  0x000000011ba524f4: cmp    0x160(%rbx),%rdi
  0x000000011ba524fb: jne    0x000000011ba5250a
  0x000000011ba524fd: addq   $0x1,0x168(%rbx)
  0x000000011ba52505: jmpq   0x000000011ba5255a
  0x000000011ba5250a: cmpq   $0x0,0x150(%rbx)
  0x000000011ba52515: jne    0x000000011ba5252e
  0x000000011ba52517: mov    %rdi,0x150(%rbx)
  0x000000011ba5251e: movq   $0x1,0x158(%rbx)
  0x000000011ba52529: jmpq   0x000000011ba5255a
  0x000000011ba5252e: cmpq   $0x0,0x160(%rbx)
  0x000000011ba52539: jne    0x000000011ba52552
  0x000000011ba5253b: mov    %rdi,0x160(%rbx)
  0x000000011ba52542: movq   $0x1,0x168(%rbx)
  0x000000011ba5254d: jmpq   0x000000011ba5255a
  0x000000011ba52552: addq   $0x1,0x140(%rbx)
  0x000000011ba5255a: data16 xchg %ax,%ax
  0x000000011ba5255d: movabs $0xffffffffffffffff,%rax
  0x000000011ba52567: callq  0x000000011b4d2180  ; ImmutableOopMap{}
                                                ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 445)
                                                ;   {virtual_call}
  0x000000011ba5256c: cmp    $0x0,%eax
  0x000000011ba5256f: movabs $0x1328a41b0,%rax  ;   {metadata(method data for {method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;)}
  0x000000011ba52579: movabs $0x178,%rsi
  0x000000011ba52583: jne    0x000000011ba52593
  0x000000011ba52589: movabs $0x188,%rsi
  0x000000011ba52593: mov    (%rax,%rsi,1),%rdi
  0x000000011ba52597: lea    0x1(%rdi),%rdi
  0x000000011ba5259b: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba5259f: jne    0x000000011ba525bf  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@9 (line 445)

  0x000000011ba525a5: movabs $0x1328a41b0,%rax  ;   {metadata(method data for {method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;)}
  0x000000011ba525af: incl   0x198(%rax)
  0x000000011ba525b5: mov    $0x1,%eax
  0x000000011ba525ba: jmpq   0x000000011ba525c4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@13 (line 445)

  0x000000011ba525bf: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@17 (line 445)

  0x000000011ba525c4: and    $0x1,%eax
  0x000000011ba525c7: add    $0x30,%rsp
  0x000000011ba525cb: pop    %rbp
  0x000000011ba525cc: mov    0x108(%r15),%r10
  0x000000011ba525d3: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba525d6: retq   
  0x000000011ba525d7: movabs $0x1326de1c8,%r10  ;   {metadata({method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;)}
  0x000000011ba525e1: mov    %r10,0x8(%rsp)
  0x000000011ba525e6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba525ee: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@-1 (line 445)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba525f3: jmpq   0x000000011ba524b4
  0x000000011ba525f8: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 445)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba525fd: nop
  0x000000011ba525fe: nop
  0x000000011ba525ff: mov    0x420(%r15),%rax
  0x000000011ba52606: movabs $0x0,%r10
  0x000000011ba52610: mov    %r10,0x420(%r15)
  0x000000011ba52617: movabs $0x0,%r10
  0x000000011ba52621: mov    %r10,0x428(%r15)
  0x000000011ba52628: add    $0x30,%rsp
  0x000000011ba5262c: pop    %rbp
  0x000000011ba5262d: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba52632: hlt    
  0x000000011ba52633: hlt    
  0x000000011ba52634: hlt    
  0x000000011ba52635: hlt    
  0x000000011ba52636: hlt    
  0x000000011ba52637: hlt    
  0x000000011ba52638: hlt    
  0x000000011ba52639: hlt    
  0x000000011ba5263a: hlt    
  0x000000011ba5263b: hlt    
  0x000000011ba5263c: hlt    
  0x000000011ba5263d: hlt    
  0x000000011ba5263e: hlt    
  0x000000011ba5263f: hlt    
[Stub Code]
  0x000000011ba52640: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba52645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5264f: jmpq   0x000000011ba5264f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba52654: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba52659: mov    %rsp,-0x28(%rsp)
  0x000000011ba5265e: sub    $0x80,%rsp
  0x000000011ba52665: mov    %rax,0x78(%rsp)
  0x000000011ba5266a: mov    %rcx,0x70(%rsp)
  0x000000011ba5266f: mov    %rdx,0x68(%rsp)
  0x000000011ba52674: mov    %rbx,0x60(%rsp)
  0x000000011ba52679: mov    %rbp,0x50(%rsp)
  0x000000011ba5267e: mov    %rsi,0x48(%rsp)
  0x000000011ba52683: mov    %rdi,0x40(%rsp)
  0x000000011ba52688: mov    %r8,0x38(%rsp)
  0x000000011ba5268d: mov    %r9,0x30(%rsp)
  0x000000011ba52692: mov    %r10,0x28(%rsp)
  0x000000011ba52697: mov    %r11,0x20(%rsp)
  0x000000011ba5269c: mov    %r12,0x18(%rsp)
  0x000000011ba526a1: mov    %r13,0x10(%rsp)
  0x000000011ba526a6: mov    %r14,0x8(%rsp)
  0x000000011ba526ab: mov    %r15,(%rsp)
  0x000000011ba526af: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba526b9: movabs $0x11ba52659,%rsi  ;   {internal_word}
  0x000000011ba526c3: mov    %rsp,%rdx
  0x000000011ba526c6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba526ca: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba526cf: hlt    
[Deopt Handler Code]
  0x000000011ba526d0: movabs $0x11ba526d0,%r10  ;   {section_word}
  0x000000011ba526da: push   %r10
  0x000000011ba526dc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba526e1: hlt    
  0x000000011ba526e2: hlt    
  0x000000011ba526e3: hlt    
  0x000000011ba526e4: hlt    
  0x000000011ba526e5: hlt    
  0x000000011ba526e6: hlt    
  0x000000011ba526e7: hlt    

ImmutableOopMap{}pc offsets: 268 
ImmutableOopMap{rsi=Oop }pc offsets: 403 413 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='100' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='5632' iicount='5632' stamp='0.316' comment='tiered' hot_count='5632'/>
<task_queued compile_id='101' method='java.util.HashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1024' iicount='1024' level='3' stamp='0.316' comment='tiered' hot_count='1024'/>
<task_queued compile_id='102' method='java.util.ImmutableCollections$Set12 contains (Ljava/lang/Object;)Z' bytes='28' count='896' iicount='896' level='3' stamp='0.316' comment='tiered' hot_count='896'/>
<writer thread='15875'/>
<nmethod compile_id='85' compiler='c1' level='3' entry='0x000000011ba529e0' size='1464' address='0x000000011ba52810' relocation_offset='376' insts_offset='464' stub_offset='1072' scopes_data_offset='1240' scopes_pcs_offset='1312' dependencies_offset='1456' metadata_offset='1216' method='java.util.HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='2240' iicount='2240' stamp='0.316'/>
<print_nmethod stamp='0.316'>
Compiled method (c1)     316   85       3       java.util.HashMap$Node::&lt;init&gt; (26 bytes)
 total in heap  [0x000000011ba52810,0x000000011ba52dc8] = 1464
 relocation     [0x000000011ba52988,0x000000011ba529c8] = 64
 main code      [0x000000011ba529e0,0x000000011ba52c40] = 608
 stub code      [0x000000011ba52c40,0x000000011ba52cd0] = 144
 metadata       [0x000000011ba52cd0,0x000000011ba52ce8] = 24
 scopes data    [0x000000011ba52ce8,0x000000011ba52d30] = 72
 scopes pcs     [0x000000011ba52d30,0x000000011ba52dc0] = 144
 dependencies   [0x000000011ba52dc0,0x000000011ba52dc8] = 8
----------------------------------------------------------------------
java/util/HashMap$Node.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V  [0x000000011ba529e0, 0x000000011ba52cd0]  752 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba529e0: mov    0x8(%rsi),%r10d
  0x000000011ba529e4: movabs $0x800000000,%r12
  0x000000011ba529ee: add    %r12,%r10
  0x000000011ba529f1: xor    %r12,%r12
  0x000000011ba529f4: cmp    %rax,%r10
  0x000000011ba529f7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba529fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba52a00: mov    %eax,-0x14000(%rsp)
  0x000000011ba52a07: push   %rbp
  0x000000011ba52a08: sub    $0x30,%rsp
  0x000000011ba52a0c: movabs $0x13289ff80,%rdi  ;   {metadata(method data for {method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011ba52a16: mov    0x104(%rdi),%ebx
  0x000000011ba52a1c: add    $0x8,%ebx
  0x000000011ba52a1f: mov    %ebx,0x104(%rdi)
  0x000000011ba52a25: and    $0x1ff8,%ebx
  0x000000011ba52a2b: cmp    $0x0,%ebx
  0x000000011ba52a2e: je     0x000000011ba52b0b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 285)

  0x000000011ba52a34: mov    %rsi,%rdi
  0x000000011ba52a37: movabs $0x13289ff80,%rbx  ;   {metadata(method data for {method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011ba52a41: addq   $0x1,0x140(%rbx)
  0x000000011ba52a49: movabs $0x1326ded60,%rdi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba52a53: mov    0x104(%rdi),%ebx
  0x000000011ba52a59: add    $0x8,%ebx
  0x000000011ba52a5c: mov    %ebx,0x104(%rdi)
  0x000000011ba52a62: and    $0x7ffff8,%ebx
  0x000000011ba52a68: cmp    $0x0,%ebx
  0x000000011ba52a6b: je     0x000000011ba52b2c
  0x000000011ba52a71: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)

  0x000000011ba52a74: movsbl 0x30(%r15),%edi
  0x000000011ba52a79: cmp    $0x0,%edi
  0x000000011ba52a7c: jne    0x000000011ba52b4d
  0x000000011ba52a82: mov    %rcx,%r10
  0x000000011ba52a85: shr    $0x3,%r10
  0x000000011ba52a89: mov    %r10d,0x10(%rsi)
  0x000000011ba52a8d: mov    %rsi,%rdi
  0x000000011ba52a90: xor    %rcx,%rdi
  0x000000011ba52a93: shr    $0x14,%rdi
  0x000000011ba52a97: cmp    $0x0,%rdi
  0x000000011ba52a9b: jne    0x000000011ba52b6c  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)

  0x000000011ba52aa1: movsbl 0x30(%r15),%edi
  0x000000011ba52aa6: cmp    $0x0,%edi
  0x000000011ba52aa9: jne    0x000000011ba52b84
  0x000000011ba52aaf: mov    %r8,%r10
  0x000000011ba52ab2: shr    $0x3,%r10
  0x000000011ba52ab6: mov    %r10d,0x14(%rsi)
  0x000000011ba52aba: mov    %rsi,%rdi
  0x000000011ba52abd: xor    %r8,%rdi
  0x000000011ba52ac0: shr    $0x14,%rdi
  0x000000011ba52ac4: cmp    $0x0,%rdi
  0x000000011ba52ac8: jne    0x000000011ba52ba3  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)

  0x000000011ba52ace: movsbl 0x30(%r15),%edi
  0x000000011ba52ad3: cmp    $0x0,%edi
  0x000000011ba52ad6: jne    0x000000011ba52bbb
  0x000000011ba52adc: mov    %r9,%r10
  0x000000011ba52adf: shr    $0x3,%r10
  0x000000011ba52ae3: mov    %r10d,0x18(%rsi)
  0x000000011ba52ae7: mov    %rsi,%rdi
  0x000000011ba52aea: xor    %r9,%rdi
  0x000000011ba52aed: shr    $0x14,%rdi
  0x000000011ba52af1: cmp    $0x0,%rdi
  0x000000011ba52af5: jne    0x000000011ba52bda  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)

  0x000000011ba52afb: add    $0x30,%rsp
  0x000000011ba52aff: pop    %rbp
  0x000000011ba52b00: mov    0x108(%r15),%r10
  0x000000011ba52b07: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba52b0a: retq   
  0x000000011ba52b0b: movabs $0x1326b8290,%r10  ;   {metadata({method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011ba52b15: mov    %r10,0x8(%rsp)
  0x000000011ba52b1a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba52b22: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba52b27: jmpq   0x000000011ba52a34
  0x000000011ba52b2c: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba52b36: mov    %r10,0x8(%rsp)
  0x000000011ba52b3b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba52b43: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba52b48: jmpq   0x000000011ba52a71
  0x000000011ba52b4d: mov    0x10(%rsi),%edi
  0x000000011ba52b50: shl    $0x3,%rdi
  0x000000011ba52b54: cmp    $0x0,%rdi
  0x000000011ba52b58: je     0x000000011ba52a82
  0x000000011ba52b5e: mov    %rdi,(%rsp)
  0x000000011ba52b62: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba52b67: jmpq   0x000000011ba52a82
  0x000000011ba52b6c: cmp    $0x0,%rcx
  0x000000011ba52b70: je     0x000000011ba52aa1
  0x000000011ba52b76: mov    %rsi,(%rsp)
  0x000000011ba52b7a: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba52b7f: jmpq   0x000000011ba52aa1
  0x000000011ba52b84: mov    0x14(%rsi),%edi
  0x000000011ba52b87: shl    $0x3,%rdi
  0x000000011ba52b8b: cmp    $0x0,%rdi
  0x000000011ba52b8f: je     0x000000011ba52aaf
  0x000000011ba52b95: mov    %rdi,(%rsp)
  0x000000011ba52b99: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba52b9e: jmpq   0x000000011ba52aaf
  0x000000011ba52ba3: cmp    $0x0,%r8
  0x000000011ba52ba7: je     0x000000011ba52ace
  0x000000011ba52bad: mov    %rsi,(%rsp)
  0x000000011ba52bb1: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba52bb6: jmpq   0x000000011ba52ace
  0x000000011ba52bbb: mov    0x18(%rsi),%edi
  0x000000011ba52bbe: shl    $0x3,%rdi
  0x000000011ba52bc2: cmp    $0x0,%rdi
  0x000000011ba52bc6: je     0x000000011ba52adc
  0x000000011ba52bcc: mov    %rdi,(%rsp)
  0x000000011ba52bd0: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba52bd5: jmpq   0x000000011ba52adc
  0x000000011ba52bda: cmp    $0x0,%r9
  0x000000011ba52bde: je     0x000000011ba52afb
  0x000000011ba52be4: mov    %rsi,(%rsp)
  0x000000011ba52be8: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba52bed: jmpq   0x000000011ba52afb
  0x000000011ba52bf2: nop
  0x000000011ba52bf3: nop
  0x000000011ba52bf4: mov    0x420(%r15),%rax
  0x000000011ba52bfb: movabs $0x0,%r10
  0x000000011ba52c05: mov    %r10,0x420(%r15)
  0x000000011ba52c0c: movabs $0x0,%r10
  0x000000011ba52c16: mov    %r10,0x428(%r15)
  0x000000011ba52c1d: add    $0x30,%rsp
  0x000000011ba52c21: pop    %rbp
  0x000000011ba52c22: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba52c27: hlt    
  0x000000011ba52c28: hlt    
  0x000000011ba52c29: hlt    
  0x000000011ba52c2a: hlt    
  0x000000011ba52c2b: hlt    
  0x000000011ba52c2c: hlt    
  0x000000011ba52c2d: hlt    
  0x000000011ba52c2e: hlt    
  0x000000011ba52c2f: hlt    
  0x000000011ba52c30: hlt    
  0x000000011ba52c31: hlt    
  0x000000011ba52c32: hlt    
  0x000000011ba52c33: hlt    
  0x000000011ba52c34: hlt    
  0x000000011ba52c35: hlt    
  0x000000011ba52c36: hlt    
  0x000000011ba52c37: hlt    
  0x000000011ba52c38: hlt    
  0x000000011ba52c39: hlt    
  0x000000011ba52c3a: hlt    
  0x000000011ba52c3b: hlt    
  0x000000011ba52c3c: hlt    
  0x000000011ba52c3d: hlt    
  0x000000011ba52c3e: hlt    
  0x000000011ba52c3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba52c40: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba52c45: mov    %rsp,-0x28(%rsp)
  0x000000011ba52c4a: sub    $0x80,%rsp
  0x000000011ba52c51: mov    %rax,0x78(%rsp)
  0x000000011ba52c56: mov    %rcx,0x70(%rsp)
  0x000000011ba52c5b: mov    %rdx,0x68(%rsp)
  0x000000011ba52c60: mov    %rbx,0x60(%rsp)
  0x000000011ba52c65: mov    %rbp,0x50(%rsp)
  0x000000011ba52c6a: mov    %rsi,0x48(%rsp)
  0x000000011ba52c6f: mov    %rdi,0x40(%rsp)
  0x000000011ba52c74: mov    %r8,0x38(%rsp)
  0x000000011ba52c79: mov    %r9,0x30(%rsp)
  0x000000011ba52c7e: mov    %r10,0x28(%rsp)
  0x000000011ba52c83: mov    %r11,0x20(%rsp)
  0x000000011ba52c88: mov    %r12,0x18(%rsp)
  0x000000011ba52c8d: mov    %r13,0x10(%rsp)
  0x000000011ba52c92: mov    %r14,0x8(%rsp)
  0x000000011ba52c97: mov    %r15,(%rsp)
  0x000000011ba52c9b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba52ca5: movabs $0x11ba52c45,%rsi  ;   {internal_word}
  0x000000011ba52caf: mov    %rsp,%rdx
  0x000000011ba52cb2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba52cb6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba52cbb: hlt    
[Deopt Handler Code]
  0x000000011ba52cbc: movabs $0x11ba52cbc,%r10  ;   {section_word}
  0x000000011ba52cc6: push   %r10
  0x000000011ba52cc8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba52ccd: hlt    
  0x000000011ba52cce: hlt    
  0x000000011ba52ccf: hlt    

ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }pc offsets: 327 360 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='103' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='6656' iicount='6656' stamp='0.320' comment='tiered' hot_count='6656'/>
<writer thread='15363'/>
<nmethod compile_id='100' compiler='c2' level='4' entry='0x0000000122f7a120' size='848' address='0x0000000122f79f90' relocation_offset='376' insts_offset='400' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='624' dependencies_offset='816' nul_chk_table_offset='824' metadata_offset='552' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='6427' iicount='6429' stamp='0.320'/>
<make_not_entrant thread='15363' compile_id='25' compiler='c1' level='3' stamp='0.320'/>
<print_nmethod stamp='0.320'>
Compiled method (c2)     319  100       4       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)
 total in heap  [0x0000000122f79f90,0x0000000122f7a2e0] = 848
 relocation     [0x0000000122f7a108,0x0000000122f7a118] = 16
 main code      [0x0000000122f7a120,0x0000000122f7a1a0] = 128
 stub code      [0x0000000122f7a1a0,0x0000000122f7a1b8] = 24
 metadata       [0x0000000122f7a1b8,0x0000000122f7a1c0] = 8
 scopes data    [0x0000000122f7a1c0,0x0000000122f7a200] = 64
 scopes pcs     [0x0000000122f7a200,0x0000000122f7a2c0] = 192
 dependencies   [0x0000000122f7a2c0,0x0000000122f7a2c8] = 8
 nul chk table  [0x0000000122f7a2c8,0x0000000122f7a2e0] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.nextIndex()I  [0x0000000122f7a120, 0x0000000122f7a1b8]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132737ca8} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000122f7a120: mov    0x8(%rsi),%r10d
  0x0000000122f7a124: movabs $0x800000000,%r12
  0x0000000122f7a12e: add    %r12,%r10
  0x0000000122f7a131: xor    %r12,%r12
  0x0000000122f7a134: cmp    %r10,%rax
  0x0000000122f7a137: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7a13d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7a140: mov    %eax,-0x14000(%rsp)
  0x0000000122f7a147: push   %rbp
  0x0000000122f7a148: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@-1 (line 624)

  0x0000000122f7a14c: mov    0x14(%rsi),%r11d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@16 (line 626)

  0x0000000122f7a150: mov    0x10(%r12,%r11,8),%r10d  ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@19 (line 626)
                                                ; implicit exception: dispatches to 0x0000000122f7a17b
  0x0000000122f7a155: mov    0xc(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x0000000122f7a18a
  0x0000000122f7a15a: mov    0x10(%rsi),%eax
  0x0000000122f7a15d: inc    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@11 (line 626)

  0x0000000122f7a15f: cmp    %r11d,%eax
  0x0000000122f7a162: jge    0x0000000122f7a177  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@28 (line 627)

  0x0000000122f7a164: mov    %eax,0x10(%rsi)    ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@-1 (line 624)

  0x0000000122f7a167: add    $0x10,%rsp
  0x0000000122f7a16b: pop    %rbp
  0x0000000122f7a16c: mov    0x108(%r15),%r10
  0x0000000122f7a173: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7a176: retq   
  0x0000000122f7a177: xor    %eax,%eax
  0x0000000122f7a179: jmp    0x0000000122f7a164
  0x0000000122f7a17b: mov    $0xfffffff6,%esi
  0x0000000122f7a180: data16 xchg %ax,%ax
  0x0000000122f7a183: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@19 (line 626)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7a188: ud2                       ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@19 (line 626)

  0x0000000122f7a18a: mov    $0xfffffff6,%esi
  0x0000000122f7a18f: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7a194: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)

  0x0000000122f7a196: hlt    
  0x0000000122f7a197: hlt    
  0x0000000122f7a198: hlt    
  0x0000000122f7a199: hlt    
  0x0000000122f7a19a: hlt    
  0x0000000122f7a19b: hlt    
  0x0000000122f7a19c: hlt    
  0x0000000122f7a19d: hlt    
  0x0000000122f7a19e: hlt    
  0x0000000122f7a19f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7a1a0: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7a1a5: callq  0x0000000122f7a1aa
  0x0000000122f7a1aa: subq   $0x5,(%rsp)
  0x0000000122f7a1af: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7a1b4: hlt    
  0x0000000122f7a1b5: hlt    
  0x0000000122f7a1b6: hlt    
  0x0000000122f7a1b7: hlt    

ImmutableOopMap{}pc offsets: 104 116 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='87' compiler='c1' level='3' entry='0x000000011ba52fe0' size='1752' address='0x000000011ba52e10' relocation_offset='376' insts_offset='464' stub_offset='1264' scopes_data_offset='1432' scopes_pcs_offset='1568' dependencies_offset='1744' metadata_offset='1408' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='2617' iicount='2617' stamp='0.321'/>
<print_nmethod stamp='0.321'>
Compiled method (c1)     321   87       3       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x000000011ba52e10,0x000000011ba534e8] = 1752
 relocation     [0x000000011ba52f88,0x000000011ba52fd0] = 72
 main code      [0x000000011ba52fe0,0x000000011ba53300] = 800
 stub code      [0x000000011ba53300,0x000000011ba53390] = 144
 metadata       [0x000000011ba53390,0x000000011ba533a8] = 24
 scopes data    [0x000000011ba533a8,0x000000011ba53430] = 136
 scopes pcs     [0x000000011ba53430,0x000000011ba534e0] = 176
 dependencies   [0x000000011ba534e0,0x000000011ba534e8] = 8
----------------------------------------------------------------------
java/util/HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;  [0x000000011ba52fe0, 0x000000011ba53390]  944 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d4dd0} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011ba52fe0: mov    0x8(%rsi),%r10d
  0x000000011ba52fe4: movabs $0x800000000,%r12
  0x000000011ba52fee: add    %r12,%r10
  0x000000011ba52ff1: xor    %r12,%r12
  0x000000011ba52ff4: cmp    %rax,%r10
  0x000000011ba52ff7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba52ffd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba53000: mov    %eax,-0x14000(%rsp)
  0x000000011ba53007: push   %rbp
  0x000000011ba53008: sub    $0x60,%rsp
  0x000000011ba5300c: mov    %rdx,%rbx
  0x000000011ba5300f: mov    %rcx,%r11
  0x000000011ba53012: movabs $0x1328a22a0,%rdx  ;   {metadata(method data for {method} {0x00000001325d4dd0} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5301c: mov    0x104(%rdx),%edi
  0x000000011ba53022: add    $0x8,%edi
  0x000000011ba53025: mov    %edi,0x104(%rdx)
  0x000000011ba5302b: and    $0x1ff8,%edi
  0x000000011ba53031: cmp    $0x0,%edi
  0x000000011ba53034: je     0x000000011ba531a8
  0x000000011ba5303a: movabs $0x80002d030,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x000000011ba53044: mov    0x118(%r15),%rax
  0x000000011ba5304b: lea    0x20(%rax),%rdi
  0x000000011ba5304f: cmp    0x128(%r15),%rdi
  0x000000011ba53056: ja     0x000000011ba531c9
  0x000000011ba5305c: mov    %rdi,0x118(%r15)
  0x000000011ba53063: mov    0xb8(%rdx),%rcx
  0x000000011ba5306a: mov    %rcx,(%rax)
  0x000000011ba5306d: mov    %rdx,%rcx
  0x000000011ba53070: movabs $0x800000000,%r12
  0x000000011ba5307a: sub    %r12,%rcx
  0x000000011ba5307d: xor    %r12,%r12
  0x000000011ba53080: mov    %ecx,0x8(%rax)
  0x000000011ba53083: xor    %rcx,%rcx
  0x000000011ba53086: mov    %ecx,0xc(%rax)
  0x000000011ba53089: xor    %rcx,%rcx
  0x000000011ba5308c: mov    %rcx,0x10(%rax)
  0x000000011ba53090: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)

  0x000000011ba53094: mov    %rax,%rsi
  0x000000011ba53097: movabs $0x1328a22a0,%rdi  ;   {metadata(method data for {method} {0x00000001325d4dd0} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba530a1: addq   $0x1,0x140(%rdi)
  0x000000011ba530a9: movabs $0x13289ff80,%rsi  ;   {metadata(method data for {method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011ba530b3: mov    0x104(%rsi),%edi
  0x000000011ba530b9: add    $0x8,%edi
  0x000000011ba530bc: mov    %edi,0x104(%rsi)
  0x000000011ba530c2: and    $0x7ffff8,%edi
  0x000000011ba530c8: cmp    $0x0,%edi
  0x000000011ba530cb: je     0x000000011ba531d6
  0x000000011ba530d1: mov    %rax,%rsi
  0x000000011ba530d4: movabs $0x13289ff80,%rdi  ;   {metadata(method data for {method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011ba530de: addq   $0x1,0x140(%rdi)
  0x000000011ba530e6: movabs $0x1326ded60,%rsi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba530f0: mov    0x104(%rsi),%edi
  0x000000011ba530f6: add    $0x8,%edi
  0x000000011ba530f9: mov    %edi,0x104(%rsi)
  0x000000011ba530ff: and    $0x7ffff8,%edi
  0x000000011ba53105: cmp    $0x0,%edi
  0x000000011ba53108: je     0x000000011ba531f7
  0x000000011ba5310e: mov    %ebx,0xc(%rax)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011ba53111: movsbl 0x30(%r15),%esi
  0x000000011ba53116: cmp    $0x0,%esi
  0x000000011ba53119: jne    0x000000011ba53218
  0x000000011ba5311f: mov    %r11,%r10
  0x000000011ba53122: shr    $0x3,%r10
  0x000000011ba53126: mov    %r10d,0x10(%rax)
  0x000000011ba5312a: mov    %rax,%rsi
  0x000000011ba5312d: xor    %r11,%rsi
  0x000000011ba53130: shr    $0x14,%rsi
  0x000000011ba53134: cmp    $0x0,%rsi
  0x000000011ba53138: jne    0x000000011ba53237  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011ba5313e: movsbl 0x30(%r15),%esi
  0x000000011ba53143: cmp    $0x0,%esi
  0x000000011ba53146: jne    0x000000011ba5324f
  0x000000011ba5314c: mov    %r8,%r10
  0x000000011ba5314f: shr    $0x3,%r10
  0x000000011ba53153: mov    %r10d,0x14(%rax)
  0x000000011ba53157: mov    %rax,%rsi
  0x000000011ba5315a: xor    %r8,%rsi
  0x000000011ba5315d: shr    $0x14,%rsi
  0x000000011ba53161: cmp    $0x0,%rsi
  0x000000011ba53165: jne    0x000000011ba5326e  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011ba5316b: movsbl 0x30(%r15),%esi
  0x000000011ba53170: cmp    $0x0,%esi
  0x000000011ba53173: jne    0x000000011ba53286
  0x000000011ba53179: mov    %r9,%r10
  0x000000011ba5317c: shr    $0x3,%r10
  0x000000011ba53180: mov    %r10d,0x18(%rax)
  0x000000011ba53184: mov    %rax,%rsi
  0x000000011ba53187: xor    %r9,%rsi
  0x000000011ba5318a: shr    $0x14,%rsi
  0x000000011ba5318e: cmp    $0x0,%rsi
  0x000000011ba53192: jne    0x000000011ba532a5  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011ba53198: add    $0x60,%rsp
  0x000000011ba5319c: pop    %rbp
  0x000000011ba5319d: mov    0x108(%r15),%r10
  0x000000011ba531a4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba531a7: retq   
  0x000000011ba531a8: movabs $0x1325d4dd0,%r10  ;   {metadata({method} {0x00000001325d4dd0} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba531b2: mov    %r10,0x8(%rsp)
  0x000000011ba531b7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba531bf: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop r11=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1797)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba531c4: jmpq   0x000000011ba5303a
  0x000000011ba531c9: mov    %rdx,%rdx
  0x000000011ba531cc: callq  0x000000011b596780  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba531d1: jmpq   0x000000011ba53094
  0x000000011ba531d6: movabs $0x1326b8290,%r10  ;   {metadata({method} {0x00000001326b8290} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011ba531e0: mov    %r10,0x8(%rsp)
  0x000000011ba531e5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba531ed: callq  0x000000011b59a600  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba531f2: jmpq   0x000000011ba530d1
  0x000000011ba531f7: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba53201: mov    %r10,0x8(%rsp)
  0x000000011ba53206: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5320e: callq  0x000000011b59a600  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba53213: jmpq   0x000000011ba5310e
  0x000000011ba53218: mov    0x10(%rax),%esi
  0x000000011ba5321b: shl    $0x3,%rsi
  0x000000011ba5321f: cmp    $0x0,%rsi
  0x000000011ba53223: je     0x000000011ba5311f
  0x000000011ba53229: mov    %rsi,(%rsp)
  0x000000011ba5322d: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba53232: jmpq   0x000000011ba5311f
  0x000000011ba53237: cmp    $0x0,%r11
  0x000000011ba5323b: je     0x000000011ba5313e
  0x000000011ba53241: mov    %rax,(%rsp)
  0x000000011ba53245: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba5324a: jmpq   0x000000011ba5313e
  0x000000011ba5324f: mov    0x14(%rax),%esi
  0x000000011ba53252: shl    $0x3,%rsi
  0x000000011ba53256: cmp    $0x0,%rsi
  0x000000011ba5325a: je     0x000000011ba5314c
  0x000000011ba53260: mov    %rsi,(%rsp)
  0x000000011ba53264: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba53269: jmpq   0x000000011ba5314c
  0x000000011ba5326e: cmp    $0x0,%r8
  0x000000011ba53272: je     0x000000011ba5316b
  0x000000011ba53278: mov    %rax,(%rsp)
  0x000000011ba5327c: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba53281: jmpq   0x000000011ba5316b
  0x000000011ba53286: mov    0x18(%rax),%esi
  0x000000011ba53289: shl    $0x3,%rsi
  0x000000011ba5328d: cmp    $0x0,%rsi
  0x000000011ba53291: je     0x000000011ba53179
  0x000000011ba53297: mov    %rsi,(%rsp)
  0x000000011ba5329b: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba532a0: jmpq   0x000000011ba53179
  0x000000011ba532a5: cmp    $0x0,%r9
  0x000000011ba532a9: je     0x000000011ba53198
  0x000000011ba532af: mov    %rax,(%rsp)
  0x000000011ba532b3: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba532b8: jmpq   0x000000011ba53198
  0x000000011ba532bd: nop
  0x000000011ba532be: nop
  0x000000011ba532bf: mov    0x420(%r15),%rax
  0x000000011ba532c6: movabs $0x0,%r10
  0x000000011ba532d0: mov    %r10,0x420(%r15)
  0x000000011ba532d7: movabs $0x0,%r10
  0x000000011ba532e1: mov    %r10,0x428(%r15)
  0x000000011ba532e8: add    $0x60,%rsp
  0x000000011ba532ec: pop    %rbp
  0x000000011ba532ed: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba532f2: hlt    
  0x000000011ba532f3: hlt    
  0x000000011ba532f4: hlt    
  0x000000011ba532f5: hlt    
  0x000000011ba532f6: hlt    
  0x000000011ba532f7: hlt    
  0x000000011ba532f8: hlt    
  0x000000011ba532f9: hlt    
  0x000000011ba532fa: hlt    
  0x000000011ba532fb: hlt    
  0x000000011ba532fc: hlt    
  0x000000011ba532fd: hlt    
  0x000000011ba532fe: hlt    
  0x000000011ba532ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba53300: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba53305: mov    %rsp,-0x28(%rsp)
  0x000000011ba5330a: sub    $0x80,%rsp
  0x000000011ba53311: mov    %rax,0x78(%rsp)
  0x000000011ba53316: mov    %rcx,0x70(%rsp)
  0x000000011ba5331b: mov    %rdx,0x68(%rsp)
  0x000000011ba53320: mov    %rbx,0x60(%rsp)
  0x000000011ba53325: mov    %rbp,0x50(%rsp)
  0x000000011ba5332a: mov    %rsi,0x48(%rsp)
  0x000000011ba5332f: mov    %rdi,0x40(%rsp)
  0x000000011ba53334: mov    %r8,0x38(%rsp)
  0x000000011ba53339: mov    %r9,0x30(%rsp)
  0x000000011ba5333e: mov    %r10,0x28(%rsp)
  0x000000011ba53343: mov    %r11,0x20(%rsp)
  0x000000011ba53348: mov    %r12,0x18(%rsp)
  0x000000011ba5334d: mov    %r13,0x10(%rsp)
  0x000000011ba53352: mov    %r14,0x8(%rsp)
  0x000000011ba53357: mov    %r15,(%rsp)
  0x000000011ba5335b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba53365: movabs $0x11ba53305,%rsi  ;   {internal_word}
  0x000000011ba5336f: mov    %rsp,%rdx
  0x000000011ba53372: and    $0xfffffffffffffff0,%rsp
  0x000000011ba53376: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5337b: hlt    
[Deopt Handler Code]
  0x000000011ba5337c: movabs $0x11ba5337c,%r10  ;   {section_word}
  0x000000011ba53386: push   %r10
  0x000000011ba53388: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5338d: hlt    
  0x000000011ba5338e: hlt    
  0x000000011ba5338f: hlt    

ImmutableOopMap{rsi=Oop r11=Oop r8=Oop r9=Oop }pc offsets: 484 
ImmutableOopMap{r11=Oop r8=Oop r9=Oop }pc offsets: 497 
ImmutableOopMap{r11=Oop r8=Oop r9=Oop rax=Oop }pc offsets: 530 563 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='104' method='java.lang.module.ModuleDescriptor provides ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.326' comment='tiered' hot_count='128'/>
<writer thread='15363'/>
<nmethod compile_id='103' compiler='c2' level='4' entry='0x0000000122f7a4a0' size='640' address='0x0000000122f7a310' relocation_offset='376' insts_offset='400' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='552' dependencies_offset='632' metadata_offset='520' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='7748' iicount='7748' stamp='0.326'/>
<make_not_entrant thread='15363' compile_id='24' compiler='c1' level='3' stamp='0.326'/>
<print_nmethod stamp='0.326'>
Compiled method (c2)     325  103       4       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
 total in heap  [0x0000000122f7a310,0x0000000122f7a590] = 640
 relocation     [0x0000000122f7a488,0x0000000122f7a498] = 16
 main code      [0x0000000122f7a4a0,0x0000000122f7a500] = 96
 stub code      [0x0000000122f7a500,0x0000000122f7a518] = 24
 metadata       [0x0000000122f7a518,0x0000000122f7a520] = 8
 scopes data    [0x0000000122f7a520,0x0000000122f7a538] = 24
 scopes pcs     [0x0000000122f7a538,0x0000000122f7a588] = 80
 dependencies   [0x0000000122f7a588,0x0000000122f7a590] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.hasNext()Z  [0x0000000122f7a4a0, 0x0000000122f7a518]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132737bb8} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000122f7a4a0: mov    0x8(%rsi),%r10d
  0x0000000122f7a4a4: movabs $0x800000000,%r12
  0x0000000122f7a4ae: add    %r12,%r10
  0x0000000122f7a4b1: xor    %r12,%r12
  0x0000000122f7a4b4: cmp    %r10,%rax
  0x0000000122f7a4b7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7a4bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7a4c0: sub    $0x18,%rsp
  0x0000000122f7a4c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 620)

  0x0000000122f7a4cc: mov    0xc(%rsi),%r11d
  0x0000000122f7a4d0: test   %r11d,%r11d
  0x0000000122f7a4d3: jle    0x0000000122f7a4ea  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 620)

  0x0000000122f7a4d5: mov    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 620)

  0x0000000122f7a4da: add    $0x10,%rsp
  0x0000000122f7a4de: pop    %rbp
  0x0000000122f7a4df: mov    0x108(%r15),%r10
  0x0000000122f7a4e6: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7a4e9: retq   
  0x0000000122f7a4ea: xor    %eax,%eax
  0x0000000122f7a4ec: jmp    0x0000000122f7a4da
  0x0000000122f7a4ee: hlt    
  0x0000000122f7a4ef: hlt    
  0x0000000122f7a4f0: hlt    
  0x0000000122f7a4f1: hlt    
  0x0000000122f7a4f2: hlt    
  0x0000000122f7a4f3: hlt    
  0x0000000122f7a4f4: hlt    
  0x0000000122f7a4f5: hlt    
  0x0000000122f7a4f6: hlt    
  0x0000000122f7a4f7: hlt    
  0x0000000122f7a4f8: hlt    
  0x0000000122f7a4f9: hlt    
  0x0000000122f7a4fa: hlt    
  0x0000000122f7a4fb: hlt    
  0x0000000122f7a4fc: hlt    
  0x0000000122f7a4fd: hlt    
  0x0000000122f7a4fe: hlt    
  0x0000000122f7a4ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7a500: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7a505: callq  0x0000000122f7a50a
  0x0000000122f7a50a: subq   $0x5,(%rsp)
  0x0000000122f7a50f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7a514: hlt    
  0x0000000122f7a515: hlt    
  0x0000000122f7a516: hlt    
  0x0000000122f7a517: hlt    
</print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='88' compiler='c1' level='3' entry='0x000000011ba536c0' size='872' address='0x000000011ba53510' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='800' dependencies_offset='864' metadata_offset='768' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='2744' iicount='2744' stamp='0.327'/>
<print_nmethod stamp='0.327'>
Compiled method (c1)     326   88       3       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x000000011ba53510,0x000000011ba53878] = 872
 relocation     [0x000000011ba53688,0x000000011ba536b0] = 40
 main code      [0x000000011ba536c0,0x000000011ba53780] = 192
 stub code      [0x000000011ba53780,0x000000011ba53810] = 144
 metadata       [0x000000011ba53810,0x000000011ba53818] = 8
 scopes data    [0x000000011ba53818,0x000000011ba53830] = 24
 scopes pcs     [0x000000011ba53830,0x000000011ba53870] = 64
 dependencies   [0x000000011ba53870,0x000000011ba53878] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x000000011ba536c0, 0x000000011ba53810]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d52a0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x000000011ba536c0: mov    0x8(%rsi),%r10d
  0x000000011ba536c4: movabs $0x800000000,%r12
  0x000000011ba536ce: add    %r12,%r10
  0x000000011ba536d1: xor    %r12,%r12
  0x000000011ba536d4: cmp    %rax,%r10
  0x000000011ba536d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba536dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba536e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba536e7: push   %rbp
  0x000000011ba536e8: sub    $0x30,%rsp
  0x000000011ba536ec: movabs $0x1328a2430,%rdi  ;   {metadata(method data for {method} {0x00000001325d52a0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba536f6: mov    0x104(%rdi),%ebx
  0x000000011ba536fc: add    $0x8,%ebx
  0x000000011ba536ff: mov    %ebx,0x104(%rdi)
  0x000000011ba53705: and    $0x1ff8,%ebx
  0x000000011ba5370b: cmp    $0x0,%ebx
  0x000000011ba5370e: je     0x000000011ba53724  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1830)

  0x000000011ba53714: add    $0x30,%rsp
  0x000000011ba53718: pop    %rbp
  0x000000011ba53719: mov    0x108(%r15),%r10
  0x000000011ba53720: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba53723: retq   
  0x000000011ba53724: movabs $0x1325d52a0,%r10  ;   {metadata({method} {0x00000001325d52a0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5372e: mov    %r10,0x8(%rsp)
  0x000000011ba53733: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5373b: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1830)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba53740: jmp    0x000000011ba53714
  0x000000011ba53742: nop
  0x000000011ba53743: nop
  0x000000011ba53744: mov    0x420(%r15),%rax
  0x000000011ba5374b: movabs $0x0,%r10
  0x000000011ba53755: mov    %r10,0x420(%r15)
  0x000000011ba5375c: movabs $0x0,%r10
  0x000000011ba53766: mov    %r10,0x428(%r15)
  0x000000011ba5376d: add    $0x30,%rsp
  0x000000011ba53771: pop    %rbp
  0x000000011ba53772: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba53777: hlt    
  0x000000011ba53778: hlt    
  0x000000011ba53779: hlt    
  0x000000011ba5377a: hlt    
  0x000000011ba5377b: hlt    
  0x000000011ba5377c: hlt    
  0x000000011ba5377d: hlt    
  0x000000011ba5377e: hlt    
  0x000000011ba5377f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba53780: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba53785: mov    %rsp,-0x28(%rsp)
  0x000000011ba5378a: sub    $0x80,%rsp
  0x000000011ba53791: mov    %rax,0x78(%rsp)
  0x000000011ba53796: mov    %rcx,0x70(%rsp)
  0x000000011ba5379b: mov    %rdx,0x68(%rsp)
  0x000000011ba537a0: mov    %rbx,0x60(%rsp)
  0x000000011ba537a5: mov    %rbp,0x50(%rsp)
  0x000000011ba537aa: mov    %rsi,0x48(%rsp)
  0x000000011ba537af: mov    %rdi,0x40(%rsp)
  0x000000011ba537b4: mov    %r8,0x38(%rsp)
  0x000000011ba537b9: mov    %r9,0x30(%rsp)
  0x000000011ba537be: mov    %r10,0x28(%rsp)
  0x000000011ba537c3: mov    %r11,0x20(%rsp)
  0x000000011ba537c8: mov    %r12,0x18(%rsp)
  0x000000011ba537cd: mov    %r13,0x10(%rsp)
  0x000000011ba537d2: mov    %r14,0x8(%rsp)
  0x000000011ba537d7: mov    %r15,(%rsp)
  0x000000011ba537db: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba537e5: movabs $0x11ba53785,%rsi  ;   {internal_word}
  0x000000011ba537ef: mov    %rsp,%rdx
  0x000000011ba537f2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba537f6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba537fb: hlt    
[Deopt Handler Code]
  0x000000011ba537fc: movabs $0x11ba537fc,%r10  ;   {section_word}
  0x000000011ba53806: push   %r10
  0x000000011ba53808: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5380d: hlt    
  0x000000011ba5380e: hlt    
  0x000000011ba5380f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 128 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='105' method='java.lang.module.ModuleDescriptor exports ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.328' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='101' compiler='c1' level='3' entry='0x000000011ba53a60' size='1720' address='0x000000011ba53890' relocation_offset='376' insts_offset='464' stub_offset='1136' scopes_data_offset='1336' scopes_pcs_offset='1488' dependencies_offset='1696' nul_chk_table_offset='1704' metadata_offset='1320' method='java.util.HashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1743' iicount='1744' stamp='0.329'/>
<print_nmethod stamp='0.329'>
Compiled method (c1)     328  101       3       java.util.HashMap::putIfAbsent (13 bytes)
 total in heap  [0x000000011ba53890,0x000000011ba53f48] = 1720
 relocation     [0x000000011ba53a08,0x000000011ba53a60] = 88
 main code      [0x000000011ba53a60,0x000000011ba53d00] = 672
 stub code      [0x000000011ba53d00,0x000000011ba53db8] = 184
 metadata       [0x000000011ba53db8,0x000000011ba53dc8] = 16
 scopes data    [0x000000011ba53dc8,0x000000011ba53e60] = 152
 scopes pcs     [0x000000011ba53e60,0x000000011ba53f30] = 208
 dependencies   [0x000000011ba53f30,0x000000011ba53f38] = 8
 nul chk table  [0x000000011ba53f38,0x000000011ba53f48] = 16
----------------------------------------------------------------------
java/util/HashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011ba53a60, 0x000000011ba53db8]  856 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d3750} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011ba53a60: mov    0x8(%rsi),%r10d
  0x000000011ba53a64: movabs $0x800000000,%r12
  0x000000011ba53a6e: add    %r12,%r10
  0x000000011ba53a71: xor    %r12,%r12
  0x000000011ba53a74: cmp    %rax,%r10
  0x000000011ba53a77: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba53a7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba53a80: mov    %eax,-0x14000(%rsp)
  0x000000011ba53a87: push   %rbp
  0x000000011ba53a88: sub    $0x80,%rsp
  0x000000011ba53a8f: movabs $0x1328a4998,%rdi  ;   {metadata(method data for {method} {0x00000001325d3750} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53a99: mov    0x104(%rdi),%ebx
  0x000000011ba53a9f: add    $0x8,%ebx
  0x000000011ba53aa2: mov    %ebx,0x104(%rdi)
  0x000000011ba53aa8: and    $0x1ff8,%ebx
  0x000000011ba53aae: cmp    $0x0,%ebx
  0x000000011ba53ab1: je     0x000000011ba53c6f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putIfAbsent@0 (line 1057)

  0x000000011ba53ab7: movabs $0x1328a4998,%rdi  ;   {metadata(method data for {method} {0x00000001325d3750} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53ac1: addq   $0x1,0x140(%rdi)
  0x000000011ba53ac9: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53ad3: mov    0x104(%rdi),%ebx
  0x000000011ba53ad9: add    $0x8,%ebx
  0x000000011ba53adc: mov    %ebx,0x104(%rdi)
  0x000000011ba53ae2: and    $0x7ffff8,%ebx
  0x000000011ba53ae8: cmp    $0x0,%ebx
  0x000000011ba53aeb: je     0x000000011ba53c90
  0x000000011ba53af1: cmp    $0x0,%rdx
  0x000000011ba53af5: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53aff: movabs $0x140,%rbx
  0x000000011ba53b09: jne    0x000000011ba53b19
  0x000000011ba53b0f: movabs $0x150,%rbx
  0x000000011ba53b19: mov    (%rdi,%rbx,1),%rax
  0x000000011ba53b1d: lea    0x1(%rax),%rax
  0x000000011ba53b21: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba53b25: jne    0x000000011ba53b54  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011ba53b2b: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53b35: incl   0x160(%rdi)
  0x000000011ba53b3b: mov    $0x0,%edi
  0x000000011ba53b40: mov    %rcx,0x68(%rsp)
  0x000000011ba53b45: mov    %rdx,0x60(%rsp)
  0x000000011ba53b4a: mov    %rsi,0x58(%rsp)
  0x000000011ba53b4f: jmpq   0x000000011ba53c20  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011ba53b54: mov    %rcx,0x68(%rsp)
  0x000000011ba53b59: mov    %rsi,0x58(%rsp)
  0x000000011ba53b5e: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba53cb1
  0x000000011ba53b61: mov    %rdx,%rdi
  0x000000011ba53b64: movabs $0x132898ed8,%rbx  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53b6e: mov    0x8(%rdi),%edi
  0x000000011ba53b71: movabs $0x800000000,%r12
  0x000000011ba53b7b: add    %r12,%rdi
  0x000000011ba53b7e: xor    %r12,%r12
  0x000000011ba53b81: cmp    0x188(%rbx),%rdi
  0x000000011ba53b88: jne    0x000000011ba53b97
  0x000000011ba53b8a: addq   $0x1,0x190(%rbx)
  0x000000011ba53b92: jmpq   0x000000011ba53bfd
  0x000000011ba53b97: cmp    0x198(%rbx),%rdi
  0x000000011ba53b9e: jne    0x000000011ba53bad
  0x000000011ba53ba0: addq   $0x1,0x1a0(%rbx)
  0x000000011ba53ba8: jmpq   0x000000011ba53bfd
  0x000000011ba53bad: cmpq   $0x0,0x188(%rbx)
  0x000000011ba53bb8: jne    0x000000011ba53bd1
  0x000000011ba53bba: mov    %rdi,0x188(%rbx)
  0x000000011ba53bc1: movq   $0x1,0x190(%rbx)
  0x000000011ba53bcc: jmpq   0x000000011ba53bfd
  0x000000011ba53bd1: cmpq   $0x0,0x198(%rbx)
  0x000000011ba53bdc: jne    0x000000011ba53bf5
  0x000000011ba53bde: mov    %rdi,0x198(%rbx)
  0x000000011ba53be5: movq   $0x1,0x1a0(%rbx)
  0x000000011ba53bf0: jmpq   0x000000011ba53bfd
  0x000000011ba53bf5: addq   $0x1,0x178(%rbx)
  0x000000011ba53bfd: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011ba53c00: mov    %rdx,0x60(%rsp)
  0x000000011ba53c05: movabs $0x800001808,%rax
  0x000000011ba53c0f: callq  0x0000000122f79a20  ; ImmutableOopMap{[88]=Oop [96]=Oop [104]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)
                                                ;   {virtual_call}
  0x000000011ba53c14: mov    %rax,%rdx
  0x000000011ba53c17: shr    $0x10,%edx
  0x000000011ba53c1a: xor    %rax,%rdx
  0x000000011ba53c1d: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011ba53c20: mov    0x68(%rsp),%r8
  0x000000011ba53c25: mov    0x60(%rsp),%rcx
  0x000000011ba53c2a: mov    0x58(%rsp),%rsi
  0x000000011ba53c2f: mov    %rsi,%rdx
  0x000000011ba53c32: movabs $0x1328a4998,%r9   ;   {metadata(method data for {method} {0x00000001325d3750} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53c3c: addq   $0x1,0x150(%r9)
  0x000000011ba53c44: mov    %rdi,%rdx
  0x000000011ba53c47: mov    $0x1,%r9d
  0x000000011ba53c4d: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putIfAbsent@9 (line 1057)

  0x000000011ba53c52: nopl   0x0(%rax,%rax,1)
  0x000000011ba53c57: callq  0x000000011ba4f980  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putIfAbsent@9 (line 1057)
                                                ;   {optimized virtual_call}
  0x000000011ba53c5c: add    $0x80,%rsp
  0x000000011ba53c63: pop    %rbp
  0x000000011ba53c64: mov    0x108(%r15),%r10
  0x000000011ba53c6b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba53c6e: retq   
  0x000000011ba53c6f: movabs $0x1325d3750,%r10  ;   {metadata({method} {0x00000001325d3750} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53c79: mov    %r10,0x8(%rsp)
  0x000000011ba53c7e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba53c86: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putIfAbsent@-1 (line 1057)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba53c8b: jmpq   0x000000011ba53ab7
  0x000000011ba53c90: movabs $0x1325d17e0,%r10  ;   {metadata({method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba53c9a: mov    %r10,0x8(%rsp)
  0x000000011ba53c9f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba53ca7: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba53cac: jmpq   0x000000011ba53af1
  0x000000011ba53cb1: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [104]=Oop [88]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba53cb6: nop
  0x000000011ba53cb7: nop
  0x000000011ba53cb8: mov    0x420(%r15),%rax
  0x000000011ba53cbf: movabs $0x0,%r10
  0x000000011ba53cc9: mov    %r10,0x420(%r15)
  0x000000011ba53cd0: movabs $0x0,%r10
  0x000000011ba53cda: mov    %r10,0x428(%r15)
  0x000000011ba53ce1: add    $0x80,%rsp
  0x000000011ba53ce8: pop    %rbp
  0x000000011ba53ce9: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba53cee: hlt    
  0x000000011ba53cef: hlt    
  0x000000011ba53cf0: hlt    
  0x000000011ba53cf1: hlt    
  0x000000011ba53cf2: hlt    
  0x000000011ba53cf3: hlt    
  0x000000011ba53cf4: hlt    
  0x000000011ba53cf5: hlt    
  0x000000011ba53cf6: hlt    
  0x000000011ba53cf7: hlt    
  0x000000011ba53cf8: hlt    
  0x000000011ba53cf9: hlt    
  0x000000011ba53cfa: hlt    
  0x000000011ba53cfb: hlt    
  0x000000011ba53cfc: hlt    
  0x000000011ba53cfd: hlt    
  0x000000011ba53cfe: hlt    
  0x000000011ba53cff: hlt    
[Stub Code]
  0x000000011ba53d00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba53d05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba53d0f: jmpq   0x000000011ba53d0f  ;   {runtime_call}
  0x000000011ba53d14: nop
  0x000000011ba53d15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba53d1f: jmpq   0x000000011ba53d1f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba53d24: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba53d29: mov    %rsp,-0x28(%rsp)
  0x000000011ba53d2e: sub    $0x80,%rsp
  0x000000011ba53d35: mov    %rax,0x78(%rsp)
  0x000000011ba53d3a: mov    %rcx,0x70(%rsp)
  0x000000011ba53d3f: mov    %rdx,0x68(%rsp)
  0x000000011ba53d44: mov    %rbx,0x60(%rsp)
  0x000000011ba53d49: mov    %rbp,0x50(%rsp)
  0x000000011ba53d4e: mov    %rsi,0x48(%rsp)
  0x000000011ba53d53: mov    %rdi,0x40(%rsp)
  0x000000011ba53d58: mov    %r8,0x38(%rsp)
  0x000000011ba53d5d: mov    %r9,0x30(%rsp)
  0x000000011ba53d62: mov    %r10,0x28(%rsp)
  0x000000011ba53d67: mov    %r11,0x20(%rsp)
  0x000000011ba53d6c: mov    %r12,0x18(%rsp)
  0x000000011ba53d71: mov    %r13,0x10(%rsp)
  0x000000011ba53d76: mov    %r14,0x8(%rsp)
  0x000000011ba53d7b: mov    %r15,(%rsp)
  0x000000011ba53d7f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba53d89: movabs $0x11ba53d29,%rsi  ;   {internal_word}
  0x000000011ba53d93: mov    %rsp,%rdx
  0x000000011ba53d96: and    $0xfffffffffffffff0,%rsp
  0x000000011ba53d9a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba53d9f: hlt    
[Deopt Handler Code]
  0x000000011ba53da0: movabs $0x11ba53da0,%r10  ;   {section_word}
  0x000000011ba53daa: push   %r10
  0x000000011ba53dac: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba53db1: hlt    
  0x000000011ba53db2: hlt    
  0x000000011ba53db3: hlt    
  0x000000011ba53db4: hlt    
  0x000000011ba53db5: hlt    
  0x000000011ba53db6: hlt    
  0x000000011ba53db7: hlt    

ImmutableOopMap{[88]=Oop [96]=Oop [104]=Oop }pc offsets: 436 
ImmutableOopMap{}pc offsets: 508 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 555 588 
ImmutableOopMap{rdx=Oop [104]=Oop [88]=Oop }pc offsets: 598 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='106' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='3584' iicount='3584' level='1' stamp='0.333' comment='tiered' hot_count='3584'/>
<writer thread='15875'/>
<nmethod compile_id='106' compiler='c1' level='1' entry='0x0000000122f7a7c0' size='776' address='0x0000000122f7a610' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='720' dependencies_offset='768' metadata_offset='704' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='3657' iicount='3657' stamp='0.333'/>
<make_not_entrant thread='15875' compile_id='88' compiler='c1' level='3' stamp='0.333'/>
<print_nmethod stamp='0.333'>
Compiled method (c1)     332  106       1       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x0000000122f7a610,0x0000000122f7a918] = 776
 relocation     [0x0000000122f7a788,0x0000000122f7a7b0] = 40
 main code      [0x0000000122f7a7c0,0x0000000122f7a840] = 128
 stub code      [0x0000000122f7a840,0x0000000122f7a8d0] = 144
 metadata       [0x0000000122f7a8d0,0x0000000122f7a8d8] = 8
 scopes data    [0x0000000122f7a8d8,0x0000000122f7a8e0] = 8
 scopes pcs     [0x0000000122f7a8e0,0x0000000122f7a910] = 48
 dependencies   [0x0000000122f7a910,0x0000000122f7a918] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x0000000122f7a7c0, 0x0000000122f7a8d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d52a0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7a7c0: mov    0x8(%rsi),%r10d
  0x0000000122f7a7c4: movabs $0x800000000,%r12
  0x0000000122f7a7ce: add    %r12,%r10
  0x0000000122f7a7d1: xor    %r12,%r12
  0x0000000122f7a7d4: cmp    %rax,%r10
  0x0000000122f7a7d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7a7dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7a7e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7a7e7: push   %rbp
  0x0000000122f7a7e8: sub    $0x30,%rsp         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1830)

  0x0000000122f7a7ec: add    $0x30,%rsp
  0x0000000122f7a7f0: pop    %rbp
  0x0000000122f7a7f1: mov    0x108(%r15),%r10
  0x0000000122f7a7f8: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7a7fb: retq   
  0x0000000122f7a7fc: nop
  0x0000000122f7a7fd: nop
  0x0000000122f7a7fe: mov    0x420(%r15),%rax
  0x0000000122f7a805: movabs $0x0,%r10
  0x0000000122f7a80f: mov    %r10,0x420(%r15)
  0x0000000122f7a816: movabs $0x0,%r10
  0x0000000122f7a820: mov    %r10,0x428(%r15)
  0x0000000122f7a827: add    $0x30,%rsp
  0x0000000122f7a82b: pop    %rbp
  0x0000000122f7a82c: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7a831: hlt    
  0x0000000122f7a832: hlt    
  0x0000000122f7a833: hlt    
  0x0000000122f7a834: hlt    
  0x0000000122f7a835: hlt    
  0x0000000122f7a836: hlt    
  0x0000000122f7a837: hlt    
  0x0000000122f7a838: hlt    
  0x0000000122f7a839: hlt    
  0x0000000122f7a83a: hlt    
  0x0000000122f7a83b: hlt    
  0x0000000122f7a83c: hlt    
  0x0000000122f7a83d: hlt    
  0x0000000122f7a83e: hlt    
  0x0000000122f7a83f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7a840: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7a845: mov    %rsp,-0x28(%rsp)
  0x0000000122f7a84a: sub    $0x80,%rsp
  0x0000000122f7a851: mov    %rax,0x78(%rsp)
  0x0000000122f7a856: mov    %rcx,0x70(%rsp)
  0x0000000122f7a85b: mov    %rdx,0x68(%rsp)
  0x0000000122f7a860: mov    %rbx,0x60(%rsp)
  0x0000000122f7a865: mov    %rbp,0x50(%rsp)
  0x0000000122f7a86a: mov    %rsi,0x48(%rsp)
  0x0000000122f7a86f: mov    %rdi,0x40(%rsp)
  0x0000000122f7a874: mov    %r8,0x38(%rsp)
  0x0000000122f7a879: mov    %r9,0x30(%rsp)
  0x0000000122f7a87e: mov    %r10,0x28(%rsp)
  0x0000000122f7a883: mov    %r11,0x20(%rsp)
  0x0000000122f7a888: mov    %r12,0x18(%rsp)
  0x0000000122f7a88d: mov    %r13,0x10(%rsp)
  0x0000000122f7a892: mov    %r14,0x8(%rsp)
  0x0000000122f7a897: mov    %r15,(%rsp)
  0x0000000122f7a89b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7a8a5: movabs $0x122f7a845,%rsi  ;   {internal_word}
  0x0000000122f7a8af: mov    %rsp,%rdx
  0x0000000122f7a8b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7a8b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7a8bb: hlt    
[Deopt Handler Code]
  0x0000000122f7a8bc: movabs $0x122f7a8bc,%r10  ;   {section_word}
  0x0000000122f7a8c6: push   %r10
  0x0000000122f7a8c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7a8cd: hlt    
  0x0000000122f7a8ce: hlt    
  0x0000000122f7a8cf: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='107' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='5527' backedge_count='5288' iicount='5527' stamp='0.334' comment='tiered' hot_count='5527'/>
<task_queued compile_id='108' method='java.lang.module.ResolvedModule reference ()Ljava/lang/module/ModuleReference;' bytes='5' count='128' iicount='128' level='1' stamp='0.334' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='98' compiler='c1' level='3' entry='0x000000011ba54160' size='1304' address='0x000000011ba53f90' relocation_offset='376' insts_offset='464' stub_offset='944' scopes_data_offset='1120' scopes_pcs_offset='1168' dependencies_offset='1296' metadata_offset='1112' method='java.util.AbstractCollection isEmpty ()Z' bytes='13' count='2411' iicount='2411' stamp='0.334'/>
<print_nmethod stamp='0.334'>
Compiled method (c1)     334   98       3       java.util.AbstractCollection::isEmpty (13 bytes)
 total in heap  [0x000000011ba53f90,0x000000011ba544a8] = 1304
 relocation     [0x000000011ba54108,0x000000011ba54148] = 64
 main code      [0x000000011ba54160,0x000000011ba54340] = 480
 stub code      [0x000000011ba54340,0x000000011ba543e8] = 168
 metadata       [0x000000011ba543e8,0x000000011ba543f0] = 8
 scopes data    [0x000000011ba543f0,0x000000011ba54420] = 48
 scopes pcs     [0x000000011ba54420,0x000000011ba544a0] = 128
 dependencies   [0x000000011ba544a0,0x000000011ba544a8] = 8
----------------------------------------------------------------------
java/util/AbstractCollection.isEmpty()Z  [0x000000011ba54160, 0x000000011ba543e8]  648 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325c7100} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/AbstractCollection&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba54160: mov    0x8(%rsi),%r10d
  0x000000011ba54164: movabs $0x800000000,%r12
  0x000000011ba5416e: add    %r12,%r10
  0x000000011ba54171: xor    %r12,%r12
  0x000000011ba54174: cmp    %rax,%r10
  0x000000011ba54177: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5417d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba54180: mov    %eax,-0x14000(%rsp)
  0x000000011ba54187: push   %rbp
  0x000000011ba54188: sub    $0x30,%rsp
  0x000000011ba5418c: movabs $0x1328a4558,%rdi  ;   {metadata(method data for {method} {0x00000001325c7100} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba54196: mov    0x104(%rdi),%ebx
  0x000000011ba5419c: add    $0x8,%ebx
  0x000000011ba5419f: mov    %ebx,0x104(%rdi)
  0x000000011ba541a5: and    $0x1ff8,%ebx
  0x000000011ba541ab: cmp    $0x0,%ebx
  0x000000011ba541ae: je     0x000000011ba542cf  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::isEmpty@0 (line 87)

  0x000000011ba541b4: mov    %rsi,%rdi
  0x000000011ba541b7: movabs $0x1328a4558,%rbx  ;   {metadata(method data for {method} {0x00000001325c7100} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba541c1: mov    0x8(%rdi),%edi
  0x000000011ba541c4: movabs $0x800000000,%r12
  0x000000011ba541ce: add    %r12,%rdi
  0x000000011ba541d1: xor    %r12,%r12
  0x000000011ba541d4: cmp    0x150(%rbx),%rdi
  0x000000011ba541db: jne    0x000000011ba541ea
  0x000000011ba541dd: addq   $0x1,0x158(%rbx)
  0x000000011ba541e5: jmpq   0x000000011ba54250
  0x000000011ba541ea: cmp    0x160(%rbx),%rdi
  0x000000011ba541f1: jne    0x000000011ba54200
  0x000000011ba541f3: addq   $0x1,0x168(%rbx)
  0x000000011ba541fb: jmpq   0x000000011ba54250
  0x000000011ba54200: cmpq   $0x0,0x150(%rbx)
  0x000000011ba5420b: jne    0x000000011ba54224
  0x000000011ba5420d: mov    %rdi,0x150(%rbx)
  0x000000011ba54214: movq   $0x1,0x158(%rbx)
  0x000000011ba5421f: jmpq   0x000000011ba54250
  0x000000011ba54224: cmpq   $0x0,0x160(%rbx)
  0x000000011ba5422f: jne    0x000000011ba54248
  0x000000011ba54231: mov    %rdi,0x160(%rbx)
  0x000000011ba54238: movq   $0x1,0x168(%rbx)
  0x000000011ba54243: jmpq   0x000000011ba54250
  0x000000011ba54248: addq   $0x1,0x140(%rbx)
  0x000000011ba54250: nopl   0x0(%rax,%rax,1)
  0x000000011ba54255: movabs $0xffffffffffffffff,%rax
  0x000000011ba5425f: callq  0x000000011b4d4060  ; ImmutableOopMap{}
                                                ;*invokevirtual size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::isEmpty@1 (line 87)
                                                ;   {virtual_call}
  0x000000011ba54264: cmp    $0x0,%eax
  0x000000011ba54267: movabs $0x1328a4558,%rax  ;   {metadata(method data for {method} {0x00000001325c7100} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba54271: movabs $0x178,%rsi
  0x000000011ba5427b: jne    0x000000011ba5428b
  0x000000011ba54281: movabs $0x188,%rsi
  0x000000011ba5428b: mov    (%rax,%rsi,1),%rdi
  0x000000011ba5428f: lea    0x1(%rdi),%rdi
  0x000000011ba54293: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba54297: jne    0x000000011ba542b7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::isEmpty@4 (line 87)

  0x000000011ba5429d: movabs $0x1328a4558,%rax  ;   {metadata(method data for {method} {0x00000001325c7100} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba542a7: incl   0x198(%rax)
  0x000000011ba542ad: mov    $0x1,%eax
  0x000000011ba542b2: jmpq   0x000000011ba542bc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::isEmpty@8 (line 87)

  0x000000011ba542b7: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::isEmpty@12 (line 87)

  0x000000011ba542bc: and    $0x1,%eax
  0x000000011ba542bf: add    $0x30,%rsp
  0x000000011ba542c3: pop    %rbp
  0x000000011ba542c4: mov    0x108(%r15),%r10
  0x000000011ba542cb: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba542ce: retq   
  0x000000011ba542cf: movabs $0x1325c7100,%r10  ;   {metadata({method} {0x00000001325c7100} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x000000011ba542d9: mov    %r10,0x8(%rsp)
  0x000000011ba542de: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba542e6: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::isEmpty@-1 (line 87)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba542eb: jmpq   0x000000011ba541b4
  0x000000011ba542f0: nop
  0x000000011ba542f1: nop
  0x000000011ba542f2: mov    0x420(%r15),%rax
  0x000000011ba542f9: movabs $0x0,%r10
  0x000000011ba54303: mov    %r10,0x420(%r15)
  0x000000011ba5430a: movabs $0x0,%r10
  0x000000011ba54314: mov    %r10,0x428(%r15)
  0x000000011ba5431b: add    $0x30,%rsp
  0x000000011ba5431f: pop    %rbp
  0x000000011ba54320: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba54325: hlt    
  0x000000011ba54326: hlt    
  0x000000011ba54327: hlt    
  0x000000011ba54328: hlt    
  0x000000011ba54329: hlt    
  0x000000011ba5432a: hlt    
  0x000000011ba5432b: hlt    
  0x000000011ba5432c: hlt    
  0x000000011ba5432d: hlt    
  0x000000011ba5432e: hlt    
  0x000000011ba5432f: hlt    
  0x000000011ba54330: hlt    
  0x000000011ba54331: hlt    
  0x000000011ba54332: hlt    
  0x000000011ba54333: hlt    
  0x000000011ba54334: hlt    
  0x000000011ba54335: hlt    
  0x000000011ba54336: hlt    
  0x000000011ba54337: hlt    
  0x000000011ba54338: hlt    
  0x000000011ba54339: hlt    
  0x000000011ba5433a: hlt    
  0x000000011ba5433b: hlt    
  0x000000011ba5433c: hlt    
  0x000000011ba5433d: hlt    
  0x000000011ba5433e: hlt    
  0x000000011ba5433f: hlt    
[Stub Code]
  0x000000011ba54340: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba54345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5434f: jmpq   0x000000011ba5434f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba54354: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba54359: mov    %rsp,-0x28(%rsp)
  0x000000011ba5435e: sub    $0x80,%rsp
  0x000000011ba54365: mov    %rax,0x78(%rsp)
  0x000000011ba5436a: mov    %rcx,0x70(%rsp)
  0x000000011ba5436f: mov    %rdx,0x68(%rsp)
  0x000000011ba54374: mov    %rbx,0x60(%rsp)
  0x000000011ba54379: mov    %rbp,0x50(%rsp)
  0x000000011ba5437e: mov    %rsi,0x48(%rsp)
  0x000000011ba54383: mov    %rdi,0x40(%rsp)
  0x000000011ba54388: mov    %r8,0x38(%rsp)
  0x000000011ba5438d: mov    %r9,0x30(%rsp)
  0x000000011ba54392: mov    %r10,0x28(%rsp)
  0x000000011ba54397: mov    %r11,0x20(%rsp)
  0x000000011ba5439c: mov    %r12,0x18(%rsp)
  0x000000011ba543a1: mov    %r13,0x10(%rsp)
  0x000000011ba543a6: mov    %r14,0x8(%rsp)
  0x000000011ba543ab: mov    %r15,(%rsp)
  0x000000011ba543af: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba543b9: movabs $0x11ba54359,%rsi  ;   {internal_word}
  0x000000011ba543c3: mov    %rsp,%rdx
  0x000000011ba543c6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba543ca: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba543cf: hlt    
[Deopt Handler Code]
  0x000000011ba543d0: movabs $0x11ba543d0,%r10  ;   {section_word}
  0x000000011ba543da: push   %r10
  0x000000011ba543dc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba543e1: hlt    
  0x000000011ba543e2: hlt    
  0x000000011ba543e3: hlt    
  0x000000011ba543e4: hlt    
  0x000000011ba543e5: hlt    
  0x000000011ba543e6: hlt    
  0x000000011ba543e7: hlt    

ImmutableOopMap{}pc offsets: 260 
ImmutableOopMap{rsi=Oop }pc offsets: 395 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='109' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='5632' iicount='5632' stamp='0.337' comment='tiered' hot_count='5632'/>
<writer thread='15363'/>
<nmethod compile_id='107' compiler='c2' level='4' entry='0x0000000122f7ab20' size='1408' address='0x0000000122f7a990' relocation_offset='376' insts_offset='400' stub_offset='688' scopes_data_offset='736' scopes_pcs_offset='896' dependencies_offset='1376' nul_chk_table_offset='1384' metadata_offset='712' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='5959' backedge_count='5716' iicount='5960' stamp='0.337'/>
<make_not_entrant thread='15363' compile_id='74' compiler='c1' level='3' stamp='0.337'/>
<print_nmethod stamp='0.337'>
Compiled method (c2)     336  107       4       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
 total in heap  [0x0000000122f7a990,0x0000000122f7af10] = 1408
 relocation     [0x0000000122f7ab08,0x0000000122f7ab20] = 24
 main code      [0x0000000122f7ab20,0x0000000122f7ac40] = 288
 stub code      [0x0000000122f7ac40,0x0000000122f7ac58] = 24
 metadata       [0x0000000122f7ac58,0x0000000122f7ac70] = 24
 scopes data    [0x0000000122f7ac70,0x0000000122f7ad10] = 160
 scopes pcs     [0x0000000122f7ad10,0x0000000122f7aef0] = 480
 dependencies   [0x0000000122f7aef0,0x0000000122f7aef8] = 8
 nul chk table  [0x0000000122f7aef8,0x0000000122f7af10] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.next()Ljava/lang/Object;  [0x0000000122f7ab20, 0x0000000122f7ac58]  312 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132737d90} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000122f7ab20: mov    0x8(%rsi),%r10d
  0x0000000122f7ab24: movabs $0x800000000,%r12
  0x0000000122f7ab2e: add    %r12,%r10
  0x0000000122f7ab31: xor    %r12,%r12
  0x0000000122f7ab34: cmp    %r10,%rax
  0x0000000122f7ab37: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7ab3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7ab40: mov    %eax,-0x14000(%rsp)
  0x0000000122f7ab47: push   %rbp
  0x0000000122f7ab48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 639)

  0x0000000122f7ab4c: mov    0xc(%rsi),%edi     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)

  0x0000000122f7ab4f: test   %edi,%edi
  0x0000000122f7ab51: jle    0x0000000122f7abf2  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 620)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 639)

  0x0000000122f7ab57: mov    0x14(%rsi),%r10d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@8 (line 642)

  0x0000000122f7ab5b: mov    0x10(%r12,%r10,8),%r10d  ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 642)
                                                ; implicit exception: dispatches to 0x0000000122f7ac1a
  0x0000000122f7ab60: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)
                                                ; implicit exception: dispatches to 0x0000000122f7ac26
  0x0000000122f7ab65: mov    0x10(%rsi),%r11d
  0x0000000122f7ab69: inc    %r11d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@11 (line 626)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7ab6c: cmp    %r8d,%r11d
  0x0000000122f7ab6f: jge    0x0000000122f7abcf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@28 (line 627)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7ab71: mov    %r11d,0x10(%rsi)   ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@52 (line 634)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7ab75: cmp    %r8d,%r11d
  0x0000000122f7ab78: jae    0x0000000122f7abd9
  0x0000000122f7ab7a: lea    (%r12,%r10,8),%r9
  0x0000000122f7ab7e: mov    0x10(%r9,%r11,4),%ecx  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)

  0x0000000122f7ab83: test   %ecx,%ecx
  0x0000000122f7ab85: jne    0x0000000122f7abb6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)

  0x0000000122f7ab87: mov    0x108(%r15),%r11   ; ImmutableOopMap{r10=NarrowOop r9=Oop rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)

  0x0000000122f7ab8e: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 642)
                                                ;   {poll}
  0x0000000122f7ab91: mov    0x10(%rsi),%r11d
  0x0000000122f7ab95: inc    %r11d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@11 (line 626)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7ab98: cmp    %r8d,%r11d
  0x0000000122f7ab9b: jge    0x0000000122f7abd4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@28 (line 627)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7ab9d: mov    %r11d,0x10(%rsi)   ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@52 (line 634)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7aba1: cmp    %r8d,%r11d
  0x0000000122f7aba4: jae    0x0000000122f7ac02
  0x0000000122f7aba6: mov    0x10(%r9,%r11,4),%r11d  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)

  0x0000000122f7abab: test   %r11d,%r11d
  0x0000000122f7abae: je     0x0000000122f7ab87
  0x0000000122f7abb0: lea    (%r12,%r11,8),%rax
  0x0000000122f7abb4: jmp    0x0000000122f7abba
  0x0000000122f7abb6: lea    (%r12,%rcx,8),%rax  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@21 (line 642)

  0x0000000122f7abba: dec    %edi
  0x0000000122f7abbc: mov    %edi,0xc(%rsi)     ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 639)

  0x0000000122f7abbf: add    $0x20,%rsp
  0x0000000122f7abc3: pop    %rbp
  0x0000000122f7abc4: mov    0x108(%r15),%r10
  0x0000000122f7abcb: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7abce: retq   
  0x0000000122f7abcf: xor    %r11d,%r11d
  0x0000000122f7abd2: jmp    0x0000000122f7ab71
  0x0000000122f7abd4: xor    %r11d,%r11d
  0x0000000122f7abd7: jmp    0x0000000122f7ab9d
  0x0000000122f7abd9: mov    %rsi,%rbp
  0x0000000122f7abdc: mov    %r10d,(%rsp)
  0x0000000122f7abe0: mov    %r11d,0x4(%rsp)
  0x0000000122f7abe5: mov    $0xffffffe4,%esi
  0x0000000122f7abea: nop
  0x0000000122f7abeb: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7abf0: ud2                       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)

  0x0000000122f7abf2: mov    %rsi,%rbp
  0x0000000122f7abf5: mov    $0xffffff4d,%esi
  0x0000000122f7abfa: nop
  0x0000000122f7abfb: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@4 (line 639)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7ac00: ud2    
  0x0000000122f7ac02: mov    %rsi,%rbp
  0x0000000122f7ac05: mov    %r10d,(%rsp)
  0x0000000122f7ac09: mov    %r11d,0x4(%rsp)
  0x0000000122f7ac0e: mov    $0xffffffe4,%esi
  0x0000000122f7ac13: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7ac18: ud2                       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 642)

  0x0000000122f7ac1a: mov    $0xfffffff6,%esi
  0x0000000122f7ac1f: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7ac24: ud2                       ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 642)

  0x0000000122f7ac26: mov    $0xfffffff6,%esi
  0x0000000122f7ac2b: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7ac30: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@22 (line 626)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 642)

  0x0000000122f7ac32: hlt    
  0x0000000122f7ac33: hlt    
  0x0000000122f7ac34: hlt    
  0x0000000122f7ac35: hlt    
  0x0000000122f7ac36: hlt    
  0x0000000122f7ac37: hlt    
  0x0000000122f7ac38: hlt    
  0x0000000122f7ac39: hlt    
  0x0000000122f7ac3a: hlt    
  0x0000000122f7ac3b: hlt    
  0x0000000122f7ac3c: hlt    
  0x0000000122f7ac3d: hlt    
  0x0000000122f7ac3e: hlt    
  0x0000000122f7ac3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7ac40: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7ac45: callq  0x0000000122f7ac4a
  0x0000000122f7ac4a: subq   $0x5,(%rsp)
  0x0000000122f7ac4f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7ac54: hlt    
  0x0000000122f7ac55: hlt    
  0x0000000122f7ac56: hlt    
  0x0000000122f7ac57: hlt    

ImmutableOopMap{r10=NarrowOop r9=Oop rsi=Oop }pc offsets: 110 
ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 208 
ImmutableOopMap{rbp=Oop }pc offsets: 224 
ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 248 
ImmutableOopMap{}pc offsets: 260 272 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='95' compiler='c1' level='1' entry='0x0000000122f7b140' size='800' address='0x0000000122f7af90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor$Exports source ()Ljava/lang/String;' bytes='5' count='2866' iicount='2866' stamp='0.340'/>
<writer thread='9987'/>
<task_queued compile_id='110' method='java.lang.module.ModuleDescriptor uses ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.340' comment='tiered' hot_count='128'/>
<task_queued compile_id='111' method='java.lang.module.ModuleDescriptor$Exports isQualified ()Z' bytes='18' count='5632' iicount='5632' stamp='0.340' comment='tiered' hot_count='5632'/>
<writer thread='15875'/>
<print_nmethod stamp='0.340'>
Compiled method (c1)     340   95       1       java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
 total in heap  [0x0000000122f7af90,0x0000000122f7b2b0] = 800
 relocation     [0x0000000122f7b108,0x0000000122f7b130] = 40
 main code      [0x0000000122f7b140,0x0000000122f7b1c0] = 128
 stub code      [0x0000000122f7b1c0,0x0000000122f7b250] = 144
 metadata       [0x0000000122f7b250,0x0000000122f7b258] = 8
 scopes data    [0x0000000122f7b258,0x0000000122f7b268] = 16
 scopes pcs     [0x0000000122f7b268,0x0000000122f7b2a8] = 64
 dependencies   [0x0000000122f7b2a8,0x0000000122f7b2b0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Exports.source()Ljava/lang/String;  [0x0000000122f7b140, 0x0000000122f7b250]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326de270} &apos;source&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7b140: mov    0x8(%rsi),%r10d
  0x0000000122f7b144: movabs $0x800000000,%r12
  0x0000000122f7b14e: add    %r12,%r10
  0x0000000122f7b151: xor    %r12,%r12
  0x0000000122f7b154: cmp    %rax,%r10
  0x0000000122f7b157: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7b15d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7b160: mov    %eax,-0x14000(%rsp)
  0x0000000122f7b167: push   %rbp
  0x0000000122f7b168: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::source@0 (line 454)

  0x0000000122f7b16c: mov    0x10(%rsi),%eax
  0x0000000122f7b16f: shl    $0x3,%rax          ;*getfield source {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::source@1 (line 454)

  0x0000000122f7b173: add    $0x30,%rsp
  0x0000000122f7b177: pop    %rbp
  0x0000000122f7b178: mov    0x108(%r15),%r10
  0x0000000122f7b17f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7b182: retq   
  0x0000000122f7b183: nop
  0x0000000122f7b184: nop
  0x0000000122f7b185: mov    0x420(%r15),%rax
  0x0000000122f7b18c: movabs $0x0,%r10
  0x0000000122f7b196: mov    %r10,0x420(%r15)
  0x0000000122f7b19d: movabs $0x0,%r10
  0x0000000122f7b1a7: mov    %r10,0x428(%r15)
  0x0000000122f7b1ae: add    $0x30,%rsp
  0x0000000122f7b1b2: pop    %rbp
  0x0000000122f7b1b3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7b1b8: hlt    
  0x0000000122f7b1b9: hlt    
  0x0000000122f7b1ba: hlt    
  0x0000000122f7b1bb: hlt    
  0x0000000122f7b1bc: hlt    
  0x0000000122f7b1bd: hlt    
  0x0000000122f7b1be: hlt    
  0x0000000122f7b1bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7b1c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7b1c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f7b1ca: sub    $0x80,%rsp
  0x0000000122f7b1d1: mov    %rax,0x78(%rsp)
  0x0000000122f7b1d6: mov    %rcx,0x70(%rsp)
  0x0000000122f7b1db: mov    %rdx,0x68(%rsp)
  0x0000000122f7b1e0: mov    %rbx,0x60(%rsp)
  0x0000000122f7b1e5: mov    %rbp,0x50(%rsp)
  0x0000000122f7b1ea: mov    %rsi,0x48(%rsp)
  0x0000000122f7b1ef: mov    %rdi,0x40(%rsp)
  0x0000000122f7b1f4: mov    %r8,0x38(%rsp)
  0x0000000122f7b1f9: mov    %r9,0x30(%rsp)
  0x0000000122f7b1fe: mov    %r10,0x28(%rsp)
  0x0000000122f7b203: mov    %r11,0x20(%rsp)
  0x0000000122f7b208: mov    %r12,0x18(%rsp)
  0x0000000122f7b20d: mov    %r13,0x10(%rsp)
  0x0000000122f7b212: mov    %r14,0x8(%rsp)
  0x0000000122f7b217: mov    %r15,(%rsp)
  0x0000000122f7b21b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7b225: movabs $0x122f7b1c5,%rsi  ;   {internal_word}
  0x0000000122f7b22f: mov    %rsp,%rdx
  0x0000000122f7b232: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7b236: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7b23b: hlt    
[Deopt Handler Code]
  0x0000000122f7b23c: movabs $0x122f7b23c,%r10  ;   {section_word}
  0x0000000122f7b246: push   %r10
  0x0000000122f7b248: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7b24d: hlt    
  0x0000000122f7b24e: hlt    
  0x0000000122f7b24f: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='112' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='6656' iicount='6656' stamp='0.342' comment='tiered' hot_count='6656'/>
<writer thread='15363'/>
<nmethod compile_id='109' compiler='c2' level='4' entry='0x0000000122f7b4a0' size='1424' address='0x0000000122f7b310' relocation_offset='376' insts_offset='400' stub_offset='880' scopes_data_offset='936' scopes_pcs_offset='1080' dependencies_offset='1416' metadata_offset='904' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='6743' iicount='6743' stamp='0.342'/>
<make_not_entrant thread='15363' compile_id='13' compiler='c1' level='3' stamp='0.342'/>
<print_nmethod stamp='0.342'>
Compiled method (c2)     341  109       4       java.lang.String::equals (65 bytes)
 total in heap  [0x0000000122f7b310,0x0000000122f7b8a0] = 1424
 relocation     [0x0000000122f7b488,0x0000000122f7b4a0] = 24
 main code      [0x0000000122f7b4a0,0x0000000122f7b680] = 480
 stub code      [0x0000000122f7b680,0x0000000122f7b698] = 24
 metadata       [0x0000000122f7b698,0x0000000122f7b6b8] = 32
 scopes data    [0x0000000122f7b6b8,0x0000000122f7b748] = 144
 scopes pcs     [0x0000000122f7b748,0x0000000122f7b898] = 336
 dependencies   [0x0000000122f7b898,0x0000000122f7b8a0] = 8
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x0000000122f7b4a0, 0x0000000122f7b698]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b0e00} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7b4a0: mov    0x8(%rsi),%r10d
  0x0000000122f7b4a4: movabs $0x800000000,%r12
  0x0000000122f7b4ae: add    %r12,%r10
  0x0000000122f7b4b1: xor    %r12,%r12
  0x0000000122f7b4b4: cmp    %r10,%rax
  0x0000000122f7b4b7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7b4bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7b4c0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7b4c7: push   %rbp
  0x0000000122f7b4c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)

  0x0000000122f7b4cc: cmp    %rdx,%rsi
  0x0000000122f7b4cf: je     0x0000000122f7b60e  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 1003)

  0x0000000122f7b4d5: xor    %eax,%eax
  0x0000000122f7b4d7: test   %rdx,%rdx
  0x0000000122f7b4da: je     0x0000000122f7b5fb
  0x0000000122f7b4e0: mov    0x8(%rdx),%r11d
  0x0000000122f7b4e4: cmp    $0x1808,%r11d      ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000122f7b4eb: jne    0x0000000122f7b64e  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)

  0x0000000122f7b4f1: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x0000000122f7b4f6: movsbl 0x14(%rdx),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x0000000122f7b4fa: cmp    %ebp,%r11d
  0x0000000122f7b4fd: jne    0x0000000122f7b615  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x0000000122f7b503: test   %r11d,%r11d
  0x0000000122f7b506: jne    0x0000000122f7b632  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x0000000122f7b50c: mov    0xc(%rdx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x0000000122f7b510: mov    0xc(%rsi),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x0000000122f7b514: mov    0xc(%r12,%r11,8),%r9d
  0x0000000122f7b519: mov    0xc(%r12,%r10,8),%ecx
  0x0000000122f7b51e: cmp    %r9d,%ecx
  0x0000000122f7b521: jne    0x0000000122f7b5fb  ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)

  0x0000000122f7b527: mov    %r11,%r8
  0x0000000122f7b52a: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x0000000122f7b52e: lea    0x10(%r12,%r11,8),%rsi
  0x0000000122f7b533: mov    %r10,%r11
  0x0000000122f7b536: shl    $0x3,%r11          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x0000000122f7b53a: lea    0x10(%r12,%r10,8),%rdi
  0x0000000122f7b53f: test   %ecx,%ecx
  0x0000000122f7b541: je     0x0000000122f7b5ea
  0x0000000122f7b547: mov    %ecx,%eax
  0x0000000122f7b549: and    $0x1f,%eax
  0x0000000122f7b54c: and    $0xffffffe0,%ecx
  0x0000000122f7b54f: je     0x0000000122f7b5a0
  0x0000000122f7b555: lea    (%rdi,%rcx,1),%rdi
  0x0000000122f7b559: lea    (%rsi,%rcx,1),%rsi
  0x0000000122f7b55d: neg    %rcx
  0x0000000122f7b560: vmovdqu (%rdi,%rcx,1),%ymm1
  0x0000000122f7b565: vmovdqu (%rsi,%rcx,1),%ymm0
  0x0000000122f7b56a: vpxor  %ymm0,%ymm1,%ymm1
  0x0000000122f7b56e: vptest %ymm1,%ymm1
  0x0000000122f7b573: jne    0x0000000122f7b5f1
  0x0000000122f7b579: add    $0x20,%rcx
  0x0000000122f7b57d: jne    0x0000000122f7b560
  0x0000000122f7b57f: test   %eax,%eax
  0x0000000122f7b581: je     0x0000000122f7b5ea
  0x0000000122f7b587: vmovdqu -0x20(%rdi,%rax,1),%ymm1
  0x0000000122f7b58d: vmovdqu -0x20(%rsi,%rax,1),%ymm0
  0x0000000122f7b593: vpxor  %ymm0,%ymm1,%ymm1
  0x0000000122f7b597: vptest %ymm1,%ymm1
  0x0000000122f7b59c: jne    0x0000000122f7b5f1
  0x0000000122f7b59e: jmp    0x0000000122f7b5ea
  0x0000000122f7b5a0: mov    %eax,%ecx
  0x0000000122f7b5a2: and    $0xfffffffc,%ecx
  0x0000000122f7b5a5: je     0x0000000122f7b5c0
  0x0000000122f7b5a7: lea    (%rdi,%rcx,1),%rdi
  0x0000000122f7b5ab: lea    (%rsi,%rcx,1),%rsi
  0x0000000122f7b5af: neg    %rcx
  0x0000000122f7b5b2: mov    (%rdi,%rcx,1),%ebx
  0x0000000122f7b5b5: cmp    (%rsi,%rcx,1),%ebx
  0x0000000122f7b5b8: jne    0x0000000122f7b5f1
  0x0000000122f7b5ba: add    $0x4,%rcx
  0x0000000122f7b5be: jne    0x0000000122f7b5b2
  0x0000000122f7b5c0: test   $0x2,%eax
  0x0000000122f7b5c5: je     0x0000000122f7b5d9
  0x0000000122f7b5c7: movzwl (%rdi),%ebx
  0x0000000122f7b5ca: movzwl (%rsi),%ecx
  0x0000000122f7b5cd: cmp    %ecx,%ebx
  0x0000000122f7b5cf: jne    0x0000000122f7b5f1
  0x0000000122f7b5d1: lea    0x2(%rdi),%rdi
  0x0000000122f7b5d5: lea    0x2(%rsi),%rsi
  0x0000000122f7b5d9: test   $0x1,%eax
  0x0000000122f7b5de: je     0x0000000122f7b5ea
  0x0000000122f7b5e0: movzbl (%rdi),%ebx
  0x0000000122f7b5e3: movzbl (%rsi),%ecx
  0x0000000122f7b5e6: cmp    %ecx,%ebx
  0x0000000122f7b5e8: jne    0x0000000122f7b5f1
  0x0000000122f7b5ea: mov    $0x1,%eax
  0x0000000122f7b5ef: jmp    0x0000000122f7b5f3
  0x0000000122f7b5f1: xor    %eax,%eax
  0x0000000122f7b5f3: vpxor  %ymm1,%ymm1,%ymm1
  0x0000000122f7b5f7: vpxor  %ymm0,%ymm0,%ymm0  ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)

  0x0000000122f7b5fb: vzeroupper 
  0x0000000122f7b5fe: add    $0x30,%rsp
  0x0000000122f7b602: pop    %rbp
  0x0000000122f7b603: mov    0x108(%r15),%r10
  0x0000000122f7b60a: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7b60d: retq   
  0x0000000122f7b60e: mov    $0x1,%eax
  0x0000000122f7b613: jmp    0x0000000122f7b5fb
  0x0000000122f7b615: mov    %rsi,(%rsp)
  0x0000000122f7b619: mov    %rdx,0x8(%rsp)
  0x0000000122f7b61e: mov    %r11d,0x10(%rsp)
  0x0000000122f7b623: mov    $0xffffff4d,%esi
  0x0000000122f7b628: vzeroupper 
  0x0000000122f7b62b: callq  0x000000011b4d3900  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7b630: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x0000000122f7b632: mov    %rsi,%rbp
  0x0000000122f7b635: mov    %rdx,(%rsp)
  0x0000000122f7b639: mov    %r11d,0x8(%rsp)
  0x0000000122f7b63e: mov    $0xffffff4d,%esi
  0x0000000122f7b643: nop
  0x0000000122f7b644: vzeroupper 
  0x0000000122f7b647: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7b64c: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x0000000122f7b64e: mov    %rsi,%rbp
  0x0000000122f7b651: mov    %rdx,0x8(%rsp)
  0x0000000122f7b656: mov    $0xffffffde,%esi
  0x0000000122f7b65b: nop
  0x0000000122f7b65c: vzeroupper 
  0x0000000122f7b65f: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 1006)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7b664: ud2                       ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)

  0x0000000122f7b666: hlt    
  0x0000000122f7b667: hlt    
  0x0000000122f7b668: hlt    
  0x0000000122f7b669: hlt    
  0x0000000122f7b66a: hlt    
  0x0000000122f7b66b: hlt    
  0x0000000122f7b66c: hlt    
  0x0000000122f7b66d: hlt    
  0x0000000122f7b66e: hlt    
  0x0000000122f7b66f: hlt    
  0x0000000122f7b670: hlt    
  0x0000000122f7b671: hlt    
  0x0000000122f7b672: hlt    
  0x0000000122f7b673: hlt    
  0x0000000122f7b674: hlt    
  0x0000000122f7b675: hlt    
  0x0000000122f7b676: hlt    
  0x0000000122f7b677: hlt    
  0x0000000122f7b678: hlt    
  0x0000000122f7b679: hlt    
  0x0000000122f7b67a: hlt    
  0x0000000122f7b67b: hlt    
  0x0000000122f7b67c: hlt    
  0x0000000122f7b67d: hlt    
  0x0000000122f7b67e: hlt    
  0x0000000122f7b67f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7b680: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7b685: callq  0x0000000122f7b68a
  0x0000000122f7b68a: subq   $0x5,(%rsp)
  0x0000000122f7b68f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7b694: hlt    
  0x0000000122f7b695: hlt    
  0x0000000122f7b696: hlt    
  0x0000000122f7b697: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 400 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 428 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 452 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='93' compiler='c1' level='1' entry='0x0000000122f7bac0' size='776' address='0x0000000122f7b910' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='720' dependencies_offset='768' metadata_offset='704' method='java.util.Collections$EmptySet isEmpty ()Z' bytes='2' count='3129' iicount='3129' stamp='0.345'/>
<print_nmethod stamp='0.345'>
Compiled method (c1)     344   93       1       java.util.Collections$EmptySet::isEmpty (2 bytes)
 total in heap  [0x0000000122f7b910,0x0000000122f7bc18] = 776
 relocation     [0x0000000122f7ba88,0x0000000122f7bab0] = 40
 main code      [0x0000000122f7bac0,0x0000000122f7bb40] = 128
 stub code      [0x0000000122f7bb40,0x0000000122f7bbd0] = 144
 metadata       [0x0000000122f7bbd0,0x0000000122f7bbd8] = 8
 scopes data    [0x0000000122f7bbd8,0x0000000122f7bbe0] = 8
 scopes pcs     [0x0000000122f7bbe0,0x0000000122f7bc10] = 48
 dependencies   [0x0000000122f7bc10,0x0000000122f7bc18] = 8
----------------------------------------------------------------------
java/util/Collections$EmptySet.isEmpty()Z  [0x0000000122f7bac0, 0x0000000122f7bbd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132613ec0} &apos;isEmpty&apos; &apos;()Z&apos; in &apos;java/util/Collections$EmptySet&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7bac0: mov    0x8(%rsi),%r10d
  0x0000000122f7bac4: movabs $0x800000000,%r12
  0x0000000122f7bace: add    %r12,%r10
  0x0000000122f7bad1: xor    %r12,%r12
  0x0000000122f7bad4: cmp    %rax,%r10
  0x0000000122f7bad7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7badd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7bae0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7bae7: push   %rbp
  0x0000000122f7bae8: sub    $0x30,%rsp         ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Collections$EmptySet::isEmpty@0 (line 4337)

  0x0000000122f7baec: mov    $0x1,%eax
  0x0000000122f7baf1: add    $0x30,%rsp
  0x0000000122f7baf5: pop    %rbp
  0x0000000122f7baf6: mov    0x108(%r15),%r10
  0x0000000122f7bafd: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7bb00: retq   
  0x0000000122f7bb01: nop
  0x0000000122f7bb02: nop
  0x0000000122f7bb03: mov    0x420(%r15),%rax
  0x0000000122f7bb0a: movabs $0x0,%r10
  0x0000000122f7bb14: mov    %r10,0x420(%r15)
  0x0000000122f7bb1b: movabs $0x0,%r10
  0x0000000122f7bb25: mov    %r10,0x428(%r15)
  0x0000000122f7bb2c: add    $0x30,%rsp
  0x0000000122f7bb30: pop    %rbp
  0x0000000122f7bb31: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7bb36: hlt    
  0x0000000122f7bb37: hlt    
  0x0000000122f7bb38: hlt    
  0x0000000122f7bb39: hlt    
  0x0000000122f7bb3a: hlt    
  0x0000000122f7bb3b: hlt    
  0x0000000122f7bb3c: hlt    
  0x0000000122f7bb3d: hlt    
  0x0000000122f7bb3e: hlt    
  0x0000000122f7bb3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7bb40: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7bb45: mov    %rsp,-0x28(%rsp)
  0x0000000122f7bb4a: sub    $0x80,%rsp
  0x0000000122f7bb51: mov    %rax,0x78(%rsp)
  0x0000000122f7bb56: mov    %rcx,0x70(%rsp)
  0x0000000122f7bb5b: mov    %rdx,0x68(%rsp)
  0x0000000122f7bb60: mov    %rbx,0x60(%rsp)
  0x0000000122f7bb65: mov    %rbp,0x50(%rsp)
  0x0000000122f7bb6a: mov    %rsi,0x48(%rsp)
  0x0000000122f7bb6f: mov    %rdi,0x40(%rsp)
  0x0000000122f7bb74: mov    %r8,0x38(%rsp)
  0x0000000122f7bb79: mov    %r9,0x30(%rsp)
  0x0000000122f7bb7e: mov    %r10,0x28(%rsp)
  0x0000000122f7bb83: mov    %r11,0x20(%rsp)
  0x0000000122f7bb88: mov    %r12,0x18(%rsp)
  0x0000000122f7bb8d: mov    %r13,0x10(%rsp)
  0x0000000122f7bb92: mov    %r14,0x8(%rsp)
  0x0000000122f7bb97: mov    %r15,(%rsp)
  0x0000000122f7bb9b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7bba5: movabs $0x122f7bb45,%rsi  ;   {internal_word}
  0x0000000122f7bbaf: mov    %rsp,%rdx
  0x0000000122f7bbb2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7bbb6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7bbbb: hlt    
[Deopt Handler Code]
  0x0000000122f7bbbc: movabs $0x122f7bbbc,%r10  ;   {section_word}
  0x0000000122f7bbc6: push   %r10
  0x0000000122f7bbc8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7bbcd: hlt    
  0x0000000122f7bbce: hlt    
  0x0000000122f7bbcf: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='113' method='java.util.ImmutableCollections$SetN contains (Ljava/lang/Object;)Z' bytes='26' count='896' iicount='896' level='3' stamp='0.346' comment='tiered' hot_count='896'/>
<writer thread='15875'/>
<nmethod compile_id='94' compiler='c1' level='1' entry='0x0000000122f7be40' size='800' address='0x0000000122f7bc90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor$Exports targets ()Ljava/util/Set;' bytes='5' count='3086' iicount='3086' stamp='0.347'/>
<print_nmethod stamp='0.347'>
Compiled method (c1)     346   94       1       java.lang.module.ModuleDescriptor$Exports::targets (5 bytes)
 total in heap  [0x0000000122f7bc90,0x0000000122f7bfb0] = 800
 relocation     [0x0000000122f7be08,0x0000000122f7be30] = 40
 main code      [0x0000000122f7be40,0x0000000122f7bec0] = 128
 stub code      [0x0000000122f7bec0,0x0000000122f7bf50] = 144
 metadata       [0x0000000122f7bf50,0x0000000122f7bf58] = 8
 scopes data    [0x0000000122f7bf58,0x0000000122f7bf68] = 16
 scopes pcs     [0x0000000122f7bf68,0x0000000122f7bfa8] = 64
 dependencies   [0x0000000122f7bfa8,0x0000000122f7bfb0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Exports.targets()Ljava/util/Set;  [0x0000000122f7be40, 0x0000000122f7bf50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326de320} &apos;targets&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7be40: mov    0x8(%rsi),%r10d
  0x0000000122f7be44: movabs $0x800000000,%r12
  0x0000000122f7be4e: add    %r12,%r10
  0x0000000122f7be51: xor    %r12,%r12
  0x0000000122f7be54: cmp    %rax,%r10
  0x0000000122f7be57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7be5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7be60: mov    %eax,-0x14000(%rsp)
  0x0000000122f7be67: push   %rbp
  0x0000000122f7be68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::targets@0 (line 466)

  0x0000000122f7be6c: mov    0x14(%rsi),%eax
  0x0000000122f7be6f: shl    $0x3,%rax          ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::targets@1 (line 466)

  0x0000000122f7be73: add    $0x30,%rsp
  0x0000000122f7be77: pop    %rbp
  0x0000000122f7be78: mov    0x108(%r15),%r10
  0x0000000122f7be7f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7be82: retq   
  0x0000000122f7be83: nop
  0x0000000122f7be84: nop
  0x0000000122f7be85: mov    0x420(%r15),%rax
  0x0000000122f7be8c: movabs $0x0,%r10
  0x0000000122f7be96: mov    %r10,0x420(%r15)
  0x0000000122f7be9d: movabs $0x0,%r10
  0x0000000122f7bea7: mov    %r10,0x428(%r15)
  0x0000000122f7beae: add    $0x30,%rsp
  0x0000000122f7beb2: pop    %rbp
  0x0000000122f7beb3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7beb8: hlt    
  0x0000000122f7beb9: hlt    
  0x0000000122f7beba: hlt    
  0x0000000122f7bebb: hlt    
  0x0000000122f7bebc: hlt    
  0x0000000122f7bebd: hlt    
  0x0000000122f7bebe: hlt    
  0x0000000122f7bebf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7bec0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7bec5: mov    %rsp,-0x28(%rsp)
  0x0000000122f7beca: sub    $0x80,%rsp
  0x0000000122f7bed1: mov    %rax,0x78(%rsp)
  0x0000000122f7bed6: mov    %rcx,0x70(%rsp)
  0x0000000122f7bedb: mov    %rdx,0x68(%rsp)
  0x0000000122f7bee0: mov    %rbx,0x60(%rsp)
  0x0000000122f7bee5: mov    %rbp,0x50(%rsp)
  0x0000000122f7beea: mov    %rsi,0x48(%rsp)
  0x0000000122f7beef: mov    %rdi,0x40(%rsp)
  0x0000000122f7bef4: mov    %r8,0x38(%rsp)
  0x0000000122f7bef9: mov    %r9,0x30(%rsp)
  0x0000000122f7befe: mov    %r10,0x28(%rsp)
  0x0000000122f7bf03: mov    %r11,0x20(%rsp)
  0x0000000122f7bf08: mov    %r12,0x18(%rsp)
  0x0000000122f7bf0d: mov    %r13,0x10(%rsp)
  0x0000000122f7bf12: mov    %r14,0x8(%rsp)
  0x0000000122f7bf17: mov    %r15,(%rsp)
  0x0000000122f7bf1b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7bf25: movabs $0x122f7bec5,%rsi  ;   {internal_word}
  0x0000000122f7bf2f: mov    %rsp,%rdx
  0x0000000122f7bf32: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7bf36: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7bf3b: hlt    
[Deopt Handler Code]
  0x0000000122f7bf3c: movabs $0x122f7bf3c,%r10  ;   {section_word}
  0x0000000122f7bf46: push   %r10
  0x0000000122f7bf48: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7bf4d: hlt    
  0x0000000122f7bf4e: hlt    
  0x0000000122f7bf4f: hlt    
</print_nmethod>
<writer thread='15363'/>
<nmethod compile_id='111' compiler='c2' level='4' entry='0x0000000122f7c1a0' size='744' address='0x0000000122f7c010' relocation_offset='376' insts_offset='400' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='600' dependencies_offset='712' handler_table_offset='720' metadata_offset='552' method='java.lang.module.ModuleDescriptor$Exports isQualified ()Z' bytes='18' count='6535' iicount='6535' stamp='0.348'/>
<make_not_entrant thread='15363' compile_id='96' compiler='c1' level='3' stamp='0.348'/>
<print_nmethod stamp='0.348'>
Compiled method (c2)     348  111       4       java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)
 total in heap  [0x0000000122f7c010,0x0000000122f7c2f8] = 744
 relocation     [0x0000000122f7c188,0x0000000122f7c198] = 16
 main code      [0x0000000122f7c1a0,0x0000000122f7c220] = 128
 stub code      [0x0000000122f7c220,0x0000000122f7c238] = 24
 metadata       [0x0000000122f7c238,0x0000000122f7c240] = 8
 scopes data    [0x0000000122f7c240,0x0000000122f7c268] = 40
 scopes pcs     [0x0000000122f7c268,0x0000000122f7c2d8] = 112
 dependencies   [0x0000000122f7c2d8,0x0000000122f7c2e0] = 8
 handler table  [0x0000000122f7c2e0,0x0000000122f7c2f8] = 24
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Exports.isQualified()Z  [0x0000000122f7c1a0, 0x0000000122f7c238]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326de1c8} &apos;isQualified&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000122f7c1a0: mov    0x8(%rsi),%r10d
  0x0000000122f7c1a4: movabs $0x800000000,%r12
  0x0000000122f7c1ae: add    %r12,%r10
  0x0000000122f7c1b1: xor    %r12,%r12
  0x0000000122f7c1b4: cmp    %r10,%rax
  0x0000000122f7c1b7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7c1bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7c1c0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7c1c7: push   %rbp
  0x0000000122f7c1c8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@-1 (line 445)

  0x0000000122f7c1cc: mov    0x14(%rsi),%r11d
  0x0000000122f7c1d0: mov    %r11,%rsi
  0x0000000122f7c1d3: shl    $0x3,%rsi          ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@1 (line 445)

  0x0000000122f7c1d7: xchg   %ax,%ax
  0x0000000122f7c1d9: movabs $0xffffffffffffffff,%rax
  0x0000000122f7c1e3: callq  0x000000011b4d2180  ; ImmutableOopMap{}
                                                ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 445)
                                                ;   {virtual_call}
  0x0000000122f7c1e8: xor    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@17 (line 445)

  0x0000000122f7c1eb: add    $0x10,%rsp
  0x0000000122f7c1ef: pop    %rbp
  0x0000000122f7c1f0: mov    0x108(%r15),%r10
  0x0000000122f7c1f7: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7c1fa: retq                      ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 445)

  0x0000000122f7c1fb: mov    %rax,%rsi
  0x0000000122f7c1fe: add    $0x10,%rsp
  0x0000000122f7c202: pop    %rbp
  0x0000000122f7c203: jmpq   0x000000011b59c180  ;   {runtime_call _rethrow_Java}
  0x0000000122f7c208: hlt    
  0x0000000122f7c209: hlt    
  0x0000000122f7c20a: hlt    
  0x0000000122f7c20b: hlt    
  0x0000000122f7c20c: hlt    
  0x0000000122f7c20d: hlt    
  0x0000000122f7c20e: hlt    
  0x0000000122f7c20f: hlt    
  0x0000000122f7c210: hlt    
  0x0000000122f7c211: hlt    
  0x0000000122f7c212: hlt    
  0x0000000122f7c213: hlt    
  0x0000000122f7c214: hlt    
  0x0000000122f7c215: hlt    
  0x0000000122f7c216: hlt    
  0x0000000122f7c217: hlt    
  0x0000000122f7c218: hlt    
  0x0000000122f7c219: hlt    
  0x0000000122f7c21a: hlt    
  0x0000000122f7c21b: hlt    
  0x0000000122f7c21c: hlt    
  0x0000000122f7c21d: hlt    
  0x0000000122f7c21e: hlt    
  0x0000000122f7c21f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7c220: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7c225: callq  0x0000000122f7c22a
  0x0000000122f7c22a: subq   $0x5,(%rsp)
  0x0000000122f7c22f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7c234: hlt    
  0x0000000122f7c235: hlt    
  0x0000000122f7c236: hlt    
  0x0000000122f7c237: hlt    

ImmutableOopMap{}pc offsets: 72 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='114' method='java.util.HashMap resize ()[Ljava/util/HashMap$Node;' bytes='356' count='435' backedge_count='9946' iicount='435' level='3' stamp='0.349' comment='tiered' hot_count='435'/>
<writer thread='15875'/>
<nmethod compile_id='99' compiler='c1' level='3' entry='0x000000011ba546c0' size='1088' address='0x000000011ba54510' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='952' dependencies_offset='1080' metadata_offset='896' method='java.util.ImmutableCollections$Set12 size ()I' bytes='13' count='2722' iicount='2722' stamp='0.349'/>
<print_nmethod stamp='0.349'>
Compiled method (c1)     349   99       3       java.util.ImmutableCollections$Set12::size (13 bytes)
 total in heap  [0x000000011ba54510,0x000000011ba54950] = 1088
 relocation     [0x000000011ba54688,0x000000011ba546b8] = 48
 main code      [0x000000011ba546c0,0x000000011ba54800] = 320
 stub code      [0x000000011ba54800,0x000000011ba54890] = 144
 metadata       [0x000000011ba54890,0x000000011ba54898] = 8
 scopes data    [0x000000011ba54898,0x000000011ba548c8] = 48
 scopes pcs     [0x000000011ba548c8,0x000000011ba54948] = 128
 dependencies   [0x000000011ba54948,0x000000011ba54950] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12.size()I  [0x000000011ba546c0, 0x000000011ba54890]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325c54c0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$Set12&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba546c0: mov    0x8(%rsi),%r10d
  0x000000011ba546c4: movabs $0x800000000,%r12
  0x000000011ba546ce: add    %r12,%r10
  0x000000011ba546d1: xor    %r12,%r12
  0x000000011ba546d4: cmp    %rax,%r10
  0x000000011ba546d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba546dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba546e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba546e7: push   %rbp
  0x000000011ba546e8: sub    $0x30,%rsp
  0x000000011ba546ec: movabs $0x1328a43a0,%rax  ;   {metadata(method data for {method} {0x00000001325c54c0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba546f6: mov    0x104(%rax),%edi
  0x000000011ba546fc: add    $0x8,%edi
  0x000000011ba546ff: mov    %edi,0x104(%rax)
  0x000000011ba54705: and    $0x1ff8,%edi
  0x000000011ba5470b: cmp    $0x0,%edi
  0x000000011ba5470e: je     0x000000011ba5478f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@0 (line 510)

  0x000000011ba54714: mov    0x10(%rsi),%eax
  0x000000011ba54717: shl    $0x3,%rax          ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@1 (line 510)

  0x000000011ba5471b: cmp    $0x0,%rax
  0x000000011ba5471f: movabs $0x1328a43a0,%rax  ;   {metadata(method data for {method} {0x00000001325c54c0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba54729: movabs $0x140,%rsi
  0x000000011ba54733: jne    0x000000011ba54743
  0x000000011ba54739: movabs $0x150,%rsi
  0x000000011ba54743: mov    (%rax,%rsi,1),%rdi
  0x000000011ba54747: lea    0x1(%rdi),%rdi
  0x000000011ba5474b: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba5474f: jne    0x000000011ba5477a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@4 (line 510)

  0x000000011ba54755: movabs $0x1328a43a0,%rax  ;   {metadata(method data for {method} {0x00000001325c54c0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba5475f: incl   0x160(%rax)
  0x000000011ba54765: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@8 (line 510)

  0x000000011ba5476a: add    $0x30,%rsp
  0x000000011ba5476e: pop    %rbp
  0x000000011ba5476f: mov    0x108(%r15),%r10
  0x000000011ba54776: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba54779: retq   
  0x000000011ba5477a: mov    $0x2,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@12 (line 510)

  0x000000011ba5477f: add    $0x30,%rsp
  0x000000011ba54783: pop    %rbp
  0x000000011ba54784: mov    0x108(%r15),%r10
  0x000000011ba5478b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5478e: retq   
  0x000000011ba5478f: movabs $0x1325c54c0,%r10  ;   {metadata({method} {0x00000001325c54c0} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba54799: mov    %r10,0x8(%rsp)
  0x000000011ba5479e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba547a6: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12::size@-1 (line 510)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba547ab: jmpq   0x000000011ba54714
  0x000000011ba547b0: nop
  0x000000011ba547b1: nop
  0x000000011ba547b2: mov    0x420(%r15),%rax
  0x000000011ba547b9: movabs $0x0,%r10
  0x000000011ba547c3: mov    %r10,0x420(%r15)
  0x000000011ba547ca: movabs $0x0,%r10
  0x000000011ba547d4: mov    %r10,0x428(%r15)
  0x000000011ba547db: add    $0x30,%rsp
  0x000000011ba547df: pop    %rbp
  0x000000011ba547e0: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba547e5: hlt    
  0x000000011ba547e6: hlt    
  0x000000011ba547e7: hlt    
  0x000000011ba547e8: hlt    
  0x000000011ba547e9: hlt    
  0x000000011ba547ea: hlt    
  0x000000011ba547eb: hlt    
  0x000000011ba547ec: hlt    
  0x000000011ba547ed: hlt    
  0x000000011ba547ee: hlt    
  0x000000011ba547ef: hlt    
  0x000000011ba547f0: hlt    
  0x000000011ba547f1: hlt    
  0x000000011ba547f2: hlt    
  0x000000011ba547f3: hlt    
  0x000000011ba547f4: hlt    
  0x000000011ba547f5: hlt    
  0x000000011ba547f6: hlt    
  0x000000011ba547f7: hlt    
  0x000000011ba547f8: hlt    
  0x000000011ba547f9: hlt    
  0x000000011ba547fa: hlt    
  0x000000011ba547fb: hlt    
  0x000000011ba547fc: hlt    
  0x000000011ba547fd: hlt    
  0x000000011ba547fe: hlt    
  0x000000011ba547ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba54800: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba54805: mov    %rsp,-0x28(%rsp)
  0x000000011ba5480a: sub    $0x80,%rsp
  0x000000011ba54811: mov    %rax,0x78(%rsp)
  0x000000011ba54816: mov    %rcx,0x70(%rsp)
  0x000000011ba5481b: mov    %rdx,0x68(%rsp)
  0x000000011ba54820: mov    %rbx,0x60(%rsp)
  0x000000011ba54825: mov    %rbp,0x50(%rsp)
  0x000000011ba5482a: mov    %rsi,0x48(%rsp)
  0x000000011ba5482f: mov    %rdi,0x40(%rsp)
  0x000000011ba54834: mov    %r8,0x38(%rsp)
  0x000000011ba54839: mov    %r9,0x30(%rsp)
  0x000000011ba5483e: mov    %r10,0x28(%rsp)
  0x000000011ba54843: mov    %r11,0x20(%rsp)
  0x000000011ba54848: mov    %r12,0x18(%rsp)
  0x000000011ba5484d: mov    %r13,0x10(%rsp)
  0x000000011ba54852: mov    %r14,0x8(%rsp)
  0x000000011ba54857: mov    %r15,(%rsp)
  0x000000011ba5485b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba54865: movabs $0x11ba54805,%rsi  ;   {internal_word}
  0x000000011ba5486f: mov    %rsp,%rdx
  0x000000011ba54872: and    $0xfffffffffffffff0,%rsp
  0x000000011ba54876: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5487b: hlt    
[Deopt Handler Code]
  0x000000011ba5487c: movabs $0x11ba5487c,%r10  ;   {section_word}
  0x000000011ba54886: push   %r10
  0x000000011ba54888: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5488d: hlt    
  0x000000011ba5488e: hlt    
  0x000000011ba5488f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 235 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='115' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='5632' backedge_count='675' iicount='5632' stamp='0.351' comment='tiered' hot_count='5632'/>
<writer thread='15363'/>
<nmethod compile_id='112' compiler='c2' level='4' entry='0x0000000122f7c4a0' size='848' address='0x0000000122f7c310' relocation_offset='376' insts_offset='400' stub_offset='592' scopes_data_offset='624' scopes_pcs_offset='672' dependencies_offset='800' handler_table_offset='808' nul_chk_table_offset='832' metadata_offset='616' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='7330' iicount='7330' stamp='0.351'/>
<make_not_entrant thread='15363' compile_id='77' compiler='c1' level='3' stamp='0.351'/>
<print_nmethod stamp='0.351'>
Compiled method (c2)     351  112       4       java.util.HashMap::hash (20 bytes)
 total in heap  [0x0000000122f7c310,0x0000000122f7c660] = 848
 relocation     [0x0000000122f7c488,0x0000000122f7c4a0] = 24
 main code      [0x0000000122f7c4a0,0x0000000122f7c560] = 192
 stub code      [0x0000000122f7c560,0x0000000122f7c578] = 24
 metadata       [0x0000000122f7c578,0x0000000122f7c580] = 8
 scopes data    [0x0000000122f7c580,0x0000000122f7c5b0] = 48
 scopes pcs     [0x0000000122f7c5b0,0x0000000122f7c630] = 128
 dependencies   [0x0000000122f7c630,0x0000000122f7c638] = 8
 handler table  [0x0000000122f7c638,0x0000000122f7c650] = 24
 nul chk table  [0x0000000122f7c650,0x0000000122f7c660] = 16
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x0000000122f7c4a0, 0x0000000122f7c578]  216 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000122f7c4a0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7c4a7: push   %rbp
  0x0000000122f7c4a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)

  0x0000000122f7c4ac: mov    %rsi,%r8
  0x0000000122f7c4af: mov    0x8(%rsi),%r10d    ; implicit exception: dispatches to 0x0000000122f7c529
  0x0000000122f7c4b3: movabs $0x800000000,%r12
  0x0000000122f7c4bd: add    %r12,%r10
  0x0000000122f7c4c0: xor    %r12,%r12
  0x0000000122f7c4c3: mov    0x1e8(%r10),%r10
  0x0000000122f7c4ca: movabs $0x1324ab788,%r11  ;   {metadata({method} {0x00000001324ab788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000000122f7c4d4: cmp    %r11,%r10
  0x0000000122f7c4d7: jne    0x0000000122f7c515
  0x0000000122f7c4d9: mov    (%rsi),%r10
  0x0000000122f7c4dc: mov    %r10,%r11
  0x0000000122f7c4df: and    $0x7,%r11
  0x0000000122f7c4e3: cmp    $0x1,%r11
  0x0000000122f7c4e7: jne    0x0000000122f7c515
  0x0000000122f7c4e9: shr    $0x8,%r10
  0x0000000122f7c4ed: mov    %r10d,%r11d
  0x0000000122f7c4f0: and    $0x7fffffff,%r11d
  0x0000000122f7c4f7: test   %r11d,%r11d
  0x0000000122f7c4fa: je     0x0000000122f7c515  ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)

  0x0000000122f7c4fc: mov    %r11d,%eax
  0x0000000122f7c4ff: shr    $0x10,%eax
  0x0000000122f7c502: xor    %r11d,%eax         ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@18 (line 339)

  0x0000000122f7c505: add    $0x20,%rsp
  0x0000000122f7c509: pop    %rbp
  0x0000000122f7c50a: mov    0x108(%r15),%r10
  0x0000000122f7c511: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7c514: retq   
  0x0000000122f7c515: movabs $0x800001808,%rax
  0x0000000122f7c51f: callq  0x0000000122f79a20  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x0000000122f7c524: mov    %eax,%r11d
  0x0000000122f7c527: jmp    0x0000000122f7c4fc
  0x0000000122f7c529: mov    $0xffffff4d,%esi
  0x0000000122f7c52e: mov    %r8,(%rsp)
  0x0000000122f7c532: nop
  0x0000000122f7c533: callq  0x000000011b4d3900  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7c538: ud2                       ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)

  0x0000000122f7c53a: mov    %rax,%rsi
  0x0000000122f7c53d: add    $0x20,%rsp
  0x0000000122f7c541: pop    %rbp
  0x0000000122f7c542: jmpq   0x000000011b59c180  ;   {runtime_call _rethrow_Java}
  0x0000000122f7c547: hlt    
  0x0000000122f7c548: hlt    
  0x0000000122f7c549: hlt    
  0x0000000122f7c54a: hlt    
  0x0000000122f7c54b: hlt    
  0x0000000122f7c54c: hlt    
  0x0000000122f7c54d: hlt    
  0x0000000122f7c54e: hlt    
  0x0000000122f7c54f: hlt    
  0x0000000122f7c550: hlt    
  0x0000000122f7c551: hlt    
  0x0000000122f7c552: hlt    
  0x0000000122f7c553: hlt    
  0x0000000122f7c554: hlt    
  0x0000000122f7c555: hlt    
  0x0000000122f7c556: hlt    
  0x0000000122f7c557: hlt    
  0x0000000122f7c558: hlt    
  0x0000000122f7c559: hlt    
  0x0000000122f7c55a: hlt    
  0x0000000122f7c55b: hlt    
  0x0000000122f7c55c: hlt    
  0x0000000122f7c55d: hlt    
  0x0000000122f7c55e: hlt    
  0x0000000122f7c55f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7c560: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7c565: callq  0x0000000122f7c56a
  0x0000000122f7c56a: subq   $0x5,(%rsp)
  0x0000000122f7c56f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7c574: hlt    
  0x0000000122f7c575: hlt    
  0x0000000122f7c576: hlt    
  0x0000000122f7c577: hlt    

ImmutableOopMap{}pc offsets: 132 
ImmutableOopMap{[0]=Oop }pc offsets: 152 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='116' method='java.util.HashMap$KeyIterator next ()Ljava/lang/Object;' bytes='8' count='768' iicount='768' level='3' stamp='0.353' comment='tiered' hot_count='768'/>
<writer thread='15875'/>
<nmethod compile_id='114' compiler='c1' level='3' entry='0x000000011ba54c60' size='8920' address='0x000000011ba54990' relocation_offset='376' consts_offset='688' insts_offset='720' stub_offset='6096' scopes_data_offset='6272' scopes_pcs_offset='7048' dependencies_offset='8760' nul_chk_table_offset='8768' metadata_offset='6264' method='java.util.HashMap resize ()[Ljava/util/HashMap$Node;' bytes='356' count='471' backedge_count='11219' iicount='471' stamp='0.353'/>
<print_nmethod stamp='0.353'>
Compiled method (c1)     353  114       3       java.util.HashMap::resize (356 bytes)
 total in heap  [0x000000011ba54990,0x000000011ba56c68] = 8920
 relocation     [0x000000011ba54b08,0x000000011ba54c30] = 296
 constants      [0x000000011ba54c40,0x000000011ba54c60] = 32
 main code      [0x000000011ba54c60,0x000000011ba56160] = 5376
 stub code      [0x000000011ba56160,0x000000011ba56208] = 168
 metadata       [0x000000011ba56208,0x000000011ba56210] = 8
 scopes data    [0x000000011ba56210,0x000000011ba56518] = 776
 scopes pcs     [0x000000011ba56518,0x000000011ba56bc8] = 1712
 dependencies   [0x000000011ba56bc8,0x000000011ba56bd0] = 8
 nul chk table  [0x000000011ba56bd0,0x000000011ba56c68] = 152
----------------------------------------------------------------------
java/util/HashMap.resize()[Ljava/util/HashMap$Node;  [0x000000011ba54c60, 0x000000011ba56208]  5544 bytes
[Constants]
  0x000000011ba54c40 (offset:    0): 0x4e800000   0xf4f4f4f44e800000
  0x000000011ba54c44 (offset:    4): 0xf4f4f4f4
  0x000000011ba54c48 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000011ba54c4c (offset:   12): 0xf4f4f4f4
  0x000000011ba54c50 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000011ba54c54 (offset:   20): 0xf4f4f4f4
  0x000000011ba54c58 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000011ba54c5c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011ba54c60: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x000000011ba54c64: movabs $0x800000000,%r12
  0x000000011ba54c6e: add    %r12,%r10
  0x000000011ba54c71: xor    %r12,%r12
  0x000000011ba54c74: cmp    %rax,%r10
  0x000000011ba54c77: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba54c7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba54c80: mov    %eax,-0x14000(%rsp)
  0x000000011ba54c87: push   %rbp
  0x000000011ba54c88: sub    $0x60,%rsp
  0x000000011ba54c8c: mov    %rsi,0x40(%rsp)
  0x000000011ba54c91: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54c9b: mov    0x104(%rbx),%edx
  0x000000011ba54ca1: add    $0x8,%edx
  0x000000011ba54ca4: mov    %edx,0x104(%rbx)
  0x000000011ba54caa: and    $0x1ff8,%edx
  0x000000011ba54cb0: cmp    $0x0,%edx
  0x000000011ba54cb3: je     0x000000011ba55e0c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@0 (line 673)

  0x000000011ba54cb9: mov    0x24(%rsi),%r11d
  0x000000011ba54cbd: shl    $0x3,%r11          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@1 (line 673)

  0x000000011ba54cc1: mov    %r11,0x50(%rsp)
  0x000000011ba54cc6: cmp    $0x0,%r11
  0x000000011ba54cca: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54cd4: movabs $0x140,%rdx
  0x000000011ba54cde: jne    0x000000011ba54cee
  0x000000011ba54ce4: movabs $0x150,%rdx
  0x000000011ba54cee: mov    (%rbx,%rdx,1),%rdi
  0x000000011ba54cf2: lea    0x1(%rdi),%rdi
  0x000000011ba54cf6: mov    %rdi,(%rbx,%rdx,1)
  0x000000011ba54cfa: jne    0x000000011ba54d1b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@6 (line 674)

  0x000000011ba54d00: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54d0a: incl   0x160(%rbx)
  0x000000011ba54d10: mov    $0x0,%r13d
  0x000000011ba54d16: jmpq   0x000000011ba54d22  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@10 (line 674)

  0x000000011ba54d1b: mov    0xc(%r11),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@14 (line 674)
                                                ; implicit exception: dispatches to 0x000000011ba55e2d
  0x000000011ba54d1f: mov    %rbx,%r13          ;*istore_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@15 (line 674)

  0x000000011ba54d22: mov    0x1c(%rsi),%ebx    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@17 (line 675)

  0x000000011ba54d25: cmp    $0x0,%r13d
  0x000000011ba54d29: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54d33: movabs $0x178,%rdi
  0x000000011ba54d3d: jle    0x000000011ba54d4d
  0x000000011ba54d43: movabs $0x188,%rdi
  0x000000011ba54d4d: mov    (%rdx,%rdi,1),%rax
  0x000000011ba54d51: lea    0x1(%rax),%rax
  0x000000011ba54d55: mov    %rax,(%rdx,%rdi,1)
  0x000000011ba54d59: jle    0x000000011ba54e42  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@25 (line 677)

  0x000000011ba54d5f: cmp    $0x40000000,%r13d
  0x000000011ba54d66: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54d70: movabs $0x1a8,%rdi
  0x000000011ba54d7a: jge    0x000000011ba54d8a
  0x000000011ba54d80: movabs $0x198,%rdi
  0x000000011ba54d8a: mov    (%rdx,%rdi,1),%rax
  0x000000011ba54d8e: lea    0x1(%rax),%rax
  0x000000011ba54d92: mov    %rax,(%rdx,%rdi,1)
  0x000000011ba54d96: jge    0x000000011ba55df2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@31 (line 678)

  0x000000011ba54d9c: mov    %r13,%rdx
  0x000000011ba54d9f: shl    %edx
  0x000000011ba54da1: cmp    $0x40000000,%edx
  0x000000011ba54da7: movabs $0x1328a30a8,%rdi  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54db1: movabs $0x1c8,%rax
  0x000000011ba54dbb: jl     0x000000011ba54dcb
  0x000000011ba54dc1: movabs $0x1b8,%rax
  0x000000011ba54dcb: mov    (%rdi,%rax,1),%rcx
  0x000000011ba54dcf: lea    0x1(%rcx),%rcx
  0x000000011ba54dd3: mov    %rcx,(%rdi,%rax,1)
  0x000000011ba54dd7: jl     0x000000011ba54de7  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@50 (line 682)

  0x000000011ba54ddd: mov    $0x0,%ebx
  0x000000011ba54de2: jmpq   0x000000011ba54ea2  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@85 (line 692)

  0x000000011ba54de7: cmp    $0x10,%r13d
  0x000000011ba54deb: movabs $0x1328a30a8,%rdi  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54df5: movabs $0x1e8,%rax
  0x000000011ba54dff: jge    0x000000011ba54e0f
  0x000000011ba54e05: movabs $0x1d8,%rax
  0x000000011ba54e0f: mov    (%rdi,%rax,1),%rcx
  0x000000011ba54e13: lea    0x1(%rcx),%rcx
  0x000000011ba54e17: mov    %rcx,(%rdi,%rax,1)
  0x000000011ba54e1b: jge    0x000000011ba54e2b  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@56 (line 682)

  0x000000011ba54e21: mov    $0x0,%ebx
  0x000000011ba54e26: jmpq   0x000000011ba54ea2  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@85 (line 692)

  0x000000011ba54e2b: shl    %ebx
  0x000000011ba54e2d: movabs $0x1328a30a8,%rdi  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54e37: incl   0x1f8(%rdi)
  0x000000011ba54e3d: jmpq   0x000000011ba54ea2  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@64 (line 684)

  0x000000011ba54e42: cmp    $0x0,%ebx
  0x000000011ba54e45: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54e4f: movabs $0x210,%rdi
  0x000000011ba54e59: jle    0x000000011ba54e69
  0x000000011ba54e5f: movabs $0x220,%rdi
  0x000000011ba54e69: mov    (%rdx,%rdi,1),%rax
  0x000000011ba54e6d: lea    0x1(%rax),%rax
  0x000000011ba54e71: mov    %rax,(%rdx,%rdi,1)
  0x000000011ba54e75: jle    0x000000011ba54e98  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@68 (line 686)

  0x000000011ba54e7b: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54e85: incl   0x230(%rdx)
  0x000000011ba54e8b: mov    %rbx,%rdx
  0x000000011ba54e8e: mov    $0x0,%ebx
  0x000000011ba54e93: jmpq   0x000000011ba54ea2  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@74 (line 687)

  0x000000011ba54e98: mov    $0xc,%ebx
  0x000000011ba54e9d: mov    $0x10,%edx         ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@85 (line 692)

  0x000000011ba54ea2: cmp    $0x0,%ebx
  0x000000011ba54ea5: movabs $0x1328a30a8,%rdi  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54eaf: movabs $0x248,%rax
  0x000000011ba54eb9: jne    0x000000011ba54ec9
  0x000000011ba54ebf: movabs $0x258,%rax
  0x000000011ba54ec9: mov    (%rdi,%rax,1),%rcx
  0x000000011ba54ecd: lea    0x1(%rcx),%rcx
  0x000000011ba54ed1: mov    %rcx,(%rdi,%rax,1)
  0x000000011ba54ed5: jne    0x000000011ba54fb1  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@87 (line 692)

  0x000000011ba54edb: vmovss 0x20(%rsi),%xmm0   ;*getfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@94 (line 693)

  0x000000011ba54ee0: vcvtsi2ss %edx,%xmm1,%xmm1
  0x000000011ba54ee4: vmulss %xmm0,%xmm1,%xmm1
  0x000000011ba54ee8: cmp    $0x40000000,%edx
  0x000000011ba54eee: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54ef8: movabs $0x268,%rdi
  0x000000011ba54f02: jge    0x000000011ba54f12
  0x000000011ba54f08: movabs $0x278,%rdi
  0x000000011ba54f12: mov    (%rbx,%rdi,1),%rax
  0x000000011ba54f16: lea    0x1(%rax),%rax
  0x000000011ba54f1a: mov    %rax,(%rbx,%rdi,1)
  0x000000011ba54f1e: jge    0x000000011ba54f87  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@104 (line 694)

  0x000000011ba54f24: vmovss -0x2ec(%rip),%xmm0        # 0x000000011ba54c40
                                                ;   {section_word}
  0x000000011ba54f2c: vucomiss %xmm0,%xmm1
  0x000000011ba54f30: mov    $0x1,%ebx
  0x000000011ba54f35: jp     0x000000011ba54f4e
  0x000000011ba54f3b: ja     0x000000011ba54f4e
  0x000000011ba54f41: mov    $0x0,%ebx
  0x000000011ba54f46: je     0x000000011ba54f4e
  0x000000011ba54f4c: dec    %ebx               ;*fcmpg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@111 (line 694)

  0x000000011ba54f4e: cmp    $0x0,%ebx
  0x000000011ba54f51: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54f5b: movabs $0x298,%rdi
  0x000000011ba54f65: jl     0x000000011ba54f75
  0x000000011ba54f6b: movabs $0x288,%rdi
  0x000000011ba54f75: mov    (%rbx,%rdi,1),%rax
  0x000000011ba54f79: lea    0x1(%rax),%rax
  0x000000011ba54f7d: mov    %rax,(%rbx,%rdi,1)
  0x000000011ba54f81: jl     0x000000011ba54f91  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@112 (line 694)

  0x000000011ba54f87: mov    $0x7fffffff,%ebx
  0x000000011ba54f8c: jmpq   0x000000011ba54fb1  ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@123 (line 695)

  0x000000011ba54f91: vcvttss2si %xmm1,%ebx
  0x000000011ba54f95: cmp    $0x80000000,%ebx
  0x000000011ba54f9b: je     0x000000011ba55e32
  0x000000011ba54fa1: movabs $0x1328a30a8,%rdi  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba54fab: incl   0x2a8(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@118 (line 695)

  0x000000011ba54fb1: mov    %ebx,0x1c(%rsi)    ;*putfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@128 (line 697)

  0x000000011ba54fb4: mov    %rdx,%rbx
  0x000000011ba54fb7: mov    %rdx,%r14
  0x000000011ba54fba: movabs $0x80002d278,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;[])}
  0x000000011ba54fc4: mov    %rsi,%r9
  0x000000011ba54fc7: movslq %ebx,%rbx
  0x000000011ba54fca: mov    %rbx,%rdi
  0x000000011ba54fcd: cmp    $0xffffff,%rbx
  0x000000011ba54fd4: ja     0x000000011ba55e4b
  0x000000011ba54fda: movabs $0x17,%rsi
  0x000000011ba54fe4: lea    (%rsi,%rbx,4),%rsi
  0x000000011ba54fe8: and    $0xfffffffffffffff8,%rsi
  0x000000011ba54fec: mov    0x118(%r15),%rax
  0x000000011ba54ff3: lea    (%rax,%rsi,1),%rsi
  0x000000011ba54ff7: cmp    0x128(%r15),%rsi
  0x000000011ba54ffe: ja     0x000000011ba55e4b
  0x000000011ba55004: mov    %rsi,0x118(%r15)
  0x000000011ba5500b: sub    %rax,%rsi
  0x000000011ba5500e: movq   $0x1,(%rax)
  0x000000011ba55015: mov    %rdx,%rcx
  0x000000011ba55018: movabs $0x800000000,%r12
  0x000000011ba55022: sub    %r12,%rcx
  0x000000011ba55025: xor    %r12,%r12
  0x000000011ba55028: mov    %ecx,0x8(%rax)
  0x000000011ba5502b: mov    %ebx,0xc(%rax)
  0x000000011ba5502e: sub    $0x10,%rsi
  0x000000011ba55032: je     0x000000011ba55052
  0x000000011ba55038: test   %rsi,%rsi
  0x000000011ba5503b: je     0x000000011ba55052
  0x000000011ba55041: xor    %rbx,%rbx
  0x000000011ba55044: shr    $0x3,%rsi
  0x000000011ba55048: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011ba5504d: dec    %rsi
  0x000000011ba55050: jne    0x000000011ba55048  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@133 (line 699)

  0x000000011ba55052: mov    %rax,0x38(%rsp)
  0x000000011ba55057: movsbl 0x30(%r15),%edx
  0x000000011ba5505c: cmp    $0x0,%edx
  0x000000011ba5505f: jne    0x000000011ba55e55
  0x000000011ba55065: mov    %rax,%r10
  0x000000011ba55068: shr    $0x3,%r10
  0x000000011ba5506c: mov    %r10d,0x24(%r9)
  0x000000011ba55070: mov    %r9,%rsi
  0x000000011ba55073: xor    %rax,%rsi
  0x000000011ba55076: shr    $0x14,%rsi
  0x000000011ba5507a: cmp    $0x0,%rsi
  0x000000011ba5507e: jne    0x000000011ba55e75  ;*putfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@141 (line 700)

  0x000000011ba55084: cmp    $0x0,%r11
  0x000000011ba55088: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55092: movabs $0x2c0,%rcx
  0x000000011ba5509c: je     0x000000011ba550ac
  0x000000011ba550a2: movabs $0x2d0,%rcx
  0x000000011ba550ac: mov    (%rdx,%rcx,1),%r8
  0x000000011ba550b0: lea    0x1(%r8),%r8
  0x000000011ba550b4: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba550b8: je     0x000000011ba55ddc  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@145 (line 701)

  0x000000011ba550be: mov    $0x0,%edi          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@151 (line 702)

  0x000000011ba550c3: nopl   0x0(%rax,%rax,1)
  0x000000011ba550c8: cmp    %r13d,%edi
  0x000000011ba550cb: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba550d5: movabs $0x2e0,%rcx
  0x000000011ba550df: jge    0x000000011ba550ef
  0x000000011ba550e5: movabs $0x2f0,%rcx
  0x000000011ba550ef: mov    (%rdx,%rcx,1),%r8
  0x000000011ba550f3: lea    0x1(%r8),%r8
  0x000000011ba550f7: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba550fb: jge    0x000000011ba55ddc  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@154 (line 702)

  0x000000011ba55101: cmp    0xc(%r11),%edi     ; implicit exception: dispatches to 0x000000011ba55e8d
  0x000000011ba55105: jae    0x000000011ba55e97
  0x000000011ba5510b: movslq %edi,%rdx
  0x000000011ba5510e: mov    0x10(%r11,%rdx,4),%esi
  0x000000011ba55113: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)

  0x000000011ba55117: cmp    $0x0,%rsi
  0x000000011ba5511b: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55125: movabs $0x310,%rcx
  0x000000011ba5512f: jne    0x000000011ba5513f
  0x000000011ba55135: movabs $0x300,%rcx
  0x000000011ba5513f: mov    (%rdx,%rcx,1),%r8
  0x000000011ba55143: lea    0x1(%r8),%r8
  0x000000011ba55147: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba5514b: jne    0x000000011ba55161  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@164 (line 704)

  0x000000011ba55151: mov    %rdi,%rcx
  0x000000011ba55154: mov    %rax,%rbx
  0x000000011ba55157: mov    %r14d,0x48(%rsp)
  0x000000011ba5515c: jmpq   0x000000011ba55d78  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@347 (line 702)

  0x000000011ba55161: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000011ba5516b: cmp    0xc(%r11),%edi
  0x000000011ba5516f: jae    0x000000011ba55ea5
  0x000000011ba55175: cmp    $0x0,%rdx
  0x000000011ba55179: jne    0x000000011ba55192
  0x000000011ba5517b: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55185: orb    $0x1,0x319(%r8)
  0x000000011ba5518d: jmpq   0x000000011ba5529e
  0x000000011ba55192: mov    0x8(%r11),%ecx     ; implicit exception: dispatches to 0x000000011ba55eb3
  0x000000011ba55196: movabs $0x800000000,%r12
  0x000000011ba551a0: add    %r12,%rcx
  0x000000011ba551a3: xor    %r12,%r12
  0x000000011ba551a6: mov    0x8(%rdx),%r8d
  0x000000011ba551aa: movabs $0x800000000,%r12
  0x000000011ba551b4: add    %r12,%r8
  0x000000011ba551b7: xor    %r12,%r12
  0x000000011ba551ba: mov    0xe8(%rcx),%rcx
  0x000000011ba551c1: cmp    %rcx,%r8
  0x000000011ba551c4: je     0x000000011ba551f4
  0x000000011ba551ca: mov    0x10(%rcx),%ebx
  0x000000011ba551cd: cmp    (%r8,%rbx,1),%rcx
  0x000000011ba551d1: je     0x000000011ba551f4
  0x000000011ba551d7: cmp    $0x20,%ebx
  0x000000011ba551da: jne    0x000000011ba55287
  0x000000011ba551e0: push   %r8
  0x000000011ba551e2: push   %rcx
  0x000000011ba551e3: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba551e8: pop    %r8
  0x000000011ba551ea: pop    %rcx
  0x000000011ba551eb: cmp    $0x0,%ecx
  0x000000011ba551ee: je     0x000000011ba55287
  0x000000011ba551f4: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba551fe: mov    0x8(%rdx),%ecx
  0x000000011ba55201: movabs $0x800000000,%r12
  0x000000011ba5520b: add    %r12,%rcx
  0x000000011ba5520e: xor    %r12,%r12
  0x000000011ba55211: cmp    0x330(%r8),%rcx
  0x000000011ba55218: jne    0x000000011ba55227
  0x000000011ba5521a: addq   $0x1,0x338(%r8)
  0x000000011ba55222: jmpq   0x000000011ba5529e
  0x000000011ba55227: cmp    0x340(%r8),%rcx
  0x000000011ba5522e: jne    0x000000011ba5523d
  0x000000011ba55230: addq   $0x1,0x348(%r8)
  0x000000011ba55238: jmpq   0x000000011ba5529e
  0x000000011ba5523d: cmpq   $0x0,0x330(%r8)
  0x000000011ba55248: jne    0x000000011ba55261
  0x000000011ba5524a: mov    %rcx,0x330(%r8)
  0x000000011ba55251: movq   $0x1,0x338(%r8)
  0x000000011ba5525c: jmpq   0x000000011ba5529e
  0x000000011ba55261: cmpq   $0x0,0x340(%r8)
  0x000000011ba5526c: jne    0x000000011ba55285
  0x000000011ba5526e: mov    %rcx,0x340(%r8)
  0x000000011ba55275: movq   $0x1,0x348(%r8)
  0x000000011ba55280: jmpq   0x000000011ba5529e
  0x000000011ba55285: jmp    0x000000011ba5529e
  0x000000011ba55287: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55291: subq   $0x1,0x320(%r8)
  0x000000011ba55299: jmpq   0x000000011ba55eb8
  0x000000011ba5529e: movslq %edi,%rcx
  0x000000011ba552a1: lea    0x10(%r11,%rcx,4),%rcx
  0x000000011ba552a6: movsbl 0x30(%r15),%r8d
  0x000000011ba552ab: cmp    $0x0,%r8d
  0x000000011ba552af: jne    0x000000011ba55ec1
  0x000000011ba552b5: mov    %rdx,%r10
  0x000000011ba552b8: shr    $0x3,%r10
  0x000000011ba552bc: mov    %r10d,(%rcx)
  0x000000011ba552bf: mov    %rcx,%r8
  0x000000011ba552c2: xor    %rdx,%r8
  0x000000011ba552c5: shr    $0x14,%r8
  0x000000011ba552c9: cmp    $0x0,%r8
  0x000000011ba552cd: jne    0x000000011ba55ee0  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@171 (line 705)

  0x000000011ba552d3: mov    0x18(%rsi),%edx    ; implicit exception: dispatches to 0x000000011ba55ef8
  0x000000011ba552d6: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@174 (line 706)

  0x000000011ba552da: cmp    $0x0,%rdx
  0x000000011ba552de: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba552e8: movabs $0x358,%rcx
  0x000000011ba552f2: jne    0x000000011ba55302
  0x000000011ba552f8: movabs $0x368,%rcx
  0x000000011ba55302: mov    (%rdx,%rcx,1),%r8
  0x000000011ba55306: lea    0x1(%r8),%r8
  0x000000011ba5530a: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba5530e: jne    0x000000011ba554a4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@177 (line 706)

  0x000000011ba55314: mov    0xc(%rsi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@184 (line 707)

  0x000000011ba55317: mov    %r14,%rcx
  0x000000011ba5531a: dec    %ecx
  0x000000011ba5531c: and    %rcx,%rdx
  0x000000011ba5531f: cmp    0xc(%rax),%edx
  0x000000011ba55322: jae    0x000000011ba55efd
  0x000000011ba55328: cmp    $0x0,%rsi
  0x000000011ba5532c: jne    0x000000011ba55345
  0x000000011ba5532e: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55338: orb    $0x1,0x371(%r8)
  0x000000011ba55340: jmpq   0x000000011ba55450
  0x000000011ba55345: mov    0x8(%rax),%ecx     ; implicit exception: dispatches to 0x000000011ba55f0b
  0x000000011ba55348: movabs $0x800000000,%r12
  0x000000011ba55352: add    %r12,%rcx
  0x000000011ba55355: xor    %r12,%r12
  0x000000011ba55358: mov    0x8(%rsi),%r8d
  0x000000011ba5535c: movabs $0x800000000,%r12
  0x000000011ba55366: add    %r12,%r8
  0x000000011ba55369: xor    %r12,%r12
  0x000000011ba5536c: mov    0xe8(%rcx),%rcx
  0x000000011ba55373: cmp    %rcx,%r8
  0x000000011ba55376: je     0x000000011ba553a6
  0x000000011ba5537c: mov    0x10(%rcx),%ebx
  0x000000011ba5537f: cmp    (%r8,%rbx,1),%rcx
  0x000000011ba55383: je     0x000000011ba553a6
  0x000000011ba55389: cmp    $0x20,%ebx
  0x000000011ba5538c: jne    0x000000011ba55439
  0x000000011ba55392: push   %r8
  0x000000011ba55394: push   %rcx
  0x000000011ba55395: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba5539a: pop    %r8
  0x000000011ba5539c: pop    %rcx
  0x000000011ba5539d: cmp    $0x0,%ecx
  0x000000011ba553a0: je     0x000000011ba55439
  0x000000011ba553a6: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba553b0: mov    0x8(%rsi),%ecx
  0x000000011ba553b3: movabs $0x800000000,%r12
  0x000000011ba553bd: add    %r12,%rcx
  0x000000011ba553c0: xor    %r12,%r12
  0x000000011ba553c3: cmp    0x388(%r8),%rcx
  0x000000011ba553ca: jne    0x000000011ba553d9
  0x000000011ba553cc: addq   $0x1,0x390(%r8)
  0x000000011ba553d4: jmpq   0x000000011ba55450
  0x000000011ba553d9: cmp    0x398(%r8),%rcx
  0x000000011ba553e0: jne    0x000000011ba553ef
  0x000000011ba553e2: addq   $0x1,0x3a0(%r8)
  0x000000011ba553ea: jmpq   0x000000011ba55450
  0x000000011ba553ef: cmpq   $0x0,0x388(%r8)
  0x000000011ba553fa: jne    0x000000011ba55413
  0x000000011ba553fc: mov    %rcx,0x388(%r8)
  0x000000011ba55403: movq   $0x1,0x390(%r8)
  0x000000011ba5540e: jmpq   0x000000011ba55450
  0x000000011ba55413: cmpq   $0x0,0x398(%r8)
  0x000000011ba5541e: jne    0x000000011ba55437
  0x000000011ba55420: mov    %rcx,0x398(%r8)
  0x000000011ba55427: movq   $0x1,0x3a0(%r8)
  0x000000011ba55432: jmpq   0x000000011ba55450
  0x000000011ba55437: jmp    0x000000011ba55450
  0x000000011ba55439: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55443: subq   $0x1,0x378(%r8)
  0x000000011ba5544b: jmpq   0x000000011ba55f10
  0x000000011ba55450: movslq %edx,%rdx
  0x000000011ba55453: lea    0x10(%rax,%rdx,4),%rdx
  0x000000011ba55458: movsbl 0x30(%r15),%ecx
  0x000000011ba5545d: cmp    $0x0,%ecx
  0x000000011ba55460: jne    0x000000011ba55f19
  0x000000011ba55466: mov    %rsi,%r10
  0x000000011ba55469: shr    $0x3,%r10
  0x000000011ba5546d: mov    %r10d,(%rdx)
  0x000000011ba55470: mov    %rdx,%rcx
  0x000000011ba55473: xor    %rsi,%rcx
  0x000000011ba55476: shr    $0x14,%rcx
  0x000000011ba5547a: cmp    $0x0,%rcx
  0x000000011ba5547e: jne    0x000000011ba55f37  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)

  0x000000011ba55484: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5548e: incl   0x3b0(%rdx)
  0x000000011ba55494: mov    %rdi,%rcx
  0x000000011ba55497: mov    %rax,%rbx
  0x000000011ba5549a: mov    %r14d,0x48(%rsp)
  0x000000011ba5549f: jmpq   0x000000011ba55d78  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@195 (line 707)

  0x000000011ba554a4: cmp    $0x0,%rsi
  0x000000011ba554a8: jne    0x000000011ba554c0
  0x000000011ba554aa: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba554b4: orb    $0x1,0x3c1(%rbx)
  0x000000011ba554bb: jmpq   0x000000011ba55599
  0x000000011ba554c0: movabs $0x800032798,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba554ca: mov    0x8(%rsi),%ecx
  0x000000011ba554cd: movabs $0x800000000,%r12
  0x000000011ba554d7: add    %r12,%rcx
  0x000000011ba554da: xor    %r12,%r12
  0x000000011ba554dd: cmp    %rcx,%r8
  0x000000011ba554e0: jne    0x000000011ba5557d
  0x000000011ba554e6: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba554f0: mov    0x8(%rsi),%r8d
  0x000000011ba554f4: movabs $0x800000000,%r12
  0x000000011ba554fe: add    %r12,%r8
  0x000000011ba55501: xor    %r12,%r12
  0x000000011ba55504: cmp    0x3d8(%rbx),%r8
  0x000000011ba5550b: jne    0x000000011ba5551a
  0x000000011ba5550d: addq   $0x1,0x3e0(%rbx)
  0x000000011ba55515: jmpq   0x000000011ba5559e
  0x000000011ba5551a: cmp    0x3e8(%rbx),%r8
  0x000000011ba55521: jne    0x000000011ba55530
  0x000000011ba55523: addq   $0x1,0x3f0(%rbx)
  0x000000011ba5552b: jmpq   0x000000011ba5559e
  0x000000011ba55530: cmpq   $0x0,0x3d8(%rbx)
  0x000000011ba5553b: jne    0x000000011ba55554
  0x000000011ba5553d: mov    %r8,0x3d8(%rbx)
  0x000000011ba55544: movq   $0x1,0x3e0(%rbx)
  0x000000011ba5554f: jmpq   0x000000011ba5559e
  0x000000011ba55554: cmpq   $0x0,0x3e8(%rbx)
  0x000000011ba5555f: jne    0x000000011ba55578
  0x000000011ba55561: mov    %r8,0x3e8(%rbx)
  0x000000011ba55568: movq   $0x1,0x3f0(%rbx)
  0x000000011ba55573: jmpq   0x000000011ba5559e
  0x000000011ba55578: jmpq   0x000000011ba5559e
  0x000000011ba5557d: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55587: subq   $0x1,0x3c8(%rbx)
  0x000000011ba5558f: jmpq   0x000000011ba55599
  0x000000011ba55594: jmpq   0x000000011ba5559e
  0x000000011ba55599: xor    %rdx,%rdx
  0x000000011ba5559c: jmp    0x000000011ba555a8
  0x000000011ba5559e: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@200 (line 708)

  0x000000011ba555a8: cmp    $0x0,%edx
  0x000000011ba555ab: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba555b5: movabs $0x400,%rcx
  0x000000011ba555bf: je     0x000000011ba555cf
  0x000000011ba555c5: movabs $0x410,%rcx
  0x000000011ba555cf: mov    (%rdx,%rcx,1),%r8
  0x000000011ba555d3: lea    0x1(%r8),%r8
  0x000000011ba555d7: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba555db: je     0x000000011ba557b7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@203 (line 708)

  0x000000011ba555e1: mov    %r14d,0x48(%rsp)
  0x000000011ba555e6: cmp    $0x0,%rsi
  0x000000011ba555ea: jne    0x000000011ba55602
  0x000000011ba555ec: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba555f6: orb    $0x1,0x419(%rbx)
  0x000000011ba555fd: jmpq   0x000000011ba556db
  0x000000011ba55602: movabs $0x800032798,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba5560c: mov    0x8(%rsi),%ecx
  0x000000011ba5560f: movabs $0x800000000,%r12
  0x000000011ba55619: add    %r12,%rcx
  0x000000011ba5561c: xor    %r12,%r12
  0x000000011ba5561f: cmp    %rcx,%r8
  0x000000011ba55622: jne    0x000000011ba556bf
  0x000000011ba55628: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55632: mov    0x8(%rsi),%r8d
  0x000000011ba55636: movabs $0x800000000,%r12
  0x000000011ba55640: add    %r12,%r8
  0x000000011ba55643: xor    %r12,%r12
  0x000000011ba55646: cmp    0x430(%rbx),%r8
  0x000000011ba5564d: jne    0x000000011ba5565c
  0x000000011ba5564f: addq   $0x1,0x438(%rbx)
  0x000000011ba55657: jmpq   0x000000011ba556db
  0x000000011ba5565c: cmp    0x440(%rbx),%r8
  0x000000011ba55663: jne    0x000000011ba55672
  0x000000011ba55665: addq   $0x1,0x448(%rbx)
  0x000000011ba5566d: jmpq   0x000000011ba556db
  0x000000011ba55672: cmpq   $0x0,0x430(%rbx)
  0x000000011ba5567d: jne    0x000000011ba55696
  0x000000011ba5567f: mov    %r8,0x430(%rbx)
  0x000000011ba55686: movq   $0x1,0x438(%rbx)
  0x000000011ba55691: jmpq   0x000000011ba556db
  0x000000011ba55696: cmpq   $0x0,0x440(%rbx)
  0x000000011ba556a1: jne    0x000000011ba556ba
  0x000000011ba556a3: mov    %r8,0x440(%rbx)
  0x000000011ba556aa: movq   $0x1,0x448(%rbx)
  0x000000011ba556b5: jmpq   0x000000011ba556db
  0x000000011ba556ba: jmpq   0x000000011ba556db
  0x000000011ba556bf: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba556c9: subq   $0x1,0x420(%rbx)
  0x000000011ba556d1: jmpq   0x000000011ba55f4f
  0x000000011ba556d6: jmpq   0x000000011ba556db  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@208 (line 709)

  0x000000011ba556db: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011ba55f58
  0x000000011ba556de: mov    %rsi,%rcx
  0x000000011ba556e1: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba556eb: mov    0x8(%rcx),%ecx
  0x000000011ba556ee: movabs $0x800000000,%r12
  0x000000011ba556f8: add    %r12,%rcx
  0x000000011ba556fb: xor    %r12,%r12
  0x000000011ba556fe: cmp    0x468(%r8),%rcx
  0x000000011ba55705: jne    0x000000011ba55714
  0x000000011ba55707: addq   $0x1,0x470(%r8)
  0x000000011ba5570f: jmpq   0x000000011ba5577a
  0x000000011ba55714: cmp    0x478(%r8),%rcx
  0x000000011ba5571b: jne    0x000000011ba5572a
  0x000000011ba5571d: addq   $0x1,0x480(%r8)
  0x000000011ba55725: jmpq   0x000000011ba5577a
  0x000000011ba5572a: cmpq   $0x0,0x468(%r8)
  0x000000011ba55735: jne    0x000000011ba5574e
  0x000000011ba55737: mov    %rcx,0x468(%r8)
  0x000000011ba5573e: movq   $0x1,0x470(%r8)
  0x000000011ba55749: jmpq   0x000000011ba5577a
  0x000000011ba5574e: cmpq   $0x0,0x478(%r8)
  0x000000011ba55759: jne    0x000000011ba55772
  0x000000011ba5575b: mov    %rcx,0x478(%r8)
  0x000000011ba55762: movq   $0x1,0x480(%r8)
  0x000000011ba5576d: jmpq   0x000000011ba5577a
  0x000000011ba55772: addq   $0x1,0x458(%r8)
  0x000000011ba5577a: mov    %r9,%rdx
  0x000000011ba5577d: mov    %rax,%rcx
  0x000000011ba55780: mov    %rdi,%r8
  0x000000011ba55783: mov    %r13,%r9           ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@217 (line 709)

  0x000000011ba55786: mov    %edi,0x34(%rsp)
  0x000000011ba5578a: mov    %r13d,0x30(%rsp)
  0x000000011ba5578f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop }
                                                ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@217 (line 709)
                                                ;   {optimized virtual_call}
  0x000000011ba55794: movabs $0x1328a30a8,%rax  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5579e: incl   0x490(%rax)
  0x000000011ba557a4: mov    0x34(%rsp),%ecx
  0x000000011ba557a8: mov    0x38(%rsp),%rbx
  0x000000011ba557ad: mov    0x30(%rsp),%r13d
  0x000000011ba557b2: jmpq   0x000000011ba55d78  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@220 (line 709)

  0x000000011ba557b7: mov    %edi,0x34(%rsp)
  0x000000011ba557bb: mov    %r14d,0x48(%rsp)
  0x000000011ba557c0: mov    %r13d,0x30(%rsp)
  0x000000011ba557c5: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba557cf: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000011ba557d9: movabs $0x0,%rbx          ;   {oop(NULL)}
  0x000000011ba557e3: movabs $0x0,%rdx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@235 (line 715)
                                                ;   {oop(NULL)}
  0x000000011ba557ed: mov    0x30(%rsp),%r13d
  0x000000011ba557f2: nopw   0x0(%rax,%rax,1)
  0x000000011ba557f8: mov    0x18(%rsi),%ecx    ; implicit exception: dispatches to 0x000000011ba55f5d
  0x000000011ba557fb: shl    $0x3,%rcx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@237 (line 715)

  0x000000011ba557ff: mov    0xc(%rsi),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@244 (line 716)

  0x000000011ba55803: and    %r13,%r8
  0x000000011ba55806: cmp    $0x0,%r8d
  0x000000011ba5580a: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55814: movabs $0x4a8,%r9
  0x000000011ba5581e: jne    0x000000011ba5582e
  0x000000011ba55824: movabs $0x4b8,%r9
  0x000000011ba5582e: mov    (%r8,%r9,1),%r11
  0x000000011ba55832: lea    0x1(%r11),%r11
  0x000000011ba55836: mov    %r11,(%r8,%r9,1)
  0x000000011ba5583a: jne    0x000000011ba558db  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@249 (line 716)

  0x000000011ba55840: cmp    $0x0,%rbx
  0x000000011ba55844: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5584e: movabs $0x4c8,%r9
  0x000000011ba55858: jne    0x000000011ba55868
  0x000000011ba5585e: movabs $0x4d8,%r9
  0x000000011ba55868: mov    (%r8,%r9,1),%r11
  0x000000011ba5586c: lea    0x1(%r11),%r11
  0x000000011ba55870: mov    %r11,(%r8,%r9,1)
  0x000000011ba55874: jne    0x000000011ba55892  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@254 (line 717)

  0x000000011ba5587a: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55884: incl   0x4e8(%rbx)
  0x000000011ba5588a: mov    %rsi,%rbx
  0x000000011ba5588d: jmpq   0x000000011ba558c3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@261 (line 718)

  0x000000011ba55892: movsbl 0x30(%r15),%r8d
  0x000000011ba55897: cmp    $0x0,%r8d
  0x000000011ba5589b: jne    0x000000011ba55f62
  0x000000011ba558a1: mov    %rsi,%r10
  0x000000011ba558a4: shr    $0x3,%r10
  0x000000011ba558a8: mov    %r10d,0x18(%rbx)   ; implicit exception: dispatches to 0x000000011ba55f82
  0x000000011ba558ac: mov    %rbx,%r8
  0x000000011ba558af: xor    %rsi,%r8
  0x000000011ba558b2: shr    $0x14,%r8
  0x000000011ba558b6: cmp    $0x0,%r8
  0x000000011ba558ba: jne    0x000000011ba55f87  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@268 (line 720)

  0x000000011ba558c0: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@271 (line 721)

  0x000000011ba558c3: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba558cd: incl   0x500(%rdx)
  0x000000011ba558d3: mov    %rbx,%rdx
  0x000000011ba558d6: jmpq   0x000000011ba55961  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@275 (line 721)

  0x000000011ba558db: cmp    $0x0,%rax
  0x000000011ba558df: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba558e9: movabs $0x518,%r9
  0x000000011ba558f3: jne    0x000000011ba55903
  0x000000011ba558f9: movabs $0x528,%r9
  0x000000011ba55903: mov    (%r8,%r9,1),%r11
  0x000000011ba55907: lea    0x1(%r11),%r11
  0x000000011ba5590b: mov    %r11,(%r8,%r9,1)
  0x000000011ba5590f: jne    0x000000011ba5592d  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@280 (line 724)

  0x000000011ba55915: movabs $0x1328a30a8,%rax  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5591f: incl   0x538(%rax)
  0x000000011ba55925: mov    %rsi,%rdi
  0x000000011ba55928: jmpq   0x000000011ba5595b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@287 (line 725)

  0x000000011ba5592d: movsbl 0x30(%r15),%r8d
  0x000000011ba55932: cmp    $0x0,%r8d
  0x000000011ba55936: jne    0x000000011ba55f9f
  0x000000011ba5593c: mov    %rsi,%r10
  0x000000011ba5593f: shr    $0x3,%r10
  0x000000011ba55943: mov    %r10d,0x18(%rax)   ; implicit exception: dispatches to 0x000000011ba55fbf
  0x000000011ba55947: mov    %rax,%r8
  0x000000011ba5594a: xor    %rsi,%r8
  0x000000011ba5594d: shr    $0x14,%r8
  0x000000011ba55951: cmp    $0x0,%r8
  0x000000011ba55955: jne    0x000000011ba55fc4  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@294 (line 727)

  0x000000011ba5595b: mov    %rsi,%rax
  0x000000011ba5595e: mov    %rbx,%rsi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@301 (line 730)

  0x000000011ba55961: cmp    $0x0,%rcx
  0x000000011ba55965: mov    $0x8,%ebx
  0x000000011ba5596a: jne    0x000000011ba55975
  0x000000011ba55970: mov    $0x0,%ebx
  0x000000011ba55975: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5597f: mov    0x108(%r8),%r9d
  0x000000011ba55986: add    %ebx,%r9d
  0x000000011ba55989: mov    %r9d,0x108(%r8)
  0x000000011ba55990: cmp    $0x0,%ebx
  0x000000011ba55993: jne    0x000000011ba5599f
  0x000000011ba55999: mov    $0x8,%r9d
  0x000000011ba5599f: and    $0xfff8,%r9d
  0x000000011ba559a6: cmp    $0x0,%r9d
  0x000000011ba559aa: je     0x000000011ba55fdc  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)

  0x000000011ba559b0: mov    0x108(%r15),%r10   ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)

  0x000000011ba559b7: test   %eax,(%r10)        ;   {poll}
  0x000000011ba559ba: cmp    $0x0,%rcx
  0x000000011ba559be: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba559c8: movabs $0x560,%r8
  0x000000011ba559d2: je     0x000000011ba559e2
  0x000000011ba559d8: movabs $0x550,%r8
  0x000000011ba559e2: mov    (%rbx,%r8,1),%r9
  0x000000011ba559e6: lea    0x1(%r9),%r9
  0x000000011ba559ea: mov    %r9,(%rbx,%r8,1)
  0x000000011ba559ee: je     0x000000011ba559ff  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)

  0x000000011ba559f4: mov    %rsi,%rbx
  0x000000011ba559f7: mov    %rcx,%rsi
  0x000000011ba559fa: jmpq   0x000000011ba557f8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@235 (line 715)

  0x000000011ba559ff: cmp    $0x0,%rsi
  0x000000011ba55a03: movabs $0x1328a30a8,%rbx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55a0d: movabs $0x570,%rcx
  0x000000011ba55a17: je     0x000000011ba55a27
  0x000000011ba55a1d: movabs $0x580,%rcx
  0x000000011ba55a27: mov    (%rbx,%rcx,1),%r8
  0x000000011ba55a2b: lea    0x1(%r8),%r8
  0x000000011ba55a2f: mov    %r8,(%rbx,%rcx,1)
  0x000000011ba55a33: mov    0x34(%rsp),%ecx
  0x000000011ba55a37: mov    0x38(%rsp),%rbx
  0x000000011ba55a3c: je     0x000000011ba55bc0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@311 (line 731)

  0x000000011ba55a42: movsbl 0x30(%r15),%r8d
  0x000000011ba55a47: cmp    $0x0,%r8d
  0x000000011ba55a4b: jne    0x000000011ba55ffd
  0x000000011ba55a51: movl   $0x0,0x18(%rsi)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@317 (line 732)
                                                ; implicit exception: dispatches to 0x000000011ba5601d
  0x000000011ba55a58: cmp    0xc(%rbx),%ecx
  0x000000011ba55a5b: jae    0x000000011ba56022
  0x000000011ba55a61: cmp    $0x0,%rdx
  0x000000011ba55a65: jne    0x000000011ba55a7e
  0x000000011ba55a67: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55a71: orb    $0x1,0x589(%r8)
  0x000000011ba55a79: jmpq   0x000000011ba55b8b
  0x000000011ba55a7e: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011ba56030
  0x000000011ba55a81: movabs $0x800000000,%r12
  0x000000011ba55a8b: add    %r12,%rsi
  0x000000011ba55a8e: xor    %r12,%r12
  0x000000011ba55a91: mov    0x8(%rdx),%r8d
  0x000000011ba55a95: movabs $0x800000000,%r12
  0x000000011ba55a9f: add    %r12,%r8
  0x000000011ba55aa2: xor    %r12,%r12
  0x000000011ba55aa5: mov    0xe8(%rsi),%rsi
  0x000000011ba55aac: cmp    %rsi,%r8
  0x000000011ba55aaf: je     0x000000011ba55ae1
  0x000000011ba55ab5: mov    0x10(%rsi),%r9d
  0x000000011ba55ab9: cmp    (%r8,%r9,1),%rsi
  0x000000011ba55abd: je     0x000000011ba55ae1
  0x000000011ba55ac3: cmp    $0x20,%r9d
  0x000000011ba55ac7: jne    0x000000011ba55b74
  0x000000011ba55acd: push   %r8
  0x000000011ba55acf: push   %rsi
  0x000000011ba55ad0: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba55ad5: pop    %r8
  0x000000011ba55ad7: pop    %rsi
  0x000000011ba55ad8: cmp    $0x0,%esi
  0x000000011ba55adb: je     0x000000011ba55b74
  0x000000011ba55ae1: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55aeb: mov    0x8(%rdx),%esi
  0x000000011ba55aee: movabs $0x800000000,%r12
  0x000000011ba55af8: add    %r12,%rsi
  0x000000011ba55afb: xor    %r12,%r12
  0x000000011ba55afe: cmp    0x5a0(%r8),%rsi
  0x000000011ba55b05: jne    0x000000011ba55b14
  0x000000011ba55b07: addq   $0x1,0x5a8(%r8)
  0x000000011ba55b0f: jmpq   0x000000011ba55b8b
  0x000000011ba55b14: cmp    0x5b0(%r8),%rsi
  0x000000011ba55b1b: jne    0x000000011ba55b2a
  0x000000011ba55b1d: addq   $0x1,0x5b8(%r8)
  0x000000011ba55b25: jmpq   0x000000011ba55b8b
  0x000000011ba55b2a: cmpq   $0x0,0x5a0(%r8)
  0x000000011ba55b35: jne    0x000000011ba55b4e
  0x000000011ba55b37: mov    %rsi,0x5a0(%r8)
  0x000000011ba55b3e: movq   $0x1,0x5a8(%r8)
  0x000000011ba55b49: jmpq   0x000000011ba55b8b
  0x000000011ba55b4e: cmpq   $0x0,0x5b0(%r8)
  0x000000011ba55b59: jne    0x000000011ba55b72
  0x000000011ba55b5b: mov    %rsi,0x5b0(%r8)
  0x000000011ba55b62: movq   $0x1,0x5b8(%r8)
  0x000000011ba55b6d: jmpq   0x000000011ba55b8b
  0x000000011ba55b72: jmp    0x000000011ba55b8b
  0x000000011ba55b74: movabs $0x1328a30a8,%r8   ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55b7e: subq   $0x1,0x590(%r8)
  0x000000011ba55b86: jmpq   0x000000011ba56035
  0x000000011ba55b8b: movslq %ecx,%rsi
  0x000000011ba55b8e: lea    0x10(%rbx,%rsi,4),%rsi
  0x000000011ba55b93: movsbl 0x30(%r15),%r8d
  0x000000011ba55b98: cmp    $0x0,%r8d
  0x000000011ba55b9c: jne    0x000000011ba5603e
  0x000000011ba55ba2: mov    %rdx,%r10
  0x000000011ba55ba5: shr    $0x3,%r10
  0x000000011ba55ba9: mov    %r10d,(%rsi)
  0x000000011ba55bac: mov    %rsi,%r8
  0x000000011ba55baf: xor    %rdx,%r8
  0x000000011ba55bb2: shr    $0x14,%r8
  0x000000011ba55bb6: cmp    $0x0,%r8
  0x000000011ba55bba: jne    0x000000011ba5605d  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)

  0x000000011ba55bc0: cmp    $0x0,%rax
  0x000000011ba55bc4: movabs $0x1328a30a8,%rsi  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55bce: movabs $0x5c8,%rdx
  0x000000011ba55bd8: je     0x000000011ba55be8
  0x000000011ba55bde: movabs $0x5d8,%rdx
  0x000000011ba55be8: mov    (%rsi,%rdx,1),%r8
  0x000000011ba55bec: lea    0x1(%r8),%r8
  0x000000011ba55bf0: mov    %r8,(%rsi,%rdx,1)
  0x000000011ba55bf4: je     0x000000011ba55d78  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@329 (line 735)

  0x000000011ba55bfa: movsbl 0x30(%r15),%esi
  0x000000011ba55bff: cmp    $0x0,%esi
  0x000000011ba55c02: jne    0x000000011ba56075
  0x000000011ba55c08: movl   $0x0,0x18(%rax)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@335 (line 736)
                                                ; implicit exception: dispatches to 0x000000011ba56094
  0x000000011ba55c0f: mov    %rcx,%rax
  0x000000011ba55c12: add    %r13d,%eax
  0x000000011ba55c15: cmp    0xc(%rbx),%eax
  0x000000011ba55c18: jae    0x000000011ba56099
  0x000000011ba55c1e: cmp    $0x0,%rdi
  0x000000011ba55c22: jne    0x000000011ba55c3a
  0x000000011ba55c24: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55c2e: orb    $0x1,0x5e1(%rdx)
  0x000000011ba55c35: jmpq   0x000000011ba55d44
  0x000000011ba55c3a: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011ba560a7
  0x000000011ba55c3d: movabs $0x800000000,%r12
  0x000000011ba55c47: add    %r12,%rsi
  0x000000011ba55c4a: xor    %r12,%r12
  0x000000011ba55c4d: mov    0x8(%rdi),%edx
  0x000000011ba55c50: movabs $0x800000000,%r12
  0x000000011ba55c5a: add    %r12,%rdx
  0x000000011ba55c5d: xor    %r12,%r12
  0x000000011ba55c60: mov    0xe8(%rsi),%rsi
  0x000000011ba55c67: cmp    %rsi,%rdx
  0x000000011ba55c6a: je     0x000000011ba55c9a
  0x000000011ba55c70: mov    0x10(%rsi),%r8d
  0x000000011ba55c74: cmp    (%rdx,%r8,1),%rsi
  0x000000011ba55c78: je     0x000000011ba55c9a
  0x000000011ba55c7e: cmp    $0x20,%r8d
  0x000000011ba55c82: jne    0x000000011ba55d2d
  0x000000011ba55c88: push   %rdx
  0x000000011ba55c89: push   %rsi
  0x000000011ba55c8a: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba55c8f: pop    %rdx
  0x000000011ba55c90: pop    %rsi
  0x000000011ba55c91: cmp    $0x0,%esi
  0x000000011ba55c94: je     0x000000011ba55d2d
  0x000000011ba55c9a: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55ca4: mov    0x8(%rdi),%esi
  0x000000011ba55ca7: movabs $0x800000000,%r12
  0x000000011ba55cb1: add    %r12,%rsi
  0x000000011ba55cb4: xor    %r12,%r12
  0x000000011ba55cb7: cmp    0x5f8(%rdx),%rsi
  0x000000011ba55cbe: jne    0x000000011ba55ccd
  0x000000011ba55cc0: addq   $0x1,0x600(%rdx)
  0x000000011ba55cc8: jmpq   0x000000011ba55d44
  0x000000011ba55ccd: cmp    0x608(%rdx),%rsi
  0x000000011ba55cd4: jne    0x000000011ba55ce3
  0x000000011ba55cd6: addq   $0x1,0x610(%rdx)
  0x000000011ba55cde: jmpq   0x000000011ba55d44
  0x000000011ba55ce3: cmpq   $0x0,0x5f8(%rdx)
  0x000000011ba55cee: jne    0x000000011ba55d07
  0x000000011ba55cf0: mov    %rsi,0x5f8(%rdx)
  0x000000011ba55cf7: movq   $0x1,0x600(%rdx)
  0x000000011ba55d02: jmpq   0x000000011ba55d44
  0x000000011ba55d07: cmpq   $0x0,0x608(%rdx)
  0x000000011ba55d12: jne    0x000000011ba55d2b
  0x000000011ba55d14: mov    %rsi,0x608(%rdx)
  0x000000011ba55d1b: movq   $0x1,0x610(%rdx)
  0x000000011ba55d26: jmpq   0x000000011ba55d44
  0x000000011ba55d2b: jmp    0x000000011ba55d44
  0x000000011ba55d2d: movabs $0x1328a30a8,%rdx  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55d37: subq   $0x1,0x5e8(%rdx)
  0x000000011ba55d3f: jmpq   0x000000011ba560ac
  0x000000011ba55d44: movslq %eax,%rax
  0x000000011ba55d47: lea    0x10(%rbx,%rax,4),%rax
  0x000000011ba55d4c: movsbl 0x30(%r15),%esi
  0x000000011ba55d51: cmp    $0x0,%esi
  0x000000011ba55d54: jne    0x000000011ba560b5
  0x000000011ba55d5a: mov    %rdi,%r10
  0x000000011ba55d5d: shr    $0x3,%r10
  0x000000011ba55d61: mov    %r10d,(%rax)
  0x000000011ba55d64: mov    %rax,%rsi
  0x000000011ba55d67: xor    %rdi,%rsi
  0x000000011ba55d6a: shr    $0x14,%rsi
  0x000000011ba55d6e: cmp    $0x0,%rsi
  0x000000011ba55d72: jne    0x000000011ba560d3  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)

  0x000000011ba55d78: mov    %rcx,%rdi
  0x000000011ba55d7b: inc    %edi
  0x000000011ba55d7d: movabs $0x1328a30a8,%rax  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55d87: mov    0x108(%rax),%esi
  0x000000011ba55d8d: add    $0x8,%esi
  0x000000011ba55d90: mov    %esi,0x108(%rax)
  0x000000011ba55d96: and    $0xfff8,%esi
  0x000000011ba55d9c: cmp    $0x0,%esi
  0x000000011ba55d9f: je     0x000000011ba560eb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)

  0x000000011ba55da5: mov    0x108(%r15),%r10   ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)

  0x000000011ba55dac: test   %eax,(%r10)        ;   {poll}
  0x000000011ba55daf: movabs $0x1328a30a8,%rax  ;   {metadata(method data for {method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55db9: incl   0x620(%rax)
  0x000000011ba55dbf: mov    %rdi,%rcx
  0x000000011ba55dc2: mov    %rcx,%rdi
  0x000000011ba55dc5: mov    %rbx,%rax
  0x000000011ba55dc8: mov    0x48(%rsp),%r14d
  0x000000011ba55dcd: mov    0x50(%rsp),%r11
  0x000000011ba55dd2: mov    0x40(%rsp),%r9
  0x000000011ba55dd7: jmpq   0x000000011ba550c8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)

  0x000000011ba55ddc: mov    %rax,%rbx
  0x000000011ba55ddf: mov    %rbx,%rax
  0x000000011ba55de2: add    $0x60,%rsp
  0x000000011ba55de6: pop    %rbp
  0x000000011ba55de7: mov    0x108(%r15),%r10
  0x000000011ba55dee: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba55df1: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@355 (line 743)

  0x000000011ba55df2: movl   $0x7fffffff,0x1c(%rsi)  ;*putfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@37 (line 679)

  0x000000011ba55df9: mov    %r11,%rax
  0x000000011ba55dfc: add    $0x60,%rsp
  0x000000011ba55e00: pop    %rbp
  0x000000011ba55e01: mov    0x108(%r15),%r10
  0x000000011ba55e08: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba55e0b: retq   
  0x000000011ba55e0c: movabs $0x1325d2b38,%r10  ;   {metadata({method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55e16: mov    %r10,0x8(%rsp)
  0x000000011ba55e1b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba55e23: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [64]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::resize@-1 (line 673)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba55e28: jmpq   0x000000011ba54cb9
  0x000000011ba55e2d: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@14 (line 674)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55e32: vcomiss -0xd0f67ba(%rip),%xmm1        # 0x000000010e95f680
                                                ;   {external_word}
  0x000000011ba55e3a: jp     0x000000011ba55e43
  0x000000011ba55e3c: jb     0x000000011ba55e46
  0x000000011ba55e3e: dec    %rbx
  0x000000011ba55e41: jmp    0x000000011ba55e46
  0x000000011ba55e43: xor    %rbx,%rbx
  0x000000011ba55e46: jmpq   0x000000011ba54fa1
  0x000000011ba55e4b: callq  0x000000011b597080  ; ImmutableOopMap{r11=Oop [80]=Oop r9=Oop [64]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@133 (line 699)
                                                ;   {runtime_call new_object_array Runtime1 stub}
  0x000000011ba55e50: jmpq   0x000000011ba55052
  0x000000011ba55e55: mov    0x24(%r9),%edx
  0x000000011ba55e59: shl    $0x3,%rdx
  0x000000011ba55e5d: cmp    $0x0,%rdx
  0x000000011ba55e61: je     0x000000011ba55065
  0x000000011ba55e67: mov    %rdx,(%rsp)
  0x000000011ba55e6b: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba55e70: jmpq   0x000000011ba55065
  0x000000011ba55e75: cmp    $0x0,%rax
  0x000000011ba55e79: je     0x000000011ba55084
  0x000000011ba55e7f: mov    %r9,(%rsp)
  0x000000011ba55e83: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba55e88: jmpq   0x000000011ba55084
  0x000000011ba55e8d: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55e92: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55e97: mov    %rdi,(%rsp)
  0x000000011ba55e9b: mov    %r11,0x8(%rsp)
  0x000000011ba55ea0: callq  0x000000011b595320  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba55ea5: mov    %rdi,(%rsp)
  0x000000011ba55ea9: mov    %r11,0x8(%rsp)
  0x000000011ba55eae: callq  0x000000011b595320  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@171 (line 705)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba55eb3: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@171 (line 705)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55eb8: mov    %rdx,(%rsp)
  0x000000011ba55ebc: callq  0x000000011b597d20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@171 (line 705)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011ba55ec1: mov    (%rcx),%r8d
  0x000000011ba55ec4: shl    $0x3,%r8
  0x000000011ba55ec8: cmp    $0x0,%r8
  0x000000011ba55ecc: je     0x000000011ba552b5
  0x000000011ba55ed2: mov    %r8,(%rsp)
  0x000000011ba55ed6: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba55edb: jmpq   0x000000011ba552b5
  0x000000011ba55ee0: cmp    $0x0,%rdx
  0x000000011ba55ee4: je     0x000000011ba552d3
  0x000000011ba55eea: mov    %rcx,(%rsp)
  0x000000011ba55eee: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba55ef3: jmpq   0x000000011ba552d3
  0x000000011ba55ef8: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@174 (line 706)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55efd: mov    %rdx,(%rsp)
  0x000000011ba55f01: mov    %rax,0x8(%rsp)
  0x000000011ba55f06: callq  0x000000011b595320  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba55f0b: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55f10: mov    %rsi,(%rsp)
  0x000000011ba55f14: callq  0x000000011b597d20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011ba55f19: mov    (%rdx),%ecx
  0x000000011ba55f1b: shl    $0x3,%rcx
  0x000000011ba55f1f: cmp    $0x0,%rcx
  0x000000011ba55f23: je     0x000000011ba55466
  0x000000011ba55f29: mov    %rcx,(%rsp)
  0x000000011ba55f2d: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba55f32: jmpq   0x000000011ba55466
  0x000000011ba55f37: cmp    $0x0,%rsi
  0x000000011ba55f3b: je     0x000000011ba55484
  0x000000011ba55f41: mov    %rdx,(%rsp)
  0x000000011ba55f45: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba55f4a: jmpq   0x000000011ba55484
  0x000000011ba55f4f: mov    %rsi,(%rsp)
  0x000000011ba55f53: callq  0x000000011b597fa0  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@208 (line 709)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba55f58: callq  0x000000011b595f20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop rsi=Oop }
                                                ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@217 (line 709)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55f5d: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rbx=Oop rdx=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@237 (line 715)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55f62: mov    0x18(%rbx),%r8d    ; implicit exception: dispatches to 0x000000011ba5610c
  0x000000011ba55f66: shl    $0x3,%r8
  0x000000011ba55f6a: cmp    $0x0,%r8
  0x000000011ba55f6e: je     0x000000011ba558a1
  0x000000011ba55f74: mov    %r8,(%rsp)
  0x000000011ba55f78: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba55f7d: jmpq   0x000000011ba558a1
  0x000000011ba55f82: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@268 (line 720)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55f87: cmp    $0x0,%rsi
  0x000000011ba55f8b: je     0x000000011ba558c0
  0x000000011ba55f91: mov    %rbx,(%rsp)
  0x000000011ba55f95: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba55f9a: jmpq   0x000000011ba558c0
  0x000000011ba55f9f: mov    0x18(%rax),%r8d    ; implicit exception: dispatches to 0x000000011ba56111
  0x000000011ba55fa3: shl    $0x3,%r8
  0x000000011ba55fa7: cmp    $0x0,%r8
  0x000000011ba55fab: je     0x000000011ba5593c
  0x000000011ba55fb1: mov    %r8,(%rsp)
  0x000000011ba55fb5: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba55fba: jmpq   0x000000011ba5593c
  0x000000011ba55fbf: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@294 (line 727)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba55fc4: cmp    $0x0,%rsi
  0x000000011ba55fc8: je     0x000000011ba5595b
  0x000000011ba55fce: mov    %rax,(%rsp)
  0x000000011ba55fd2: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba55fd7: jmpq   0x000000011ba5595b
  0x000000011ba55fdc: movabs $0x1325d2b38,%r10  ;   {metadata({method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba55fe6: mov    %r10,0x8(%rsp)
  0x000000011ba55feb: movq   $0x132,(%rsp)
  0x000000011ba55ff3: callq  0x000000011b59a600  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba55ff8: jmpq   0x000000011ba559b0
  0x000000011ba55ffd: mov    0x18(%rsi),%r8d    ; implicit exception: dispatches to 0x000000011ba56116
  0x000000011ba56001: shl    $0x3,%r8
  0x000000011ba56005: cmp    $0x0,%r8
  0x000000011ba56009: je     0x000000011ba55a51
  0x000000011ba5600f: mov    %r8,(%rsp)
  0x000000011ba56013: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba56018: jmpq   0x000000011ba55a51
  0x000000011ba5601d: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@317 (line 732)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba56022: mov    %rcx,(%rsp)
  0x000000011ba56026: mov    %rbx,0x8(%rsp)
  0x000000011ba5602b: callq  0x000000011b595320  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba56030: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba56035: mov    %rdx,(%rsp)
  0x000000011ba56039: callq  0x000000011b597d20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011ba5603e: mov    (%rsi),%r8d
  0x000000011ba56041: shl    $0x3,%r8
  0x000000011ba56045: cmp    $0x0,%r8
  0x000000011ba56049: je     0x000000011ba55ba2
  0x000000011ba5604f: mov    %r8,(%rsp)
  0x000000011ba56053: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba56058: jmpq   0x000000011ba55ba2
  0x000000011ba5605d: cmp    $0x0,%rdx
  0x000000011ba56061: je     0x000000011ba55bc0
  0x000000011ba56067: mov    %rsi,(%rsp)
  0x000000011ba5606b: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba56070: jmpq   0x000000011ba55bc0
  0x000000011ba56075: mov    0x18(%rax),%esi    ; implicit exception: dispatches to 0x000000011ba5611b
  0x000000011ba56078: shl    $0x3,%rsi
  0x000000011ba5607c: cmp    $0x0,%rsi
  0x000000011ba56080: je     0x000000011ba55c08
  0x000000011ba56086: mov    %rsi,(%rsp)
  0x000000011ba5608a: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5608f: jmpq   0x000000011ba55c08
  0x000000011ba56094: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@335 (line 736)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba56099: mov    %rax,(%rsp)
  0x000000011ba5609d: mov    %rbx,0x8(%rsp)
  0x000000011ba560a2: callq  0x000000011b595320  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba560a7: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba560ac: mov    %rdi,(%rsp)
  0x000000011ba560b0: callq  0x000000011b597d20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011ba560b5: mov    (%rax),%esi
  0x000000011ba560b7: shl    $0x3,%rsi
  0x000000011ba560bb: cmp    $0x0,%rsi
  0x000000011ba560bf: je     0x000000011ba55d5a
  0x000000011ba560c5: mov    %rsi,(%rsp)
  0x000000011ba560c9: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba560ce: jmpq   0x000000011ba55d5a
  0x000000011ba560d3: cmp    $0x0,%rdi
  0x000000011ba560d7: je     0x000000011ba55d78
  0x000000011ba560dd: mov    %rax,(%rsp)
  0x000000011ba560e1: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba560e6: jmpq   0x000000011ba55d78
  0x000000011ba560eb: movabs $0x1325d2b38,%r10  ;   {metadata({method} {0x00000001325d2b38} &apos;resize&apos; &apos;()[Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba560f5: mov    %r10,0x8(%rsp)
  0x000000011ba560fa: movq   $0x15e,(%rsp)
  0x000000011ba56102: callq  0x000000011b59a600  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba56107: jmpq   0x000000011ba55da5
  0x000000011ba5610c: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@268 (line 720)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba56111: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@294 (line 727)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba56116: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop rsi=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@317 (line 732)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5611b: callq  0x000000011b595f20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rax=Oop rdi=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@335 (line 736)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba56120: nop
  0x000000011ba56121: nop
  0x000000011ba56122: mov    0x420(%r15),%rax
  0x000000011ba56129: movabs $0x0,%r10
  0x000000011ba56133: mov    %r10,0x420(%r15)
  0x000000011ba5613a: movabs $0x0,%r10
  0x000000011ba56144: mov    %r10,0x428(%r15)
  0x000000011ba5614b: add    $0x60,%rsp
  0x000000011ba5614f: pop    %rbp
  0x000000011ba56150: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba56155: hlt    
  0x000000011ba56156: hlt    
  0x000000011ba56157: hlt    
  0x000000011ba56158: hlt    
  0x000000011ba56159: hlt    
  0x000000011ba5615a: hlt    
  0x000000011ba5615b: hlt    
  0x000000011ba5615c: hlt    
  0x000000011ba5615d: hlt    
  0x000000011ba5615e: hlt    
  0x000000011ba5615f: hlt    
[Stub Code]
  0x000000011ba56160: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba56165: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5616f: jmpq   0x000000011ba5616f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba56174: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba56179: mov    %rsp,-0x28(%rsp)
  0x000000011ba5617e: sub    $0x80,%rsp
  0x000000011ba56185: mov    %rax,0x78(%rsp)
  0x000000011ba5618a: mov    %rcx,0x70(%rsp)
  0x000000011ba5618f: mov    %rdx,0x68(%rsp)
  0x000000011ba56194: mov    %rbx,0x60(%rsp)
  0x000000011ba56199: mov    %rbp,0x50(%rsp)
  0x000000011ba5619e: mov    %rsi,0x48(%rsp)
  0x000000011ba561a3: mov    %rdi,0x40(%rsp)
  0x000000011ba561a8: mov    %r8,0x38(%rsp)
  0x000000011ba561ad: mov    %r9,0x30(%rsp)
  0x000000011ba561b2: mov    %r10,0x28(%rsp)
  0x000000011ba561b7: mov    %r11,0x20(%rsp)
  0x000000011ba561bc: mov    %r12,0x18(%rsp)
  0x000000011ba561c1: mov    %r13,0x10(%rsp)
  0x000000011ba561c6: mov    %r14,0x8(%rsp)
  0x000000011ba561cb: mov    %r15,(%rsp)
  0x000000011ba561cf: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba561d9: movabs $0x11ba56179,%rsi  ;   {internal_word}
  0x000000011ba561e3: mov    %rsp,%rdx
  0x000000011ba561e6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba561ea: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba561ef: hlt    
[Deopt Handler Code]
  0x000000011ba561f0: movabs $0x11ba561f0,%r10  ;   {section_word}
  0x000000011ba561fa: push   %r10
  0x000000011ba561fc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba56201: hlt    
  0x000000011ba56202: hlt    
  0x000000011ba56203: hlt    
  0x000000011ba56204: hlt    
  0x000000011ba56205: hlt    
  0x000000011ba56206: hlt    
  0x000000011ba56207: hlt    

ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop }pc offsets: 2868 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }pc offsets: 3415 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }pc offsets: 4428 
ImmutableOopMap{rsi=Oop [64]=Oop }pc offsets: 4552 
ImmutableOopMap{rsi=Oop [64]=Oop r11=Oop [80]=Oop }pc offsets: 4562 
ImmutableOopMap{r11=Oop [80]=Oop r9=Oop [64]=Oop }pc offsets: 4592 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }pc offsets: 4658 4663 4677 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }pc offsets: 4691 4696 4705 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }pc offsets: 4765 4779 4784 4793 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop }pc offsets: 4856 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop rsi=Oop }pc offsets: 4861 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rbx=Oop rdx=Oop }pc offsets: 4866 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }pc offsets: 4903 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }pc offsets: 4964 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }pc offsets: 5016 
ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }pc offsets: 5058 5072 5077 5086 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }pc offsets: 5177 5191 5196 5205 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }pc offsets: 5287 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }pc offsets: 5297 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }pc offsets: 5302 
ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop rsi=Oop }pc offsets: 5307 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rax=Oop rdi=Oop }pc offsets: 5312 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='117' method='java.util.KeyValueHolder getKey ()Ljava/lang/Object;' bytes='5' count='128' iicount='128' level='1' stamp='0.377' comment='tiered' hot_count='128'/>
<task_queued compile_id='118' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='128' iicount='128' level='1' stamp='0.377' comment='tiered' hot_count='128'/>
<task_queued compile_id='119' method='java.util.HashSet add (Ljava/lang/Object;)Z' bytes='20' count='768' iicount='768' level='3' stamp='0.378' comment='tiered' hot_count='768'/>
<writer thread='15875'/>
<nmethod compile_id='102' compiler='c1' level='3' entry='0x000000011ba56e60' size='1760' address='0x000000011ba56c90' relocation_offset='376' insts_offset='464' stub_offset='1200' scopes_data_offset='1392' scopes_pcs_offset='1496' dependencies_offset='1736' nul_chk_table_offset='1744' metadata_offset='1384' method='java.util.ImmutableCollections$Set12 contains (Ljava/lang/Object;)Z' bytes='28' count='2770' iicount='2770' stamp='0.378'/>
<print_nmethod stamp='0.378'>
Compiled method (c1)     378  102       3       java.util.ImmutableCollections$Set12::contains (28 bytes)
 total in heap  [0x000000011ba56c90,0x000000011ba57370] = 1760
 relocation     [0x000000011ba56e08,0x000000011ba56e58] = 80
 main code      [0x000000011ba56e60,0x000000011ba57140] = 736
 stub code      [0x000000011ba57140,0x000000011ba571f8] = 184
 metadata       [0x000000011ba571f8,0x000000011ba57200] = 8
 scopes data    [0x000000011ba57200,0x000000011ba57268] = 104
 scopes pcs     [0x000000011ba57268,0x000000011ba57358] = 240
 dependencies   [0x000000011ba57358,0x000000011ba57360] = 8
 nul chk table  [0x000000011ba57360,0x000000011ba57370] = 16
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12.contains(Ljava/lang/Object;)Z  [0x000000011ba56e60, 0x000000011ba571f8]  920 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;
  # this:     rsi:rsi   = &apos;java/util/ImmutableCollections$Set12&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011ba56e60: mov    0x8(%rsi),%r10d
  0x000000011ba56e64: movabs $0x800000000,%r12
  0x000000011ba56e6e: add    %r12,%r10
  0x000000011ba56e71: xor    %r12,%r12
  0x000000011ba56e74: cmp    %rax,%r10
  0x000000011ba56e77: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba56e7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba56e80: mov    %eax,-0x14000(%rsp)
  0x000000011ba56e87: push   %rbp
  0x000000011ba56e88: sub    $0x40,%rsp
  0x000000011ba56e8c: movabs $0x1328a4748,%rdi  ;   {metadata(method data for {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba56e96: mov    0x104(%rdi),%ebx
  0x000000011ba56e9c: add    $0x8,%ebx
  0x000000011ba56e9f: mov    %ebx,0x104(%rdi)
  0x000000011ba56ea5: and    $0x1ff8,%ebx
  0x000000011ba56eab: cmp    $0x0,%ebx
  0x000000011ba56eae: je     0x000000011ba570df  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@0 (line 515)

  0x000000011ba56eb4: mov    0xc(%rsi),%edi
  0x000000011ba56eb7: shl    $0x3,%rdi          ;*getfield e0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@2 (line 515)

  0x000000011ba56ebb: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba57100
  0x000000011ba56ebe: mov    %rdx,%rbx
  0x000000011ba56ec1: movabs $0x1328a4748,%rax  ;   {metadata(method data for {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba56ecb: mov    0x8(%rbx),%ebx
  0x000000011ba56ece: movabs $0x800000000,%r12
  0x000000011ba56ed8: add    %r12,%rbx
  0x000000011ba56edb: xor    %r12,%r12
  0x000000011ba56ede: cmp    0x150(%rax),%rbx
  0x000000011ba56ee5: jne    0x000000011ba56ef4
  0x000000011ba56ee7: addq   $0x1,0x158(%rax)
  0x000000011ba56eef: jmpq   0x000000011ba56f5a
  0x000000011ba56ef4: cmp    0x160(%rax),%rbx
  0x000000011ba56efb: jne    0x000000011ba56f0a
  0x000000011ba56efd: addq   $0x1,0x168(%rax)
  0x000000011ba56f05: jmpq   0x000000011ba56f5a
  0x000000011ba56f0a: cmpq   $0x0,0x150(%rax)
  0x000000011ba56f15: jne    0x000000011ba56f2e
  0x000000011ba56f17: mov    %rbx,0x150(%rax)
  0x000000011ba56f1e: movq   $0x1,0x158(%rax)
  0x000000011ba56f29: jmpq   0x000000011ba56f5a
  0x000000011ba56f2e: cmpq   $0x0,0x160(%rax)
  0x000000011ba56f39: jne    0x000000011ba56f52
  0x000000011ba56f3b: mov    %rbx,0x160(%rax)
  0x000000011ba56f42: movq   $0x1,0x168(%rax)
  0x000000011ba56f4d: jmpq   0x000000011ba56f5a
  0x000000011ba56f52: addq   $0x1,0x140(%rax)
  0x000000011ba56f5a: mov    %rdx,%rbx
  0x000000011ba56f5d: mov    %rdi,%rdx
  0x000000011ba56f60: mov    %rsi,0x20(%rsp)
  0x000000011ba56f65: mov    %rbx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@5 (line 515)

  0x000000011ba56f68: mov    %rbx,0x28(%rsp)
  0x000000011ba56f6d: movabs $0xffffffffffffffff,%rax
  0x000000011ba56f77: callq  0x000000011b4d2180  ; ImmutableOopMap{[32]=Oop [40]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@5 (line 515)
                                                ;   {virtual_call}
  0x000000011ba56f7c: cmp    $0x0,%eax
  0x000000011ba56f7f: movabs $0x1328a4748,%rdx  ;   {metadata(method data for {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba56f89: movabs $0x178,%rsi
  0x000000011ba56f93: jne    0x000000011ba56fa3
  0x000000011ba56f99: movabs $0x188,%rsi
  0x000000011ba56fa3: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba56fa7: lea    0x1(%rdi),%rdi
  0x000000011ba56fab: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba56faf: jne    0x000000011ba570ad  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@8 (line 515)

  0x000000011ba56fb5: mov    0x28(%rsp),%rdi
  0x000000011ba56fba: mov    0x20(%rsp),%rsi
  0x000000011ba56fbf: mov    0x10(%rsi),%edx
  0x000000011ba56fc2: shl    $0x3,%rdx          ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@13 (line 515)

  0x000000011ba56fc6: mov    %rdi,%rsi
  0x000000011ba56fc9: movabs $0x1328a4748,%rbx  ;   {metadata(method data for {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba56fd3: mov    0x8(%rsi),%esi
  0x000000011ba56fd6: movabs $0x800000000,%r12
  0x000000011ba56fe0: add    %r12,%rsi
  0x000000011ba56fe3: xor    %r12,%r12
  0x000000011ba56fe6: cmp    0x1a8(%rbx),%rsi
  0x000000011ba56fed: jne    0x000000011ba56ffc
  0x000000011ba56fef: addq   $0x1,0x1b0(%rbx)
  0x000000011ba56ff7: jmpq   0x000000011ba57062
  0x000000011ba56ffc: cmp    0x1b8(%rbx),%rsi
  0x000000011ba57003: jne    0x000000011ba57012
  0x000000011ba57005: addq   $0x1,0x1c0(%rbx)
  0x000000011ba5700d: jmpq   0x000000011ba57062
  0x000000011ba57012: cmpq   $0x0,0x1a8(%rbx)
  0x000000011ba5701d: jne    0x000000011ba57036
  0x000000011ba5701f: mov    %rsi,0x1a8(%rbx)
  0x000000011ba57026: movq   $0x1,0x1b0(%rbx)
  0x000000011ba57031: jmpq   0x000000011ba57062
  0x000000011ba57036: cmpq   $0x0,0x1b8(%rbx)
  0x000000011ba57041: jne    0x000000011ba5705a
  0x000000011ba57043: mov    %rsi,0x1b8(%rbx)
  0x000000011ba5704a: movq   $0x1,0x1c0(%rbx)
  0x000000011ba57055: jmpq   0x000000011ba57062
  0x000000011ba5705a: addq   $0x1,0x198(%rbx)
  0x000000011ba57062: mov    %rdi,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@16 (line 515)

  0x000000011ba57065: movabs $0xffffffffffffffff,%rax
  0x000000011ba5706f: callq  0x000000011b4d2180  ; ImmutableOopMap{}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@16 (line 515)
                                                ;   {virtual_call}
  0x000000011ba57074: cmp    $0x0,%eax
  0x000000011ba57077: movabs $0x1328a4748,%rax  ;   {metadata(method data for {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba57081: movabs $0x1d0,%rsi
  0x000000011ba5708b: je     0x000000011ba5709b
  0x000000011ba57091: movabs $0x1e0,%rsi
  0x000000011ba5709b: mov    (%rax,%rsi,1),%rdi
  0x000000011ba5709f: lea    0x1(%rdi),%rdi
  0x000000011ba570a3: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba570a7: je     0x000000011ba570c7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@19 (line 515)

  0x000000011ba570ad: movabs $0x1328a4748,%rax  ;   {metadata(method data for {method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba570b7: incl   0x1f0(%rax)
  0x000000011ba570bd: mov    $0x1,%eax
  0x000000011ba570c2: jmpq   0x000000011ba570cc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@23 (line 515)

  0x000000011ba570c7: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@27 (line 515)

  0x000000011ba570cc: and    $0x1,%eax
  0x000000011ba570cf: add    $0x40,%rsp
  0x000000011ba570d3: pop    %rbp
  0x000000011ba570d4: mov    0x108(%r15),%r10
  0x000000011ba570db: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba570de: retq   
  0x000000011ba570df: movabs $0x1325c5590,%r10  ;   {metadata({method} {0x00000001325c5590} &apos;contains&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ImmutableCollections$Set12&apos;)}
  0x000000011ba570e9: mov    %r10,0x8(%rsp)
  0x000000011ba570ee: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba570f6: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12::contains@-1 (line 515)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba570fb: jmpq   0x000000011ba56eb4
  0x000000011ba57100: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop rdx=Oop rdi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::contains@5 (line 515)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba57105: nop
  0x000000011ba57106: nop
  0x000000011ba57107: mov    0x420(%r15),%rax
  0x000000011ba5710e: movabs $0x0,%r10
  0x000000011ba57118: mov    %r10,0x420(%r15)
  0x000000011ba5711f: movabs $0x0,%r10
  0x000000011ba57129: mov    %r10,0x428(%r15)
  0x000000011ba57130: add    $0x40,%rsp
  0x000000011ba57134: pop    %rbp
  0x000000011ba57135: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5713a: hlt    
  0x000000011ba5713b: hlt    
  0x000000011ba5713c: hlt    
  0x000000011ba5713d: hlt    
  0x000000011ba5713e: hlt    
  0x000000011ba5713f: hlt    
[Stub Code]
  0x000000011ba57140: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba57145: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5714f: jmpq   0x000000011ba5714f  ;   {runtime_call}
  0x000000011ba57154: nop
  0x000000011ba57155: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5715f: jmpq   0x000000011ba5715f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba57164: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba57169: mov    %rsp,-0x28(%rsp)
  0x000000011ba5716e: sub    $0x80,%rsp
  0x000000011ba57175: mov    %rax,0x78(%rsp)
  0x000000011ba5717a: mov    %rcx,0x70(%rsp)
  0x000000011ba5717f: mov    %rdx,0x68(%rsp)
  0x000000011ba57184: mov    %rbx,0x60(%rsp)
  0x000000011ba57189: mov    %rbp,0x50(%rsp)
  0x000000011ba5718e: mov    %rsi,0x48(%rsp)
  0x000000011ba57193: mov    %rdi,0x40(%rsp)
  0x000000011ba57198: mov    %r8,0x38(%rsp)
  0x000000011ba5719d: mov    %r9,0x30(%rsp)
  0x000000011ba571a2: mov    %r10,0x28(%rsp)
  0x000000011ba571a7: mov    %r11,0x20(%rsp)
  0x000000011ba571ac: mov    %r12,0x18(%rsp)
  0x000000011ba571b1: mov    %r13,0x10(%rsp)
  0x000000011ba571b6: mov    %r14,0x8(%rsp)
  0x000000011ba571bb: mov    %r15,(%rsp)
  0x000000011ba571bf: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba571c9: movabs $0x11ba57169,%rsi  ;   {internal_word}
  0x000000011ba571d3: mov    %rsp,%rdx
  0x000000011ba571d6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba571da: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba571df: hlt    
[Deopt Handler Code]
  0x000000011ba571e0: movabs $0x11ba571e0,%r10  ;   {section_word}
  0x000000011ba571ea: push   %r10
  0x000000011ba571ec: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba571f1: hlt    
  0x000000011ba571f2: hlt    
  0x000000011ba571f3: hlt    
  0x000000011ba571f4: hlt    
  0x000000011ba571f5: hlt    
  0x000000011ba571f6: hlt    
  0x000000011ba571f7: hlt    

ImmutableOopMap{[32]=Oop [40]=Oop }pc offsets: 284 
ImmutableOopMap{}pc offsets: 532 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 667 
ImmutableOopMap{rsi=Oop rdx=Oop rdi=Oop }pc offsets: 677 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='120' method='java.util.concurrent.ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='432' count='768' backedge_count='12' iicount='768' level='3' stamp='0.382' comment='tiered' hot_count='768'/>
<writer thread='15363'/>
<nmethod compile_id='115' compiler='c2' level='4' entry='0x0000000122f7c880' size='6880' address='0x0000000122f7c690' relocation_offset='376' insts_offset='496' stub_offset='3440' scopes_data_offset='3552' scopes_pcs_offset='4456' dependencies_offset='6712' handler_table_offset='6720' nul_chk_table_offset='6864' metadata_offset='3496' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='5948' backedge_count='708' iicount='5948' stamp='0.382'/>
<make_not_entrant thread='15363' compile_id='83' compiler='c1' level='3' stamp='0.382'/>
<print_nmethod stamp='0.382'>
Compiled method (c2)     381  115       4       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x0000000122f7c690,0x0000000122f7e170] = 6880
 relocation     [0x0000000122f7c808,0x0000000122f7c870] = 104
 main code      [0x0000000122f7c880,0x0000000122f7d400] = 2944
 stub code      [0x0000000122f7d400,0x0000000122f7d438] = 56
 metadata       [0x0000000122f7d438,0x0000000122f7d470] = 56
 scopes data    [0x0000000122f7d470,0x0000000122f7d7f8] = 904
 scopes pcs     [0x0000000122f7d7f8,0x0000000122f7e0c8] = 2256
 dependencies   [0x0000000122f7e0c8,0x0000000122f7e0d0] = 8
 handler table  [0x0000000122f7e0d0,0x0000000122f7e160] = 144
 nul chk table  [0x0000000122f7e160,0x0000000122f7e170] = 16
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x0000000122f7c880, 0x0000000122f7d438]  3000 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0x80]  (sp of caller)
  0x0000000122f7c880: mov    0x8(%rsi),%r10d
  0x0000000122f7c884: movabs $0x800000000,%r12
  0x0000000122f7c88e: add    %r12,%r10
  0x0000000122f7c891: xor    %r12,%r12
  0x0000000122f7c894: cmp    %r10,%rax
  0x0000000122f7c897: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7c89d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7c8a0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7c8a7: push   %rbp
  0x0000000122f7c8a8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)

  0x0000000122f7c8ac: mov    %edi,0x18(%rsp)
  0x0000000122f7c8b0: mov    %r9d,0x4(%rsp)
  0x0000000122f7c8b5: mov    %r8,0x10(%rsp)
  0x0000000122f7c8ba: mov    %rcx,0x8(%rsp)
  0x0000000122f7c8bf: mov    %edx,(%rsp)
  0x0000000122f7c8c2: mov    %rsi,0x40(%rsp)
  0x0000000122f7c8c7: mov    0x24(%rsi),%r10d   ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 623)

  0x0000000122f7c8cb: test   %r10d,%r10d
  0x0000000122f7c8ce: je     0x0000000122f7cea9  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 623)

  0x0000000122f7c8d4: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)

  0x0000000122f7c8d9: test   %r8d,%r8d
  0x0000000122f7c8dc: jbe    0x0000000122f7d1a2  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)

  0x0000000122f7c8e2: shl    $0x3,%r10          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 623)

  0x0000000122f7c8e6: mov    %r10,0x20(%rsp)    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x0000000122f7c8eb: mov    %r8d,%r10d
  0x0000000122f7c8ee: dec    %r10d
  0x0000000122f7c8f1: and    (%rsp),%r10d       ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@36 (line 625)

  0x0000000122f7c8f5: test   %r8d,%r8d
  0x0000000122f7c8f8: jle    0x0000000122f7d175
  0x0000000122f7c8fe: mov    0x20(%rsp),%r11
  0x0000000122f7c903: lea    0x10(%r11,%r10,4),%rbx  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7c908: mov    0x40(%rsp),%r11
  0x0000000122f7c90d: mov    0x8(%r11),%esi     ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7c911: mov    (%rbx),%r14d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x0000000122f7c914: mov    0x8(%rsp),%r11
  0x0000000122f7c919: mov    %r11,%rcx
  0x0000000122f7c91c: shr    $0x3,%rcx          ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7c920: mov    0x10(%rsp),%r13
  0x0000000122f7c925: mov    %r13,%r8
  0x0000000122f7c928: shr    $0x3,%r8           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7c92c: mov    $0x2d030,%r9d      ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7c932: movabs $0x800000000,%rdi
  0x0000000122f7c93c: add    %r9,%rdi
  0x0000000122f7c93f: test   %r14d,%r14d
  0x0000000122f7c942: je     0x0000000122f7cc65  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 625)

  0x0000000122f7c948: mov    0xc(%r12,%r14,8),%r10d  ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)

  0x0000000122f7c94d: cmp    (%rsp),%r10d
  0x0000000122f7c951: je     0x0000000122f7d350  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 629)

  0x0000000122f7c957: mov    0x8(%r12,%r14,8),%r9d
  0x0000000122f7c95c: cmp    $0x32798,%r9d      ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000122f7c963: je     0x0000000122f7d1be  ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 632)

  0x0000000122f7c969: mov    0x18(%r12,%r14,8),%r10d  ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x0000000122f7c96e: test   %r10d,%r10d
  0x0000000122f7c971: je     0x0000000122f7c9b9  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 636)

  0x0000000122f7c973: lea    (%r12,%r10,8),%r9  ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x0000000122f7c977: movabs $0x114326000,%rdx
  0x0000000122f7c981: xor    %ebx,%ebx
  0x0000000122f7c983: nopw   0x0(%rax,%rax,1)
  0x0000000122f7c98c: data16 data16 xchg %ax,%ax  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@145 (line 637)

  0x0000000122f7c990: mov    0xc(%r9),%r10d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)

  0x0000000122f7c994: cmp    (%rsp),%r10d
  0x0000000122f7c998: je     0x0000000122f7d392  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7c99e: mov    0x108(%r15),%r10
  0x0000000122f7c9a5: inc    %ebx               ; ImmutableOopMap{r11=Oop r8=NarrowOop r9=Oop rcx=NarrowOop r13=Oop [32]=Oop [64]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x0000000122f7c9a7: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)
                                                ;   {poll}
  0x0000000122f7c9aa: mov    0x18(%r9),%r14d    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x0000000122f7c9ae: test   %r14d,%r14d
  0x0000000122f7c9b1: je     0x0000000122f7c9c9  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 636)

  0x0000000122f7c9b3: lea    (%r12,%r14,8),%r9  ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x0000000122f7c9b7: jmp    0x0000000122f7c990
  0x0000000122f7c9b9: lea    (%r12,%r14,8),%r9  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x0000000122f7c9bd: movabs $0x114326000,%rdx
  0x0000000122f7c9c7: xor    %ebx,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@145 (line 637)

  0x0000000122f7c9c9: cmp    $0x19590,%esi      ;   {metadata(&apos;java/util/HashMap&apos;)}
  0x0000000122f7c9cf: jne    0x0000000122f7d1d6
  0x0000000122f7c9d5: mov    0x40(%rsp),%rbp
  0x0000000122f7c9da: mov    0x118(%r15),%r10
  0x0000000122f7c9e1: mov    %r10,%rsi
  0x0000000122f7c9e4: add    $0x20,%rsi
  0x0000000122f7c9e8: cmp    0x128(%r15),%rsi
  0x0000000122f7c9ef: jae    0x0000000122f7d0f3  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7c9f5: mov    %rsi,0x118(%r15)
  0x0000000122f7c9fc: prefetchw 0xc0(%rsi)
  0x0000000122f7ca03: mov    0xb8(%rdi),%rdi
  0x0000000122f7ca0a: mov    %rdi,(%r10)
  0x0000000122f7ca0d: movl   $0x2d030,0x8(%r10)  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7ca15: movl   $0x0,0x14(%r10)
  0x0000000122f7ca1d: movq   $0x0,0x18(%r10)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7ca25: mov    (%rsp),%r14d
  0x0000000122f7ca29: mov    %r14d,0xc(%r10)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7ca2d: mov    %ecx,0x10(%r10)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7ca31: mov    %r11,%rcx
  0x0000000122f7ca34: mov    %r10,%rsi
  0x0000000122f7ca37: xor    %rsi,%rcx
  0x0000000122f7ca3a: shr    $0x14,%rcx
  0x0000000122f7ca3e: test   %rcx,%rcx
  0x0000000122f7ca41: je     0x0000000122f7cadb
  0x0000000122f7ca47: test   %r11,%r11
  0x0000000122f7ca4a: je     0x0000000122f7cadb
  0x0000000122f7ca50: shr    $0x9,%rsi
  0x0000000122f7ca54: movabs $0x114326000,%rdi
  0x0000000122f7ca5e: add    %rsi,%rdi
  0x0000000122f7ca61: cmpb   $0x20,(%rdi)
  0x0000000122f7ca64: je     0x0000000122f7cadb
  0x0000000122f7ca66: mov    0x70(%r15),%r11    ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7ca6a: mov    0x80(%r15),%rcx
  0x0000000122f7ca71: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7ca77: cmpb   $0x0,(%rdi)
  0x0000000122f7ca7a: je     0x0000000122f7cadb
  0x0000000122f7ca7c: movb   $0x0,(%rdi)
  0x0000000122f7ca7f: test   %r11,%r11
  0x0000000122f7ca82: jne    0x0000000122f7cace  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7ca84: mov    %r10,0x38(%rsp)
  0x0000000122f7ca89: mov    %r9,0x30(%rsp)
  0x0000000122f7ca8e: mov    %ebx,0x1c(%rsp)
  0x0000000122f7ca92: mov    %rdx,0x28(%rsp)
  0x0000000122f7ca97: mov    %r8d,(%rsp)
  0x0000000122f7ca9b: mov    %r13,0x8(%rsp)     ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7caa0: mov    %r15,%rsi
  0x0000000122f7caa3: movabs $0x10e2fdd7a,%r10
  0x0000000122f7caad: callq  *%r10
  0x0000000122f7cab0: mov    0x8(%rsp),%r13
  0x0000000122f7cab5: mov    (%rsp),%r8d
  0x0000000122f7cab9: mov    0x28(%rsp),%rdx
  0x0000000122f7cabe: mov    0x1c(%rsp),%ebx
  0x0000000122f7cac2: mov    0x30(%rsp),%r9
  0x0000000122f7cac7: mov    0x38(%rsp),%r10
  0x0000000122f7cacc: jmp    0x0000000122f7cadb
  0x0000000122f7cace: mov    %rdi,-0x8(%rcx,%r11,1)  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7cad3: add    $0xfffffffffffffff8,%r11
  0x0000000122f7cad7: mov    %r11,0x70(%r15)
  0x0000000122f7cadb: cmpb   $0x0,0x30(%r15)
  0x0000000122f7cae0: jne    0x0000000122f7cfd9
  0x0000000122f7cae6: mov    %r8d,0x14(%r10)
  0x0000000122f7caea: mov    %r13,%r11
  0x0000000122f7caed: mov    %r10,%r8
  0x0000000122f7caf0: xor    %r8,%r11
  0x0000000122f7caf3: shr    $0x14,%r11
  0x0000000122f7caf7: test   %r11,%r11
  0x0000000122f7cafa: je     0x0000000122f7cb8a
  0x0000000122f7cb00: test   %r13,%r13
  0x0000000122f7cb03: je     0x0000000122f7cb8a
  0x0000000122f7cb09: shr    $0x9,%r8
  0x0000000122f7cb0d: movabs $0x114326000,%rdi
  0x0000000122f7cb17: add    %r8,%rdi
  0x0000000122f7cb1a: cmpb   $0x20,(%rdi)
  0x0000000122f7cb1d: je     0x0000000122f7cb8a
  0x0000000122f7cb1f: mov    0x70(%r15),%r11    ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cb23: mov    0x80(%r15),%r8
  0x0000000122f7cb2a: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7cb30: cmpb   $0x0,(%rdi)
  0x0000000122f7cb33: je     0x0000000122f7cb8a
  0x0000000122f7cb35: movb   $0x0,(%rdi)
  0x0000000122f7cb38: test   %r11,%r11
  0x0000000122f7cb3b: jne    0x0000000122f7cb7d  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7cb3d: mov    %r10,0x38(%rsp)
  0x0000000122f7cb42: mov    %r9,0x30(%rsp)
  0x0000000122f7cb47: mov    %ebx,(%rsp)
  0x0000000122f7cb4a: mov    %rdx,0x28(%rsp)
  0x0000000122f7cb4f: mov    %r13,0x8(%rsp)     ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cb54: mov    %r15,%rsi
  0x0000000122f7cb57: movabs $0x10e2fdd7a,%r10
  0x0000000122f7cb61: callq  *%r10
  0x0000000122f7cb64: mov    0x8(%rsp),%r13
  0x0000000122f7cb69: mov    0x28(%rsp),%rdx
  0x0000000122f7cb6e: mov    (%rsp),%ebx
  0x0000000122f7cb71: mov    0x30(%rsp),%r9
  0x0000000122f7cb76: mov    0x38(%rsp),%r10
  0x0000000122f7cb7b: jmp    0x0000000122f7cb8a
  0x0000000122f7cb7d: mov    %rdi,-0x8(%r8,%r11,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7cb82: add    $0xfffffffffffffff8,%r11
  0x0000000122f7cb86: mov    %r11,0x70(%r15)
  0x0000000122f7cb8a: cmpb   $0x0,0x30(%r15)
  0x0000000122f7cb8f: jne    0x0000000122f7d047
  0x0000000122f7cb95: movl   $0x0,0x18(%r10)
  0x0000000122f7cb9d: cmpb   $0x0,0x30(%r15)
  0x0000000122f7cba2: jne    0x0000000122f7d010
  0x0000000122f7cba8: mov    %r9,%r8
  0x0000000122f7cbab: mov    %r10,%r11
  0x0000000122f7cbae: shr    $0x3,%r11
  0x0000000122f7cbb2: mov    %r11d,0x18(%r9)
  0x0000000122f7cbb6: xor    %r8,%r10
  0x0000000122f7cbb9: shr    $0x14,%r10
  0x0000000122f7cbbd: test   %r10,%r10
  0x0000000122f7cbc0: je     0x0000000122f7cc0e
  0x0000000122f7cbc2: shr    $0x9,%r8
  0x0000000122f7cbc6: add    %r8,%rdx
  0x0000000122f7cbc9: cmpb   $0x20,(%rdx)
  0x0000000122f7cbcc: je     0x0000000122f7cc0e
  0x0000000122f7cbce: mov    0x70(%r15),%r10    ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cbd2: mov    0x80(%r15),%r11
  0x0000000122f7cbd9: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7cbdf: cmpb   $0x0,(%rdx)
  0x0000000122f7cbe2: je     0x0000000122f7cc0e
  0x0000000122f7cbe4: movb   $0x0,(%rdx)
  0x0000000122f7cbe7: test   %r10,%r10
  0x0000000122f7cbea: jne    0x0000000122f7cc01  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7cbec: mov    %rdx,%rdi          ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cbef: mov    %r15,%rsi
  0x0000000122f7cbf2: movabs $0x10e2fdd7a,%r10
  0x0000000122f7cbfc: callq  *%r10
  0x0000000122f7cbff: jmp    0x0000000122f7cc0e
  0x0000000122f7cc01: mov    %rdx,-0x8(%r11,%r10,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7cc06: add    $0xfffffffffffffff8,%r10  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cc0a: mov    %r10,0x70(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7cc0e: cmp    $0x7,%ebx
  0x0000000122f7cc11: jge    0x0000000122f7d36e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 648)

  0x0000000122f7cc17: mov    0x40(%rsp),%r10
  0x0000000122f7cc1c: incl   0x18(%r10)         ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 656)

  0x0000000122f7cc20: mov    0x14(%r10),%r11d
  0x0000000122f7cc24: mov    0x1c(%r10),%r10d
  0x0000000122f7cc28: inc    %r11d              ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@275 (line 657)

  0x0000000122f7cc2b: mov    0x40(%rsp),%r8
  0x0000000122f7cc30: mov    %r11d,0x14(%r8)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 657)

  0x0000000122f7cc34: cmp    %r10d,%r11d
  0x0000000122f7cc37: jg     0x0000000122f7cec2  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 659)

  0x0000000122f7cc3d: mov    0x40(%rsp),%r10
  0x0000000122f7cc42: mov    0x8(%r10),%r11d
  0x0000000122f7cc46: cmp    $0x19590,%r11d     ;   {metadata(&apos;java/util/HashMap&apos;)}
  0x0000000122f7cc4d: jne    0x0000000122f7cf16  ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)

  0x0000000122f7cc53: xor    %eax,%eax
  0x0000000122f7cc55: add    $0x70,%rsp
  0x0000000122f7cc59: pop    %rbp
  0x0000000122f7cc5a: mov    0x108(%r15),%r10
  0x0000000122f7cc61: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7cc64: retq   
  0x0000000122f7cc65: cmp    $0x19590,%esi      ;   {metadata(&apos;java/util/HashMap&apos;)}
  0x0000000122f7cc6b: jne    0x0000000122f7ced5
  0x0000000122f7cc71: mov    0x118(%r15),%rbp
  0x0000000122f7cc78: mov    %rbp,%r9
  0x0000000122f7cc7b: add    $0x20,%r9
  0x0000000122f7cc7f: cmp    0x128(%r15),%r9
  0x0000000122f7cc86: jae    0x0000000122f7d07e  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cc8c: mov    %r9,0x118(%r15)
  0x0000000122f7cc93: prefetchw 0xc0(%r9)
  0x0000000122f7cc9b: mov    0xb8(%rdi),%r9
  0x0000000122f7cca2: mov    %r9,0x0(%rbp)
  0x0000000122f7cca6: movl   $0x2d030,0x8(%rbp)  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7ccad: movl   $0x0,0x14(%rbp)
  0x0000000122f7ccb4: movq   $0x0,0x18(%rbp)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7ccbc: mov    (%rsp),%r9d
  0x0000000122f7ccc0: mov    %r9d,0xc(%rbp)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7ccc4: mov    %ecx,0x10(%rbp)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7ccc7: mov    %r11,%r9
  0x0000000122f7ccca: mov    %rbp,%rcx
  0x0000000122f7cccd: xor    %rcx,%r9
  0x0000000122f7ccd0: shr    $0x14,%r9
  0x0000000122f7ccd4: test   %r9,%r9
  0x0000000122f7ccd7: je     0x0000000122f7cd57
  0x0000000122f7ccd9: test   %r11,%r11
  0x0000000122f7ccdc: je     0x0000000122f7cd57
  0x0000000122f7ccde: shr    $0x9,%rcx
  0x0000000122f7cce2: movabs $0x114326000,%rdi
  0x0000000122f7ccec: add    %rcx,%rdi
  0x0000000122f7ccef: cmpb   $0x20,(%rdi)
  0x0000000122f7ccf2: je     0x0000000122f7cd57
  0x0000000122f7ccf4: mov    0x70(%r15),%r11
  0x0000000122f7ccf8: mov    0x80(%r15),%r9
  0x0000000122f7ccff: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7cd05: cmpb   $0x0,(%rdi)
  0x0000000122f7cd08: je     0x0000000122f7cd57
  0x0000000122f7cd0a: movb   $0x0,(%rdi)
  0x0000000122f7cd0d: test   %r11,%r11
  0x0000000122f7cd10: jne    0x0000000122f7cd4a
  0x0000000122f7cd12: mov    %rbp,0x10(%rsp)
  0x0000000122f7cd17: mov    %r8d,0x4(%rsp)
  0x0000000122f7cd1c: mov    %rbx,0x8(%rsp)
  0x0000000122f7cd21: mov    %r10d,(%rsp)
  0x0000000122f7cd25: mov    %r15,%rsi
  0x0000000122f7cd28: movabs $0x10e2fdd7a,%r10
  0x0000000122f7cd32: callq  *%r10
  0x0000000122f7cd35: mov    (%rsp),%r10d
  0x0000000122f7cd39: mov    0x8(%rsp),%rbx
  0x0000000122f7cd3e: mov    0x4(%rsp),%r8d
  0x0000000122f7cd43: mov    0x10(%rsp),%rbp
  0x0000000122f7cd48: jmp    0x0000000122f7cd57
  0x0000000122f7cd4a: mov    %rdi,-0x8(%r9,%r11,1)
  0x0000000122f7cd4f: add    $0xfffffffffffffff8,%r11
  0x0000000122f7cd53: mov    %r11,0x70(%r15)
  0x0000000122f7cd57: cmpb   $0x0,0x30(%r15)
  0x0000000122f7cd5c: jne    0x0000000122f7cf6b
  0x0000000122f7cd62: mov    %r8d,0x14(%rbp)
  0x0000000122f7cd66: mov    %r13,%r11
  0x0000000122f7cd69: mov    %rbp,%r8
  0x0000000122f7cd6c: xor    %r8,%r11
  0x0000000122f7cd6f: shr    $0x14,%r11
  0x0000000122f7cd73: test   %r11,%r11
  0x0000000122f7cd76: je     0x0000000122f7cde4
  0x0000000122f7cd78: test   %r13,%r13
  0x0000000122f7cd7b: je     0x0000000122f7cde4
  0x0000000122f7cd7d: shr    $0x9,%r8
  0x0000000122f7cd81: movabs $0x114326000,%rdi
  0x0000000122f7cd8b: add    %r8,%rdi
  0x0000000122f7cd8e: cmpb   $0x20,(%rdi)
  0x0000000122f7cd91: je     0x0000000122f7cde4
  0x0000000122f7cd93: mov    0x80(%r15),%r11    ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cd9a: mov    0x70(%r15),%r8
  0x0000000122f7cd9e: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7cda4: cmpb   $0x0,(%rdi)
  0x0000000122f7cda7: je     0x0000000122f7cde4
  0x0000000122f7cda9: movb   $0x0,(%rdi)
  0x0000000122f7cdac: test   %r8,%r8
  0x0000000122f7cdaf: jne    0x0000000122f7cdd7  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cdb1: mov    %rbp,(%rsp)
  0x0000000122f7cdb5: mov    %rbx,%r13
  0x0000000122f7cdb8: mov    %r10d,%r14d        ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cdbb: mov    %r15,%rsi
  0x0000000122f7cdbe: movabs $0x10e2fdd7a,%r10
  0x0000000122f7cdc8: callq  *%r10
  0x0000000122f7cdcb: mov    %r14d,%r10d
  0x0000000122f7cdce: mov    %r13,%rbx
  0x0000000122f7cdd1: mov    (%rsp),%rbp
  0x0000000122f7cdd5: jmp    0x0000000122f7cde4
  0x0000000122f7cdd7: mov    %rdi,-0x8(%r11,%r8,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cddc: add    $0xfffffffffffffff8,%r8
  0x0000000122f7cde0: mov    %r8,0x70(%r15)     ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cde4: cmpb   $0x0,0x30(%r15)
  0x0000000122f7cde9: jne    0x0000000122f7cfa2
  0x0000000122f7cdef: movl   $0x0,0x18(%rbp)    ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)

  0x0000000122f7cdf6: mov    0x20(%rsp),%r11
  0x0000000122f7cdfb: mov    0x8(%r11),%r11d
  0x0000000122f7cdff: cmp    $0x2d278,%r11d     ;   {metadata(&apos;java/util/HashMap$Node&apos;[])}
  0x0000000122f7ce06: jne    0x0000000122f7d18e
  0x0000000122f7ce0c: cmpb   $0x0,0x30(%r15)
  0x0000000122f7ce11: jne    0x0000000122f7cf35
  0x0000000122f7ce17: mov    %rbp,%r10
  0x0000000122f7ce1a: shr    $0x3,%r10
  0x0000000122f7ce1e: mov    %r10d,(%rbx)
  0x0000000122f7ce21: mov    %rbx,%r10
  0x0000000122f7ce24: mov    %rbp,%r11
  0x0000000122f7ce27: xor    %r10,%r11
  0x0000000122f7ce2a: shr    $0x14,%r11
  0x0000000122f7ce2e: test   %r11,%r11
  0x0000000122f7ce31: je     0x0000000122f7cc17
  0x0000000122f7ce37: test   %rbp,%rbp
  0x0000000122f7ce3a: je     0x0000000122f7cc17
  0x0000000122f7ce40: shr    $0x9,%r10
  0x0000000122f7ce44: movabs $0x114326000,%r8
  0x0000000122f7ce4e: add    %r10,%r8
  0x0000000122f7ce51: cmpb   $0x20,(%r8)
  0x0000000122f7ce55: je     0x0000000122f7cc17
  0x0000000122f7ce5b: mov    0x80(%r15),%r10    ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7ce62: mov    0x70(%r15),%r11
  0x0000000122f7ce66: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7ce6c: cmpb   $0x0,(%r8)
  0x0000000122f7ce70: je     0x0000000122f7cc17
  0x0000000122f7ce76: movb   $0x0,(%r8)
  0x0000000122f7ce7a: test   %r11,%r11
  0x0000000122f7ce7d: jne    0x0000000122f7ce97  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7ce7f: mov    %r8,%rdi           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7ce82: mov    %r15,%rsi
  0x0000000122f7ce85: movabs $0x10e2fdd7a,%r10
  0x0000000122f7ce8f: callq  *%r10
  0x0000000122f7ce92: jmpq   0x0000000122f7cc17
  0x0000000122f7ce97: mov    %r8,-0x8(%r10,%r11,1)  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7ce9c: add    $0xfffffffffffffff8,%r11  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cea0: mov    %r11,0x70(%r15)    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7cea4: jmpq   0x0000000122f7cc17
  0x0000000122f7cea9: mov    %rsi,%rbp
  0x0000000122f7ceac: data16 xchg %ax,%ax
  0x0000000122f7ceaf: callq  0x000000011b4d1f00  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [64]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.HashMap::putVal@20 (line 624)
                                                ;   {optimized virtual_call}
  0x0000000122f7ceb4: mov    0xc(%rax),%r8d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ; implicit exception: dispatches to 0x0000000122f7d3be
  0x0000000122f7ceb8: mov    %rax,0x20(%rsp)
  0x0000000122f7cebd: jmpq   0x0000000122f7c8eb  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7cec2: mov    0x40(%rsp),%rsi
  0x0000000122f7cec7: mov    0x18(%rsp),%ebp
  0x0000000122f7cecb: callq  0x000000011b4d1f00  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.HashMap::putVal@288 (line 658)
                                                ;   {optimized virtual_call}
  0x0000000122f7ced0: jmpq   0x0000000122f7cc3d
  0x0000000122f7ced5: mov    %rbx,0x10(%rsp)
  0x0000000122f7ceda: mov    %r10d,0x4(%rsp)
  0x0000000122f7cedf: mov    %r13,%r8
  0x0000000122f7cee2: mov    0x40(%rsp),%rbp
  0x0000000122f7cee7: mov    %rbp,%rsi
  0x0000000122f7ceea: mov    (%rsp),%edx
  0x0000000122f7ceed: mov    %r11,%rcx
  0x0000000122f7cef0: xor    %r9d,%r9d
  0x0000000122f7cef3: xchg   %ax,%ax
  0x0000000122f7cef5: movabs $0xffffffffffffffff,%rax
  0x0000000122f7ceff: callq  0x000000011b4d2180  ; ImmutableOopMap{rbp=Oop [16]=Derived_oop_[32] [32]=Oop [64]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.HashMap::putVal@56 (line 626)
                                                ;   {virtual_call}
  0x0000000122f7cf04: mov    0x4(%rsp),%r10d
  0x0000000122f7cf09: mov    0x10(%rsp),%rbx
  0x0000000122f7cf0e: mov    %rax,%rbp
  0x0000000122f7cf11: jmpq   0x0000000122f7cdf6
  0x0000000122f7cf16: mov    0x40(%rsp),%rsi
  0x0000000122f7cf1b: mov    0x18(%rsp),%edx
  0x0000000122f7cf1f: xchg   %ax,%ax
  0x0000000122f7cf21: movabs $0xffffffffffffffff,%rax
  0x0000000122f7cf2b: callq  0x000000011b4d2180  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)
                                                ;   {virtual_call}
  0x0000000122f7cf30: jmpq   0x0000000122f7cc53
  0x0000000122f7cf35: mov    (%rbx),%r11d
  0x0000000122f7cf38: test   %r11d,%r11d
  0x0000000122f7cf3b: je     0x0000000122f7ce17
  0x0000000122f7cf41: mov    0x38(%r15),%r10
  0x0000000122f7cf45: mov    %r11,%rdi
  0x0000000122f7cf48: shl    $0x3,%rdi
  0x0000000122f7cf4c: test   %r10,%r10
  0x0000000122f7cf4f: je     0x0000000122f7d20e  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cf55: mov    0x48(%r15),%r11
  0x0000000122f7cf59: mov    %rdi,-0x8(%r11,%r10,1)  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7cf5e: add    $0xfffffffffffffff8,%r10  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cf62: mov    %r10,0x38(%r15)    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7cf66: jmpq   0x0000000122f7ce17
  0x0000000122f7cf6b: mov    0x14(%rbp),%r11d
  0x0000000122f7cf6f: test   %r11d,%r11d
  0x0000000122f7cf72: je     0x0000000122f7cd62
  0x0000000122f7cf78: mov    0x38(%r15),%r9
  0x0000000122f7cf7c: mov    %r11,%rdi
  0x0000000122f7cf7f: shl    $0x3,%rdi
  0x0000000122f7cf83: test   %r9,%r9
  0x0000000122f7cf86: je     0x0000000122f7d223  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cf8c: mov    0x48(%r15),%r11
  0x0000000122f7cf90: mov    %rdi,-0x8(%r11,%r9,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cf95: add    $0xfffffffffffffff8,%r9  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cf99: mov    %r9,0x38(%r15)     ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cf9d: jmpq   0x0000000122f7cd62
  0x0000000122f7cfa2: mov    0x18(%rbp),%r8d
  0x0000000122f7cfa6: test   %r8d,%r8d
  0x0000000122f7cfa9: je     0x0000000122f7cdef
  0x0000000122f7cfaf: mov    0x38(%r15),%r11
  0x0000000122f7cfb3: mov    %r8,%rdi
  0x0000000122f7cfb6: shl    $0x3,%rdi
  0x0000000122f7cfba: test   %r11,%r11
  0x0000000122f7cfbd: je     0x0000000122f7d25e  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cfc3: mov    0x48(%r15),%r8
  0x0000000122f7cfc7: mov    %rdi,-0x8(%r8,%r11,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cfcc: add    $0xfffffffffffffff8,%r11  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cfd0: mov    %r11,0x38(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cfd4: jmpq   0x0000000122f7cdef
  0x0000000122f7cfd9: mov    0x14(%r10),%r11d
  0x0000000122f7cfdd: test   %r11d,%r11d
  0x0000000122f7cfe0: je     0x0000000122f7cae6
  0x0000000122f7cfe6: mov    0x38(%r15),%rcx
  0x0000000122f7cfea: mov    %r11,%rdi
  0x0000000122f7cfed: shl    $0x3,%rdi
  0x0000000122f7cff1: test   %rcx,%rcx
  0x0000000122f7cff4: je     0x0000000122f7d287  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7cffa: mov    0x48(%r15),%r11
  0x0000000122f7cffe: mov    %rdi,-0x8(%r11,%rcx,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d003: add    $0xfffffffffffffff8,%rcx  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d007: mov    %rcx,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d00b: jmpq   0x0000000122f7cae6
  0x0000000122f7d010: mov    0x18(%r9),%r8d
  0x0000000122f7d014: test   %r8d,%r8d
  0x0000000122f7d017: je     0x0000000122f7cba8
  0x0000000122f7d01d: mov    0x38(%r15),%r11
  0x0000000122f7d021: mov    %r8,%rdi
  0x0000000122f7d024: shl    $0x3,%rdi
  0x0000000122f7d028: test   %r11,%r11
  0x0000000122f7d02b: je     0x0000000122f7d2ca  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d031: mov    0x48(%r15),%r8
  0x0000000122f7d035: mov    %rdi,-0x8(%r8,%r11,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7d03a: add    $0xfffffffffffffff8,%r11  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d03e: mov    %r11,0x38(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7d042: jmpq   0x0000000122f7cba8
  0x0000000122f7d047: mov    0x18(%r10),%r11d
  0x0000000122f7d04b: test   %r11d,%r11d
  0x0000000122f7d04e: je     0x0000000122f7cb95
  0x0000000122f7d054: mov    0x38(%r15),%r8
  0x0000000122f7d058: mov    %r11,%rdi
  0x0000000122f7d05b: shl    $0x3,%rdi
  0x0000000122f7d05f: test   %r8,%r8
  0x0000000122f7d062: je     0x0000000122f7d30d  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d068: mov    0x48(%r15),%r11
  0x0000000122f7d06c: mov    %rdi,-0x8(%r11,%r8,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d071: add    $0xfffffffffffffff8,%r8  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d075: mov    %r8,0x38(%r15)     ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d079: jmpq   0x0000000122f7cb95
  0x0000000122f7d07e: mov    %r8d,0x38(%rsp)
  0x0000000122f7d083: mov    %ecx,0x1c(%rsp)
  0x0000000122f7d087: mov    %rbx,0x30(%rsp)
  0x0000000122f7d08c: mov    %r10d,0x4(%rsp)
  0x0000000122f7d091: rex.W pushq 0x20(%rsp)
  0x0000000122f7d096: rex.W popq 0x28(%rsp)
  0x0000000122f7d09b: mov    %r13,0x20(%rsp)
  0x0000000122f7d0a0: mov    %r11,0x10(%rsp)
  0x0000000122f7d0a5: rex.W pushq 0x40(%rsp)
  0x0000000122f7d0aa: rex.W popq 0x8(%rsp)
  0x0000000122f7d0af: mov    0x8(%rsp),%rbp     ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d0b4: movabs $0x80002d030,%rsi  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7d0be: nop
  0x0000000122f7d0bf: callq  0x000000011b59e780  ; ImmutableOopMap{rbp=Oop [16]=Oop [28]=NarrowOop [32]=Oop [40]=Oop [48]=Derived_oop_[40] [56]=NarrowOop [64]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000122f7d0c4: mov    0x10(%rsp),%r11
  0x0000000122f7d0c9: mov    0x20(%rsp),%r13
  0x0000000122f7d0ce: rex.W pushq 0x28(%rsp)
  0x0000000122f7d0d3: rex.W popq 0x20(%rsp)
  0x0000000122f7d0d8: mov    0x4(%rsp),%r10d
  0x0000000122f7d0dd: mov    0x30(%rsp),%rbx
  0x0000000122f7d0e2: mov    0x1c(%rsp),%ecx
  0x0000000122f7d0e6: mov    0x38(%rsp),%r8d
  0x0000000122f7d0eb: mov    %rax,%rbp
  0x0000000122f7d0ee: jmpq   0x0000000122f7ccbc
  0x0000000122f7d0f3: mov    %r9,0x48(%rsp)
  0x0000000122f7d0f8: mov    %ebx,0x34(%rsp)
  0x0000000122f7d0fc: mov    %rdx,0x38(%rsp)
  0x0000000122f7d101: mov    %r8d,0x30(%rsp)
  0x0000000122f7d106: mov    %ecx,0x1c(%rsp)
  0x0000000122f7d10a: rex.W pushq 0x20(%rsp)
  0x0000000122f7d10f: rex.W popq 0x28(%rsp)
  0x0000000122f7d114: mov    %r13,0x20(%rsp)
  0x0000000122f7d119: mov    %r11,0x10(%rsp)
  0x0000000122f7d11e: rex.W pushq 0x40(%rsp)
  0x0000000122f7d123: rex.W popq 0x8(%rsp)
  0x0000000122f7d128: movabs $0x80002d030,%rsi  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7d132: nop
  0x0000000122f7d133: callq  0x000000011b59e780  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop [32]=Oop [40]=Oop [48]=NarrowOop [72]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000122f7d138: rex.W pushq 0x8(%rsp)
  0x0000000122f7d13d: rex.W popq 0x40(%rsp)
  0x0000000122f7d142: mov    0x10(%rsp),%r11
  0x0000000122f7d147: mov    0x20(%rsp),%r13
  0x0000000122f7d14c: rex.W pushq 0x28(%rsp)
  0x0000000122f7d151: rex.W popq 0x20(%rsp)
  0x0000000122f7d156: mov    0x1c(%rsp),%ecx
  0x0000000122f7d15a: mov    0x30(%rsp),%r8d
  0x0000000122f7d15f: mov    0x38(%rsp),%rdx
  0x0000000122f7d164: mov    0x34(%rsp),%ebx
  0x0000000122f7d168: mov    0x48(%rsp),%r9
  0x0000000122f7d16d: mov    %rax,%r10
  0x0000000122f7d170: jmpq   0x0000000122f7ca25
  0x0000000122f7d175: mov    $0xffffffe4,%esi
  0x0000000122f7d17a: mov    0x40(%rsp),%rbp
  0x0000000122f7d17f: mov    %r10d,0x30(%rsp)
  0x0000000122f7d184: data16 xchg %ax,%ax
  0x0000000122f7d187: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [32]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d18c: ud2                       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x0000000122f7d18e: mov    $0xffffffd6,%esi
  0x0000000122f7d193: mov    %r10d,0xc(%rsp)
  0x0000000122f7d198: data16 xchg %ax,%ax
  0x0000000122f7d19b: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [32]=Oop [64]=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d1a0: ud2                       ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7d1a2: mov    $0xffffff4d,%esi
  0x0000000122f7d1a7: mov    0x40(%rsp),%rbp
  0x0000000122f7d1ac: mov    %r10d,0x1c(%rsp)
  0x0000000122f7d1b1: mov    %r8d,0x24(%rsp)
  0x0000000122f7d1b6: nop
  0x0000000122f7d1b7: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d1bc: ud2                       ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)

  0x0000000122f7d1be: mov    $0xffffff4d,%esi
  0x0000000122f7d1c3: mov    0x40(%rsp),%rbp
  0x0000000122f7d1c8: mov    %r14d,0x1c(%rsp)
  0x0000000122f7d1cd: xchg   %ax,%ax
  0x0000000122f7d1cf: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop [32]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 632)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d1d4: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 632)

  0x0000000122f7d1d6: mov    $0xffffffde,%esi
  0x0000000122f7d1db: mov    0x40(%rsp),%rbp
  0x0000000122f7d1e0: mov    0x18(%rsp),%r8d
  0x0000000122f7d1e5: mov    %r8d,0x10(%rsp)
  0x0000000122f7d1ea: rex.W pushq 0x20(%rsp)
  0x0000000122f7d1ef: rex.W popq 0x18(%rsp)
  0x0000000122f7d1f4: mov    %ebx,0x14(%rsp)
  0x0000000122f7d1f8: mov    %r9,0x20(%rsp)
  0x0000000122f7d1fd: mov    %r11,0x38(%rsp)
  0x0000000122f7d202: mov    %r13,0x40(%rsp)
  0x0000000122f7d207: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [24]=Oop [32]=Oop [56]=Oop [64]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d20c: ud2                       ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d20e: mov    %r15,%rsi
  0x0000000122f7d211: movabs $0x10e2fdd56,%r10
  0x0000000122f7d21b: callq  *%r10              ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x0000000122f7d21e: jmpq   0x0000000122f7ce17
  0x0000000122f7d223: mov    %rbp,0x10(%rsp)
  0x0000000122f7d228: mov    %r8d,0x4(%rsp)
  0x0000000122f7d22d: mov    %rbx,0x8(%rsp)
  0x0000000122f7d232: mov    %r10d,(%rsp)       ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d236: mov    %r15,%rsi
  0x0000000122f7d239: movabs $0x10e2fdd56,%r10
  0x0000000122f7d243: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d246: mov    (%rsp),%r10d
  0x0000000122f7d24a: mov    0x8(%rsp),%rbx
  0x0000000122f7d24f: mov    0x4(%rsp),%r8d
  0x0000000122f7d254: mov    0x10(%rsp),%rbp
  0x0000000122f7d259: jmpq   0x0000000122f7cd62
  0x0000000122f7d25e: mov    %rbp,(%rsp)
  0x0000000122f7d262: mov    %rbx,%r14
  0x0000000122f7d265: mov    %r10d,%r13d        ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d268: mov    %r15,%rsi
  0x0000000122f7d26b: movabs $0x10e2fdd56,%r10
  0x0000000122f7d275: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d278: mov    %r13d,%r10d
  0x0000000122f7d27b: mov    %r14,%rbx
  0x0000000122f7d27e: mov    (%rsp),%rbp
  0x0000000122f7d282: jmpq   0x0000000122f7cdef
  0x0000000122f7d287: mov    %r10,0x30(%rsp)
  0x0000000122f7d28c: mov    %r9,0x28(%rsp)
  0x0000000122f7d291: mov    %ebx,0x1c(%rsp)
  0x0000000122f7d295: mov    %rdx,0x10(%rsp)
  0x0000000122f7d29a: mov    %r8d,(%rsp)        ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d29e: mov    %r15,%rsi
  0x0000000122f7d2a1: movabs $0x10e2fdd56,%r10
  0x0000000122f7d2ab: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d2ae: mov    (%rsp),%r8d
  0x0000000122f7d2b2: mov    0x10(%rsp),%rdx
  0x0000000122f7d2b7: mov    0x1c(%rsp),%ebx
  0x0000000122f7d2bb: mov    0x28(%rsp),%r9
  0x0000000122f7d2c0: mov    0x30(%rsp),%r10
  0x0000000122f7d2c5: jmpq   0x0000000122f7cae6
  0x0000000122f7d2ca: mov    %r10,0x38(%rsp)
  0x0000000122f7d2cf: mov    %r9,0x30(%rsp)
  0x0000000122f7d2d4: mov    %ebx,(%rsp)
  0x0000000122f7d2d7: mov    %rdx,0x28(%rsp)
  0x0000000122f7d2dc: mov    %r13,0x8(%rsp)     ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d2e1: mov    %r15,%rsi
  0x0000000122f7d2e4: movabs $0x10e2fdd56,%r10
  0x0000000122f7d2ee: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7d2f1: mov    0x8(%rsp),%r13
  0x0000000122f7d2f6: mov    0x28(%rsp),%rdx
  0x0000000122f7d2fb: mov    (%rsp),%ebx
  0x0000000122f7d2fe: mov    0x30(%rsp),%r9
  0x0000000122f7d303: mov    0x38(%rsp),%r10
  0x0000000122f7d308: jmpq   0x0000000122f7cba8
  0x0000000122f7d30d: mov    %r10,0x38(%rsp)
  0x0000000122f7d312: mov    %r9,0x30(%rsp)
  0x0000000122f7d317: mov    %ebx,(%rsp)
  0x0000000122f7d31a: mov    %rdx,0x28(%rsp)
  0x0000000122f7d31f: mov    %r13,0x8(%rsp)     ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d324: mov    %r15,%rsi
  0x0000000122f7d327: movabs $0x10e2fdd56,%r10
  0x0000000122f7d331: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d334: mov    0x8(%rsp),%r13
  0x0000000122f7d339: mov    0x28(%rsp),%rdx
  0x0000000122f7d33e: mov    (%rsp),%ebx
  0x0000000122f7d341: mov    0x30(%rsp),%r9
  0x0000000122f7d346: mov    0x38(%rsp),%r10
  0x0000000122f7d34b: jmpq   0x0000000122f7cb95
  0x0000000122f7d350: mov    $0xffffff4d,%esi
  0x0000000122f7d355: mov    0x40(%rsp),%rbp
  0x0000000122f7d35a: mov    %r14d,0x1c(%rsp)
  0x0000000122f7d35f: mov    %r10d,0x28(%rsp)
  0x0000000122f7d364: data16 xchg %ax,%ax
  0x0000000122f7d367: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop [32]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 629)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d36c: ud2                       ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x0000000122f7d36e: mov    $0xffffff4d,%esi
  0x0000000122f7d373: mov    %r14d,(%rsp)
  0x0000000122f7d377: mov    %r13,0x8(%rsp)
  0x0000000122f7d37c: mov    0x18(%rsp),%r11d
  0x0000000122f7d381: mov    %r11d,0x10(%rsp)
  0x0000000122f7d386: mov    %ebx,0x14(%rsp)
  0x0000000122f7d38a: nop
  0x0000000122f7d38b: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop [32]=Oop }
                                                ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 638)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d390: ud2                       ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 638)

  0x0000000122f7d392: mov    $0xffffff4d,%esi
  0x0000000122f7d397: mov    0x40(%rsp),%rbp
  0x0000000122f7d39c: mov    %r11,0x8(%rsp)
  0x0000000122f7d3a1: mov    %r13,0x10(%rsp)
  0x0000000122f7d3a6: mov    %r9,0x28(%rsp)
  0x0000000122f7d3ab: mov    %ebx,0x1c(%rsp)
  0x0000000122f7d3af: mov    %r10d,0x30(%rsp)
  0x0000000122f7d3b4: data16 xchg %ax,%ax
  0x0000000122f7d3b7: callq  0x000000011b4d3900  ; ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 642)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d3bc: ud2                       ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 642)

  0x0000000122f7d3be: mov    $0xfffffff6,%esi
  0x0000000122f7d3c3: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f7d3c8: ud2                       ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x0000000122f7d3ca: mov    %rax,%rsi
  0x0000000122f7d3cd: jmp    0x0000000122f7d3e6  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d3cf: mov    %rax,%rsi
  0x0000000122f7d3d2: jmp    0x0000000122f7d3e6  ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)

  0x0000000122f7d3d4: mov    %rax,%rsi
  0x0000000122f7d3d7: jmp    0x0000000122f7d3e6  ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x0000000122f7d3d9: mov    %rax,%rsi
  0x0000000122f7d3dc: jmp    0x0000000122f7d3e6  ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x0000000122f7d3de: mov    %rax,%rsi
  0x0000000122f7d3e1: jmp    0x0000000122f7d3e6  ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)

  0x0000000122f7d3e3: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)

  0x0000000122f7d3e6: add    $0x70,%rsp
  0x0000000122f7d3ea: pop    %rbp
  0x0000000122f7d3eb: jmpq   0x000000011b59c180  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000122f7d3f0: hlt    
  0x0000000122f7d3f1: hlt    
  0x0000000122f7d3f2: hlt    
  0x0000000122f7d3f3: hlt    
  0x0000000122f7d3f4: hlt    
  0x0000000122f7d3f5: hlt    
  0x0000000122f7d3f6: hlt    
  0x0000000122f7d3f7: hlt    
  0x0000000122f7d3f8: hlt    
  0x0000000122f7d3f9: hlt    
  0x0000000122f7d3fa: hlt    
  0x0000000122f7d3fb: hlt    
  0x0000000122f7d3fc: hlt    
  0x0000000122f7d3fd: hlt    
  0x0000000122f7d3fe: hlt    
  0x0000000122f7d3ff: hlt    
[Stub Code]
  0x0000000122f7d400: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000122f7d40a: jmpq   0x0000000122f7d40a  ;   {runtime_call}
  0x0000000122f7d40f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000122f7d419: jmpq   0x0000000122f7d419  ;   {runtime_call}
[Exception Handler]
  0x0000000122f7d41e: jmpq   0x000000011b595a80  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x0000000122f7d423: callq  0x0000000122f7d428
  0x0000000122f7d428: subq   $0x5,(%rsp)
  0x0000000122f7d42d: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7d432: hlt    
  0x0000000122f7d433: hlt    
  0x0000000122f7d434: hlt    
  0x0000000122f7d435: hlt    
  0x0000000122f7d436: hlt    
  0x0000000122f7d437: hlt    

ImmutableOopMap{r11=Oop r8=NarrowOop r9=Oop rcx=NarrowOop r13=Oop [32]=Oop [64]=Oop }pc offsets: 295 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [64]=Oop }pc offsets: 1588 
ImmutableOopMap{[64]=Oop }pc offsets: 1616 
ImmutableOopMap{rbp=Oop [16]=Derived_oop_[32] [32]=Oop [64]=Oop }pc offsets: 1668 
ImmutableOopMap{}pc offsets: 1712 
ImmutableOopMap{rbp=Oop [16]=Oop [28]=NarrowOop [32]=Oop [40]=Oop [48]=Derived_oop_[40] [56]=NarrowOop [64]=Oop }pc offsets: 2116 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop [32]=Oop [40]=Oop [48]=NarrowOop [72]=Oop }pc offsets: 2232 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [32]=Oop }pc offsets: 2316 
ImmutableOopMap{rbp=Oop [32]=Oop [64]=Oop }pc offsets: 2336 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop }pc offsets: 2364 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop [32]=Oop }pc offsets: 2388 
ImmutableOopMap{rbp=Oop [24]=Oop [32]=Oop [56]=Oop [64]=Oop }pc offsets: 2444 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [28]=NarrowOop [32]=Oop }pc offsets: 2796 
ImmutableOopMap{rbp=Oop [8]=Oop [32]=Oop }pc offsets: 2832 
ImmutableOopMap{rbp=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop }pc offsets: 2876 
ImmutableOopMap{}pc offsets: 2888 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='121' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='768' iicount='768' level='3' stamp='0.401' comment='tiered' hot_count='768'/>
<writer thread='15875'/>
<nmethod compile_id='120' compiler='c1' level='3' entry='0x000000011ba57720' size='14728' address='0x000000011ba57390' relocation_offset='376' insts_offset='912' stub_offset='9520' scopes_data_offset='9904' scopes_pcs_offset='11992' dependencies_offset='14360' handler_table_offset='14368' nul_chk_table_offset='14680' oops_offset='9832' metadata_offset='9840' method='java.util.concurrent.ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='432' count='866' backedge_count='16' iicount='866' stamp='0.401'/>
<print_nmethod stamp='0.401'>
Compiled method (c1)     401  120   !   3       java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)
 total in heap  [0x000000011ba57390,0x000000011ba5ad18] = 14728
 relocation     [0x000000011ba57508,0x000000011ba57718] = 528
 main code      [0x000000011ba57720,0x000000011ba598c0] = 8608
 stub code      [0x000000011ba598c0,0x000000011ba599f8] = 312
 oops           [0x000000011ba599f8,0x000000011ba59a00] = 8
 metadata       [0x000000011ba59a00,0x000000011ba59a40] = 64
 scopes data    [0x000000011ba59a40,0x000000011ba5a268] = 2088
 scopes pcs     [0x000000011ba5a268,0x000000011ba5aba8] = 2368
 dependencies   [0x000000011ba5aba8,0x000000011ba5abb0] = 8
 handler table  [0x000000011ba5abb0,0x000000011ba5ace8] = 312
 nul chk table  [0x000000011ba5ace8,0x000000011ba5ad18] = 48
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x000000011ba57720, 0x000000011ba599f8]  8920 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8        = boolean
  #           [sp+0x140]  (sp of caller)
  0x000000011ba57720: mov    0x8(%rsi),%r10d
  0x000000011ba57724: movabs $0x800000000,%r12
  0x000000011ba5772e: add    %r12,%r10
  0x000000011ba57731: xor    %r12,%r12
  0x000000011ba57734: cmp    %rax,%r10
  0x000000011ba57737: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5773d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba57740: mov    %eax,-0x14000(%rsp)
  0x000000011ba57747: push   %rbp
  0x000000011ba57748: sub    $0x130,%rsp
  0x000000011ba5774f: mov    %rsi,0xa8(%rsp)
  0x000000011ba57757: mov    %rdx,0xb0(%rsp)
  0x000000011ba5775f: mov    %rcx,0xb8(%rsp)
  0x000000011ba57767: mov    %r8d,0xc0(%rsp)
  0x000000011ba5776f: movabs $0x1328a86f8,%rdi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57779: mov    0x104(%rdi),%ebx
  0x000000011ba5777f: add    $0x8,%ebx
  0x000000011ba57782: mov    %ebx,0x104(%rdi)
  0x000000011ba57788: and    $0x1ff8,%ebx
  0x000000011ba5778e: cmp    $0x0,%ebx
  0x000000011ba57791: je     0x000000011ba593db  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x000000011ba57797: cmp    $0x0,%rdx
  0x000000011ba5779b: movabs $0x1328a86f8,%rdi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba577a5: movabs $0x140,%rbx
  0x000000011ba577af: je     0x000000011ba577bf
  0x000000011ba577b5: movabs $0x150,%rbx
  0x000000011ba577bf: mov    (%rdi,%rbx,1),%rax
  0x000000011ba577c3: lea    0x1(%rax),%rax
  0x000000011ba577c7: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba577cb: je     0x000000011ba592ec  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x000000011ba577d1: cmp    $0x0,%rcx
  0x000000011ba577d5: movabs $0x1328a86f8,%rdi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba577df: movabs $0x170,%rbx
  0x000000011ba577e9: je     0x000000011ba577f9
  0x000000011ba577ef: movabs $0x160,%rbx
  0x000000011ba577f9: mov    (%rdi,%rbx,1),%rax
  0x000000011ba577fd: lea    0x1(%rax),%rax
  0x000000011ba57801: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba57805: je     0x000000011ba592ec  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x000000011ba5780b: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba593fc
  0x000000011ba5780e: mov    %rdx,%rdi
  0x000000011ba57811: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5781b: mov    0x8(%rdi),%edi
  0x000000011ba5781e: movabs $0x800000000,%r12
  0x000000011ba57828: add    %r12,%rdi
  0x000000011ba5782b: xor    %r12,%r12
  0x000000011ba5782e: cmp    0x1a0(%rbx),%rdi
  0x000000011ba57835: jne    0x000000011ba57844
  0x000000011ba57837: addq   $0x1,0x1a8(%rbx)
  0x000000011ba5783f: jmpq   0x000000011ba578aa
  0x000000011ba57844: cmp    0x1b0(%rbx),%rdi
  0x000000011ba5784b: jne    0x000000011ba5785a
  0x000000011ba5784d: addq   $0x1,0x1b8(%rbx)
  0x000000011ba57855: jmpq   0x000000011ba578aa
  0x000000011ba5785a: cmpq   $0x0,0x1a0(%rbx)
  0x000000011ba57865: jne    0x000000011ba5787e
  0x000000011ba57867: mov    %rdi,0x1a0(%rbx)
  0x000000011ba5786e: movq   $0x1,0x1a8(%rbx)
  0x000000011ba57879: jmpq   0x000000011ba578aa
  0x000000011ba5787e: cmpq   $0x0,0x1b0(%rbx)
  0x000000011ba57889: jne    0x000000011ba578a2
  0x000000011ba5788b: mov    %rdi,0x1b0(%rbx)
  0x000000011ba57892: movq   $0x1,0x1b8(%rbx)
  0x000000011ba5789d: jmpq   0x000000011ba578aa
  0x000000011ba578a2: addq   $0x1,0x190(%rbx)
  0x000000011ba578aa: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x000000011ba578ad: movabs $0x800001808,%rax
  0x000000011ba578b7: callq  0x0000000122f79a20  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x000000011ba578bc: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba578c6: addq   $0x1,0x1c8(%rsi)
  0x000000011ba578ce: movabs $0x132828e40,%rsi  ;   {metadata(method data for {method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba578d8: mov    0x104(%rsi),%edi
  0x000000011ba578de: add    $0x8,%edi
  0x000000011ba578e1: mov    %edi,0x104(%rsi)
  0x000000011ba578e7: and    $0x7ffff8,%edi
  0x000000011ba578ed: cmp    $0x0,%edi
  0x000000011ba578f0: je     0x000000011ba59401
  0x000000011ba578f6: mov    %rax,%rsi
  0x000000011ba578f9: shr    $0x10,%esi
  0x000000011ba578fc: xor    %rax,%rsi
  0x000000011ba578ff: and    $0x7fffffff,%esi
  0x000000011ba57905: mov    %esi,0xc8(%rsp)
  0x000000011ba5790c: mov    0xa8(%rsp),%rdi
  0x000000011ba57914: mov    0x28(%rdi),%ebx
  0x000000011ba57917: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x000000011ba5791b: mov    $0x0,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x000000011ba57920: mov    %eax,0xc4(%rsp)
  0x000000011ba57927: nop
  0x000000011ba57928: cmp    $0x0,%rbx
  0x000000011ba5792c: movabs $0x1328a86f8,%r9   ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57936: movabs $0x1d8,%r11
  0x000000011ba57940: je     0x000000011ba57950
  0x000000011ba57946: movabs $0x1e8,%r11
  0x000000011ba57950: mov    (%r9,%r11,1),%r13
  0x000000011ba57954: lea    0x1(%r13),%r13
  0x000000011ba57958: mov    %r13,(%r9,%r11,1)
  0x000000011ba5795c: je     0x000000011ba579a0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x000000011ba57962: mov    0xc(%rbx),%r9d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x000000011ba59422
  0x000000011ba57966: cmp    $0x0,%r9d
  0x000000011ba5796a: movabs $0x1328a86f8,%r11  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57974: movabs $0x1f8,%r13
  0x000000011ba5797e: jne    0x000000011ba5798e
  0x000000011ba57984: movabs $0x208,%r13
  0x000000011ba5798e: mov    (%r11,%r13,1),%r14
  0x000000011ba57992: lea    0x1(%r14),%r14
  0x000000011ba57996: mov    %r14,(%r11,%r13,1)
  0x000000011ba5799a: jne    0x000000011ba579f0  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x000000011ba579a0: mov    %rdi,%rbx
  0x000000011ba579a3: movabs $0x1328a86f8,%r9   ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba579ad: addq   $0x1,0x218(%r9)
  0x000000011ba579b5: mov    %rdi,%rsi          ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x000000011ba579b8: nopl   0x0(%rax)
  0x000000011ba579bf: callq  0x000000011b4d1f00  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x000000011ba579c4: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba579ce: incl   0x250(%rcx)
  0x000000011ba579d4: mov    0xc4(%rsp),%esi
  0x000000011ba579db: mov    0xc0(%rsp),%r8d
  0x000000011ba579e3: mov    0xb8(%rsp),%rcx
  0x000000011ba579eb: jmpq   0x000000011ba590bf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x000000011ba579f0: dec    %r9d
  0x000000011ba579f3: and    0xc8(%rsp),%r9d
  0x000000011ba579fb: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57a05: addq   $0x1,0x268(%rcx)
  0x000000011ba57a0d: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57a17: mov    0x104(%rcx),%edx
  0x000000011ba57a1d: add    $0x8,%edx
  0x000000011ba57a20: mov    %edx,0x104(%rcx)
  0x000000011ba57a26: and    $0x7ffff8,%edx
  0x000000011ba57a2c: cmp    $0x0,%edx
  0x000000011ba57a2f: je     0x000000011ba59427
  0x000000011ba57a35: movslq %r9d,%rdx
  0x000000011ba57a38: mov    $0x2,%ecx
  0x000000011ba57a3d: shl    %cl,%rdx
  0x000000011ba57a40: movabs $0x10,%r10
  0x000000011ba57a4a: add    %r10,%rdx
  0x000000011ba57a4d: movabs $0x1326b8aa8,%rsi  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57a57: lea    0x178(%rsi),%rsi
  0x000000011ba57a5e: mov    %rbx,%rdi
  0x000000011ba57a61: mov    0x8(%rdi),%edi
  0x000000011ba57a64: movabs $0x800000000,%r12
  0x000000011ba57a6e: add    %r12,%rdi
  0x000000011ba57a71: xor    %r12,%r12
  0x000000011ba57a74: xor    0x8(%rsi),%rdi
  0x000000011ba57a78: test   $0xfffffffffffffffc,%rdi
  0x000000011ba57a7f: je     0x000000011ba57a92
  0x000000011ba57a81: test   $0x2,%rdi
  0x000000011ba57a88: jne    0x000000011ba57a92
  0x000000011ba57a8a: orq    $0x2,0x8(%rsi)
  0x000000011ba57a92: movabs $0x70ff080f8,%rsi  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000070ff080f8})}
  0x000000011ba57a9c: movabs $0x1326b8aa8,%rdi  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57aa6: addq   $0x1,0x140(%rdi)
  0x000000011ba57aae: movabs $0x1326b8cb8,%rsi  ;   {metadata(method data for {method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba57ab8: mov    0x104(%rsi),%edi
  0x000000011ba57abe: add    $0x8,%edi
  0x000000011ba57ac1: mov    %edi,0x104(%rsi)
  0x000000011ba57ac7: and    $0x7ffff8,%edi
  0x000000011ba57acd: cmp    $0x0,%edi
  0x000000011ba57ad0: je     0x000000011ba59448
  0x000000011ba57ad6: mov    (%rbx,%rdx,1),%esi
  0x000000011ba57ad9: shl    $0x3,%rsi
  0x000000011ba57add: movabs $0xc,%rdi
  0x000000011ba57ae7: cmp    %rdi,%rdx
  0x000000011ba57aea: jne    0x000000011ba57b2b
  0x000000011ba57af0: cmp    $0x0,%rbx
  0x000000011ba57af4: je     0x000000011ba57b2b
  0x000000011ba57afa: mov    0x8(%rbx),%edi
  0x000000011ba57afd: movabs $0x800000000,%r12
  0x000000011ba57b07: add    %r12,%rdi
  0x000000011ba57b0a: xor    %r12,%r12
  0x000000011ba57b0d: movsbl 0x18b(%rdi),%edi
  0x000000011ba57b14: cmp    $0x0,%edi
  0x000000011ba57b17: je     0x000000011ba57b2b
  0x000000011ba57b1d: movsbl 0x30(%r15),%edi
  0x000000011ba57b22: cmp    $0x0,%edi
  0x000000011ba57b25: jne    0x000000011ba59469
  0x000000011ba57b2b: cmp    $0x0,%rsi
  0x000000011ba57b2f: jne    0x000000011ba57b47
  0x000000011ba57b31: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57b3b: orb    $0x1,0x189(%rcx)
  0x000000011ba57b42: jmpq   0x000000011ba57c20
  0x000000011ba57b47: movabs $0x80001b570,%rax  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba57b51: mov    0x8(%rsi),%ecx
  0x000000011ba57b54: movabs $0x800000000,%r12
  0x000000011ba57b5e: add    %r12,%rcx
  0x000000011ba57b61: xor    %r12,%r12
  0x000000011ba57b64: cmp    0x38(%rcx),%rax
  0x000000011ba57b68: jne    0x000000011ba57c04
  0x000000011ba57b6e: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57b78: mov    0x8(%rsi),%eax
  0x000000011ba57b7b: movabs $0x800000000,%r12
  0x000000011ba57b85: add    %r12,%rax
  0x000000011ba57b88: xor    %r12,%r12
  0x000000011ba57b8b: cmp    0x1a0(%rcx),%rax
  0x000000011ba57b92: jne    0x000000011ba57ba1
  0x000000011ba57b94: addq   $0x1,0x1a8(%rcx)
  0x000000011ba57b9c: jmpq   0x000000011ba57c20
  0x000000011ba57ba1: cmp    0x1b0(%rcx),%rax
  0x000000011ba57ba8: jne    0x000000011ba57bb7
  0x000000011ba57baa: addq   $0x1,0x1b8(%rcx)
  0x000000011ba57bb2: jmpq   0x000000011ba57c20
  0x000000011ba57bb7: cmpq   $0x0,0x1a0(%rcx)
  0x000000011ba57bc2: jne    0x000000011ba57bdb
  0x000000011ba57bc4: mov    %rax,0x1a0(%rcx)
  0x000000011ba57bcb: movq   $0x1,0x1a8(%rcx)
  0x000000011ba57bd6: jmpq   0x000000011ba57c20
  0x000000011ba57bdb: cmpq   $0x0,0x1b0(%rcx)
  0x000000011ba57be6: jne    0x000000011ba57bff
  0x000000011ba57be8: mov    %rax,0x1b0(%rcx)
  0x000000011ba57bef: movq   $0x1,0x1b8(%rcx)
  0x000000011ba57bfa: jmpq   0x000000011ba57c20
  0x000000011ba57bff: jmpq   0x000000011ba57c20
  0x000000011ba57c04: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57c0e: subq   $0x1,0x190(%rcx)
  0x000000011ba57c16: jmpq   0x000000011ba59481
  0x000000011ba57c1b: jmpq   0x000000011ba57c20
  0x000000011ba57c20: mov    %rsi,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x000000011ba57c23: mov    %rdi,0xd0(%rsp)
  0x000000011ba57c2b: cmp    $0x0,%rdi
  0x000000011ba57c2f: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57c39: movabs $0x278,%rax
  0x000000011ba57c43: jne    0x000000011ba57c53
  0x000000011ba57c49: movabs $0x288,%rax
  0x000000011ba57c53: mov    (%rsi,%rax,1),%rcx
  0x000000011ba57c57: lea    0x1(%rcx),%rcx
  0x000000011ba57c5b: mov    %rcx,(%rsi,%rax,1)
  0x000000011ba57c5f: mov    %rdx,%r8
  0x000000011ba57c62: jne    0x000000011ba57ea3  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x000000011ba57c68: mov    0xc8(%rsp),%esi
  0x000000011ba57c6f: mov    0xb8(%rsp),%rcx
  0x000000011ba57c77: mov    0xb0(%rsp),%rdx
  0x000000011ba57c7f: mov    %rdx,%r11
  0x000000011ba57c82: movabs $0x80001b570,%rdx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba57c8c: mov    %rcx,%r14
  0x000000011ba57c8f: mov    %rsi,%r13
  0x000000011ba57c92: mov    0x118(%r15),%rax
  0x000000011ba57c99: lea    0x20(%rax),%rdi
  0x000000011ba57c9d: cmp    0x128(%r15),%rdi
  0x000000011ba57ca4: ja     0x000000011ba5948a
  0x000000011ba57caa: mov    %rdi,0x118(%r15)
  0x000000011ba57cb1: mov    0xb8(%rdx),%rcx
  0x000000011ba57cb8: mov    %rcx,(%rax)
  0x000000011ba57cbb: mov    %rdx,%rcx
  0x000000011ba57cbe: movabs $0x800000000,%r12
  0x000000011ba57cc8: sub    %r12,%rcx
  0x000000011ba57ccb: xor    %r12,%r12
  0x000000011ba57cce: mov    %ecx,0x8(%rax)
  0x000000011ba57cd1: xor    %rcx,%rcx
  0x000000011ba57cd4: mov    %ecx,0xc(%rax)
  0x000000011ba57cd7: xor    %rcx,%rcx
  0x000000011ba57cda: mov    %rcx,0x10(%rax)
  0x000000011ba57cde: mov    %rcx,0x18(%rax)
  0x000000011ba57ce2: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x000000011ba57ce5: mov    %rdx,%rax
  0x000000011ba57ce8: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57cf2: addq   $0x1,0x298(%rcx)
  0x000000011ba57cfa: movabs $0x132828b18,%rax  ;   {metadata(method data for {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba57d04: mov    0x104(%rax),%ecx
  0x000000011ba57d0a: add    $0x8,%ecx
  0x000000011ba57d0d: mov    %ecx,0x104(%rax)
  0x000000011ba57d13: and    $0x7ffff8,%ecx
  0x000000011ba57d19: cmp    $0x0,%ecx
  0x000000011ba57d1c: je     0x000000011ba59497
  0x000000011ba57d22: mov    %rdx,%rax
  0x000000011ba57d25: movabs $0x132828b18,%rcx  ;   {metadata(method data for {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba57d2f: addq   $0x1,0x140(%rcx)
  0x000000011ba57d37: movabs $0x1326ded60,%rax  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba57d41: mov    0x104(%rax),%ecx
  0x000000011ba57d47: add    $0x8,%ecx
  0x000000011ba57d4a: mov    %ecx,0x104(%rax)
  0x000000011ba57d50: and    $0x7ffff8,%ecx
  0x000000011ba57d56: cmp    $0x0,%ecx
  0x000000011ba57d59: je     0x000000011ba594b8
  0x000000011ba57d5f: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x000000011ba57d63: movsbl 0x30(%r15),%eax
  0x000000011ba57d68: cmp    $0x0,%eax
  0x000000011ba57d6b: jne    0x000000011ba594d9
  0x000000011ba57d71: mov    %r11,%r10
  0x000000011ba57d74: shr    $0x3,%r10
  0x000000011ba57d78: mov    %r10d,0x10(%rdx)
  0x000000011ba57d7c: mov    %rdx,%rax
  0x000000011ba57d7f: xor    %r11,%rax
  0x000000011ba57d82: shr    $0x14,%rax
  0x000000011ba57d86: cmp    $0x0,%rax
  0x000000011ba57d8a: jne    0x000000011ba594f8  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x000000011ba57d90: movsbl 0x30(%r15),%eax
  0x000000011ba57d95: cmp    $0x0,%eax
  0x000000011ba57d98: jne    0x000000011ba59510
  0x000000011ba57d9e: mov    %r14,%r10
  0x000000011ba57da1: shr    $0x3,%r10
  0x000000011ba57da5: mov    %r10d,0x14(%rdx)
  0x000000011ba57da9: lock addl $0x0,-0x40(%rsp)
  0x000000011ba57daf: mov    %rdx,%rax
  0x000000011ba57db2: xor    %r14,%rax
  0x000000011ba57db5: shr    $0x14,%rax
  0x000000011ba57db9: cmp    $0x0,%rax
  0x000000011ba57dbd: jne    0x000000011ba5952f  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x000000011ba57dc3: movabs $0x1328a86f8,%rax  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57dcd: addq   $0x1,0x2a8(%rax)
  0x000000011ba57dd5: movabs $0x132830190,%rax  ;   {metadata(method data for {method} {0x00000001325dddc8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57ddf: mov    0x104(%rax),%ecx
  0x000000011ba57de5: add    $0x8,%ecx
  0x000000011ba57de8: mov    %ecx,0x104(%rax)
  0x000000011ba57dee: and    $0x7ffff8,%ecx
  0x000000011ba57df4: cmp    $0x0,%ecx
  0x000000011ba57df7: je     0x000000011ba59547
  0x000000011ba57dfd: lea    (%rbx,%r8,1),%rcx
  0x000000011ba57e01: movsbl 0x30(%r15),%eax
  0x000000011ba57e06: cmp    $0x0,%eax
  0x000000011ba57e09: jne    0x000000011ba59568
  0x000000011ba57e0f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba57e19: shr    $0x3,%rax
  0x000000011ba57e1d: mov    %rdx,%r10
  0x000000011ba57e20: shr    $0x3,%r10
  0x000000011ba57e24: lock cmpxchg %r10d,(%rcx)
  0x000000011ba57e29: mov    $0x1,%esi
  0x000000011ba57e2e: je     0x000000011ba57e39
  0x000000011ba57e34: mov    $0x0,%esi
  0x000000011ba57e39: mov    %rcx,%rdi
  0x000000011ba57e3c: xor    %rdx,%rdi
  0x000000011ba57e3f: shr    $0x14,%rdi
  0x000000011ba57e43: cmp    $0x0,%rdi
  0x000000011ba57e47: jne    0x000000011ba59586  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)

  0x000000011ba57e4d: and    $0x1,%esi
  0x000000011ba57e50: cmp    $0x0,%esi
  0x000000011ba57e53: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57e5d: movabs $0x2c8,%rcx
  0x000000011ba57e67: jne    0x000000011ba57e77
  0x000000011ba57e6d: movabs $0x2b8,%rcx
  0x000000011ba57e77: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba57e7b: lea    0x1(%rsi),%rsi
  0x000000011ba57e7f: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba57e83: jne    0x000000011ba59226  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97 (line 1019)

  0x000000011ba57e89: mov    %rbx,%rax
  0x000000011ba57e8c: mov    0xc4(%rsp),%esi
  0x000000011ba57e93: mov    0xc0(%rsp),%r8d
  0x000000011ba57e9b: mov    %r14,%rcx
  0x000000011ba57e9e: jmpq   0x000000011ba590bf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011ba57ea3: mov    0xc8(%rsp),%r13d
  0x000000011ba57eab: mov    0xb8(%rsp),%r14
  0x000000011ba57eb3: mov    0xb0(%rsp),%r11
  0x000000011ba57ebb: mov    0xc(%rdi),%eax     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ; implicit exception: dispatches to 0x000000011ba5959e
  0x000000011ba57ebe: cmp    $0xffffffff,%eax
  0x000000011ba57ec1: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57ecb: movabs $0x2f0,%rcx
  0x000000011ba57ed5: jne    0x000000011ba57ee5
  0x000000011ba57edb: movabs $0x300,%rcx
  0x000000011ba57ee5: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba57ee9: lea    0x1(%rsi),%rsi
  0x000000011ba57eed: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba57ef1: jne    0x000000011ba57f50  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112 (line 1022)

  0x000000011ba57ef7: mov    0xa8(%rsp),%rax
  0x000000011ba57eff: movabs $0x1328a86f8,%r8   ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57f09: addq   $0x1,0x310(%r8)
  0x000000011ba57f11: mov    %rbx,%rdx
  0x000000011ba57f14: mov    %rdi,%rcx
  0x000000011ba57f17: mov    0xa8(%rsp),%rsi    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)

  0x000000011ba57f1f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[168]=Oop [176]=Oop [184]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)
                                                ;   {optimized virtual_call}
  0x000000011ba57f24: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57f2e: incl   0x348(%rdx)
  0x000000011ba57f34: mov    0xc4(%rsp),%esi
  0x000000011ba57f3b: mov    0xc0(%rsp),%r8d
  0x000000011ba57f43: mov    0xb8(%rsp),%rcx
  0x000000011ba57f4b: jmpq   0x000000011ba590bf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125 (line 1023)

  0x000000011ba57f50: mov    0xc0(%rsp),%ecx
  0x000000011ba57f57: cmp    $0x0,%ecx
  0x000000011ba57f5a: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57f64: movabs $0x370,%rsi
  0x000000011ba57f6e: jne    0x000000011ba57f7e
  0x000000011ba57f74: movabs $0x360,%rsi
  0x000000011ba57f7e: mov    (%rdx,%rsi,1),%r11
  0x000000011ba57f82: lea    0x1(%r11),%r11
  0x000000011ba57f86: mov    %r11,(%rdx,%rsi,1)
  0x000000011ba57f8a: jne    0x000000011ba57fb4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129 (line 1024)

  0x000000011ba57f90: mov    %eax,0xcc(%rsp)
  0x000000011ba57f97: mov    %r8,0xe0(%rsp)
  0x000000011ba57f9f: mov    %r9d,0xe8(%rsp)
  0x000000011ba57fa7: mov    %rbx,0xd8(%rsp)
  0x000000011ba57faf: jmpq   0x000000011ba58216  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x000000011ba57fb4: cmp    0xc8(%rsp),%eax
  0x000000011ba57fbb: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba57fc5: movabs $0x390,%rsi
  0x000000011ba57fcf: je     0x000000011ba57fdf
  0x000000011ba57fd5: movabs $0x380,%rsi
  0x000000011ba57fdf: mov    (%rdx,%rsi,1),%r11
  0x000000011ba57fe3: lea    0x1(%r11),%r11
  0x000000011ba57fe7: mov    %r11,(%rdx,%rsi,1)
  0x000000011ba57feb: je     0x000000011ba58015  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136 (line 1024)

  0x000000011ba57ff1: mov    %eax,0xcc(%rsp)
  0x000000011ba57ff8: mov    %r8,0xe0(%rsp)
  0x000000011ba58000: mov    %r9d,0xe8(%rsp)
  0x000000011ba58008: mov    %rbx,0xd8(%rsp)
  0x000000011ba58010: jmpq   0x000000011ba58216  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x000000011ba58015: mov    0xb0(%rsp),%rdx
  0x000000011ba5801d: mov    0x10(%rdi),%esi
  0x000000011ba58020: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141 (line 1024)

  0x000000011ba58024: cmp    %rdx,%rsi
  0x000000011ba58027: movabs $0x1328a86f8,%r11  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58031: movabs $0x3b0,%r13
  0x000000011ba5803b: jne    0x000000011ba5804b
  0x000000011ba58041: movabs $0x3a0,%r13
  0x000000011ba5804b: mov    (%r11,%r13,1),%r14
  0x000000011ba5804f: lea    0x1(%r14),%r14
  0x000000011ba58053: mov    %r14,(%r11,%r13,1)
  0x000000011ba58057: jne    0x000000011ba58081  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148 (line 1024)

  0x000000011ba5805d: mov    %eax,0xcc(%rsp)
  0x000000011ba58064: mov    %r8,0xe0(%rsp)
  0x000000011ba5806c: mov    %r9d,0xe8(%rsp)
  0x000000011ba58074: mov    %rbx,0xd8(%rsp)
  0x000000011ba5807c: jmpq   0x000000011ba581d5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165 (line 1026)

  0x000000011ba58081: cmp    $0x0,%rsi
  0x000000011ba58085: movabs $0x1328a86f8,%r11  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5808f: movabs $0x3c0,%r13
  0x000000011ba58099: je     0x000000011ba580a9
  0x000000011ba5809f: movabs $0x3d0,%r13
  0x000000011ba580a9: mov    (%r11,%r13,1),%r14
  0x000000011ba580ad: lea    0x1(%r14),%r14
  0x000000011ba580b1: mov    %r14,(%r11,%r13,1)
  0x000000011ba580b5: mov    %eax,0xcc(%rsp)
  0x000000011ba580bc: mov    %r8,0xe0(%rsp)
  0x000000011ba580c4: mov    %r9d,0xe8(%rsp)
  0x000000011ba580cc: mov    %rbx,0xd8(%rsp)
  0x000000011ba580d4: je     0x000000011ba58216  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153 (line 1024)

  0x000000011ba580da: mov    %rdx,%r11
  0x000000011ba580dd: movabs $0x1328a86f8,%r13  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba580e7: mov    0x8(%r11),%r11d
  0x000000011ba580eb: movabs $0x800000000,%r12
  0x000000011ba580f5: add    %r12,%r11
  0x000000011ba580f8: xor    %r12,%r12
  0x000000011ba580fb: cmp    0x3f0(%r13),%r11
  0x000000011ba58102: jne    0x000000011ba58111
  0x000000011ba58104: addq   $0x1,0x3f8(%r13)
  0x000000011ba5810c: jmpq   0x000000011ba58177
  0x000000011ba58111: cmp    0x400(%r13),%r11
  0x000000011ba58118: jne    0x000000011ba58127
  0x000000011ba5811a: addq   $0x1,0x408(%r13)
  0x000000011ba58122: jmpq   0x000000011ba58177
  0x000000011ba58127: cmpq   $0x0,0x3f0(%r13)
  0x000000011ba58132: jne    0x000000011ba5814b
  0x000000011ba58134: mov    %r11,0x3f0(%r13)
  0x000000011ba5813b: movq   $0x1,0x3f8(%r13)
  0x000000011ba58146: jmpq   0x000000011ba58177
  0x000000011ba5814b: cmpq   $0x0,0x400(%r13)
  0x000000011ba58156: jne    0x000000011ba5816f
  0x000000011ba58158: mov    %r11,0x400(%r13)
  0x000000011ba5815f: movq   $0x1,0x408(%r13)
  0x000000011ba5816a: jmpq   0x000000011ba58177
  0x000000011ba5816f: addq   $0x1,0x3e0(%r13)
  0x000000011ba58177: mov    %rdx,%r11
  0x000000011ba5817a: mov    %rsi,%rdx
  0x000000011ba5817d: mov    %r11,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)

  0x000000011ba58180: nopl   0x0(%rax,%rax,1)
  0x000000011ba58185: movabs $0xffffffffffffffff,%rax
  0x000000011ba5818f: callq  0x000000011b4d2180  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)
                                                ;   {virtual_call}
  0x000000011ba58194: cmp    $0x0,%eax
  0x000000011ba58197: movabs $0x1328a86f8,%rax  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba581a1: movabs $0x418,%rdx
  0x000000011ba581ab: je     0x000000011ba581bb
  0x000000011ba581b1: movabs $0x428,%rdx
  0x000000011ba581bb: mov    (%rax,%rdx,1),%rsi
  0x000000011ba581bf: lea    0x1(%rsi),%rsi
  0x000000011ba581c3: mov    %rsi,(%rax,%rdx,1)
  0x000000011ba581c7: mov    0xd0(%rsp),%rdi
  0x000000011ba581cf: je     0x000000011ba58216  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1026)

  0x000000011ba581d5: mov    0x14(%rdi),%esi
  0x000000011ba581d8: shl    $0x3,%rsi          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167 (line 1026)

  0x000000011ba581dc: cmp    $0x0,%rsi
  0x000000011ba581e0: movabs $0x1328a86f8,%rax  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba581ea: movabs $0x448,%rdx
  0x000000011ba581f4: jne    0x000000011ba58204
  0x000000011ba581fa: movabs $0x438,%rdx
  0x000000011ba58204: mov    (%rax,%rdx,1),%rbx
  0x000000011ba58208: lea    0x1(%rbx),%rbx
  0x000000011ba5820c: mov    %rbx,(%rax,%rdx,1)
  0x000000011ba58210: jne    0x000000011ba59210  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173 (line 1026)

  0x000000011ba58216: lea    0x118(%rsp),%rdx
  0x000000011ba5821e: mov    %rdi,0x8(%rdx)
  0x000000011ba58222: mov    (%rdi),%rax
  0x000000011ba58225: mov    %rax,%rsi
  0x000000011ba58228: and    $0x7,%rsi
  0x000000011ba5822c: cmp    $0x5,%rsi
  0x000000011ba58230: jne    0x000000011ba582db
  0x000000011ba58236: mov    0x8(%rdi),%esi
  0x000000011ba58239: movabs $0x800000000,%r12
  0x000000011ba58243: add    %r12,%rsi
  0x000000011ba58246: xor    %r12,%r12
  0x000000011ba58249: mov    0xb8(%rsi),%rsi
  0x000000011ba58250: or     %r15,%rsi
  0x000000011ba58253: xor    %rax,%rsi
  0x000000011ba58256: and    $0xffffffffffffff87,%rsi
  0x000000011ba5825a: je     0x000000011ba58303
  0x000000011ba58260: test   $0x7,%rsi
  0x000000011ba58267: jne    0x000000011ba582bc
  0x000000011ba58269: test   $0x300,%rsi
  0x000000011ba58270: jne    0x000000011ba5828f
  0x000000011ba58272: and    $0x37f,%rax
  0x000000011ba58279: mov    %rax,%rsi
  0x000000011ba5827c: or     %r15,%rsi
  0x000000011ba5827f: lock cmpxchg %rsi,(%rdi)
  0x000000011ba58284: jne    0x000000011ba595a3
  0x000000011ba5828a: jmpq   0x000000011ba58303
  0x000000011ba5828f: mov    0x8(%rdi),%esi
  0x000000011ba58292: movabs $0x800000000,%r12
  0x000000011ba5829c: add    %r12,%rsi
  0x000000011ba5829f: xor    %r12,%r12
  0x000000011ba582a2: mov    0xb8(%rsi),%rsi
  0x000000011ba582a9: or     %r15,%rsi
  0x000000011ba582ac: lock cmpxchg %rsi,(%rdi)
  0x000000011ba582b1: jne    0x000000011ba595a3
  0x000000011ba582b7: jmpq   0x000000011ba58303
  0x000000011ba582bc: mov    0x8(%rdi),%esi
  0x000000011ba582bf: movabs $0x800000000,%r12
  0x000000011ba582c9: add    %r12,%rsi
  0x000000011ba582cc: xor    %r12,%r12
  0x000000011ba582cf: mov    0xb8(%rsi),%rsi
  0x000000011ba582d6: lock cmpxchg %rsi,(%rdi)
  0x000000011ba582db: mov    (%rdi),%rax
  0x000000011ba582de: or     $0x1,%rax
  0x000000011ba582e2: mov    %rax,(%rdx)
  0x000000011ba582e5: lock cmpxchg %rdx,(%rdi)
  0x000000011ba582ea: je     0x000000011ba58303
  0x000000011ba582f0: sub    %rsp,%rax
  0x000000011ba582f3: and    $0xfffffffffffff007,%rax
  0x000000011ba582fa: mov    %rax,(%rdx)
  0x000000011ba582fd: jne    0x000000011ba595a3  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)

  0x000000011ba58303: mov    0xe0(%rsp),%rdx
  0x000000011ba5830b: mov    0xd8(%rsp),%rbx
  0x000000011ba58313: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5831d: addq   $0x1,0x458(%rsi)
  0x000000011ba58325: movabs $0x1326b8aa8,%rsi  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5832f: mov    0x104(%rsi),%eax
  0x000000011ba58335: add    $0x8,%eax
  0x000000011ba58338: mov    %eax,0x104(%rsi)
  0x000000011ba5833e: and    $0x7ffff8,%eax
  0x000000011ba58344: cmp    $0x0,%eax
  0x000000011ba58347: je     0x000000011ba595b6
  0x000000011ba5834d: movabs $0x1326b8aa8,%rsi  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58357: lea    0x178(%rsi),%rsi
  0x000000011ba5835e: mov    %rbx,%rax
  0x000000011ba58361: mov    0x8(%rax),%eax
  0x000000011ba58364: movabs $0x800000000,%r12
  0x000000011ba5836e: add    %r12,%rax
  0x000000011ba58371: xor    %r12,%r12
  0x000000011ba58374: xor    0x8(%rsi),%rax
  0x000000011ba58378: test   $0xfffffffffffffffc,%rax
  0x000000011ba5837e: je     0x000000011ba58390
  0x000000011ba58380: test   $0x2,%rax
  0x000000011ba58386: jne    0x000000011ba58390
  0x000000011ba58388: orq    $0x2,0x8(%rsi)
  0x000000011ba58390: movabs $0x70ff080f8,%rsi  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000070ff080f8})}
  0x000000011ba5839a: movabs $0x1326b8aa8,%rax  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba583a4: addq   $0x1,0x140(%rax)
  0x000000011ba583ac: movabs $0x1326b8cb8,%rsi  ;   {metadata(method data for {method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba583b6: mov    0x104(%rsi),%eax
  0x000000011ba583bc: add    $0x8,%eax
  0x000000011ba583bf: mov    %eax,0x104(%rsi)
  0x000000011ba583c5: and    $0x7ffff8,%eax
  0x000000011ba583cb: cmp    $0x0,%eax
  0x000000011ba583ce: je     0x000000011ba595d7
  0x000000011ba583d4: mov    (%rbx,%rdx,1),%esi
  0x000000011ba583d7: shl    $0x3,%rsi
  0x000000011ba583db: movabs $0xc,%rax
  0x000000011ba583e5: cmp    %rax,%rdx
  0x000000011ba583e8: jne    0x000000011ba58429
  0x000000011ba583ee: cmp    $0x0,%rbx
  0x000000011ba583f2: je     0x000000011ba58429
  0x000000011ba583f8: mov    0x8(%rbx),%edx
  0x000000011ba583fb: movabs $0x800000000,%r12
  0x000000011ba58405: add    %r12,%rdx
  0x000000011ba58408: xor    %r12,%r12
  0x000000011ba5840b: movsbl 0x18b(%rdx),%edx
  0x000000011ba58412: cmp    $0x0,%edx
  0x000000011ba58415: je     0x000000011ba58429
  0x000000011ba5841b: movsbl 0x30(%r15),%edx
  0x000000011ba58420: cmp    $0x0,%edx
  0x000000011ba58423: jne    0x000000011ba595f8
  0x000000011ba58429: cmp    $0x0,%rsi
  0x000000011ba5842d: jne    0x000000011ba58445
  0x000000011ba5842f: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58439: orb    $0x1,0x189(%rcx)
  0x000000011ba58440: jmpq   0x000000011ba5851e
  0x000000011ba58445: movabs $0x80001b570,%rax  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba5844f: mov    0x8(%rsi),%ecx
  0x000000011ba58452: movabs $0x800000000,%r12
  0x000000011ba5845c: add    %r12,%rcx
  0x000000011ba5845f: xor    %r12,%r12
  0x000000011ba58462: cmp    0x38(%rcx),%rax
  0x000000011ba58466: jne    0x000000011ba58502
  0x000000011ba5846c: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58476: mov    0x8(%rsi),%eax
  0x000000011ba58479: movabs $0x800000000,%r12
  0x000000011ba58483: add    %r12,%rax
  0x000000011ba58486: xor    %r12,%r12
  0x000000011ba58489: cmp    0x1a0(%rcx),%rax
  0x000000011ba58490: jne    0x000000011ba5849f
  0x000000011ba58492: addq   $0x1,0x1a8(%rcx)
  0x000000011ba5849a: jmpq   0x000000011ba5851e
  0x000000011ba5849f: cmp    0x1b0(%rcx),%rax
  0x000000011ba584a6: jne    0x000000011ba584b5
  0x000000011ba584a8: addq   $0x1,0x1b8(%rcx)
  0x000000011ba584b0: jmpq   0x000000011ba5851e
  0x000000011ba584b5: cmpq   $0x0,0x1a0(%rcx)
  0x000000011ba584c0: jne    0x000000011ba584d9
  0x000000011ba584c2: mov    %rax,0x1a0(%rcx)
  0x000000011ba584c9: movq   $0x1,0x1a8(%rcx)
  0x000000011ba584d4: jmpq   0x000000011ba5851e
  0x000000011ba584d9: cmpq   $0x0,0x1b0(%rcx)
  0x000000011ba584e4: jne    0x000000011ba584fd
  0x000000011ba584e6: mov    %rax,0x1b0(%rcx)
  0x000000011ba584ed: movq   $0x1,0x1b8(%rcx)
  0x000000011ba584f8: jmpq   0x000000011ba5851e
  0x000000011ba584fd: jmpq   0x000000011ba5851e
  0x000000011ba58502: movabs $0x1326b8aa8,%rcx  ;   {metadata(method data for {method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5850c: subq   $0x1,0x190(%rcx)
  0x000000011ba58514: jmpq   0x000000011ba59610
  0x000000011ba58519: jmpq   0x000000011ba5851e
  0x000000011ba5851e: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)

  0x000000011ba58521: cmp    %rdi,%rdx
  0x000000011ba58524: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5852e: movabs $0x478,%rsi
  0x000000011ba58538: je     0x000000011ba58548
  0x000000011ba5853e: movabs $0x468,%rsi
  0x000000011ba58548: mov    (%rdx,%rsi,1),%rax
  0x000000011ba5854c: lea    0x1(%rax),%rax
  0x000000011ba58550: mov    %rax,(%rdx,%rsi,1)
  0x000000011ba58554: je     0x000000011ba58588  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197 (line 1032)

  0x000000011ba5855a: mov    0xc4(%rsp),%eax
  0x000000011ba58561: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000011ba5856b: mov    %rbx,0xd8(%rsp)
  0x000000011ba58573: mov    0xc0(%rsp),%r8d
  0x000000011ba5857b: mov    0xb8(%rsp),%rcx
  0x000000011ba58583: jmpq   0x000000011ba59034  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)

  0x000000011ba58588: mov    0xcc(%rsp),%eax
  0x000000011ba5858f: cmp    $0x0,%eax
  0x000000011ba58592: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5859c: movabs $0x488,%rsi
  0x000000011ba585a6: jl     0x000000011ba585b6
  0x000000011ba585ac: movabs $0x498,%rsi
  0x000000011ba585b6: mov    (%rdx,%rsi,1),%rax
  0x000000011ba585ba: lea    0x1(%rax),%rax
  0x000000011ba585be: mov    %rax,(%rdx,%rsi,1)
  0x000000011ba585c2: jl     0x000000011ba58b00  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202 (line 1033)

  0x000000011ba585c8: mov    %rdi,%rax
  0x000000011ba585cb: mov    $0x1,%ecx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1037)

  0x000000011ba585d0: mov    %ecx,0xec(%rsp)
  0x000000011ba585d7: mov    %rbx,0xd8(%rsp)
  0x000000011ba585df: nop
  0x000000011ba585e0: mov    0xc8(%rsp),%esi
  0x000000011ba585e7: mov    0xb0(%rsp),%rdx
  0x000000011ba585ef: mov    0xc(%rax),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ; implicit exception: dispatches to 0x000000011ba59619
  0x000000011ba585f3: cmp    %esi,%r8d
  0x000000011ba585f6: movabs $0x1328a86f8,%r8   ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58600: movabs $0x4b8,%r9
  0x000000011ba5860a: je     0x000000011ba5861a
  0x000000011ba58610: movabs $0x4a8,%r9
  0x000000011ba5861a: mov    (%r8,%r9,1),%r11
  0x000000011ba5861e: lea    0x1(%r11),%r11
  0x000000011ba58622: mov    %r11,(%r8,%r9,1)
  0x000000011ba58626: je     0x000000011ba58634  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219 (line 1037)

  0x000000011ba5862c: mov    %rax,%r8
  0x000000011ba5862f: jmpq   0x000000011ba587b5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x000000011ba58634: mov    0x10(%rax),%r8d
  0x000000011ba58638: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1037)

  0x000000011ba5863c: cmp    %rdx,%r8
  0x000000011ba5863f: movabs $0x1328a86f8,%r9   ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58649: movabs $0x4c8,%r11
  0x000000011ba58653: je     0x000000011ba58663
  0x000000011ba58659: movabs $0x4d8,%r11
  0x000000011ba58663: mov    (%r9,%r11,1),%r13
  0x000000011ba58667: lea    0x1(%r13),%r13
  0x000000011ba5866b: mov    %r13,(%r9,%r11,1)
  0x000000011ba5866f: je     0x000000011ba58857  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231 (line 1037)

  0x000000011ba58675: cmp    $0x0,%r8
  0x000000011ba58679: movabs $0x1328a86f8,%r9   ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58683: movabs $0x4f8,%r11
  0x000000011ba5868d: jne    0x000000011ba5869d
  0x000000011ba58693: movabs $0x4e8,%r11
  0x000000011ba5869d: mov    (%r9,%r11,1),%r13
  0x000000011ba586a1: lea    0x1(%r13),%r13
  0x000000011ba586a5: mov    %r13,(%r9,%r11,1)
  0x000000011ba586a9: jne    0x000000011ba586b7  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236 (line 1037)

  0x000000011ba586af: mov    %rax,%r8
  0x000000011ba586b2: jmpq   0x000000011ba587b5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x000000011ba586b7: mov    %rax,0xf0(%rsp)
  0x000000011ba586bf: mov    %rdx,%r9
  0x000000011ba586c2: movabs $0x1328a86f8,%r11  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba586cc: mov    0x8(%r9),%r9d
  0x000000011ba586d0: movabs $0x800000000,%r12
  0x000000011ba586da: add    %r12,%r9
  0x000000011ba586dd: xor    %r12,%r12
  0x000000011ba586e0: cmp    0x518(%r11),%r9
  0x000000011ba586e7: jne    0x000000011ba586f6
  0x000000011ba586e9: addq   $0x1,0x520(%r11)
  0x000000011ba586f1: jmpq   0x000000011ba5875c
  0x000000011ba586f6: cmp    0x528(%r11),%r9
  0x000000011ba586fd: jne    0x000000011ba5870c
  0x000000011ba586ff: addq   $0x1,0x530(%r11)
  0x000000011ba58707: jmpq   0x000000011ba5875c
  0x000000011ba5870c: cmpq   $0x0,0x518(%r11)
  0x000000011ba58717: jne    0x000000011ba58730
  0x000000011ba58719: mov    %r9,0x518(%r11)
  0x000000011ba58720: movq   $0x1,0x520(%r11)
  0x000000011ba5872b: jmpq   0x000000011ba5875c
  0x000000011ba58730: cmpq   $0x0,0x528(%r11)
  0x000000011ba5873b: jne    0x000000011ba58754
  0x000000011ba5873d: mov    %r9,0x528(%r11)
  0x000000011ba58744: movq   $0x1,0x530(%r11)
  0x000000011ba5874f: jmpq   0x000000011ba5875c
  0x000000011ba58754: addq   $0x1,0x508(%r11)
  0x000000011ba5875c: mov    %rdx,%r9
  0x000000011ba5875f: mov    %r8,%rdx
  0x000000011ba58762: mov    %r9,%rsi           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)

  0x000000011ba58765: movabs $0xffffffffffffffff,%rax
  0x000000011ba5876f: callq  0x000000011b4d2180  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [240]=Oop [176]=Oop [208]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)
                                                ;   {virtual_call}
  0x000000011ba58774: cmp    $0x0,%eax
  0x000000011ba58777: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58781: movabs $0x550,%rsi
  0x000000011ba5878b: jne    0x000000011ba5879b
  0x000000011ba58791: movabs $0x540,%rsi
  0x000000011ba5879b: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba5879f: lea    0x1(%rdi),%rdi
  0x000000011ba587a3: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba587a7: mov    0xf0(%rsp),%r8
  0x000000011ba587af: jne    0x000000011ba5885a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245 (line 1039)

  0x000000011ba587b5: mov    0x18(%r8),%edx
  0x000000011ba587b9: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274 (line 1046)

  0x000000011ba587bd: cmp    $0x0,%rdx
  0x000000011ba587c1: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba587cb: movabs $0x5a8,%rdi
  0x000000011ba587d5: je     0x000000011ba587e5
  0x000000011ba587db: movabs $0x598,%rdi
  0x000000011ba587e5: mov    (%rsi,%rdi,1),%rax
  0x000000011ba587e9: lea    0x1(%rax),%rax
  0x000000011ba587ed: mov    %rax,(%rsi,%rdi,1)
  0x000000011ba587f1: je     0x000000011ba5892b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280 (line 1046)

  0x000000011ba587f7: mov    0xec(%rsp),%ecx
  0x000000011ba587fe: inc    %ecx
  0x000000011ba58800: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5880a: mov    0x108(%rsi),%edi
  0x000000011ba58810: add    $0x8,%edi
  0x000000011ba58813: mov    %edi,0x108(%rsi)
  0x000000011ba58819: and    $0xfff8,%edi
  0x000000011ba5881f: cmp    $0x0,%edi
  0x000000011ba58822: je     0x000000011ba5961e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x000000011ba58828: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x000000011ba5882f: test   %eax,(%r10)        ;   {poll}
  0x000000011ba58832: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5883c: incl   0x5e0(%rsi)
  0x000000011ba58842: mov    %rdx,%r8
  0x000000011ba58845: mov    %rcx,%rbx
  0x000000011ba58848: mov    %r8,%rax
  0x000000011ba5884b: mov    %ebx,0xec(%rsp)
  0x000000011ba58852: jmpq   0x000000011ba585e0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x000000011ba58857: mov    %rax,%r8
  0x000000011ba5885a: mov    0xec(%rsp),%ebx
  0x000000011ba58861: mov    0xc0(%rsp),%r9d
  0x000000011ba58869: mov    0x14(%r8),%edx
  0x000000011ba5886d: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1040)

  0x000000011ba58871: cmp    $0x0,%r9d
  0x000000011ba58875: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5887f: movabs $0x570,%rdi
  0x000000011ba58889: je     0x000000011ba58899
  0x000000011ba5888f: movabs $0x560,%rdi
  0x000000011ba58899: mov    (%rsi,%rdi,1),%rax
  0x000000011ba5889d: lea    0x1(%rax),%rax
  0x000000011ba588a1: mov    %rax,(%rsi,%rdi,1)
  0x000000011ba588a5: je     0x000000011ba588c8  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1041)

  0x000000011ba588ab: mov    0xc8(%rsp),%r13d
  0x000000011ba588b3: mov    0xb8(%rsp),%r14
  0x000000011ba588bb: mov    0xb0(%rsp),%r11
  0x000000011ba588c3: jmpq   0x000000011ba58adf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x000000011ba588c8: mov    0xb8(%rsp),%rcx
  0x000000011ba588d0: movsbl 0x30(%r15),%esi
  0x000000011ba588d5: cmp    $0x0,%esi
  0x000000011ba588d8: jne    0x000000011ba5963f
  0x000000011ba588de: mov    %rcx,%r10
  0x000000011ba588e1: shr    $0x3,%r10
  0x000000011ba588e5: mov    %r10d,0x14(%r8)
  0x000000011ba588e9: lock addl $0x0,-0x40(%rsp)
  0x000000011ba588ef: mov    %r8,%rax
  0x000000011ba588f2: xor    %rcx,%rax
  0x000000011ba588f5: shr    $0x14,%rax
  0x000000011ba588f9: cmp    $0x0,%rax
  0x000000011ba588fd: jne    0x000000011ba5965f  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262 (line 1042)

  0x000000011ba58903: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5890d: incl   0x580(%rsi)
  0x000000011ba58913: mov    0xc8(%rsp),%r13d
  0x000000011ba5891b: mov    %rcx,%r14
  0x000000011ba5891e: mov    0xb0(%rsp),%r11
  0x000000011ba58926: jmpq   0x000000011ba58adf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265 (line 1042)

  0x000000011ba5892b: mov    0xec(%rsp),%ebx
  0x000000011ba58932: mov    0xc8(%rsp),%esi
  0x000000011ba58939: mov    0xc0(%rsp),%r9d
  0x000000011ba58941: mov    0xb8(%rsp),%rcx
  0x000000011ba58949: mov    0xb0(%rsp),%rdx
  0x000000011ba58951: mov    %rdx,%r11
  0x000000011ba58954: movabs $0x80001b570,%rdx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba5895e: mov    %rcx,%r14
  0x000000011ba58961: mov    %rsi,%r13
  0x000000011ba58964: mov    0x118(%r15),%rax
  0x000000011ba5896b: lea    0x20(%rax),%rdi
  0x000000011ba5896f: cmp    0x128(%r15),%rdi
  0x000000011ba58976: ja     0x000000011ba59677
  0x000000011ba5897c: mov    %rdi,0x118(%r15)
  0x000000011ba58983: mov    0xb8(%rdx),%rcx
  0x000000011ba5898a: mov    %rcx,(%rax)
  0x000000011ba5898d: mov    %rdx,%rcx
  0x000000011ba58990: movabs $0x800000000,%r12
  0x000000011ba5899a: sub    %r12,%rcx
  0x000000011ba5899d: xor    %r12,%r12
  0x000000011ba589a0: mov    %ecx,0x8(%rax)
  0x000000011ba589a3: xor    %rcx,%rcx
  0x000000011ba589a6: mov    %ecx,0xc(%rax)
  0x000000011ba589a9: xor    %rcx,%rcx
  0x000000011ba589ac: mov    %rcx,0x10(%rax)
  0x000000011ba589b0: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)

  0x000000011ba589b4: mov    %rax,%rdx
  0x000000011ba589b7: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba589c1: addq   $0x1,0x5b8(%rcx)
  0x000000011ba589c9: movabs $0x132828b18,%rdx  ;   {metadata(method data for {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba589d3: mov    0x104(%rdx),%ecx
  0x000000011ba589d9: add    $0x8,%ecx
  0x000000011ba589dc: mov    %ecx,0x104(%rdx)
  0x000000011ba589e2: and    $0x7ffff8,%ecx
  0x000000011ba589e8: cmp    $0x0,%ecx
  0x000000011ba589eb: je     0x000000011ba59684
  0x000000011ba589f1: mov    %rax,%rdx
  0x000000011ba589f4: movabs $0x132828b18,%rcx  ;   {metadata(method data for {method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba589fe: addq   $0x1,0x140(%rcx)
  0x000000011ba58a06: movabs $0x1326ded60,%rdx  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba58a10: mov    0x104(%rdx),%ecx
  0x000000011ba58a16: add    $0x8,%ecx
  0x000000011ba58a19: mov    %ecx,0x104(%rdx)
  0x000000011ba58a1f: and    $0x7ffff8,%ecx
  0x000000011ba58a25: cmp    $0x0,%ecx
  0x000000011ba58a28: je     0x000000011ba596a5
  0x000000011ba58a2e: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x000000011ba58a32: movsbl 0x30(%r15),%edx
  0x000000011ba58a37: cmp    $0x0,%edx
  0x000000011ba58a3a: jne    0x000000011ba596c6
  0x000000011ba58a40: mov    %r11,%r10
  0x000000011ba58a43: shr    $0x3,%r10
  0x000000011ba58a47: mov    %r10d,0x10(%rax)
  0x000000011ba58a4b: mov    %rax,%rdx
  0x000000011ba58a4e: xor    %r11,%rdx
  0x000000011ba58a51: shr    $0x14,%rdx
  0x000000011ba58a55: cmp    $0x0,%rdx
  0x000000011ba58a59: jne    0x000000011ba596e5  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x000000011ba58a5f: movsbl 0x30(%r15),%edx
  0x000000011ba58a64: cmp    $0x0,%edx
  0x000000011ba58a67: jne    0x000000011ba596fd
  0x000000011ba58a6d: mov    %r14,%r10
  0x000000011ba58a70: shr    $0x3,%r10
  0x000000011ba58a74: mov    %r10d,0x14(%rax)
  0x000000011ba58a78: lock addl $0x0,-0x40(%rsp)
  0x000000011ba58a7e: mov    %rax,%rdx
  0x000000011ba58a81: xor    %r14,%rdx
  0x000000011ba58a84: shr    $0x14,%rdx
  0x000000011ba58a88: cmp    $0x0,%rdx
  0x000000011ba58a8c: jne    0x000000011ba5971c  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x000000011ba58a92: movsbl 0x30(%r15),%edx
  0x000000011ba58a97: cmp    $0x0,%edx
  0x000000011ba58a9a: jne    0x000000011ba59734
  0x000000011ba58aa0: mov    %rax,%r10
  0x000000011ba58aa3: shr    $0x3,%r10
  0x000000011ba58aa7: mov    %r10d,0x18(%r8)
  0x000000011ba58aab: lock addl $0x0,-0x40(%rsp)
  0x000000011ba58ab1: mov    %r8,%rdx
  0x000000011ba58ab4: xor    %rax,%rdx
  0x000000011ba58ab7: shr    $0x14,%rdx
  0x000000011ba58abb: cmp    $0x0,%rdx
  0x000000011ba58abf: jne    0x000000011ba59754  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296 (line 1047)

  0x000000011ba58ac5: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58acf: incl   0x5c8(%rdx)
  0x000000011ba58ad5: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1048)
                                                ;   {oop(NULL)}
  0x000000011ba58adf: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58ae9: incl   0x5f8(%rcx)
  0x000000011ba58aef: mov    %rdx,%rdi
  0x000000011ba58af2: mov    %rbx,%rax
  0x000000011ba58af5: mov    %r9,%r8
  0x000000011ba58af8: mov    %r14,%rcx
  0x000000011ba58afb: jmpq   0x000000011ba59034  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x000000011ba58b00: mov    %rbx,0xd8(%rsp)
  0x000000011ba58b08: mov    0xc8(%rsp),%r13d
  0x000000011ba58b10: mov    0xc0(%rsp),%r9d
  0x000000011ba58b18: mov    0xb8(%rsp),%r14
  0x000000011ba58b20: mov    0xb0(%rsp),%r11
  0x000000011ba58b28: cmp    $0x0,%rdi
  0x000000011ba58b2c: jne    0x000000011ba58b44
  0x000000011ba58b2e: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58b38: orb    $0x1,0x609(%rsi)
  0x000000011ba58b3f: jmpq   0x000000011ba58c4d
  0x000000011ba58b44: nopl   0x0(%rax)
  0x000000011ba58b48: jmpq   0x000000011ba5977b  ;   {no_reloc}
  0x000000011ba58b4d: add    %al,(%rax)
  0x000000011ba58b4f: add    %al,(%rax)
  0x000000011ba58b51: add    %cl,-0x43b6f789(%rbx)
  0x000000011ba58b57: add    %al,(%rax)
  0x000000011ba58b59: add    %al,(%rax)
  0x000000011ba58b5b: or     %al,(%rax)
  0x000000011ba58b5d: add    %al,(%rax)
  0x000000011ba58b5f: add    %r12,%rsi
  0x000000011ba58b62: xor    %r12,%r12
  0x000000011ba58b65: cmp    %r8,%rsi
  0x000000011ba58b68: je     0x000000011ba58b9a
  0x000000011ba58b6e: mov    0x10(%r8),%ecx
  0x000000011ba58b72: cmp    (%rsi,%rcx,1),%r8
  0x000000011ba58b76: je     0x000000011ba58b9a
  0x000000011ba58b7c: cmp    $0x20,%ecx
  0x000000011ba58b7f: jne    0x000000011ba58c31
  0x000000011ba58b85: push   %rsi
  0x000000011ba58b86: push   %r8
  0x000000011ba58b88: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba58b8d: pop    %rsi
  0x000000011ba58b8e: pop    %r8
  0x000000011ba58b90: cmp    $0x0,%r8d
  0x000000011ba58b94: je     0x000000011ba58c31
  0x000000011ba58b9a: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58ba4: mov    0x8(%rdi),%r8d
  0x000000011ba58ba8: movabs $0x800000000,%r12
  0x000000011ba58bb2: add    %r12,%r8
  0x000000011ba58bb5: xor    %r12,%r12
  0x000000011ba58bb8: cmp    0x620(%rsi),%r8
  0x000000011ba58bbf: jne    0x000000011ba58bce
  0x000000011ba58bc1: addq   $0x1,0x628(%rsi)
  0x000000011ba58bc9: jmpq   0x000000011ba58c52
  0x000000011ba58bce: cmp    0x630(%rsi),%r8
  0x000000011ba58bd5: jne    0x000000011ba58be4
  0x000000011ba58bd7: addq   $0x1,0x638(%rsi)
  0x000000011ba58bdf: jmpq   0x000000011ba58c52
  0x000000011ba58be4: cmpq   $0x0,0x620(%rsi)
  0x000000011ba58bef: jne    0x000000011ba58c08
  0x000000011ba58bf1: mov    %r8,0x620(%rsi)
  0x000000011ba58bf8: movq   $0x1,0x628(%rsi)
  0x000000011ba58c03: jmpq   0x000000011ba58c52
  0x000000011ba58c08: cmpq   $0x0,0x630(%rsi)
  0x000000011ba58c13: jne    0x000000011ba58c2c
  0x000000011ba58c15: mov    %r8,0x630(%rsi)
  0x000000011ba58c1c: movq   $0x1,0x638(%rsi)
  0x000000011ba58c27: jmpq   0x000000011ba58c52
  0x000000011ba58c2c: jmpq   0x000000011ba58c52
  0x000000011ba58c31: movabs $0x1328a86f8,%rsi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58c3b: subq   $0x1,0x610(%rsi)
  0x000000011ba58c43: jmpq   0x000000011ba58c4d
  0x000000011ba58c48: jmpq   0x000000011ba58c52
  0x000000011ba58c4d: xor    %rdx,%rdx
  0x000000011ba58c50: jmp    0x000000011ba58c5c
  0x000000011ba58c52: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)

  0x000000011ba58c5c: cmp    $0x0,%edx
  0x000000011ba58c5f: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58c69: movabs $0x648,%rcx
  0x000000011ba58c73: je     0x000000011ba58c83
  0x000000011ba58c79: movabs $0x658,%rcx
  0x000000011ba58c83: mov    (%rdx,%rcx,1),%r8
  0x000000011ba58c87: lea    0x1(%r8),%r8
  0x000000011ba58c8b: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba58c8f: je     0x000000011ba58ee1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316 (line 1052)

  0x000000011ba58c95: cmp    $0x0,%rdi
  0x000000011ba58c99: jne    0x000000011ba58cb1
  0x000000011ba58c9b: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58ca5: orb    $0x1,0x661(%rbx)
  0x000000011ba58cac: jmpq   0x000000011ba58db8
  0x000000011ba58cb1: nopl   0x0(%rax)
  0x000000011ba58cb8: jmpq   0x000000011ba59794  ;   {no_reloc}
  0x000000011ba58cbd: add    %al,(%rax)
  0x000000011ba58cbf: add    %al,(%rax)
  0x000000011ba58cc1: add    %cl,-0x43b6f7a1(%rbx)
  0x000000011ba58cc7: add    %al,(%rax)
  0x000000011ba58cc9: add    %al,(%rax)
  0x000000011ba58ccb: or     %al,(%rax)
  0x000000011ba58ccd: add    %al,(%rax)
  0x000000011ba58ccf: add    %r12,%rbx
  0x000000011ba58cd2: xor    %r12,%r12
  0x000000011ba58cd5: cmp    %rcx,%rbx
  0x000000011ba58cd8: je     0x000000011ba58d06
  0x000000011ba58cde: mov    0x10(%rcx),%edx
  0x000000011ba58ce1: cmp    (%rbx,%rdx,1),%rcx
  0x000000011ba58ce5: je     0x000000011ba58d06
  0x000000011ba58ceb: cmp    $0x20,%edx
  0x000000011ba58cee: jne    0x000000011ba58d9c
  0x000000011ba58cf4: push   %rbx
  0x000000011ba58cf5: push   %rcx
  0x000000011ba58cf6: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba58cfb: pop    %rbx
  0x000000011ba58cfc: pop    %rcx
  0x000000011ba58cfd: cmp    $0x0,%ecx
  0x000000011ba58d00: je     0x000000011ba58d9c
  0x000000011ba58d06: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58d10: mov    0x8(%rdi),%ecx
  0x000000011ba58d13: movabs $0x800000000,%r12
  0x000000011ba58d1d: add    %r12,%rcx
  0x000000011ba58d20: xor    %r12,%r12
  0x000000011ba58d23: cmp    0x678(%rbx),%rcx
  0x000000011ba58d2a: jne    0x000000011ba58d39
  0x000000011ba58d2c: addq   $0x1,0x680(%rbx)
  0x000000011ba58d34: jmpq   0x000000011ba58db8
  0x000000011ba58d39: cmp    0x688(%rbx),%rcx
  0x000000011ba58d40: jne    0x000000011ba58d4f
  0x000000011ba58d42: addq   $0x1,0x690(%rbx)
  0x000000011ba58d4a: jmpq   0x000000011ba58db8
  0x000000011ba58d4f: cmpq   $0x0,0x678(%rbx)
  0x000000011ba58d5a: jne    0x000000011ba58d73
  0x000000011ba58d5c: mov    %rcx,0x678(%rbx)
  0x000000011ba58d63: movq   $0x1,0x680(%rbx)
  0x000000011ba58d6e: jmpq   0x000000011ba58db8
  0x000000011ba58d73: cmpq   $0x0,0x688(%rbx)
  0x000000011ba58d7e: jne    0x000000011ba58d97
  0x000000011ba58d80: mov    %rcx,0x688(%rbx)
  0x000000011ba58d87: movq   $0x1,0x690(%rbx)
  0x000000011ba58d92: jmpq   0x000000011ba58db8
  0x000000011ba58d97: jmpq   0x000000011ba58db8
  0x000000011ba58d9c: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58da6: subq   $0x1,0x668(%rbx)
  0x000000011ba58dae: jmpq   0x000000011ba5979e
  0x000000011ba58db3: jmpq   0x000000011ba58db8
  0x000000011ba58db8: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)

  0x000000011ba58dbb: mov    %r13,%rdx
  0x000000011ba58dbe: mov    %r11,%rcx
  0x000000011ba58dc1: mov    %r14,%r8           ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)

  0x000000011ba58dc4: nop
  0x000000011ba58dc5: movabs $0xffffffffffffffff,%rax
  0x000000011ba58dcf: callq  0x000000011b4d2180  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)
                                                ;   {virtual_call}
  0x000000011ba58dd4: cmp    $0x0,%rax
  0x000000011ba58dd8: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58de2: movabs $0x6e8,%rcx
  0x000000011ba58dec: jne    0x000000011ba58dfc
  0x000000011ba58df2: movabs $0x6d8,%rcx
  0x000000011ba58dfc: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba58e00: lea    0x1(%rsi),%rsi
  0x000000011ba58e04: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba58e08: jne    0x000000011ba58e2d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337 (line 1055)

  0x000000011ba58e0e: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba58e18: mov    0xc0(%rsp),%r8d
  0x000000011ba58e20: mov    0xb8(%rsp),%rcx
  0x000000011ba58e28: jmpq   0x000000011ba58ec4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x000000011ba58e2d: mov    0xc0(%rsp),%r8d
  0x000000011ba58e35: mov    0x14(%rax),%edx    ; implicit exception: dispatches to 0x000000011ba597a7
  0x000000011ba58e38: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)

  0x000000011ba58e3c: cmp    $0x0,%r8d
  0x000000011ba58e40: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58e4a: movabs $0x708,%rsi
  0x000000011ba58e54: je     0x000000011ba58e64
  0x000000011ba58e5a: movabs $0x6f8,%rsi
  0x000000011ba58e64: mov    (%rcx,%rsi,1),%rdi
  0x000000011ba58e68: lea    0x1(%rdi),%rdi
  0x000000011ba58e6c: mov    %rdi,(%rcx,%rsi,1)
  0x000000011ba58e70: je     0x000000011ba58e86  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348 (line 1058)

  0x000000011ba58e76: mov    %rdx,%rax
  0x000000011ba58e79: mov    0xb8(%rsp),%rcx
  0x000000011ba58e81: jmpq   0x000000011ba58ec4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x000000011ba58e86: mov    0xb8(%rsp),%rcx
  0x000000011ba58e8e: movsbl 0x30(%r15),%esi
  0x000000011ba58e93: cmp    $0x0,%esi
  0x000000011ba58e96: jne    0x000000011ba597ac
  0x000000011ba58e9c: mov    %rcx,%r10
  0x000000011ba58e9f: shr    $0x3,%r10
  0x000000011ba58ea3: mov    %r10d,0x14(%rax)
  0x000000011ba58ea7: lock addl $0x0,-0x40(%rsp)
  0x000000011ba58ead: mov    %rax,%rsi
  0x000000011ba58eb0: xor    %rcx,%rsi
  0x000000011ba58eb3: shr    $0x14,%rsi
  0x000000011ba58eb7: cmp    $0x0,%rsi
  0x000000011ba58ebb: jne    0x000000011ba597cb  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354 (line 1059)

  0x000000011ba58ec1: mov    %rdx,%rax
  0x000000011ba58ec4: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58ece: incl   0x718(%rdx)
  0x000000011ba58ed4: mov    %rax,%rdi
  0x000000011ba58ed7: mov    $0x2,%eax
  0x000000011ba58edc: jmpq   0x000000011ba59034  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x000000011ba58ee1: mov    %r9,%r8
  0x000000011ba58ee4: mov    %r14,%rcx
  0x000000011ba58ee7: cmp    $0x0,%rdi
  0x000000011ba58eeb: jne    0x000000011ba58f03
  0x000000011ba58eed: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58ef7: orb    $0x1,0x729(%rbx)
  0x000000011ba58efe: jmpq   0x000000011ba58fdb
  0x000000011ba58f03: movabs $0x80001bdb8,%rsi  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$ReservationNode&apos;)}
  0x000000011ba58f0d: mov    0x8(%rdi),%edx
  0x000000011ba58f10: movabs $0x800000000,%r12
  0x000000011ba58f1a: add    %r12,%rdx
  0x000000011ba58f1d: xor    %r12,%r12
  0x000000011ba58f20: cmp    %rdx,%rsi
  0x000000011ba58f23: jne    0x000000011ba58fbf
  0x000000011ba58f29: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58f33: mov    0x8(%rdi),%esi
  0x000000011ba58f36: movabs $0x800000000,%r12
  0x000000011ba58f40: add    %r12,%rsi
  0x000000011ba58f43: xor    %r12,%r12
  0x000000011ba58f46: cmp    0x740(%rbx),%rsi
  0x000000011ba58f4d: jne    0x000000011ba58f5c
  0x000000011ba58f4f: addq   $0x1,0x748(%rbx)
  0x000000011ba58f57: jmpq   0x000000011ba58fe0
  0x000000011ba58f5c: cmp    0x750(%rbx),%rsi
  0x000000011ba58f63: jne    0x000000011ba58f72
  0x000000011ba58f65: addq   $0x1,0x758(%rbx)
  0x000000011ba58f6d: jmpq   0x000000011ba58fe0
  0x000000011ba58f72: cmpq   $0x0,0x740(%rbx)
  0x000000011ba58f7d: jne    0x000000011ba58f96
  0x000000011ba58f7f: mov    %rsi,0x740(%rbx)
  0x000000011ba58f86: movq   $0x1,0x748(%rbx)
  0x000000011ba58f91: jmpq   0x000000011ba58fe0
  0x000000011ba58f96: cmpq   $0x0,0x750(%rbx)
  0x000000011ba58fa1: jne    0x000000011ba58fba
  0x000000011ba58fa3: mov    %rsi,0x750(%rbx)
  0x000000011ba58faa: movq   $0x1,0x758(%rbx)
  0x000000011ba58fb5: jmpq   0x000000011ba58fe0
  0x000000011ba58fba: jmpq   0x000000011ba58fe0
  0x000000011ba58fbf: movabs $0x1328a86f8,%rbx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58fc9: subq   $0x1,0x730(%rbx)
  0x000000011ba58fd1: jmpq   0x000000011ba58fdb
  0x000000011ba58fd6: jmpq   0x000000011ba58fe0
  0x000000011ba58fdb: xor    %rax,%rax
  0x000000011ba58fde: jmp    0x000000011ba58fea
  0x000000011ba58fe0: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362 (line 1062)

  0x000000011ba58fea: cmp    $0x0,%eax
  0x000000011ba58fed: movabs $0x1328a86f8,%rax  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba58ff7: movabs $0x778,%rdx
  0x000000011ba59001: jne    0x000000011ba59011
  0x000000011ba59007: movabs $0x768,%rdx
  0x000000011ba59011: mov    (%rax,%rdx,1),%rsi
  0x000000011ba59015: lea    0x1(%rsi),%rsi
  0x000000011ba59019: mov    %rsi,(%rax,%rdx,1)
  0x000000011ba5901d: jne    0x000000011ba59289  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365 (line 1062)

  0x000000011ba59023: mov    0xc4(%rsp),%eax
  0x000000011ba5902a: movabs $0x0,%rdi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)
                                                ;   {oop(NULL)}
  0x000000011ba59034: mov    %rax,%rbx
  0x000000011ba59037: lea    0x118(%rsp),%rax
  0x000000011ba5903f: mov    0x8(%rax),%rsi
  0x000000011ba59043: mov    (%rsi),%rdx
  0x000000011ba59046: and    $0x7,%rdx
  0x000000011ba5904a: cmp    $0x5,%rdx
  0x000000011ba5904e: je     0x000000011ba5906b
  0x000000011ba59054: mov    (%rax),%rdx
  0x000000011ba59057: test   %rdx,%rdx
  0x000000011ba5905a: je     0x000000011ba5906b
  0x000000011ba59060: lock cmpxchg %rdx,(%rsi)
  0x000000011ba59065: jne    0x000000011ba597e3  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@380 (line 1065)

  0x000000011ba5906b: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59075: incl   0x798(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@381 (line 1065)

  0x000000011ba5907b: cmp    $0x0,%ebx
  0x000000011ba5907e: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59088: movabs $0x7c0,%rsi
  0x000000011ba59092: jne    0x000000011ba590a2
  0x000000011ba59098: movabs $0x7b0,%rsi
  0x000000011ba590a2: mov    (%rdx,%rsi,1),%rax
  0x000000011ba590a6: lea    0x1(%rax),%rax
  0x000000011ba590aa: mov    %rax,(%rdx,%rsi,1)
  0x000000011ba590ae: jne    0x000000011ba5911e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@394 (line 1066)

  0x000000011ba590b4: mov    0xd8(%rsp),%rax
  0x000000011ba590bc: mov    %rbx,%rsi
  0x000000011ba590bf: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba590c9: mov    0x108(%rdx),%edi
  0x000000011ba590cf: add    $0x8,%edi
  0x000000011ba590d2: mov    %edi,0x108(%rdx)
  0x000000011ba590d8: and    $0xfff8,%edi
  0x000000011ba590de: cmp    $0x0,%edi
  0x000000011ba590e1: je     0x000000011ba597f9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011ba590e7: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011ba590ee: test   %eax,(%r10)        ;   {poll}
  0x000000011ba590f1: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba590fb: incl   0x848(%rdx)
  0x000000011ba59101: mov    %rax,%rdx
  0x000000011ba59104: mov    %rsi,%rax
  0x000000011ba59107: mov    %rdx,%rbx
  0x000000011ba5910a: mov    %eax,0xc4(%rsp)
  0x000000011ba59111: mov    0xa8(%rsp),%rdi
  0x000000011ba59119: jmpq   0x000000011ba57928  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011ba5911e: mov    0xd8(%rsp),%rdx
  0x000000011ba59126: cmp    $0x8,%ebx
  0x000000011ba59129: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59133: movabs $0x7e0,%rsi
  0x000000011ba5913d: jge    0x000000011ba5914d
  0x000000011ba59143: movabs $0x7d0,%rsi
  0x000000011ba5914d: mov    (%rcx,%rsi,1),%rax
  0x000000011ba59151: lea    0x1(%rax),%rax
  0x000000011ba59155: mov    %rax,(%rcx,%rsi,1)
  0x000000011ba59159: jge    0x000000011ba5916b  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@401 (line 1067)

  0x000000011ba5915f: mov    %ebx,0x100(%rsp)
  0x000000011ba59166: jmpq   0x000000011ba591b4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@412 (line 1069)

  0x000000011ba5916b: mov    %rdi,0xf8(%rsp)
  0x000000011ba59173: mov    %ebx,0x100(%rsp)
  0x000000011ba5917a: mov    0xe8(%rsp),%r9d
  0x000000011ba59182: mov    0xa8(%rsp),%rsi
  0x000000011ba5918a: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59194: addq   $0x1,0x7f0(%rcx)
  0x000000011ba5919c: mov    %r9,%rcx
  0x000000011ba5919f: mov    0xa8(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)

  0x000000011ba591a7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)
                                                ;   {optimized virtual_call}
  0x000000011ba591ac: mov    0xf8(%rsp),%rdi
  0x000000011ba591b4: cmp    $0x0,%rdi
  0x000000011ba591b8: movabs $0x1328a86f8,%rax  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba591c2: movabs $0x838,%rdx
  0x000000011ba591cc: jne    0x000000011ba591dc
  0x000000011ba591d2: movabs $0x828,%rdx
  0x000000011ba591dc: mov    (%rax,%rdx,1),%rcx
  0x000000011ba591e0: lea    0x1(%rcx),%rcx
  0x000000011ba591e4: mov    %rcx,(%rax,%rdx,1)
  0x000000011ba591e8: jne    0x000000011ba591fa  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@414 (line 1069)

  0x000000011ba591ee: mov    0x100(%rsp),%eax
  0x000000011ba591f5: jmpq   0x000000011ba5923d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@423 (line 1075)

  0x000000011ba591fa: mov    %rdi,%rax
  0x000000011ba591fd: add    $0x130,%rsp
  0x000000011ba59204: pop    %rbp
  0x000000011ba59205: mov    0x108(%r15),%r10
  0x000000011ba5920c: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5920f: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@419 (line 1070)

  0x000000011ba59210: mov    %rsi,%rax
  0x000000011ba59213: add    $0x130,%rsp
  0x000000011ba5921a: pop    %rbp
  0x000000011ba5921b: mov    0x108(%r15),%r10
  0x000000011ba59222: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba59225: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178 (line 1028)

  0x000000011ba59226: mov    0xc4(%rsp),%eax
  0x000000011ba5922d: movabs $0x1328a86f8,%rdx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59237: incl   0x2d8(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@100 (line 1020)

  0x000000011ba5923d: mov    0xa8(%rsp),%rsi
  0x000000011ba59245: mov    %rsi,%rdx
  0x000000011ba59248: movabs $0x1328a86f8,%rcx  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59252: addq   $0x1,0x860(%rcx)
  0x000000011ba5925a: movabs $0x1,%rdx
  0x000000011ba59264: mov    %rax,%rcx          ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)

  0x000000011ba59267: callq  0x000000011ba43100  ; ImmutableOopMap{}
                                                ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)
                                                ;   {optimized virtual_call}
  0x000000011ba5926c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba59276: add    $0x130,%rsp
  0x000000011ba5927d: pop    %rbp
  0x000000011ba5927e: mov    0x108(%r15),%r10
  0x000000011ba59285: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba59288: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@431 (line 1076)

  0x000000011ba59289: nopl   0x0(%rax)
  0x000000011ba59290: jmpq   0x000000011ba59829  ;   {no_reloc}
  0x000000011ba59295: add    %al,(%rax)
  0x000000011ba59297: add    %al,(%rax)
  0x000000011ba59299: add    %ch,%cl
  0x000000011ba5929b: xchg   %eax,%esp
  0x000000011ba5929c: add    $0x8b480000,%eax   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)

  0x000000011ba592a1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba592a4: clc    
  0x000000011ba592a5: xchg   %cl,0x132(%rdx)
  0x000000011ba592ab: add    %cl,-0x7d(%rax)
  0x000000011ba592ae: xchg   %cl,0x1000007(%rax)
  0x000000011ba592b4: movabs $0x70fff5d60,%rdx  ;   {oop(&quot;Recursive update&quot;{0x000000070fff5d60})}
  0x000000011ba592be: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)

  0x000000011ba592c1: mov    %rax,0x108(%rsp)
  0x000000011ba592c9: nopw   0x0(%rax,%rax,1)
  0x000000011ba592cf: callq  0x000000011b4d1f00  ; ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)
                                                ;   {optimized virtual_call}
  0x000000011ba592d4: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x000000011ba592dc: movabs $0x11ba592dc,%rdx  ;   {section_word}
  0x000000011ba592e6: callq  0x000000011b597680  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x000000011ba592eb: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x000000011ba592ec: nopl   0x0(%rax)
  0x000000011ba592f0: jmpq   0x000000011ba5984f  ;   {no_reloc}
  0x000000011ba592f5: add    %al,(%rax)
  0x000000011ba592f7: add    %al,(%rax)
  0x000000011ba592f9: add    %cl,-0x75(%rcx)
  0x000000011ba592fc: xchg   %ebx,(%rax)
  0x000000011ba592fe: add    %eax,(%rax)
  0x000000011ba59300: add    %cl,-0x73(%rax)
  0x000000011ba59303: js     0x000000011ba5932d
  0x000000011ba59305: cmp    0x128(%r15),%rdi
  0x000000011ba5930c: ja     0x000000011ba59859
  0x000000011ba59312: mov    %rdi,0x118(%r15)
  0x000000011ba59319: mov    0xb8(%rdx),%rcx
  0x000000011ba59320: mov    %rcx,(%rax)
  0x000000011ba59323: mov    %rdx,%rcx
  0x000000011ba59326: movabs $0x800000000,%r12
  0x000000011ba59330: sub    %r12,%rcx
  0x000000011ba59333: xor    %r12,%r12
  0x000000011ba59336: mov    %ecx,0x8(%rax)
  0x000000011ba59339: xor    %rcx,%rcx
  0x000000011ba5933c: mov    %ecx,0xc(%rax)
  0x000000011ba5933f: xor    %rcx,%rcx
  0x000000011ba59342: mov    %rcx,0x10(%rax)
  0x000000011ba59346: mov    %rcx,0x18(%rax)
  0x000000011ba5934a: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x000000011ba5934e: mov    %rax,%rsi
  0x000000011ba59351: movabs $0x1328a86f8,%rdi  ;   {metadata(method data for {method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5935b: addq   $0x1,0x180(%rdi)
  0x000000011ba59363: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x000000011ba59366: mov    %rax,0x110(%rsp)
  0x000000011ba5936e: nop
  0x000000011ba5936f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x000000011ba59374: mov    0x110(%rsp),%rax
  0x000000011ba5937c: jmpq   0x000000011ba598a7  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x000000011ba59381: mov    0x420(%r15),%rax
  0x000000011ba59388: xor    %r10,%r10
  0x000000011ba5938b: mov    %r10,0x420(%r15)
  0x000000011ba59392: xor    %r10,%r10
  0x000000011ba59395: mov    %r10,0x428(%r15)
  0x000000011ba5939c: mov    %rax,%rsi
  0x000000011ba5939f: lea    0x118(%rsp),%rax
  0x000000011ba593a7: mov    0x8(%rax),%rbx
  0x000000011ba593ab: mov    (%rbx),%rdi
  0x000000011ba593ae: and    $0x7,%rdi
  0x000000011ba593b2: cmp    $0x5,%rdi
  0x000000011ba593b6: je     0x000000011ba593d3
  0x000000011ba593bc: mov    (%rax),%rdi
  0x000000011ba593bf: test   %rdi,%rdi
  0x000000011ba593c2: je     0x000000011ba593d3
  0x000000011ba593c8: lock cmpxchg %rdi,(%rbx)
  0x000000011ba593cd: jne    0x000000011ba59866  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@388 (line 1065)

  0x000000011ba593d3: mov    %rsi,%rax
  0x000000011ba593d6: jmpq   0x000000011ba598a7
  0x000000011ba593db: movabs $0x1325dec60,%r10  ;   {metadata({method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba593e5: mov    %r10,0x8(%rsp)
  0x000000011ba593ea: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba593f2: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba593f7: jmpq   0x000000011ba57797
  0x000000011ba593fc: callq  0x000000011b595f20  ; ImmutableOopMap{[168]=Oop [184]=Oop rdx=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba59401: movabs $0x1325dd908,%r10  ;   {metadata({method} {0x00000001325dd908} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5940b: mov    %r10,0x8(%rsp)
  0x000000011ba59410: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba59418: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5941d: jmpq   0x000000011ba578f6
  0x000000011ba59422: callq  0x000000011b595f20  ; ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba59427: movabs $0x1325ddce8,%r10  ;   {metadata({method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59431: mov    %r10,0x8(%rsp)
  0x000000011ba59436: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5943e: callq  0x000000011b59a600  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba59443: jmpq   0x000000011ba57a35
  0x000000011ba59448: movabs $0x132564948,%r10  ;   {metadata({method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba59452: mov    %r10,0x8(%rsp)
  0x000000011ba59457: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5945f: callq  0x000000011b59a600  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba59464: jmpq   0x000000011ba57ad6
  0x000000011ba59469: cmp    $0x0,%rsi
  0x000000011ba5946d: je     0x000000011ba57b2b
  0x000000011ba59473: mov    %rsi,(%rsp)
  0x000000011ba59477: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5947c: jmpq   0x000000011ba57b2b
  0x000000011ba59481: mov    %rsi,(%rsp)
  0x000000011ba59485: callq  0x000000011b597fa0  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba5948a: mov    %rdx,%rdx
  0x000000011ba5948d: callq  0x000000011b596780  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba59492: jmpq   0x000000011ba57ce2
  0x000000011ba59497: movabs $0x1325eee18,%r10  ;   {metadata({method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba594a1: mov    %r10,0x8(%rsp)
  0x000000011ba594a6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba594ae: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba594b3: jmpq   0x000000011ba57d22
  0x000000011ba594b8: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba594c2: mov    %r10,0x8(%rsp)
  0x000000011ba594c7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba594cf: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba594d4: jmpq   0x000000011ba57d5f
  0x000000011ba594d9: mov    0x10(%rdx),%eax
  0x000000011ba594dc: shl    $0x3,%rax
  0x000000011ba594e0: cmp    $0x0,%rax
  0x000000011ba594e4: je     0x000000011ba57d71
  0x000000011ba594ea: mov    %rax,(%rsp)
  0x000000011ba594ee: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba594f3: jmpq   0x000000011ba57d71
  0x000000011ba594f8: cmp    $0x0,%r11
  0x000000011ba594fc: je     0x000000011ba57d90
  0x000000011ba59502: mov    %rdx,(%rsp)
  0x000000011ba59506: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba5950b: jmpq   0x000000011ba57d90
  0x000000011ba59510: mov    0x14(%rdx),%eax
  0x000000011ba59513: shl    $0x3,%rax
  0x000000011ba59517: cmp    $0x0,%rax
  0x000000011ba5951b: je     0x000000011ba57d9e
  0x000000011ba59521: mov    %rax,(%rsp)
  0x000000011ba59525: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5952a: jmpq   0x000000011ba57d9e
  0x000000011ba5952f: cmp    $0x0,%r14
  0x000000011ba59533: je     0x000000011ba57dc3
  0x000000011ba59539: mov    %rdx,(%rsp)
  0x000000011ba5953d: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba59542: jmpq   0x000000011ba57dc3
  0x000000011ba59547: movabs $0x1325dddc8,%r10  ;   {metadata({method} {0x00000001325dddc8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59551: mov    %r10,0x8(%rsp)
  0x000000011ba59556: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5955e: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba59563: jmpq   0x000000011ba57dfd
  0x000000011ba59568: mov    (%rcx),%eax
  0x000000011ba5956a: shl    $0x3,%rax
  0x000000011ba5956e: cmp    $0x0,%rax
  0x000000011ba59572: je     0x000000011ba57e0f
  0x000000011ba59578: mov    %rax,(%rsp)
  0x000000011ba5957c: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba59581: jmpq   0x000000011ba57e0f
  0x000000011ba59586: cmp    $0x0,%rdx
  0x000000011ba5958a: je     0x000000011ba57e4d
  0x000000011ba59590: mov    %rcx,(%rsp)
  0x000000011ba59594: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba59599: jmpq   0x000000011ba57e4d
  0x000000011ba5959e: callq  0x000000011b595f20  ; ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba595a3: mov    %rdi,0x8(%rsp)
  0x000000011ba595a8: mov    %rdx,(%rsp)
  0x000000011ba595ac: callq  0x000000011b598900  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x000000011ba595b1: jmpq   0x000000011ba58303
  0x000000011ba595b6: movabs $0x1325ddce8,%r10  ;   {metadata({method} {0x00000001325ddce8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba595c0: mov    %r10,0x8(%rsp)
  0x000000011ba595c5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba595cd: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba595d2: jmpq   0x000000011ba5834d
  0x000000011ba595d7: movabs $0x132564948,%r10  ;   {metadata({method} {0x0000000132564948} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x000000011ba595e1: mov    %r10,0x8(%rsp)
  0x000000011ba595e6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba595ee: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba595f3: jmpq   0x000000011ba583d4
  0x000000011ba595f8: cmp    $0x0,%rsi
  0x000000011ba595fc: je     0x000000011ba58429
  0x000000011ba59602: mov    %rsi,(%rsp)
  0x000000011ba59606: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5960b: jmpq   0x000000011ba58429
  0x000000011ba59610: mov    %rsi,(%rsp)
  0x000000011ba59614: callq  0x000000011b597fa0  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba59619: callq  0x000000011b595f20  ; ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5961e: movabs $0x1325dec60,%r10  ;   {metadata({method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59628: mov    %r10,0x8(%rsp)
  0x000000011ba5962d: movq   $0x131,(%rsp)
  0x000000011ba59635: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5963a: jmpq   0x000000011ba58828
  0x000000011ba5963f: mov    0x14(%r8),%esi
  0x000000011ba59643: shl    $0x3,%rsi
  0x000000011ba59647: cmp    $0x0,%rsi
  0x000000011ba5964b: je     0x000000011ba588de
  0x000000011ba59651: mov    %rsi,(%rsp)
  0x000000011ba59655: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5965a: jmpq   0x000000011ba588de
  0x000000011ba5965f: cmp    $0x0,%rcx
  0x000000011ba59663: je     0x000000011ba58903
  0x000000011ba59669: mov    %r8,(%rsp)
  0x000000011ba5966d: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba59672: jmpq   0x000000011ba58903
  0x000000011ba59677: mov    %rdx,%rdx
  0x000000011ba5967a: callq  0x000000011b596780  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba5967f: jmpq   0x000000011ba589b4
  0x000000011ba59684: movabs $0x1325eee18,%r10  ;   {metadata({method} {0x00000001325eee18} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x000000011ba5968e: mov    %r10,0x8(%rsp)
  0x000000011ba59693: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5969b: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba596a0: jmpq   0x000000011ba589f1
  0x000000011ba596a5: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba596af: mov    %r10,0x8(%rsp)
  0x000000011ba596b4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba596bc: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba596c1: jmpq   0x000000011ba58a2e
  0x000000011ba596c6: mov    0x10(%rax),%edx
  0x000000011ba596c9: shl    $0x3,%rdx
  0x000000011ba596cd: cmp    $0x0,%rdx
  0x000000011ba596d1: je     0x000000011ba58a40
  0x000000011ba596d7: mov    %rdx,(%rsp)
  0x000000011ba596db: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba596e0: jmpq   0x000000011ba58a40
  0x000000011ba596e5: cmp    $0x0,%r11
  0x000000011ba596e9: je     0x000000011ba58a5f
  0x000000011ba596ef: mov    %rax,(%rsp)
  0x000000011ba596f3: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba596f8: jmpq   0x000000011ba58a5f
  0x000000011ba596fd: mov    0x14(%rax),%edx
  0x000000011ba59700: shl    $0x3,%rdx
  0x000000011ba59704: cmp    $0x0,%rdx
  0x000000011ba59708: je     0x000000011ba58a6d
  0x000000011ba5970e: mov    %rdx,(%rsp)
  0x000000011ba59712: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba59717: jmpq   0x000000011ba58a6d
  0x000000011ba5971c: cmp    $0x0,%r14
  0x000000011ba59720: je     0x000000011ba58a92
  0x000000011ba59726: mov    %rax,(%rsp)
  0x000000011ba5972a: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba5972f: jmpq   0x000000011ba58a92
  0x000000011ba59734: mov    0x18(%r8),%edx
  0x000000011ba59738: shl    $0x3,%rdx
  0x000000011ba5973c: cmp    $0x0,%rdx
  0x000000011ba59740: je     0x000000011ba58aa0
  0x000000011ba59746: mov    %rdx,(%rsp)
  0x000000011ba5974a: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5974f: jmpq   0x000000011ba58aa0
  0x000000011ba59754: cmp    $0x0,%rax
  0x000000011ba59758: je     0x000000011ba58ac5
  0x000000011ba5975e: mov    %r8,(%rsp)
  0x000000011ba59762: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba59767: jmpq   0x000000011ba58ac5
  0x000000011ba5976c: movabs $0x0,%r8           ;   {metadata(NULL)}
  0x000000011ba59776: mov    $0xa050f00,%eax
  0x000000011ba5977b: callq  0x000000011b599680  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba59780: jmpq   0x000000011ba58b48
  0x000000011ba59785: movabs $0x0,%rcx          ;   {metadata(NULL)}
  0x000000011ba5978f: mov    $0xa050f00,%eax
  0x000000011ba59794: callq  0x000000011b599680  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba59799: jmpq   0x000000011ba58cb8
  0x000000011ba5979e: mov    %rdi,(%rsp)
  0x000000011ba597a2: callq  0x000000011b597fa0  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba597a7: callq  0x000000011b595f20  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba597ac: mov    0x14(%rax),%esi
  0x000000011ba597af: shl    $0x3,%rsi
  0x000000011ba597b3: cmp    $0x0,%rsi
  0x000000011ba597b7: je     0x000000011ba58e9c
  0x000000011ba597bd: mov    %rsi,(%rsp)
  0x000000011ba597c1: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba597c6: jmpq   0x000000011ba58e9c
  0x000000011ba597cb: cmp    $0x0,%rcx
  0x000000011ba597cf: je     0x000000011ba58ec1
  0x000000011ba597d5: mov    %rax,(%rsp)
  0x000000011ba597d9: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba597de: jmpq   0x000000011ba58ec1
  0x000000011ba597e3: lea    0x118(%rsp),%rax
  0x000000011ba597eb: mov    %rax,(%rsp)
  0x000000011ba597ef: callq  0x000000011b598d80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011ba597f4: jmpq   0x000000011ba5906b
  0x000000011ba597f9: movabs $0x1325dec60,%r10  ;   {metadata({method} {0x00000001325dec60} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba59803: mov    %r10,0x8(%rsp)
  0x000000011ba59808: movq   $0x1a4,(%rsp)
  0x000000011ba59810: callq  0x000000011b59a600  ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba59815: jmpq   0x000000011ba590e7
  0x000000011ba5981a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba59824: mov    $0xa050f00,%eax
  0x000000011ba59829: callq  0x000000011b599680  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba5982e: jmpq   0x000000011ba59290
  0x000000011ba59833: mov    %rdx,%rdx
  0x000000011ba59836: callq  0x000000011b596480  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba5983b: jmpq   0x000000011ba5929f
  0x000000011ba59840: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba5984a: mov    $0xa050f00,%eax
  0x000000011ba5984f: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba59854: jmpq   0x000000011ba592f0
  0x000000011ba59859: mov    %rdx,%rdx
  0x000000011ba5985c: callq  0x000000011b596780  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba59861: jmpq   0x000000011ba5934e
  0x000000011ba59866: lea    0x118(%rsp),%rax
  0x000000011ba5986e: mov    %rax,(%rsp)
  0x000000011ba59872: callq  0x000000011b598d80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011ba59877: jmpq   0x000000011ba593d3
  0x000000011ba5987c: nop
  0x000000011ba5987d: nop
  0x000000011ba5987e: mov    0x420(%r15),%rax
  0x000000011ba59885: movabs $0x0,%r10
  0x000000011ba5988f: mov    %r10,0x420(%r15)
  0x000000011ba59896: movabs $0x0,%r10
  0x000000011ba598a0: mov    %r10,0x428(%r15)
  0x000000011ba598a7: add    $0x130,%rsp
  0x000000011ba598ae: pop    %rbp
  0x000000011ba598af: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba598b4: hlt    
  0x000000011ba598b5: hlt    
  0x000000011ba598b6: hlt    
  0x000000011ba598b7: hlt    
  0x000000011ba598b8: hlt    
  0x000000011ba598b9: hlt    
  0x000000011ba598ba: hlt    
  0x000000011ba598bb: hlt    
  0x000000011ba598bc: hlt    
  0x000000011ba598bd: hlt    
  0x000000011ba598be: hlt    
  0x000000011ba598bf: hlt    
[Stub Code]
  0x000000011ba598c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba598c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba598cf: jmpq   0x000000011ba598cf  ;   {runtime_call}
  0x000000011ba598d4: nop
  0x000000011ba598d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba598df: jmpq   0x000000011ba598df  ;   {runtime_call}
  0x000000011ba598e4: nop
  0x000000011ba598e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba598ef: jmpq   0x000000011ba598ef  ;   {runtime_call}
  0x000000011ba598f4: nop
  0x000000011ba598f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba598ff: jmpq   0x000000011ba598ff  ;   {runtime_call}
  0x000000011ba59904: nop
  0x000000011ba59905: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5990f: jmpq   0x000000011ba5990f  ;   {runtime_call}
  0x000000011ba59914: nop
  0x000000011ba59915: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5991f: jmpq   0x000000011ba5991f  ;   {runtime_call}
  0x000000011ba59924: nop
  0x000000011ba59925: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5992f: jmpq   0x000000011ba5992f  ;   {runtime_call}
  0x000000011ba59934: nop
  0x000000011ba59935: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5993f: jmpq   0x000000011ba5993f  ;   {runtime_call}
  0x000000011ba59944: nop
  0x000000011ba59945: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5994f: jmpq   0x000000011ba5994f  ;   {runtime_call}
  0x000000011ba59954: nop
  0x000000011ba59955: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5995f: jmpq   0x000000011ba5995f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba59964: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba59969: mov    %rsp,-0x28(%rsp)
  0x000000011ba5996e: sub    $0x80,%rsp
  0x000000011ba59975: mov    %rax,0x78(%rsp)
  0x000000011ba5997a: mov    %rcx,0x70(%rsp)
  0x000000011ba5997f: mov    %rdx,0x68(%rsp)
  0x000000011ba59984: mov    %rbx,0x60(%rsp)
  0x000000011ba59989: mov    %rbp,0x50(%rsp)
  0x000000011ba5998e: mov    %rsi,0x48(%rsp)
  0x000000011ba59993: mov    %rdi,0x40(%rsp)
  0x000000011ba59998: mov    %r8,0x38(%rsp)
  0x000000011ba5999d: mov    %r9,0x30(%rsp)
  0x000000011ba599a2: mov    %r10,0x28(%rsp)
  0x000000011ba599a7: mov    %r11,0x20(%rsp)
  0x000000011ba599ac: mov    %r12,0x18(%rsp)
  0x000000011ba599b1: mov    %r13,0x10(%rsp)
  0x000000011ba599b6: mov    %r14,0x8(%rsp)
  0x000000011ba599bb: mov    %r15,(%rsp)
  0x000000011ba599bf: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba599c9: movabs $0x11ba59969,%rsi  ;   {internal_word}
  0x000000011ba599d3: mov    %rsp,%rdx
  0x000000011ba599d6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba599da: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba599df: hlt    
[Deopt Handler Code]
  0x000000011ba599e0: movabs $0x11ba599e0,%r10  ;   {section_word}
  0x000000011ba599ea: push   %r10
  0x000000011ba599ec: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba599f1: hlt    
  0x000000011ba599f2: hlt    
  0x000000011ba599f3: hlt    
  0x000000011ba599f4: hlt    
  0x000000011ba599f5: hlt    
  0x000000011ba599f6: hlt    
  0x000000011ba599f7: hlt    

ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 412 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 676 
ImmutableOopMap{[168]=Oop [176]=Oop [184]=Oop }pc offsets: 2052 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }pc offsets: 2676 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [240]=Oop [176]=Oop [208]=Oop [288]=Oop }pc offsets: 4180 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 4367 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }pc offsets: 5812 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 6606 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 6796 
ImmutableOopMap{}pc offsets: 6988 
ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }pc offsets: 7092 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 7100 
ImmutableOopMap{[272]=Oop }pc offsets: 7252 
ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }pc offsets: 7383 
ImmutableOopMap{[168]=Oop [184]=Oop rdx=Oop [176]=Oop }pc offsets: 7393 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 7421 
ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }pc offsets: 7431 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }pc offsets: 7459 7492 7530 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }pc offsets: 7538 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }pc offsets: 7571 7604 7747 
ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }pc offsets: 7811 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 7825 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 7858 7891 7929 
ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }pc offsets: 7934 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 7962 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }pc offsets: 8031 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }pc offsets: 8064 8097 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 8288 8313 8327 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 8332 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 8437 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 8462 8475 
ImmutableOopMap{}pc offsets: 8500 8513 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='122' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1152' iicount='1152' level='3' stamp='0.436' comment='tiered' hot_count='1152'/>
<uncommon_trap thread='9987' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='115' compiler='c2' level='4' stamp='0.436'>
<jvms bci='69' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='5948' backedge_count='708' iicount='5948'/>
</uncommon_trap>
<make_not_entrant thread='9987' compile_id='115' compiler='c2' level='4' stamp='0.436'/>
<task_queued compile_id='123' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='6016' backedge_count='711' iicount='6016' decompiles='1' unstable_if_traps='1' level='3' stamp='0.436' comment='tiered' hot_count='6016'/>
<writer thread='15875'/>
<nmethod compile_id='121' compiler='c1' level='3' entry='0x000000011ba5af40' size='984' address='0x000000011ba5ad90' relocation_offset='376' insts_offset='432' stub_offset='656' scopes_data_offset='840' scopes_pcs_offset='880' dependencies_offset='976' metadata_offset='824' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='920' iicount='920' stamp='0.436'/>
<writer thread='9987'/>
<task_queued compile_id='124' method='java.lang.module.ModuleDescriptor packages ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.436' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<print_nmethod stamp='0.436'>
Compiled method (c1)     435  121       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
 total in heap  [0x000000011ba5ad90,0x000000011ba5b168] = 984
 relocation     [0x000000011ba5af08,0x000000011ba5af40] = 56
 main code      [0x000000011ba5af40,0x000000011ba5b020] = 224
 stub code      [0x000000011ba5b020,0x000000011ba5b0c8] = 168
 metadata       [0x000000011ba5b0c8,0x000000011ba5b0d8] = 16
 scopes data    [0x000000011ba5b0d8,0x000000011ba5b100] = 40
 scopes pcs     [0x000000011ba5b100,0x000000011ba5b160] = 96
 dependencies   [0x000000011ba5b160,0x000000011ba5b168] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011ba5af40, 0x000000011ba5b0c8]  392 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325e0170} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba5af40: mov    0x8(%rsi),%r10d
  0x000000011ba5af44: movabs $0x800000000,%r12
  0x000000011ba5af4e: add    %r12,%r10
  0x000000011ba5af51: xor    %r12,%r12
  0x000000011ba5af54: cmp    %rax,%r10
  0x000000011ba5af57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5af5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5af60: mov    %eax,-0x14000(%rsp)
  0x000000011ba5af67: push   %rbp
  0x000000011ba5af68: sub    $0x30,%rsp
  0x000000011ba5af6c: movabs $0x1328a9000,%r8   ;   {metadata(method data for {method} {0x00000001325e0170} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5af76: mov    0x104(%r8),%edi
  0x000000011ba5af7d: add    $0x8,%edi
  0x000000011ba5af80: mov    %edi,0x104(%r8)
  0x000000011ba5af87: and    $0x1ff8,%edi
  0x000000011ba5af8d: cmp    $0x0,%edi
  0x000000011ba5af90: je     0x000000011ba5afcc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@0 (line 1541)

  0x000000011ba5af96: mov    %rsi,%r8
  0x000000011ba5af99: movabs $0x1328a9000,%rdi  ;   {metadata(method data for {method} {0x00000001325e0170} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5afa3: addq   $0x1,0x140(%rdi)
  0x000000011ba5afab: mov    $0x1,%r8d          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)

  0x000000011ba5afb1: nopw   0x0(%rax,%rax,1)
  0x000000011ba5afb7: callq  0x000000011b4d1f00  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)
                                                ;   {optimized virtual_call}
  0x000000011ba5afbc: add    $0x30,%rsp
  0x000000011ba5afc0: pop    %rbp
  0x000000011ba5afc1: mov    0x108(%r15),%r10
  0x000000011ba5afc8: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5afcb: retq   
  0x000000011ba5afcc: movabs $0x1325e0170,%r10  ;   {metadata({method} {0x00000001325e0170} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011ba5afd6: mov    %r10,0x8(%rsp)
  0x000000011ba5afdb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5afe3: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1541)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5afe8: jmp    0x000000011ba5af96
  0x000000011ba5afea: nop
  0x000000011ba5afeb: nop
  0x000000011ba5afec: mov    0x420(%r15),%rax
  0x000000011ba5aff3: movabs $0x0,%r10
  0x000000011ba5affd: mov    %r10,0x420(%r15)
  0x000000011ba5b004: movabs $0x0,%r10
  0x000000011ba5b00e: mov    %r10,0x428(%r15)
  0x000000011ba5b015: add    $0x30,%rsp
  0x000000011ba5b019: pop    %rbp
  0x000000011ba5b01a: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5b01f: hlt    
[Stub Code]
  0x000000011ba5b020: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5b025: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5b02f: jmpq   0x000000011ba5b02f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5b034: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5b039: mov    %rsp,-0x28(%rsp)
  0x000000011ba5b03e: sub    $0x80,%rsp
  0x000000011ba5b045: mov    %rax,0x78(%rsp)
  0x000000011ba5b04a: mov    %rcx,0x70(%rsp)
  0x000000011ba5b04f: mov    %rdx,0x68(%rsp)
  0x000000011ba5b054: mov    %rbx,0x60(%rsp)
  0x000000011ba5b059: mov    %rbp,0x50(%rsp)
  0x000000011ba5b05e: mov    %rsi,0x48(%rsp)
  0x000000011ba5b063: mov    %rdi,0x40(%rsp)
  0x000000011ba5b068: mov    %r8,0x38(%rsp)
  0x000000011ba5b06d: mov    %r9,0x30(%rsp)
  0x000000011ba5b072: mov    %r10,0x28(%rsp)
  0x000000011ba5b077: mov    %r11,0x20(%rsp)
  0x000000011ba5b07c: mov    %r12,0x18(%rsp)
  0x000000011ba5b081: mov    %r13,0x10(%rsp)
  0x000000011ba5b086: mov    %r14,0x8(%rsp)
  0x000000011ba5b08b: mov    %r15,(%rsp)
  0x000000011ba5b08f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5b099: movabs $0x11ba5b039,%rsi  ;   {internal_word}
  0x000000011ba5b0a3: mov    %rsp,%rdx
  0x000000011ba5b0a6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5b0aa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5b0af: hlt    
[Deopt Handler Code]
  0x000000011ba5b0b0: movabs $0x11ba5b0b0,%r10  ;   {section_word}
  0x000000011ba5b0ba: push   %r10
  0x000000011ba5b0bc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5b0c1: hlt    
  0x000000011ba5b0c2: hlt    
  0x000000011ba5b0c3: hlt    
  0x000000011ba5b0c4: hlt    
  0x000000011ba5b0c5: hlt    
  0x000000011ba5b0c6: hlt    
  0x000000011ba5b0c7: hlt    

ImmutableOopMap{}pc offsets: 124 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 168 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='125' method='java.util.ImmutableCollections$Set12$1 hasNext ()Z' bytes='13' count='768' iicount='768' level='3' stamp='0.438' comment='tiered' hot_count='768'/>
<task_queued compile_id='126' method='java.lang.String coder ()B' bytes='15' count='11776' iicount='11776' stamp='0.438' comment='tiered' hot_count='11776'/>
<task_queued compile_id='127' method='java.lang.String &lt;init&gt; ([BB)V' bytes='15' count='512' iicount='512' level='3' stamp='0.438' comment='tiered' hot_count='512'/>
<task_queued compile_id='128' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='384' iicount='384' level='1' stamp='0.438' comment='tiered' hot_count='384'/>
<writer thread='15363'/>
<nmethod compile_id='126' compiler='c2' level='4' entry='0x0000000122f7e320' size='584' address='0x0000000122f7e190' relocation_offset='376' insts_offset='400' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='512' dependencies_offset='576' metadata_offset='488' method='java.lang.String coder ()B' bytes='15' count='11852' iicount='11852' stamp='0.438'/>
<make_not_entrant thread='15363' compile_id='10' compiler='c1' level='3' stamp='0.438'/>
<print_nmethod stamp='0.438'>
Compiled method (c2)     438  126       4       java.lang.String::coder (15 bytes)
 total in heap  [0x0000000122f7e190,0x0000000122f7e3d8] = 584
 relocation     [0x0000000122f7e308,0x0000000122f7e318] = 16
 main code      [0x0000000122f7e320,0x0000000122f7e360] = 64
 stub code      [0x0000000122f7e360,0x0000000122f7e378] = 24
 metadata       [0x0000000122f7e378,0x0000000122f7e380] = 8
 scopes data    [0x0000000122f7e380,0x0000000122f7e390] = 16
 scopes pcs     [0x0000000122f7e390,0x0000000122f7e3d0] = 64
 dependencies   [0x0000000122f7e3d0,0x0000000122f7e3d8] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x0000000122f7e320, 0x0000000122f7e378]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b5190} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000122f7e320: mov    0x8(%rsi),%r10d
  0x0000000122f7e324: movabs $0x800000000,%r12
  0x0000000122f7e32e: add    %r12,%r10
  0x0000000122f7e331: xor    %r12,%r12
  0x0000000122f7e334: cmp    %r10,%rax
  0x0000000122f7e337: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7e33d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7e340: sub    $0x18,%rsp
  0x0000000122f7e347: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)

  0x0000000122f7e34c: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x0000000122f7e350: add    $0x10,%rsp
  0x0000000122f7e354: pop    %rbp
  0x0000000122f7e355: mov    0x108(%r15),%r10
  0x0000000122f7e35c: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7e35f: retq   
[Exception Handler]
[Stub Code]
  0x0000000122f7e360: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7e365: callq  0x0000000122f7e36a
  0x0000000122f7e36a: subq   $0x5,(%rsp)
  0x0000000122f7e36f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7e374: hlt    
  0x0000000122f7e375: hlt    
  0x0000000122f7e376: hlt    
  0x0000000122f7e377: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='129' method='java.lang.module.ModuleDescriptor$Version toString ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.439' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='123' compiler='c1' level='3' entry='0x000000011ba5b460' size='8144' address='0x000000011ba5b190' relocation_offset='376' insts_offset='720' stub_offset='5232' scopes_data_offset='5552' scopes_pcs_offset='6480' dependencies_offset='8032' nul_chk_table_offset='8040' metadata_offset='5544' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='6075' backedge_count='714' iicount='6075' decompiles='1' unstable_if_traps='1' stamp='0.439'/>
<print_nmethod stamp='0.439'>
Compiled method (c1)     438  123       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x000000011ba5b190,0x000000011ba5d160] = 8144
 relocation     [0x000000011ba5b308,0x000000011ba5b450] = 328
 main code      [0x000000011ba5b460,0x000000011ba5c600] = 4512
 stub code      [0x000000011ba5c600,0x000000011ba5c738] = 312
 metadata       [0x000000011ba5c738,0x000000011ba5c740] = 8
 scopes data    [0x000000011ba5c740,0x000000011ba5cae0] = 928
 scopes pcs     [0x000000011ba5cae0,0x000000011ba5d0f0] = 1552
 dependencies   [0x000000011ba5d0f0,0x000000011ba5d0f8] = 8
 nul chk table  [0x000000011ba5d0f8,0x000000011ba5d160] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x000000011ba5b460, 0x000000011ba5c738]  4824 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000000011ba5b460: mov    0x8(%rsi),%r10d
  0x000000011ba5b464: movabs $0x800000000,%r12
  0x000000011ba5b46e: add    %r12,%r10
  0x000000011ba5b471: xor    %r12,%r12
  0x000000011ba5b474: cmp    %rax,%r10
  0x000000011ba5b477: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5b47d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5b480: mov    %eax,-0x14000(%rsp)
  0x000000011ba5b487: push   %rbp
  0x000000011ba5b488: sub    $0xa0,%rsp
  0x000000011ba5b48f: mov    %rsi,0x48(%rsp)
  0x000000011ba5b494: mov    %edx,0x40(%rsp)
  0x000000011ba5b498: mov    %rcx,0x50(%rsp)
  0x000000011ba5b49d: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b4a7: mov    0x104(%rbx),%eax
  0x000000011ba5b4ad: add    $0x8,%eax
  0x000000011ba5b4b0: mov    %eax,0x104(%rbx)
  0x000000011ba5b4b6: and    $0x1ff8,%eax
  0x000000011ba5b4bc: cmp    $0x0,%eax
  0x000000011ba5b4bf: je     0x000000011ba5c461  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 623)

  0x000000011ba5b4c5: mov    0x24(%rsi),%ebx
  0x000000011ba5b4c8: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 623)

  0x000000011ba5b4cc: cmp    $0x0,%rbx
  0x000000011ba5b4d0: movabs $0x13289f818,%rax  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b4da: movabs $0x140,%r11
  0x000000011ba5b4e4: je     0x000000011ba5b4f4
  0x000000011ba5b4ea: movabs $0x150,%r11
  0x000000011ba5b4f4: mov    (%rax,%r11,1),%r13
  0x000000011ba5b4f8: lea    0x1(%r13),%r13
  0x000000011ba5b4fc: mov    %r13,(%rax,%r11,1)
  0x000000011ba5b500: je     0x000000011ba5b555  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 623)

  0x000000011ba5b506: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ; implicit exception: dispatches to 0x000000011ba5c482
  0x000000011ba5b509: cmp    $0x0,%eax
  0x000000011ba5b50c: movabs $0x13289f818,%r11  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b516: movabs $0x170,%r13
  0x000000011ba5b520: je     0x000000011ba5b530
  0x000000011ba5b526: movabs $0x160,%r13
  0x000000011ba5b530: mov    (%r11,%r13,1),%r14
  0x000000011ba5b534: lea    0x1(%r14),%r14
  0x000000011ba5b538: mov    %r14,(%r11,%r13,1)
  0x000000011ba5b53c: je     0x000000011ba5b555  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)

  0x000000011ba5b542: mov    %edi,0x60(%rsp)
  0x000000011ba5b546: mov    %r9d,0x44(%rsp)
  0x000000011ba5b54b: mov    %r8,0x58(%rsp)
  0x000000011ba5b550: jmpq   0x000000011ba5b590  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x000000011ba5b555: mov    %edi,0x60(%rsp)
  0x000000011ba5b559: mov    %r9d,0x44(%rsp)
  0x000000011ba5b55e: mov    %r8,0x58(%rsp)
  0x000000011ba5b563: mov    %rsi,%rbx
  0x000000011ba5b566: movabs $0x13289f818,%rax  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b570: addq   $0x1,0x180(%rax)
  0x000000011ba5b578: mov    %rsi,%rbx
  0x000000011ba5b57b: mov    %rbx,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x000000011ba5b57e: nop
  0x000000011ba5b57f: callq  0x000000011ba54c80  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)
                                                ;   {optimized virtual_call}
  0x000000011ba5b584: mov    %rax,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x000000011ba5b587: mov    0xc(%rdx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ; implicit exception: dispatches to 0x000000011ba5c487
  0x000000011ba5b58a: mov    %rcx,%rax
  0x000000011ba5b58d: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x000000011ba5b590: dec    %eax
  0x000000011ba5b592: and    0x40(%rsp),%eax
  0x000000011ba5b596: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011ba5c48c
  0x000000011ba5b599: jae    0x000000011ba5c496
  0x000000011ba5b59f: movslq %eax,%rdx
  0x000000011ba5b5a2: mov    0x10(%rbx,%rdx,4),%edi
  0x000000011ba5b5a6: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x000000011ba5b5aa: cmp    $0x0,%rdi
  0x000000011ba5b5ae: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b5b8: movabs $0x1b8,%rcx
  0x000000011ba5b5c2: jne    0x000000011ba5b5d2
  0x000000011ba5b5c8: movabs $0x1c8,%rcx
  0x000000011ba5b5d2: mov    (%rdx,%rcx,1),%r8
  0x000000011ba5b5d6: lea    0x1(%r8),%r8
  0x000000011ba5b5da: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba5b5de: jne    0x000000011ba5b83b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 625)

  0x000000011ba5b5e4: mov    %eax,0x64(%rsp)
  0x000000011ba5b5e8: mov    %rbx,0x68(%rsp)
  0x000000011ba5b5ed: mov    0x48(%rsp),%rsi
  0x000000011ba5b5f2: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b5fc: mov    0x8(%rsi),%esi
  0x000000011ba5b5ff: movabs $0x800000000,%r12
  0x000000011ba5b609: add    %r12,%rsi
  0x000000011ba5b60c: xor    %r12,%r12
  0x000000011ba5b60f: cmp    0x1e8(%rdx),%rsi
  0x000000011ba5b616: jne    0x000000011ba5b625
  0x000000011ba5b618: addq   $0x1,0x1f0(%rdx)
  0x000000011ba5b620: jmpq   0x000000011ba5b68b
  0x000000011ba5b625: cmp    0x1f8(%rdx),%rsi
  0x000000011ba5b62c: jne    0x000000011ba5b63b
  0x000000011ba5b62e: addq   $0x1,0x200(%rdx)
  0x000000011ba5b636: jmpq   0x000000011ba5b68b
  0x000000011ba5b63b: cmpq   $0x0,0x1e8(%rdx)
  0x000000011ba5b646: jne    0x000000011ba5b65f
  0x000000011ba5b648: mov    %rsi,0x1e8(%rdx)
  0x000000011ba5b64f: movq   $0x1,0x1f0(%rdx)
  0x000000011ba5b65a: jmpq   0x000000011ba5b68b
  0x000000011ba5b65f: cmpq   $0x0,0x1f8(%rdx)
  0x000000011ba5b66a: jne    0x000000011ba5b683
  0x000000011ba5b66c: mov    %rsi,0x1f8(%rdx)
  0x000000011ba5b673: movq   $0x1,0x200(%rdx)
  0x000000011ba5b67e: jmpq   0x000000011ba5b68b
  0x000000011ba5b683: addq   $0x1,0x1d8(%rdx)
  0x000000011ba5b68b: mov    0x40(%rsp),%edx
  0x000000011ba5b68f: mov    0x50(%rsp),%rcx
  0x000000011ba5b694: mov    0x58(%rsp),%r8
  0x000000011ba5b699: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011ba5b6a3: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x000000011ba5b6a8: nopl   0x0(%rax,%rax,1)
  0x000000011ba5b6ad: movabs $0x800019590,%rax
  0x000000011ba5b6b7: callq  0x000000011ba52fe0  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)
                                                ;   {virtual_call}
  0x000000011ba5b6bc: mov    0x68(%rsp),%rbx
  0x000000011ba5b6c1: mov    0x64(%rsp),%edx
  0x000000011ba5b6c5: cmp    0xc(%rbx),%edx
  0x000000011ba5b6c8: jae    0x000000011ba5c4a4
  0x000000011ba5b6ce: cmp    $0x0,%rax
  0x000000011ba5b6d2: jne    0x000000011ba5b6ea
  0x000000011ba5b6d4: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b6de: orb    $0x1,0x209(%rdi)
  0x000000011ba5b6e5: jmpq   0x000000011ba5b7f2
  0x000000011ba5b6ea: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011ba5c4b2
  0x000000011ba5b6ed: movabs $0x800000000,%r12
  0x000000011ba5b6f7: add    %r12,%rsi
  0x000000011ba5b6fa: xor    %r12,%r12
  0x000000011ba5b6fd: mov    0x8(%rax),%edi
  0x000000011ba5b700: movabs $0x800000000,%r12
  0x000000011ba5b70a: add    %r12,%rdi
  0x000000011ba5b70d: xor    %r12,%r12
  0x000000011ba5b710: mov    0xe8(%rsi),%rsi
  0x000000011ba5b717: cmp    %rsi,%rdi
  0x000000011ba5b71a: je     0x000000011ba5b748
  0x000000011ba5b720: mov    0x10(%rsi),%ecx
  0x000000011ba5b723: cmp    (%rdi,%rcx,1),%rsi
  0x000000011ba5b727: je     0x000000011ba5b748
  0x000000011ba5b72d: cmp    $0x20,%ecx
  0x000000011ba5b730: jne    0x000000011ba5b7db
  0x000000011ba5b736: push   %rdi
  0x000000011ba5b737: push   %rsi
  0x000000011ba5b738: callq  0x000000011b598480  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011ba5b73d: pop    %rdi
  0x000000011ba5b73e: pop    %rsi
  0x000000011ba5b73f: cmp    $0x0,%esi
  0x000000011ba5b742: je     0x000000011ba5b7db
  0x000000011ba5b748: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b752: mov    0x8(%rax),%esi
  0x000000011ba5b755: movabs $0x800000000,%r12
  0x000000011ba5b75f: add    %r12,%rsi
  0x000000011ba5b762: xor    %r12,%r12
  0x000000011ba5b765: cmp    0x220(%rdi),%rsi
  0x000000011ba5b76c: jne    0x000000011ba5b77b
  0x000000011ba5b76e: addq   $0x1,0x228(%rdi)
  0x000000011ba5b776: jmpq   0x000000011ba5b7f2
  0x000000011ba5b77b: cmp    0x230(%rdi),%rsi
  0x000000011ba5b782: jne    0x000000011ba5b791
  0x000000011ba5b784: addq   $0x1,0x238(%rdi)
  0x000000011ba5b78c: jmpq   0x000000011ba5b7f2
  0x000000011ba5b791: cmpq   $0x0,0x220(%rdi)
  0x000000011ba5b79c: jne    0x000000011ba5b7b5
  0x000000011ba5b79e: mov    %rsi,0x220(%rdi)
  0x000000011ba5b7a5: movq   $0x1,0x228(%rdi)
  0x000000011ba5b7b0: jmpq   0x000000011ba5b7f2
  0x000000011ba5b7b5: cmpq   $0x0,0x230(%rdi)
  0x000000011ba5b7c0: jne    0x000000011ba5b7d9
  0x000000011ba5b7c2: mov    %rsi,0x230(%rdi)
  0x000000011ba5b7c9: movq   $0x1,0x238(%rdi)
  0x000000011ba5b7d4: jmpq   0x000000011ba5b7f2
  0x000000011ba5b7d9: jmp    0x000000011ba5b7f2
  0x000000011ba5b7db: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b7e5: subq   $0x1,0x210(%rdi)
  0x000000011ba5b7ed: jmpq   0x000000011ba5c4b7
  0x000000011ba5b7f2: movslq %edx,%rdx
  0x000000011ba5b7f5: lea    0x10(%rbx,%rdx,4),%rdx
  0x000000011ba5b7fa: movsbl 0x30(%r15),%esi
  0x000000011ba5b7ff: cmp    $0x0,%esi
  0x000000011ba5b802: jne    0x000000011ba5c4c0
  0x000000011ba5b808: mov    %rax,%r10
  0x000000011ba5b80b: shr    $0x3,%r10
  0x000000011ba5b80f: mov    %r10d,(%rdx)
  0x000000011ba5b812: mov    %rdx,%rsi
  0x000000011ba5b815: xor    %rax,%rsi
  0x000000011ba5b818: shr    $0x14,%rsi
  0x000000011ba5b81c: cmp    $0x0,%rsi
  0x000000011ba5b820: jne    0x000000011ba5c4de  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x000000011ba5b826: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b830: incl   0x248(%rdx)
  0x000000011ba5b836: jmpq   0x000000011ba5c186  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 626)

  0x000000011ba5b83b: mov    0xc(%rdi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ; implicit exception: dispatches to 0x000000011ba5c4f6
  0x000000011ba5b83e: cmp    0x40(%rsp),%edx
  0x000000011ba5b842: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b84c: movabs $0x270,%rsi
  0x000000011ba5b856: je     0x000000011ba5b866
  0x000000011ba5b85c: movabs $0x260,%rsi
  0x000000011ba5b866: mov    (%rdx,%rsi,1),%rax
  0x000000011ba5b86a: lea    0x1(%rax),%rax
  0x000000011ba5b86e: mov    %rax,(%rdx,%rsi,1)
  0x000000011ba5b872: je     0x000000011ba5b882  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 629)

  0x000000011ba5b878: mov    %rbx,0x68(%rsp)
  0x000000011ba5b87d: jmpq   0x000000011ba5ba0a  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x000000011ba5b882: mov    0x50(%rsp),%rcx
  0x000000011ba5b887: mov    0x10(%rdi),%edx
  0x000000011ba5b88a: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 629)

  0x000000011ba5b88e: cmp    %rcx,%rdx
  0x000000011ba5b891: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b89b: movabs $0x280,%rax
  0x000000011ba5b8a5: je     0x000000011ba5b8b5
  0x000000011ba5b8ab: movabs $0x290,%rax
  0x000000011ba5b8b5: mov    (%rsi,%rax,1),%r8
  0x000000011ba5b8b9: lea    0x1(%r8),%r8
  0x000000011ba5b8bd: mov    %r8,(%rsi,%rax,1)
  0x000000011ba5b8c1: je     0x000000011ba5c139  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 629)

  0x000000011ba5b8c7: cmp    $0x0,%rcx
  0x000000011ba5b8cb: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b8d5: movabs $0x2b0,%rax
  0x000000011ba5b8df: jne    0x000000011ba5b8ef
  0x000000011ba5b8e5: movabs $0x2a0,%rax
  0x000000011ba5b8ef: mov    (%rsi,%rax,1),%r8
  0x000000011ba5b8f3: lea    0x1(%r8),%r8
  0x000000011ba5b8f7: mov    %r8,(%rsi,%rax,1)
  0x000000011ba5b8fb: jne    0x000000011ba5b90b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 629)

  0x000000011ba5b901: mov    %rbx,0x68(%rsp)
  0x000000011ba5b906: jmpq   0x000000011ba5ba0a  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x000000011ba5b90b: mov    %rdi,0x70(%rsp)
  0x000000011ba5b910: mov    %rbx,0x68(%rsp)
  0x000000011ba5b915: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011ba5c4fb
  0x000000011ba5b918: mov    %rcx,%rsi
  0x000000011ba5b91b: movabs $0x13289f818,%rax  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b925: mov    0x8(%rsi),%esi
  0x000000011ba5b928: movabs $0x800000000,%r12
  0x000000011ba5b932: add    %r12,%rsi
  0x000000011ba5b935: xor    %r12,%r12
  0x000000011ba5b938: cmp    0x2d0(%rax),%rsi
  0x000000011ba5b93f: jne    0x000000011ba5b94e
  0x000000011ba5b941: addq   $0x1,0x2d8(%rax)
  0x000000011ba5b949: jmpq   0x000000011ba5b9b4
  0x000000011ba5b94e: cmp    0x2e0(%rax),%rsi
  0x000000011ba5b955: jne    0x000000011ba5b964
  0x000000011ba5b957: addq   $0x1,0x2e8(%rax)
  0x000000011ba5b95f: jmpq   0x000000011ba5b9b4
  0x000000011ba5b964: cmpq   $0x0,0x2d0(%rax)
  0x000000011ba5b96f: jne    0x000000011ba5b988
  0x000000011ba5b971: mov    %rsi,0x2d0(%rax)
  0x000000011ba5b978: movq   $0x1,0x2d8(%rax)
  0x000000011ba5b983: jmpq   0x000000011ba5b9b4
  0x000000011ba5b988: cmpq   $0x0,0x2e0(%rax)
  0x000000011ba5b993: jne    0x000000011ba5b9ac
  0x000000011ba5b995: mov    %rsi,0x2e0(%rax)
  0x000000011ba5b99c: movq   $0x1,0x2e8(%rax)
  0x000000011ba5b9a7: jmpq   0x000000011ba5b9b4
  0x000000011ba5b9ac: addq   $0x1,0x2c0(%rax)
  0x000000011ba5b9b4: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)

  0x000000011ba5b9b7: nopw   0x0(%rax,%rax,1)
  0x000000011ba5b9bd: movabs $0xffffffffffffffff,%rax
  0x000000011ba5b9c7: callq  0x000000011b4d2180  ; ImmutableOopMap{[72]=Oop [88]=Oop [112]=Oop [80]=Oop [104]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {virtual_call}
  0x000000011ba5b9cc: cmp    $0x0,%eax
  0x000000011ba5b9cf: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5b9d9: movabs $0x308,%rcx
  0x000000011ba5b9e3: jne    0x000000011ba5b9f3
  0x000000011ba5b9e9: movabs $0x2f8,%rcx
  0x000000011ba5b9f3: mov    (%rdx,%rcx,1),%r8
  0x000000011ba5b9f7: lea    0x1(%r8),%r8
  0x000000011ba5b9fb: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba5b9ff: mov    0x70(%rsp),%rdi
  0x000000011ba5ba04: jne    0x000000011ba5c139  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 630)

  0x000000011ba5ba0a: cmp    $0x0,%rdi
  0x000000011ba5ba0e: jne    0x000000011ba5ba27
  0x000000011ba5ba10: movabs $0x13289f818,%r9   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5ba1a: orb    $0x1,0x329(%r9)
  0x000000011ba5ba22: jmpq   0x000000011ba5bb00
  0x000000011ba5ba27: movabs $0x800032798,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba5ba31: mov    0x8(%rdi),%ecx
  0x000000011ba5ba34: movabs $0x800000000,%r12
  0x000000011ba5ba3e: add    %r12,%rcx
  0x000000011ba5ba41: xor    %r12,%r12
  0x000000011ba5ba44: cmp    %rcx,%r8
  0x000000011ba5ba47: jne    0x000000011ba5bae4
  0x000000011ba5ba4d: movabs $0x13289f818,%r9   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5ba57: mov    0x8(%rdi),%r8d
  0x000000011ba5ba5b: movabs $0x800000000,%r12
  0x000000011ba5ba65: add    %r12,%r8
  0x000000011ba5ba68: xor    %r12,%r12
  0x000000011ba5ba6b: cmp    0x340(%r9),%r8
  0x000000011ba5ba72: jne    0x000000011ba5ba81
  0x000000011ba5ba74: addq   $0x1,0x348(%r9)
  0x000000011ba5ba7c: jmpq   0x000000011ba5bb05
  0x000000011ba5ba81: cmp    0x350(%r9),%r8
  0x000000011ba5ba88: jne    0x000000011ba5ba97
  0x000000011ba5ba8a: addq   $0x1,0x358(%r9)
  0x000000011ba5ba92: jmpq   0x000000011ba5bb05
  0x000000011ba5ba97: cmpq   $0x0,0x340(%r9)
  0x000000011ba5baa2: jne    0x000000011ba5babb
  0x000000011ba5baa4: mov    %r8,0x340(%r9)
  0x000000011ba5baab: movq   $0x1,0x348(%r9)
  0x000000011ba5bab6: jmpq   0x000000011ba5bb05
  0x000000011ba5babb: cmpq   $0x0,0x350(%r9)
  0x000000011ba5bac6: jne    0x000000011ba5badf
  0x000000011ba5bac8: mov    %r8,0x350(%r9)
  0x000000011ba5bacf: movq   $0x1,0x358(%r9)
  0x000000011ba5bada: jmpq   0x000000011ba5bb05
  0x000000011ba5badf: jmpq   0x000000011ba5bb05
  0x000000011ba5bae4: movabs $0x13289f818,%r9   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5baee: subq   $0x1,0x330(%r9)
  0x000000011ba5baf6: jmpq   0x000000011ba5bb00
  0x000000011ba5bafb: jmpq   0x000000011ba5bb05
  0x000000011ba5bb00: xor    %rdx,%rdx
  0x000000011ba5bb03: jmp    0x000000011ba5bb0f
  0x000000011ba5bb05: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 632)

  0x000000011ba5bb0f: cmp    $0x0,%edx
  0x000000011ba5bb12: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bb1c: movabs $0x368,%rcx
  0x000000011ba5bb26: je     0x000000011ba5bb36
  0x000000011ba5bb2c: movabs $0x378,%rcx
  0x000000011ba5bb36: mov    (%rdx,%rcx,1),%r8
  0x000000011ba5bb3a: lea    0x1(%r8),%r8
  0x000000011ba5bb3e: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba5bb42: je     0x000000011ba5bd19  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 632)

  0x000000011ba5bb48: cmp    $0x0,%rdi
  0x000000011ba5bb4c: jne    0x000000011ba5bb65
  0x000000011ba5bb4e: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bb58: orb    $0x1,0x381(%r8)
  0x000000011ba5bb60: jmpq   0x000000011ba5bc3d
  0x000000011ba5bb65: movabs $0x800032798,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011ba5bb6f: mov    0x8(%rdi),%edx
  0x000000011ba5bb72: movabs $0x800000000,%r12
  0x000000011ba5bb7c: add    %r12,%rdx
  0x000000011ba5bb7f: xor    %r12,%r12
  0x000000011ba5bb82: cmp    %rdx,%rcx
  0x000000011ba5bb85: jne    0x000000011ba5bc21
  0x000000011ba5bb8b: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bb95: mov    0x8(%rdi),%ecx
  0x000000011ba5bb98: movabs $0x800000000,%r12
  0x000000011ba5bba2: add    %r12,%rcx
  0x000000011ba5bba5: xor    %r12,%r12
  0x000000011ba5bba8: cmp    0x398(%r8),%rcx
  0x000000011ba5bbaf: jne    0x000000011ba5bbbe
  0x000000011ba5bbb1: addq   $0x1,0x3a0(%r8)
  0x000000011ba5bbb9: jmpq   0x000000011ba5bc3d
  0x000000011ba5bbbe: cmp    0x3a8(%r8),%rcx
  0x000000011ba5bbc5: jne    0x000000011ba5bbd4
  0x000000011ba5bbc7: addq   $0x1,0x3b0(%r8)
  0x000000011ba5bbcf: jmpq   0x000000011ba5bc3d
  0x000000011ba5bbd4: cmpq   $0x0,0x398(%r8)
  0x000000011ba5bbdf: jne    0x000000011ba5bbf8
  0x000000011ba5bbe1: mov    %rcx,0x398(%r8)
  0x000000011ba5bbe8: movq   $0x1,0x3a0(%r8)
  0x000000011ba5bbf3: jmpq   0x000000011ba5bc3d
  0x000000011ba5bbf8: cmpq   $0x0,0x3a8(%r8)
  0x000000011ba5bc03: jne    0x000000011ba5bc1c
  0x000000011ba5bc05: mov    %rcx,0x3a8(%r8)
  0x000000011ba5bc0c: movq   $0x1,0x3b0(%r8)
  0x000000011ba5bc17: jmpq   0x000000011ba5bc3d
  0x000000011ba5bc1c: jmpq   0x000000011ba5bc3d
  0x000000011ba5bc21: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bc2b: subq   $0x1,0x388(%r8)
  0x000000011ba5bc33: jmpq   0x000000011ba5c500
  0x000000011ba5bc38: jmpq   0x000000011ba5bc3d
  0x000000011ba5bc3d: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)

  0x000000011ba5bc40: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011ba5c509
  0x000000011ba5bc43: mov    %rsi,%rdx
  0x000000011ba5bc46: movabs $0x13289f818,%rcx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bc50: mov    0x8(%rdx),%edx
  0x000000011ba5bc53: movabs $0x800000000,%r12
  0x000000011ba5bc5d: add    %r12,%rdx
  0x000000011ba5bc60: xor    %r12,%r12
  0x000000011ba5bc63: cmp    0x3d0(%rcx),%rdx
  0x000000011ba5bc6a: jne    0x000000011ba5bc79
  0x000000011ba5bc6c: addq   $0x1,0x3d8(%rcx)
  0x000000011ba5bc74: jmpq   0x000000011ba5bcdf
  0x000000011ba5bc79: cmp    0x3e0(%rcx),%rdx
  0x000000011ba5bc80: jne    0x000000011ba5bc8f
  0x000000011ba5bc82: addq   $0x1,0x3e8(%rcx)
  0x000000011ba5bc8a: jmpq   0x000000011ba5bcdf
  0x000000011ba5bc8f: cmpq   $0x0,0x3d0(%rcx)
  0x000000011ba5bc9a: jne    0x000000011ba5bcb3
  0x000000011ba5bc9c: mov    %rdx,0x3d0(%rcx)
  0x000000011ba5bca3: movq   $0x1,0x3d8(%rcx)
  0x000000011ba5bcae: jmpq   0x000000011ba5bcdf
  0x000000011ba5bcb3: cmpq   $0x0,0x3e0(%rcx)
  0x000000011ba5bcbe: jne    0x000000011ba5bcd7
  0x000000011ba5bcc0: mov    %rdx,0x3e0(%rcx)
  0x000000011ba5bcc7: movq   $0x1,0x3e8(%rcx)
  0x000000011ba5bcd2: jmpq   0x000000011ba5bcdf
  0x000000011ba5bcd7: addq   $0x1,0x3c0(%rcx)
  0x000000011ba5bcdf: mov    0x48(%rsp),%rdx
  0x000000011ba5bce4: mov    0x68(%rsp),%rcx
  0x000000011ba5bce9: mov    0x40(%rsp),%r8d
  0x000000011ba5bcee: mov    0x50(%rsp),%r9
  0x000000011ba5bcf3: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)

  0x000000011ba5bcf8: nopl   0x0(%rax)
  0x000000011ba5bcff: callq  0x000000011b4d1f00  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {optimized virtual_call}
  0x000000011ba5bd04: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bd0e: incl   0x3f8(%rdx)
  0x000000011ba5bd14: jmpq   0x000000011ba5c14c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 633)

  0x000000011ba5bd19: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 636)

  0x000000011ba5bd1e: xchg   %ax,%ax
  0x000000011ba5bd20: mov    %ebx,0x78(%rsp)
  0x000000011ba5bd24: mov    0x50(%rsp),%rcx
  0x000000011ba5bd29: mov    0x40(%rsp),%edx
  0x000000011ba5bd2d: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x000000011ba5c50e
  0x000000011ba5bd30: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x000000011ba5bd34: mov    %rax,0x80(%rsp)
  0x000000011ba5bd3c: cmp    $0x0,%rax
  0x000000011ba5bd40: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bd4a: movabs $0x420,%r8
  0x000000011ba5bd54: je     0x000000011ba5bd64
  0x000000011ba5bd5a: movabs $0x410,%r8
  0x000000011ba5bd64: mov    (%rsi,%r8,1),%r9
  0x000000011ba5bd68: lea    0x1(%r9),%r9
  0x000000011ba5bd6c: mov    %r9,(%rsi,%r8,1)
  0x000000011ba5bd70: je     0x000000011ba5bf9c  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 636)

  0x000000011ba5bd76: mov    0xc(%rax),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ; implicit exception: dispatches to 0x000000011ba5c513
  0x000000011ba5bd79: cmp    %edx,%esi
  0x000000011ba5bd7b: movabs $0x13289f818,%rsi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bd85: movabs $0x4d8,%rdi
  0x000000011ba5bd8f: jne    0x000000011ba5bd9f
  0x000000011ba5bd95: movabs $0x4e8,%rdi
  0x000000011ba5bd9f: mov    (%rsi,%rdi,1),%r8
  0x000000011ba5bda3: lea    0x1(%r8),%r8
  0x000000011ba5bda7: mov    %r8,(%rsi,%rdi,1)
  0x000000011ba5bdab: jne    0x000000011ba5bf1d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 642)

  0x000000011ba5bdb1: mov    0x10(%rax),%esi
  0x000000011ba5bdb4: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 642)

  0x000000011ba5bdb8: cmp    %rcx,%rsi
  0x000000011ba5bdbb: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bdc5: movabs $0x4f8,%r8
  0x000000011ba5bdcf: je     0x000000011ba5bddf
  0x000000011ba5bdd5: movabs $0x508,%r8
  0x000000011ba5bddf: mov    (%rdi,%r8,1),%r9
  0x000000011ba5bde3: lea    0x1(%r9),%r9
  0x000000011ba5bde7: mov    %r9,(%rdi,%r8,1)
  0x000000011ba5bdeb: je     0x000000011ba5bf72  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 642)

  0x000000011ba5bdf1: cmp    $0x0,%rcx
  0x000000011ba5bdf5: movabs $0x13289f818,%rdi  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bdff: movabs $0x518,%r8
  0x000000011ba5be09: je     0x000000011ba5be19
  0x000000011ba5be0f: movabs $0x528,%r8
  0x000000011ba5be19: mov    (%rdi,%r8,1),%r9
  0x000000011ba5be1d: lea    0x1(%r9),%r9
  0x000000011ba5be21: mov    %r9,(%rdi,%r8,1)
  0x000000011ba5be25: je     0x000000011ba5bf1d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 642)

  0x000000011ba5be2b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011ba5c518
  0x000000011ba5be2e: mov    %rcx,%rdi
  0x000000011ba5be31: movabs $0x13289f818,%r8   ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5be3b: mov    0x8(%rdi),%edi
  0x000000011ba5be3e: movabs $0x800000000,%r12
  0x000000011ba5be48: add    %r12,%rdi
  0x000000011ba5be4b: xor    %r12,%r12
  0x000000011ba5be4e: cmp    0x548(%r8),%rdi
  0x000000011ba5be55: jne    0x000000011ba5be64
  0x000000011ba5be57: addq   $0x1,0x550(%r8)
  0x000000011ba5be5f: jmpq   0x000000011ba5beca
  0x000000011ba5be64: cmp    0x558(%r8),%rdi
  0x000000011ba5be6b: jne    0x000000011ba5be7a
  0x000000011ba5be6d: addq   $0x1,0x560(%r8)
  0x000000011ba5be75: jmpq   0x000000011ba5beca
  0x000000011ba5be7a: cmpq   $0x0,0x548(%r8)
  0x000000011ba5be85: jne    0x000000011ba5be9e
  0x000000011ba5be87: mov    %rdi,0x548(%r8)
  0x000000011ba5be8e: movq   $0x1,0x550(%r8)
  0x000000011ba5be99: jmpq   0x000000011ba5beca
  0x000000011ba5be9e: cmpq   $0x0,0x558(%r8)
  0x000000011ba5bea9: jne    0x000000011ba5bec2
  0x000000011ba5beab: mov    %rdi,0x558(%r8)
  0x000000011ba5beb2: movq   $0x1,0x560(%r8)
  0x000000011ba5bebd: jmpq   0x000000011ba5beca
  0x000000011ba5bec2: addq   $0x1,0x538(%r8)
  0x000000011ba5beca: mov    %rsi,%rdx
  0x000000011ba5becd: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)

  0x000000011ba5bed0: nopl   0x0(%rax,%rax,1)
  0x000000011ba5bed5: movabs $0xffffffffffffffff,%rax
  0x000000011ba5bedf: callq  0x000000011b4d2180  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {virtual_call}
  0x000000011ba5bee4: cmp    $0x0,%eax
  0x000000011ba5bee7: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bef1: movabs $0x580,%rcx
  0x000000011ba5befb: jne    0x000000011ba5bf0b
  0x000000011ba5bf01: movabs $0x570,%rcx
  0x000000011ba5bf0b: mov    (%rdx,%rcx,1),%r8
  0x000000011ba5bf0f: lea    0x1(%r8),%r8
  0x000000011ba5bf13: mov    %r8,(%rdx,%rcx,1)
  0x000000011ba5bf17: jne    0x000000011ba5bf7f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 643)

  0x000000011ba5bf1d: mov    0x78(%rsp),%ebx
  0x000000011ba5bf21: inc    %ebx
  0x000000011ba5bf23: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bf2d: mov    0x108(%rdx),%ecx
  0x000000011ba5bf33: add    $0x8,%ecx
  0x000000011ba5bf36: mov    %ecx,0x108(%rdx)
  0x000000011ba5bf3c: and    $0xfff8,%ecx
  0x000000011ba5bf42: cmp    $0x0,%ecx
  0x000000011ba5bf45: je     0x000000011ba5c51d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011ba5bf4b: mov    0x108(%r15),%r10   ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011ba5bf52: test   %eax,(%r10)        ;   {poll}
  0x000000011ba5bf55: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bf5f: incl   0x5a8(%rdx)
  0x000000011ba5bf65: mov    0x80(%rsp),%rdi
  0x000000011ba5bf6d: jmpq   0x000000011ba5bd20  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011ba5bf72: mov    0x80(%rsp),%rax
  0x000000011ba5bf7a: jmpq   0x000000011ba5c14c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x000000011ba5bf7f: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bf89: incl   0x590(%rdx)
  0x000000011ba5bf8f: mov    0x80(%rsp),%rax
  0x000000011ba5bf97: jmpq   0x000000011ba5c14c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 644)

  0x000000011ba5bf9c: mov    %rdi,0x88(%rsp)
  0x000000011ba5bfa4: mov    0x48(%rsp),%rsi
  0x000000011ba5bfa9: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5bfb3: mov    0x8(%rsi),%esi
  0x000000011ba5bfb6: movabs $0x800000000,%r12
  0x000000011ba5bfc0: add    %r12,%rsi
  0x000000011ba5bfc3: xor    %r12,%r12
  0x000000011ba5bfc6: cmp    0x440(%rdx),%rsi
  0x000000011ba5bfcd: jne    0x000000011ba5bfdc
  0x000000011ba5bfcf: addq   $0x1,0x448(%rdx)
  0x000000011ba5bfd7: jmpq   0x000000011ba5c042
  0x000000011ba5bfdc: cmp    0x450(%rdx),%rsi
  0x000000011ba5bfe3: jne    0x000000011ba5bff2
  0x000000011ba5bfe5: addq   $0x1,0x458(%rdx)
  0x000000011ba5bfed: jmpq   0x000000011ba5c042
  0x000000011ba5bff2: cmpq   $0x0,0x440(%rdx)
  0x000000011ba5bffd: jne    0x000000011ba5c016
  0x000000011ba5bfff: mov    %rsi,0x440(%rdx)
  0x000000011ba5c006: movq   $0x1,0x448(%rdx)
  0x000000011ba5c011: jmpq   0x000000011ba5c042
  0x000000011ba5c016: cmpq   $0x0,0x450(%rdx)
  0x000000011ba5c021: jne    0x000000011ba5c03a
  0x000000011ba5c023: mov    %rsi,0x450(%rdx)
  0x000000011ba5c02a: movq   $0x1,0x458(%rdx)
  0x000000011ba5c035: jmpq   0x000000011ba5c042
  0x000000011ba5c03a: addq   $0x1,0x430(%rdx)
  0x000000011ba5c042: mov    0x40(%rsp),%edx
  0x000000011ba5c046: mov    0x58(%rsp),%r8
  0x000000011ba5c04b: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011ba5c055: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x000000011ba5c05a: data16 xchg %ax,%ax
  0x000000011ba5c05d: movabs $0x800019590,%rax
  0x000000011ba5c067: callq  0x000000011ba52fe0  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)
                                                ;   {virtual_call}
  0x000000011ba5c06c: movsbl 0x30(%r15),%edx
  0x000000011ba5c071: cmp    $0x0,%edx
  0x000000011ba5c074: mov    0x88(%rsp),%rdi
  0x000000011ba5c07c: jne    0x000000011ba5c53e
  0x000000011ba5c082: mov    %rax,%r10
  0x000000011ba5c085: shr    $0x3,%r10
  0x000000011ba5c089: mov    %r10d,0x18(%rdi)
  0x000000011ba5c08d: mov    %rdi,%rdx
  0x000000011ba5c090: xor    %rax,%rdx
  0x000000011ba5c093: shr    $0x14,%rdx
  0x000000011ba5c097: cmp    $0x0,%rdx
  0x000000011ba5c09b: jne    0x000000011ba5c55d  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x000000011ba5c0a1: mov    0x78(%rsp),%ebx
  0x000000011ba5c0a5: cmp    $0x7,%ebx
  0x000000011ba5c0a8: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c0b2: movabs $0x478,%rcx
  0x000000011ba5c0bc: jge    0x000000011ba5c0cc
  0x000000011ba5c0c2: movabs $0x468,%rcx
  0x000000011ba5c0cc: mov    (%rdx,%rcx,1),%rsi
  0x000000011ba5c0d0: lea    0x1(%rsi),%rsi
  0x000000011ba5c0d4: mov    %rsi,(%rdx,%rcx,1)
  0x000000011ba5c0d8: jge    0x000000011ba5c0eb  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 638)

  0x000000011ba5c0de: mov    0x80(%rsp),%rax
  0x000000011ba5c0e6: jmpq   0x000000011ba5c14c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x000000011ba5c0eb: mov    0x68(%rsp),%rbx
  0x000000011ba5c0f0: mov    0x40(%rsp),%ecx
  0x000000011ba5c0f4: mov    0x48(%rsp),%rsi
  0x000000011ba5c0f9: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c103: addq   $0x1,0x488(%rdx)
  0x000000011ba5c10b: mov    %rbx,%rdx
  0x000000011ba5c10e: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)

  0x000000011ba5c113: nopl   0x0(%rax)
  0x000000011ba5c117: callq  0x000000011b4d1f00  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)
                                                ;   {optimized virtual_call}
  0x000000011ba5c11c: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c126: incl   0x4c0(%rdx)
  0x000000011ba5c12c: mov    0x80(%rsp),%rax
  0x000000011ba5c134: jmpq   0x000000011ba5c14c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 639)

  0x000000011ba5c139: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c143: incl   0x318(%rdx)
  0x000000011ba5c149: mov    %rdi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 631)

  0x000000011ba5c14c: cmp    $0x0,%rax
  0x000000011ba5c150: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c15a: movabs $0x5d0,%rsi
  0x000000011ba5c164: jne    0x000000011ba5c174
  0x000000011ba5c16a: movabs $0x5c0,%rsi
  0x000000011ba5c174: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba5c178: lea    0x1(%rdi),%rdi
  0x000000011ba5c17c: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba5c180: jne    0x000000011ba5c1df  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 648)

  0x000000011ba5c186: mov    0x48(%rsp),%rsi
  0x000000011ba5c18b: mov    0x18(%rsi),%edx    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 656)

  0x000000011ba5c18e: inc    %edx
  0x000000011ba5c190: mov    %edx,0x18(%rsi)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 656)

  0x000000011ba5c193: mov    0x14(%rsi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 657)

  0x000000011ba5c196: inc    %edx
  0x000000011ba5c198: mov    %edx,0x14(%rsi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 657)

  0x000000011ba5c19b: mov    0x1c(%rsi),%edi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 657)

  0x000000011ba5c19e: cmp    %edi,%edx
  0x000000011ba5c1a0: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c1aa: movabs $0x668,%rdi
  0x000000011ba5c1b4: jg     0x000000011ba5c1c4
  0x000000011ba5c1ba: movabs $0x658,%rdi
  0x000000011ba5c1c4: mov    (%rdx,%rdi,1),%rbx
  0x000000011ba5c1c8: lea    0x1(%rbx),%rbx
  0x000000011ba5c1cc: mov    %rbx,(%rdx,%rdi,1)
  0x000000011ba5c1d0: jg     0x000000011ba5c367  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 657)

  0x000000011ba5c1d6: mov    0x60(%rsp),%edi
  0x000000011ba5c1da: jmpq   0x000000011ba5c395  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 659)

  0x000000011ba5c1df: mov    0x44(%rsp),%r9d
  0x000000011ba5c1e4: mov    0x48(%rsp),%rsi
  0x000000011ba5c1e9: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000000011ba5c575
  0x000000011ba5c1ec: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)

  0x000000011ba5c1f0: cmp    $0x0,%r9d
  0x000000011ba5c1f4: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c1fe: movabs $0x5e0,%rbx
  0x000000011ba5c208: je     0x000000011ba5c218
  0x000000011ba5c20e: movabs $0x5f0,%rbx
  0x000000011ba5c218: mov    (%rdx,%rbx,1),%rcx
  0x000000011ba5c21c: lea    0x1(%rcx),%rcx
  0x000000011ba5c220: mov    %rcx,(%rdx,%rbx,1)
  0x000000011ba5c224: je     0x000000011ba5c264  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 650)

  0x000000011ba5c22a: cmp    $0x0,%rdi
  0x000000011ba5c22e: movabs $0x13289f818,%rdx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c238: movabs $0x600,%rbx
  0x000000011ba5c242: jne    0x000000011ba5c252
  0x000000011ba5c248: movabs $0x610,%rbx
  0x000000011ba5c252: mov    (%rdx,%rbx,1),%rcx
  0x000000011ba5c256: lea    0x1(%rcx),%rcx
  0x000000011ba5c25a: mov    %rcx,(%rdx,%rbx,1)
  0x000000011ba5c25e: jne    0x000000011ba5c296  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 650)

  0x000000011ba5c264: mov    0x58(%rsp),%r8
  0x000000011ba5c269: movsbl 0x30(%r15),%edx
  0x000000011ba5c26e: cmp    $0x0,%edx
  0x000000011ba5c271: jne    0x000000011ba5c57a
  0x000000011ba5c277: mov    %r8,%r10
  0x000000011ba5c27a: shr    $0x3,%r10
  0x000000011ba5c27e: mov    %r10d,0x14(%rax)
  0x000000011ba5c282: mov    %rax,%rdx
  0x000000011ba5c285: xor    %r8,%rdx
  0x000000011ba5c288: shr    $0x14,%rdx
  0x000000011ba5c28c: cmp    $0x0,%rdx
  0x000000011ba5c290: jne    0x000000011ba5c599  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 651)

  0x000000011ba5c296: mov    %rdi,0x90(%rsp)
  0x000000011ba5c29e: mov    %rsi,%rdx
  0x000000011ba5c2a1: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c2ab: mov    0x8(%rdx),%edx
  0x000000011ba5c2ae: movabs $0x800000000,%r12
  0x000000011ba5c2b8: add    %r12,%rdx
  0x000000011ba5c2bb: xor    %r12,%r12
  0x000000011ba5c2be: cmp    0x630(%rbx),%rdx
  0x000000011ba5c2c5: jne    0x000000011ba5c2d4
  0x000000011ba5c2c7: addq   $0x1,0x638(%rbx)
  0x000000011ba5c2cf: jmpq   0x000000011ba5c33a
  0x000000011ba5c2d4: cmp    0x640(%rbx),%rdx
  0x000000011ba5c2db: jne    0x000000011ba5c2ea
  0x000000011ba5c2dd: addq   $0x1,0x648(%rbx)
  0x000000011ba5c2e5: jmpq   0x000000011ba5c33a
  0x000000011ba5c2ea: cmpq   $0x0,0x630(%rbx)
  0x000000011ba5c2f5: jne    0x000000011ba5c30e
  0x000000011ba5c2f7: mov    %rdx,0x630(%rbx)
  0x000000011ba5c2fe: movq   $0x1,0x638(%rbx)
  0x000000011ba5c309: jmpq   0x000000011ba5c33a
  0x000000011ba5c30e: cmpq   $0x0,0x640(%rbx)
  0x000000011ba5c319: jne    0x000000011ba5c332
  0x000000011ba5c31b: mov    %rdx,0x640(%rbx)
  0x000000011ba5c322: movq   $0x1,0x648(%rbx)
  0x000000011ba5c32d: jmpq   0x000000011ba5c33a
  0x000000011ba5c332: addq   $0x1,0x620(%rbx)
  0x000000011ba5c33a: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)

  0x000000011ba5c33d: movabs $0xffffffffffffffff,%rax
  0x000000011ba5c347: callq  0x000000011b4d2180  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)
                                                ;   {virtual_call}
  0x000000011ba5c34c: mov    0x90(%rsp),%rax
  0x000000011ba5c354: add    $0xa0,%rsp
  0x000000011ba5c35b: pop    %rbp
  0x000000011ba5c35c: mov    0x108(%r15),%r10
  0x000000011ba5c363: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5c366: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 653)

  0x000000011ba5c367: mov    %rsi,%rdi
  0x000000011ba5c36a: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c374: addq   $0x1,0x678(%rbx)
  0x000000011ba5c37c: mov    %rsi,%rdi
  0x000000011ba5c37f: mov    %rdi,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)

  0x000000011ba5c382: nopl   0x0(%rax,%rax,1)
  0x000000011ba5c387: callq  0x000000011ba54c80  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)
                                                ;   {optimized virtual_call}
  0x000000011ba5c38c: mov    0x60(%rsp),%edi
  0x000000011ba5c390: mov    0x48(%rsp),%rsi
  0x000000011ba5c395: mov    %rsi,%rdx
  0x000000011ba5c398: movabs $0x13289f818,%rbx  ;   {metadata(method data for {method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c3a2: mov    0x8(%rdx),%edx
  0x000000011ba5c3a5: movabs $0x800000000,%r12
  0x000000011ba5c3af: add    %r12,%rdx
  0x000000011ba5c3b2: xor    %r12,%r12
  0x000000011ba5c3b5: cmp    0x6c0(%rbx),%rdx
  0x000000011ba5c3bc: jne    0x000000011ba5c3cb
  0x000000011ba5c3be: addq   $0x1,0x6c8(%rbx)
  0x000000011ba5c3c6: jmpq   0x000000011ba5c431
  0x000000011ba5c3cb: cmp    0x6d0(%rbx),%rdx
  0x000000011ba5c3d2: jne    0x000000011ba5c3e1
  0x000000011ba5c3d4: addq   $0x1,0x6d8(%rbx)
  0x000000011ba5c3dc: jmpq   0x000000011ba5c431
  0x000000011ba5c3e1: cmpq   $0x0,0x6c0(%rbx)
  0x000000011ba5c3ec: jne    0x000000011ba5c405
  0x000000011ba5c3ee: mov    %rdx,0x6c0(%rbx)
  0x000000011ba5c3f5: movq   $0x1,0x6c8(%rbx)
  0x000000011ba5c400: jmpq   0x000000011ba5c431
  0x000000011ba5c405: cmpq   $0x0,0x6d0(%rbx)
  0x000000011ba5c410: jne    0x000000011ba5c429
  0x000000011ba5c412: mov    %rdx,0x6d0(%rbx)
  0x000000011ba5c419: movq   $0x1,0x6d8(%rbx)
  0x000000011ba5c424: jmpq   0x000000011ba5c431
  0x000000011ba5c429: addq   $0x1,0x6b0(%rbx)
  0x000000011ba5c431: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)

  0x000000011ba5c434: nop
  0x000000011ba5c435: movabs $0x800019590,%rax
  0x000000011ba5c43f: callq  0x0000000122f7a7c0  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)
                                                ;   {virtual_call}
  0x000000011ba5c444: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011ba5c44e: add    $0xa0,%rsp
  0x000000011ba5c455: pop    %rbp
  0x000000011ba5c456: mov    0x108(%r15),%r10
  0x000000011ba5c45d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5c460: retq   
  0x000000011ba5c461: movabs $0x1325d2838,%r10  ;   {metadata({method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c46b: mov    %r10,0x8(%rsp)
  0x000000011ba5c470: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5c478: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5c47d: jmpq   0x000000011ba5b4c5
  0x000000011ba5c482: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c487: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c48c: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c491: callq  0x000000011b595f20  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c496: mov    %rax,(%rsp)
  0x000000011ba5c49a: mov    %rbx,0x8(%rsp)
  0x000000011ba5c49f: callq  0x000000011b595320  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba5c4a4: mov    %rdx,(%rsp)
  0x000000011ba5c4a8: mov    %rbx,0x8(%rsp)
  0x000000011ba5c4ad: callq  0x000000011b595320  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba5c4b2: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c4b7: mov    %rax,(%rsp)
  0x000000011ba5c4bb: callq  0x000000011b597d20  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011ba5c4c0: mov    (%rdx),%esi
  0x000000011ba5c4c2: shl    $0x3,%rsi
  0x000000011ba5c4c6: cmp    $0x0,%rsi
  0x000000011ba5c4ca: je     0x000000011ba5b808
  0x000000011ba5c4d0: mov    %rsi,(%rsp)
  0x000000011ba5c4d4: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5c4d9: jmpq   0x000000011ba5b808
  0x000000011ba5c4de: cmp    $0x0,%rax
  0x000000011ba5c4e2: je     0x000000011ba5b826
  0x000000011ba5c4e8: mov    %rdx,(%rsp)
  0x000000011ba5c4ec: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba5c4f1: jmpq   0x000000011ba5b826
  0x000000011ba5c4f6: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c4fb: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c500: mov    %rdi,(%rsp)
  0x000000011ba5c504: callq  0x000000011b597fa0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011ba5c509: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rsi=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c50e: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c513: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c518: callq  0x000000011b595f20  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c51d: movabs $0x1325d2838,%r10  ;   {metadata({method} {0x00000001325d2838} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5c527: mov    %r10,0x8(%rsp)
  0x000000011ba5c52c: movq   $0xdb,(%rsp)
  0x000000011ba5c534: callq  0x000000011b59a600  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5c539: jmpq   0x000000011ba5bf4b
  0x000000011ba5c53e: mov    0x18(%rdi),%edx
  0x000000011ba5c541: shl    $0x3,%rdx
  0x000000011ba5c545: cmp    $0x0,%rdx
  0x000000011ba5c549: je     0x000000011ba5c082
  0x000000011ba5c54f: mov    %rdx,(%rsp)
  0x000000011ba5c553: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5c558: jmpq   0x000000011ba5c082
  0x000000011ba5c55d: cmp    $0x0,%rax
  0x000000011ba5c561: je     0x000000011ba5c0a1
  0x000000011ba5c567: mov    %rdi,(%rsp)
  0x000000011ba5c56b: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba5c570: jmpq   0x000000011ba5c0a1
  0x000000011ba5c575: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5c57a: mov    0x14(%rax),%edx
  0x000000011ba5c57d: shl    $0x3,%rdx
  0x000000011ba5c581: cmp    $0x0,%rdx
  0x000000011ba5c585: je     0x000000011ba5c277
  0x000000011ba5c58b: mov    %rdx,(%rsp)
  0x000000011ba5c58f: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba5c594: jmpq   0x000000011ba5c277
  0x000000011ba5c599: cmp    $0x0,%r8
  0x000000011ba5c59d: je     0x000000011ba5c296
  0x000000011ba5c5a3: mov    %rax,(%rsp)
  0x000000011ba5c5a7: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba5c5ac: jmpq   0x000000011ba5c296
  0x000000011ba5c5b1: nop
  0x000000011ba5c5b2: nop
  0x000000011ba5c5b3: mov    0x420(%r15),%rax
  0x000000011ba5c5ba: movabs $0x0,%r10
  0x000000011ba5c5c4: mov    %r10,0x420(%r15)
  0x000000011ba5c5cb: movabs $0x0,%r10
  0x000000011ba5c5d5: mov    %r10,0x428(%r15)
  0x000000011ba5c5dc: add    $0xa0,%rsp
  0x000000011ba5c5e3: pop    %rbp
  0x000000011ba5c5e4: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5c5e9: hlt    
  0x000000011ba5c5ea: hlt    
  0x000000011ba5c5eb: hlt    
  0x000000011ba5c5ec: hlt    
  0x000000011ba5c5ed: hlt    
  0x000000011ba5c5ee: hlt    
  0x000000011ba5c5ef: hlt    
  0x000000011ba5c5f0: hlt    
  0x000000011ba5c5f1: hlt    
  0x000000011ba5c5f2: hlt    
  0x000000011ba5c5f3: hlt    
  0x000000011ba5c5f4: hlt    
  0x000000011ba5c5f5: hlt    
  0x000000011ba5c5f6: hlt    
  0x000000011ba5c5f7: hlt    
  0x000000011ba5c5f8: hlt    
  0x000000011ba5c5f9: hlt    
  0x000000011ba5c5fa: hlt    
  0x000000011ba5c5fb: hlt    
  0x000000011ba5c5fc: hlt    
  0x000000011ba5c5fd: hlt    
  0x000000011ba5c5fe: hlt    
  0x000000011ba5c5ff: hlt    
[Stub Code]
  0x000000011ba5c600: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5c605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c60f: jmpq   0x000000011ba5c60f  ;   {runtime_call}
  0x000000011ba5c614: nop
  0x000000011ba5c615: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c61f: jmpq   0x000000011ba5c61f  ;   {runtime_call}
  0x000000011ba5c624: nop
  0x000000011ba5c625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c62f: jmpq   0x000000011ba5c62f  ;   {runtime_call}
  0x000000011ba5c634: nop
  0x000000011ba5c635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c63f: jmpq   0x000000011ba5c63f  ;   {runtime_call}
  0x000000011ba5c644: nop
  0x000000011ba5c645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c64f: jmpq   0x000000011ba5c64f  ;   {runtime_call}
  0x000000011ba5c654: nop
  0x000000011ba5c655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c65f: jmpq   0x000000011ba5c65f  ;   {runtime_call}
  0x000000011ba5c664: nop
  0x000000011ba5c665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c66f: jmpq   0x000000011ba5c66f  ;   {runtime_call}
  0x000000011ba5c674: nop
  0x000000011ba5c675: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c67f: jmpq   0x000000011ba5c67f  ;   {runtime_call}
  0x000000011ba5c684: nop
  0x000000011ba5c685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c68f: jmpq   0x000000011ba5c68f  ;   {runtime_call}
  0x000000011ba5c694: nop
  0x000000011ba5c695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5c69f: jmpq   0x000000011ba5c69f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5c6a4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5c6a9: mov    %rsp,-0x28(%rsp)
  0x000000011ba5c6ae: sub    $0x80,%rsp
  0x000000011ba5c6b5: mov    %rax,0x78(%rsp)
  0x000000011ba5c6ba: mov    %rcx,0x70(%rsp)
  0x000000011ba5c6bf: mov    %rdx,0x68(%rsp)
  0x000000011ba5c6c4: mov    %rbx,0x60(%rsp)
  0x000000011ba5c6c9: mov    %rbp,0x50(%rsp)
  0x000000011ba5c6ce: mov    %rsi,0x48(%rsp)
  0x000000011ba5c6d3: mov    %rdi,0x40(%rsp)
  0x000000011ba5c6d8: mov    %r8,0x38(%rsp)
  0x000000011ba5c6dd: mov    %r9,0x30(%rsp)
  0x000000011ba5c6e2: mov    %r10,0x28(%rsp)
  0x000000011ba5c6e7: mov    %r11,0x20(%rsp)
  0x000000011ba5c6ec: mov    %r12,0x18(%rsp)
  0x000000011ba5c6f1: mov    %r13,0x10(%rsp)
  0x000000011ba5c6f6: mov    %r14,0x8(%rsp)
  0x000000011ba5c6fb: mov    %r15,(%rsp)
  0x000000011ba5c6ff: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5c709: movabs $0x11ba5c6a9,%rsi  ;   {internal_word}
  0x000000011ba5c713: mov    %rsp,%rdx
  0x000000011ba5c716: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5c71a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5c71f: hlt    
[Deopt Handler Code]
  0x000000011ba5c720: movabs $0x11ba5c720,%r10  ;   {section_word}
  0x000000011ba5c72a: push   %r10
  0x000000011ba5c72c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5c731: hlt    
  0x000000011ba5c732: hlt    
  0x000000011ba5c733: hlt    
  0x000000011ba5c734: hlt    
  0x000000011ba5c735: hlt    
  0x000000011ba5c736: hlt    
  0x000000011ba5c737: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }pc offsets: 292 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 604 
ImmutableOopMap{[72]=Oop [88]=Oop [112]=Oop [80]=Oop [104]=Oop }pc offsets: 1388 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2212 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 2692 2802 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 3084 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3260 
ImmutableOopMap{[144]=Oop }pc offsets: 3820 
ImmutableOopMap{[72]=Oop }pc offsets: 3884 
ImmutableOopMap{}pc offsets: 4068 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }pc offsets: 4125 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }pc offsets: 4135 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rdx=Oop }pc offsets: 4140 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }pc offsets: 4145 4150 4164 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4178 4183 4192 
ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4251 
ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }pc offsets: 4256 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }pc offsets: 4265 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rsi=Oop }pc offsets: 4270 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }pc offsets: 4275 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }pc offsets: 4280 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }pc offsets: 4285 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 4313 
ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4378 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='130' method='java.util.HashMap$HashIterator hasNext ()Z' bytes='13' count='1792' iicount='1792' level='3' stamp='0.459' comment='tiered' hot_count='1792'/>
<task_queued compile_id='131' method='java.lang.module.ModuleDescriptor exports ()Ljava/util/Set;' bytes='5' count='256' iicount='256' level='1' stamp='0.459' comment='tiered' hot_count='256'/>
<writer thread='15875'/>
<nmethod compile_id='86' compiler='c1' level='3' entry='0x000000011ba5d360' size='1720' address='0x000000011ba5d190' relocation_offset='376' insts_offset='464' stub_offset='1136' scopes_data_offset='1336' scopes_pcs_offset='1488' dependencies_offset='1696' nul_chk_table_offset='1704' metadata_offset='1320' method='java.util.HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='2744' iicount='2744' stamp='0.459'/>
<print_nmethod stamp='0.460'>
Compiled method (c1)     459   86       3       java.util.HashMap::put (13 bytes)
 total in heap  [0x000000011ba5d190,0x000000011ba5d848] = 1720
 relocation     [0x000000011ba5d308,0x000000011ba5d360] = 88
 main code      [0x000000011ba5d360,0x000000011ba5d600] = 672
 stub code      [0x000000011ba5d600,0x000000011ba5d6b8] = 184
 metadata       [0x000000011ba5d6b8,0x000000011ba5d6c8] = 16
 scopes data    [0x000000011ba5d6c8,0x000000011ba5d760] = 152
 scopes pcs     [0x000000011ba5d760,0x000000011ba5d830] = 208
 dependencies   [0x000000011ba5d830,0x000000011ba5d838] = 8
 nul chk table  [0x000000011ba5d838,0x000000011ba5d848] = 16
----------------------------------------------------------------------
java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011ba5d360, 0x000000011ba5d6b8]  856 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011ba5d360: mov    0x8(%rsi),%r10d
  0x000000011ba5d364: movabs $0x800000000,%r12
  0x000000011ba5d36e: add    %r12,%r10
  0x000000011ba5d371: xor    %r12,%r12
  0x000000011ba5d374: cmp    %rax,%r10
  0x000000011ba5d377: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5d37d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5d380: mov    %eax,-0x14000(%rsp)
  0x000000011ba5d387: push   %rbp
  0x000000011ba5d388: sub    $0x80,%rsp
  0x000000011ba5d38f: movabs $0x1328a0120,%rdi  ;   {metadata(method data for {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d399: mov    0x104(%rdi),%ebx
  0x000000011ba5d39f: add    $0x8,%ebx
  0x000000011ba5d3a2: mov    %ebx,0x104(%rdi)
  0x000000011ba5d3a8: and    $0x1ff8,%ebx
  0x000000011ba5d3ae: cmp    $0x0,%ebx
  0x000000011ba5d3b1: je     0x000000011ba5d56f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@0 (line 607)

  0x000000011ba5d3b7: movabs $0x1328a0120,%rdi  ;   {metadata(method data for {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d3c1: addq   $0x1,0x140(%rdi)
  0x000000011ba5d3c9: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d3d3: mov    0x104(%rdi),%ebx
  0x000000011ba5d3d9: add    $0x8,%ebx
  0x000000011ba5d3dc: mov    %ebx,0x104(%rdi)
  0x000000011ba5d3e2: and    $0x7ffff8,%ebx
  0x000000011ba5d3e8: cmp    $0x0,%ebx
  0x000000011ba5d3eb: je     0x000000011ba5d590
  0x000000011ba5d3f1: cmp    $0x0,%rdx
  0x000000011ba5d3f5: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d3ff: movabs $0x140,%rbx
  0x000000011ba5d409: jne    0x000000011ba5d419
  0x000000011ba5d40f: movabs $0x150,%rbx
  0x000000011ba5d419: mov    (%rdi,%rbx,1),%rax
  0x000000011ba5d41d: lea    0x1(%rax),%rax
  0x000000011ba5d421: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba5d425: jne    0x000000011ba5d454  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011ba5d42b: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d435: incl   0x160(%rdi)
  0x000000011ba5d43b: mov    $0x0,%edi
  0x000000011ba5d440: mov    %rcx,0x68(%rsp)
  0x000000011ba5d445: mov    %rdx,0x60(%rsp)
  0x000000011ba5d44a: mov    %rsi,0x58(%rsp)
  0x000000011ba5d44f: jmpq   0x000000011ba5d520  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011ba5d454: mov    %rcx,0x68(%rsp)
  0x000000011ba5d459: mov    %rsi,0x58(%rsp)
  0x000000011ba5d45e: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba5d5b1
  0x000000011ba5d461: mov    %rdx,%rdi
  0x000000011ba5d464: movabs $0x132898ed8,%rbx  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d46e: mov    0x8(%rdi),%edi
  0x000000011ba5d471: movabs $0x800000000,%r12
  0x000000011ba5d47b: add    %r12,%rdi
  0x000000011ba5d47e: xor    %r12,%r12
  0x000000011ba5d481: cmp    0x188(%rbx),%rdi
  0x000000011ba5d488: jne    0x000000011ba5d497
  0x000000011ba5d48a: addq   $0x1,0x190(%rbx)
  0x000000011ba5d492: jmpq   0x000000011ba5d4fd
  0x000000011ba5d497: cmp    0x198(%rbx),%rdi
  0x000000011ba5d49e: jne    0x000000011ba5d4ad
  0x000000011ba5d4a0: addq   $0x1,0x1a0(%rbx)
  0x000000011ba5d4a8: jmpq   0x000000011ba5d4fd
  0x000000011ba5d4ad: cmpq   $0x0,0x188(%rbx)
  0x000000011ba5d4b8: jne    0x000000011ba5d4d1
  0x000000011ba5d4ba: mov    %rdi,0x188(%rbx)
  0x000000011ba5d4c1: movq   $0x1,0x190(%rbx)
  0x000000011ba5d4cc: jmpq   0x000000011ba5d4fd
  0x000000011ba5d4d1: cmpq   $0x0,0x198(%rbx)
  0x000000011ba5d4dc: jne    0x000000011ba5d4f5
  0x000000011ba5d4de: mov    %rdi,0x198(%rbx)
  0x000000011ba5d4e5: movq   $0x1,0x1a0(%rbx)
  0x000000011ba5d4f0: jmpq   0x000000011ba5d4fd
  0x000000011ba5d4f5: addq   $0x1,0x178(%rbx)
  0x000000011ba5d4fd: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011ba5d500: mov    %rdx,0x60(%rsp)
  0x000000011ba5d505: movabs $0x800007fa8,%rax
  0x000000011ba5d50f: callq  0x000000011b4d41e0  ; ImmutableOopMap{[88]=Oop [96]=Oop [104]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ;   {virtual_call}
  0x000000011ba5d514: mov    %rax,%rdx
  0x000000011ba5d517: shr    $0x10,%edx
  0x000000011ba5d51a: xor    %rax,%rdx
  0x000000011ba5d51d: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011ba5d520: mov    0x68(%rsp),%r8
  0x000000011ba5d525: mov    0x60(%rsp),%rcx
  0x000000011ba5d52a: mov    0x58(%rsp),%rsi
  0x000000011ba5d52f: mov    %rsi,%rdx
  0x000000011ba5d532: movabs $0x1328a0120,%r9   ;   {metadata(method data for {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d53c: addq   $0x1,0x150(%r9)
  0x000000011ba5d544: mov    %rdi,%rdx
  0x000000011ba5d547: mov    $0x0,%r9d
  0x000000011ba5d54d: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)

  0x000000011ba5d552: nopl   0x0(%rax,%rax,1)
  0x000000011ba5d557: callq  0x000000011ba5b480  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)
                                                ;   {optimized virtual_call}
  0x000000011ba5d55c: add    $0x80,%rsp
  0x000000011ba5d563: pop    %rbp
  0x000000011ba5d564: mov    0x108(%r15),%r10
  0x000000011ba5d56b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5d56e: retq   
  0x000000011ba5d56f: movabs $0x1325d2578,%r10  ;   {metadata({method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d579: mov    %r10,0x8(%rsp)
  0x000000011ba5d57e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5d586: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 607)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5d58b: jmpq   0x000000011ba5d3b7
  0x000000011ba5d590: movabs $0x1325d17e0,%r10  ;   {metadata({method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5d59a: mov    %r10,0x8(%rsp)
  0x000000011ba5d59f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5d5a7: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5d5ac: jmpq   0x000000011ba5d3f1
  0x000000011ba5d5b1: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [104]=Oop [88]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5d5b6: nop
  0x000000011ba5d5b7: nop
  0x000000011ba5d5b8: mov    0x420(%r15),%rax
  0x000000011ba5d5bf: movabs $0x0,%r10
  0x000000011ba5d5c9: mov    %r10,0x420(%r15)
  0x000000011ba5d5d0: movabs $0x0,%r10
  0x000000011ba5d5da: mov    %r10,0x428(%r15)
  0x000000011ba5d5e1: add    $0x80,%rsp
  0x000000011ba5d5e8: pop    %rbp
  0x000000011ba5d5e9: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5d5ee: hlt    
  0x000000011ba5d5ef: hlt    
  0x000000011ba5d5f0: hlt    
  0x000000011ba5d5f1: hlt    
  0x000000011ba5d5f2: hlt    
  0x000000011ba5d5f3: hlt    
  0x000000011ba5d5f4: hlt    
  0x000000011ba5d5f5: hlt    
  0x000000011ba5d5f6: hlt    
  0x000000011ba5d5f7: hlt    
  0x000000011ba5d5f8: hlt    
  0x000000011ba5d5f9: hlt    
  0x000000011ba5d5fa: hlt    
  0x000000011ba5d5fb: hlt    
  0x000000011ba5d5fc: hlt    
  0x000000011ba5d5fd: hlt    
  0x000000011ba5d5fe: hlt    
  0x000000011ba5d5ff: hlt    
[Stub Code]
  0x000000011ba5d600: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5d605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5d60f: jmpq   0x000000011ba5d60f  ;   {runtime_call}
  0x000000011ba5d614: nop
  0x000000011ba5d615: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5d61f: jmpq   0x000000011ba5d61f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5d624: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5d629: mov    %rsp,-0x28(%rsp)
  0x000000011ba5d62e: sub    $0x80,%rsp
  0x000000011ba5d635: mov    %rax,0x78(%rsp)
  0x000000011ba5d63a: mov    %rcx,0x70(%rsp)
  0x000000011ba5d63f: mov    %rdx,0x68(%rsp)
  0x000000011ba5d644: mov    %rbx,0x60(%rsp)
  0x000000011ba5d649: mov    %rbp,0x50(%rsp)
  0x000000011ba5d64e: mov    %rsi,0x48(%rsp)
  0x000000011ba5d653: mov    %rdi,0x40(%rsp)
  0x000000011ba5d658: mov    %r8,0x38(%rsp)
  0x000000011ba5d65d: mov    %r9,0x30(%rsp)
  0x000000011ba5d662: mov    %r10,0x28(%rsp)
  0x000000011ba5d667: mov    %r11,0x20(%rsp)
  0x000000011ba5d66c: mov    %r12,0x18(%rsp)
  0x000000011ba5d671: mov    %r13,0x10(%rsp)
  0x000000011ba5d676: mov    %r14,0x8(%rsp)
  0x000000011ba5d67b: mov    %r15,(%rsp)
  0x000000011ba5d67f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5d689: movabs $0x11ba5d629,%rsi  ;   {internal_word}
  0x000000011ba5d693: mov    %rsp,%rdx
  0x000000011ba5d696: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5d69a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5d69f: hlt    
[Deopt Handler Code]
  0x000000011ba5d6a0: movabs $0x11ba5d6a0,%r10  ;   {section_word}
  0x000000011ba5d6aa: push   %r10
  0x000000011ba5d6ac: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5d6b1: hlt    
  0x000000011ba5d6b2: hlt    
  0x000000011ba5d6b3: hlt    
  0x000000011ba5d6b4: hlt    
  0x000000011ba5d6b5: hlt    
  0x000000011ba5d6b6: hlt    
  0x000000011ba5d6b7: hlt    

ImmutableOopMap{[88]=Oop [96]=Oop [104]=Oop }pc offsets: 436 
ImmutableOopMap{}pc offsets: 508 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 555 588 
ImmutableOopMap{rdx=Oop [104]=Oop [88]=Oop }pc offsets: 598 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='132' method='java.util.HashMap$KeyIterator next ()Ljava/lang/Object;' bytes='8' count='896' iicount='896' level='3' stamp='0.463' comment='tiered' hot_count='896'/>
<task_queued compile_id='133' method='java.util.ImmutableCollections$Set12$1 next ()Ljava/lang/Object;' bytes='92' count='640' iicount='640' level='3' stamp='0.463' comment='tiered' hot_count='640'/>
<task_queued compile_id='134' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='6656' iicount='6656' stamp='0.463' comment='tiered' hot_count='6656'/>
<task_queued compile_id='135' method='java.lang.module.ResolvedModule configuration ()Ljava/lang/module/Configuration;' bytes='5' count='128' iicount='128' level='1' stamp='0.463' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='122' compiler='c1' level='3' entry='0x000000011ba5da80' size='1904' address='0x000000011ba5d890' relocation_offset='376' insts_offset='496' stub_offset='1232' scopes_data_offset='1432' scopes_pcs_offset='1600' dependencies_offset='1872' nul_chk_table_offset='1880' metadata_offset='1416' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1840' iicount='1840' stamp='0.463'/>
<print_nmethod stamp='0.463'>
Compiled method (c1)     463  122       3       java.util.HashMap::get (23 bytes)
 total in heap  [0x000000011ba5d890,0x000000011ba5e000] = 1904
 relocation     [0x000000011ba5da08,0x000000011ba5da68] = 96
 main code      [0x000000011ba5da80,0x000000011ba5dd60] = 736
 stub code      [0x000000011ba5dd60,0x000000011ba5de18] = 184
 metadata       [0x000000011ba5de18,0x000000011ba5de28] = 16
 scopes data    [0x000000011ba5de28,0x000000011ba5ded0] = 168
 scopes pcs     [0x000000011ba5ded0,0x000000011ba5dfe0] = 272
 dependencies   [0x000000011ba5dfe0,0x000000011ba5dfe8] = 8
 nul chk table  [0x000000011ba5dfe8,0x000000011ba5e000] = 24
----------------------------------------------------------------------
java/util/HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011ba5da80, 0x000000011ba5de18]  920 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011ba5da80: mov    0x8(%rsi),%r10d
  0x000000011ba5da84: movabs $0x800000000,%r12
  0x000000011ba5da8e: add    %r12,%r10
  0x000000011ba5da91: xor    %r12,%r12
  0x000000011ba5da94: cmp    %rax,%r10
  0x000000011ba5da97: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5da9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5daa0: mov    %eax,-0x14000(%rsp)
  0x000000011ba5daa7: push   %rbp
  0x000000011ba5daa8: sub    $0x60,%rsp
  0x000000011ba5daac: movabs $0x1328a2590,%rdi  ;   {metadata(method data for {method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dab6: mov    0x104(%rdi),%ebx
  0x000000011ba5dabc: add    $0x8,%ebx
  0x000000011ba5dabf: mov    %ebx,0x104(%rdi)
  0x000000011ba5dac5: and    $0x1ff8,%ebx
  0x000000011ba5dacb: cmp    $0x0,%ebx
  0x000000011ba5dace: je     0x000000011ba5dcdf  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@0 (line 552)

  0x000000011ba5dad4: movabs $0x1328a2590,%rdi  ;   {metadata(method data for {method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dade: addq   $0x1,0x140(%rdi)
  0x000000011ba5dae6: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5daf0: mov    0x104(%rdi),%ebx
  0x000000011ba5daf6: add    $0x8,%ebx
  0x000000011ba5daf9: mov    %ebx,0x104(%rdi)
  0x000000011ba5daff: and    $0x7ffff8,%ebx
  0x000000011ba5db05: cmp    $0x0,%ebx
  0x000000011ba5db08: je     0x000000011ba5dd00
  0x000000011ba5db0e: cmp    $0x0,%rdx
  0x000000011ba5db12: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5db1c: movabs $0x140,%rbx
  0x000000011ba5db26: jne    0x000000011ba5db36
  0x000000011ba5db2c: movabs $0x150,%rbx
  0x000000011ba5db36: mov    (%rdi,%rbx,1),%rax
  0x000000011ba5db3a: lea    0x1(%rax),%rax
  0x000000011ba5db3e: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba5db42: jne    0x000000011ba5db6c  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011ba5db48: movabs $0x132898ed8,%rdi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5db52: incl   0x160(%rdi)
  0x000000011ba5db58: mov    $0x0,%edi
  0x000000011ba5db5d: mov    %rdx,0x48(%rsp)
  0x000000011ba5db62: mov    %rsi,0x40(%rsp)
  0x000000011ba5db67: jmpq   0x000000011ba5dc38  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011ba5db6c: mov    %rsi,0x40(%rsp)
  0x000000011ba5db71: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba5dd21
  0x000000011ba5db74: mov    %rdx,%rdi
  0x000000011ba5db77: movabs $0x132898ed8,%rbx  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5db81: mov    0x8(%rdi),%edi
  0x000000011ba5db84: movabs $0x800000000,%r12
  0x000000011ba5db8e: add    %r12,%rdi
  0x000000011ba5db91: xor    %r12,%r12
  0x000000011ba5db94: cmp    0x188(%rbx),%rdi
  0x000000011ba5db9b: jne    0x000000011ba5dbaa
  0x000000011ba5db9d: addq   $0x1,0x190(%rbx)
  0x000000011ba5dba5: jmpq   0x000000011ba5dc10
  0x000000011ba5dbaa: cmp    0x198(%rbx),%rdi
  0x000000011ba5dbb1: jne    0x000000011ba5dbc0
  0x000000011ba5dbb3: addq   $0x1,0x1a0(%rbx)
  0x000000011ba5dbbb: jmpq   0x000000011ba5dc10
  0x000000011ba5dbc0: cmpq   $0x0,0x188(%rbx)
  0x000000011ba5dbcb: jne    0x000000011ba5dbe4
  0x000000011ba5dbcd: mov    %rdi,0x188(%rbx)
  0x000000011ba5dbd4: movq   $0x1,0x190(%rbx)
  0x000000011ba5dbdf: jmpq   0x000000011ba5dc10
  0x000000011ba5dbe4: cmpq   $0x0,0x198(%rbx)
  0x000000011ba5dbef: jne    0x000000011ba5dc08
  0x000000011ba5dbf1: mov    %rdi,0x198(%rbx)
  0x000000011ba5dbf8: movq   $0x1,0x1a0(%rbx)
  0x000000011ba5dc03: jmpq   0x000000011ba5dc10
  0x000000011ba5dc08: addq   $0x1,0x178(%rbx)
  0x000000011ba5dc10: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011ba5dc13: mov    %rdx,0x48(%rsp)
  0x000000011ba5dc18: nopl   0x0(%rax,%rax,1)
  0x000000011ba5dc1d: movabs $0x800001808,%rax
  0x000000011ba5dc27: callq  0x0000000122f79a20  ; ImmutableOopMap{[64]=Oop [72]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)
                                                ;   {virtual_call}
  0x000000011ba5dc2c: mov    %rax,%rdx
  0x000000011ba5dc2f: shr    $0x10,%edx
  0x000000011ba5dc32: xor    %rax,%rdx
  0x000000011ba5dc35: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011ba5dc38: mov    0x48(%rsp),%rcx
  0x000000011ba5dc3d: mov    0x40(%rsp),%rsi
  0x000000011ba5dc42: mov    %rsi,%rdx
  0x000000011ba5dc45: movabs $0x1328a2590,%rbx  ;   {metadata(method data for {method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dc4f: addq   $0x1,0x150(%rbx)
  0x000000011ba5dc57: mov    %rdi,%rdx          ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 552)

  0x000000011ba5dc5a: nopl   0x0(%rax,%rax,1)
  0x000000011ba5dc5f: callq  0x000000011ba4e760  ; ImmutableOopMap{}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 552)
                                                ;   {optimized virtual_call}
  0x000000011ba5dc64: cmp    $0x0,%rax
  0x000000011ba5dc68: movabs $0x1328a2590,%rsi  ;   {metadata(method data for {method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dc72: movabs $0x188,%rdi
  0x000000011ba5dc7c: jne    0x000000011ba5dc8c
  0x000000011ba5dc82: movabs $0x198,%rdi
  0x000000011ba5dc8c: mov    (%rsi,%rdi,1),%rbx
  0x000000011ba5dc90: lea    0x1(%rbx),%rbx
  0x000000011ba5dc94: mov    %rbx,(%rsi,%rdi,1)
  0x000000011ba5dc98: jne    0x000000011ba5dcc8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@11 (line 552)

  0x000000011ba5dc9e: movabs $0x1328a2590,%rax  ;   {metadata(method data for {method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dca8: incl   0x1a8(%rax)
  0x000000011ba5dcae: movabs $0x0,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@15 (line 552)
                                                ;   {oop(NULL)}
  0x000000011ba5dcb8: add    $0x60,%rsp
  0x000000011ba5dcbc: pop    %rbp
  0x000000011ba5dcbd: mov    0x108(%r15),%r10
  0x000000011ba5dcc4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5dcc7: retq   
  0x000000011ba5dcc8: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000011ba5dd26
  0x000000011ba5dccb: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 552)

  0x000000011ba5dccf: add    $0x60,%rsp
  0x000000011ba5dcd3: pop    %rbp
  0x000000011ba5dcd4: mov    0x108(%r15),%r10
  0x000000011ba5dcdb: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5dcde: retq   
  0x000000011ba5dcdf: movabs $0x1325d2238,%r10  ;   {metadata({method} {0x00000001325d2238} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dce9: mov    %r10,0x8(%rsp)
  0x000000011ba5dcee: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5dcf6: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 552)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5dcfb: jmpq   0x000000011ba5dad4
  0x000000011ba5dd00: movabs $0x1325d17e0,%r10  ;   {metadata({method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5dd0a: mov    %r10,0x8(%rsp)
  0x000000011ba5dd0f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5dd17: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5dd1c: jmpq   0x000000011ba5db0e
  0x000000011ba5dd21: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [64]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5dd26: callq  0x000000011b595f20  ; ImmutableOopMap{}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 552)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5dd2b: nop
  0x000000011ba5dd2c: nop
  0x000000011ba5dd2d: mov    0x420(%r15),%rax
  0x000000011ba5dd34: movabs $0x0,%r10
  0x000000011ba5dd3e: mov    %r10,0x420(%r15)
  0x000000011ba5dd45: movabs $0x0,%r10
  0x000000011ba5dd4f: mov    %r10,0x428(%r15)
  0x000000011ba5dd56: add    $0x60,%rsp
  0x000000011ba5dd5a: pop    %rbp
  0x000000011ba5dd5b: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000000011ba5dd60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5dd65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5dd6f: jmpq   0x000000011ba5dd6f  ;   {runtime_call}
  0x000000011ba5dd74: nop
  0x000000011ba5dd75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5dd7f: jmpq   0x000000011ba5dd7f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5dd84: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5dd89: mov    %rsp,-0x28(%rsp)
  0x000000011ba5dd8e: sub    $0x80,%rsp
  0x000000011ba5dd95: mov    %rax,0x78(%rsp)
  0x000000011ba5dd9a: mov    %rcx,0x70(%rsp)
  0x000000011ba5dd9f: mov    %rdx,0x68(%rsp)
  0x000000011ba5dda4: mov    %rbx,0x60(%rsp)
  0x000000011ba5dda9: mov    %rbp,0x50(%rsp)
  0x000000011ba5ddae: mov    %rsi,0x48(%rsp)
  0x000000011ba5ddb3: mov    %rdi,0x40(%rsp)
  0x000000011ba5ddb8: mov    %r8,0x38(%rsp)
  0x000000011ba5ddbd: mov    %r9,0x30(%rsp)
  0x000000011ba5ddc2: mov    %r10,0x28(%rsp)
  0x000000011ba5ddc7: mov    %r11,0x20(%rsp)
  0x000000011ba5ddcc: mov    %r12,0x18(%rsp)
  0x000000011ba5ddd1: mov    %r13,0x10(%rsp)
  0x000000011ba5ddd6: mov    %r14,0x8(%rsp)
  0x000000011ba5dddb: mov    %r15,(%rsp)
  0x000000011ba5dddf: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5dde9: movabs $0x11ba5dd89,%rsi  ;   {internal_word}
  0x000000011ba5ddf3: mov    %rsp,%rdx
  0x000000011ba5ddf6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5ddfa: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5ddff: hlt    
[Deopt Handler Code]
  0x000000011ba5de00: movabs $0x11ba5de00,%r10  ;   {section_word}
  0x000000011ba5de0a: push   %r10
  0x000000011ba5de0c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5de11: hlt    
  0x000000011ba5de12: hlt    
  0x000000011ba5de13: hlt    
  0x000000011ba5de14: hlt    
  0x000000011ba5de15: hlt    
  0x000000011ba5de16: hlt    
  0x000000011ba5de17: hlt    

ImmutableOopMap{[64]=Oop [72]=Oop }pc offsets: 428 
ImmutableOopMap{}pc offsets: 484 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 635 668 
ImmutableOopMap{rdx=Oop [64]=Oop }pc offsets: 678 
ImmutableOopMap{}pc offsets: 683 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='136' method='java.lang.module.ModuleDescriptor$Provides service ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.468' comment='tiered' hot_count='128'/>
<writer thread='15363'/>
<nmethod compile_id='134' compiler='c2' level='4' entry='0x0000000122f7e5a0' size='1792' address='0x0000000122f7e410' relocation_offset='376' insts_offset='400' stub_offset='1168' scopes_data_offset='1216' scopes_pcs_offset='1280' dependencies_offset='1760' handler_table_offset='1768' metadata_offset='1192' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='6718' iicount='6718' stamp='0.468'/>
<make_not_entrant thread='15363' compile_id='87' compiler='c1' level='3' stamp='0.468'/>
<print_nmethod stamp='0.468'>
Compiled method (c2)     468  134       4       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x0000000122f7e410,0x0000000122f7eb10] = 1792
 relocation     [0x0000000122f7e588,0x0000000122f7e5a0] = 24
 main code      [0x0000000122f7e5a0,0x0000000122f7e8a0] = 768
 stub code      [0x0000000122f7e8a0,0x0000000122f7e8b8] = 24
 metadata       [0x0000000122f7e8b8,0x0000000122f7e8d0] = 24
 scopes data    [0x0000000122f7e8d0,0x0000000122f7e910] = 64
 scopes pcs     [0x0000000122f7e910,0x0000000122f7eaf0] = 480
 dependencies   [0x0000000122f7eaf0,0x0000000122f7eaf8] = 8
 handler table  [0x0000000122f7eaf8,0x0000000122f7eb10] = 24
----------------------------------------------------------------------
java/util/HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;  [0x0000000122f7e5a0, 0x0000000122f7e8b8]  792 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325d4dd0} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7e5a0: mov    0x8(%rsi),%r10d
  0x0000000122f7e5a4: movabs $0x800000000,%r12
  0x0000000122f7e5ae: add    %r12,%r10
  0x0000000122f7e5b1: xor    %r12,%r12
  0x0000000122f7e5b4: cmp    %r10,%rax
  0x0000000122f7e5b7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7e5bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7e5c0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7e5c7: push   %rbp
  0x0000000122f7e5c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1797)

  0x0000000122f7e5cc: mov    %r9,0x10(%rsp)
  0x0000000122f7e5d1: mov    %r8,0x8(%rsp)
  0x0000000122f7e5d6: mov    %rcx,(%rsp)
  0x0000000122f7e5da: mov    %edx,%ebp
  0x0000000122f7e5dc: mov    0x118(%r15),%rbx
  0x0000000122f7e5e3: mov    %rbx,%r10
  0x0000000122f7e5e6: add    $0x20,%r10
  0x0000000122f7e5ea: cmp    0x128(%r15),%r10
  0x0000000122f7e5f1: jae    0x0000000122f7e83e  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e5f7: mov    %r10,0x118(%r15)
  0x0000000122f7e5fe: prefetchw 0xc0(%r10)
  0x0000000122f7e606: mov    $0x2d030,%r11d     ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7e60c: movabs $0x800000000,%r10
  0x0000000122f7e616: add    %r11,%r10
  0x0000000122f7e619: mov    0xb8(%r10),%r10
  0x0000000122f7e620: mov    %r10,(%rbx)
  0x0000000122f7e623: movl   $0x2d030,0x8(%rbx)  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7e62a: movl   $0x0,0x14(%rbx)
  0x0000000122f7e631: movq   $0x0,0x18(%rbx)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)

  0x0000000122f7e639: mov    %ebp,0xc(%rbx)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e63c: mov    (%rsp),%r8
  0x0000000122f7e640: mov    %r8,%r11
  0x0000000122f7e643: shr    $0x3,%r11
  0x0000000122f7e647: mov    %r11d,0x10(%rbx)   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)

  0x0000000122f7e64b: mov    %r8,%r10
  0x0000000122f7e64e: mov    %rbx,%r11
  0x0000000122f7e651: xor    %r11,%r10
  0x0000000122f7e654: shr    $0x14,%r10
  0x0000000122f7e658: test   %r10,%r10
  0x0000000122f7e65b: je     0x0000000122f7e6b5
  0x0000000122f7e65d: test   %r8,%r8
  0x0000000122f7e660: je     0x0000000122f7e6b5
  0x0000000122f7e662: shr    $0x9,%r11
  0x0000000122f7e666: movabs $0x114326000,%rdi
  0x0000000122f7e670: add    %r11,%rdi
  0x0000000122f7e673: cmpb   $0x20,(%rdi)
  0x0000000122f7e676: je     0x0000000122f7e6b5
  0x0000000122f7e678: mov    0x70(%r15),%r10
  0x0000000122f7e67c: mov    0x80(%r15),%r11
  0x0000000122f7e683: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7e689: cmpb   $0x0,(%rdi)
  0x0000000122f7e68c: je     0x0000000122f7e6b5
  0x0000000122f7e68e: movb   $0x0,(%rdi)
  0x0000000122f7e691: test   %r10,%r10
  0x0000000122f7e694: jne    0x0000000122f7e6a8
  0x0000000122f7e696: mov    %r15,%rsi
  0x0000000122f7e699: movabs $0x10e2fdd7a,%r10
  0x0000000122f7e6a3: callq  *%r10
  0x0000000122f7e6a6: jmp    0x0000000122f7e6b5
  0x0000000122f7e6a8: mov    %rdi,-0x8(%r11,%r10,1)
  0x0000000122f7e6ad: add    $0xfffffffffffffff8,%r10
  0x0000000122f7e6b1: mov    %r10,0x70(%r15)
  0x0000000122f7e6b5: cmpb   $0x0,0x30(%r15)
  0x0000000122f7e6ba: jne    0x0000000122f7e80b
  0x0000000122f7e6c0: mov    %rbx,%r10
  0x0000000122f7e6c3: mov    0x8(%rsp),%r8
  0x0000000122f7e6c8: mov    %r8,%r11
  0x0000000122f7e6cb: shr    $0x3,%r11
  0x0000000122f7e6cf: mov    %r11d,0x14(%rbx)
  0x0000000122f7e6d3: mov    %r8,%r11
  0x0000000122f7e6d6: xor    %r10,%r11
  0x0000000122f7e6d9: shr    $0x14,%r11
  0x0000000122f7e6dd: test   %r11,%r11
  0x0000000122f7e6e0: je     0x0000000122f7e73a
  0x0000000122f7e6e2: test   %r8,%r8
  0x0000000122f7e6e5: je     0x0000000122f7e73a
  0x0000000122f7e6e7: shr    $0x9,%r10
  0x0000000122f7e6eb: movabs $0x114326000,%rdi
  0x0000000122f7e6f5: add    %r10,%rdi
  0x0000000122f7e6f8: cmpb   $0x20,(%rdi)
  0x0000000122f7e6fb: je     0x0000000122f7e73a
  0x0000000122f7e6fd: mov    0x70(%r15),%r10
  0x0000000122f7e701: mov    0x80(%r15),%r11
  0x0000000122f7e708: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7e70e: cmpb   $0x0,(%rdi)
  0x0000000122f7e711: je     0x0000000122f7e73a
  0x0000000122f7e713: movb   $0x0,(%rdi)
  0x0000000122f7e716: test   %r10,%r10
  0x0000000122f7e719: jne    0x0000000122f7e72d  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e71b: mov    %r15,%rsi
  0x0000000122f7e71e: movabs $0x10e2fdd7a,%r10
  0x0000000122f7e728: callq  *%r10
  0x0000000122f7e72b: jmp    0x0000000122f7e73a
  0x0000000122f7e72d: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e732: add    $0xfffffffffffffff8,%r10
  0x0000000122f7e736: mov    %r10,0x70(%r15)
  0x0000000122f7e73a: cmpb   $0x0,0x30(%r15)
  0x0000000122f7e73f: jne    0x0000000122f7e7d8
  0x0000000122f7e745: mov    %rbx,%r10
  0x0000000122f7e748: mov    0x10(%rsp),%r9
  0x0000000122f7e74d: mov    %r9,%r8
  0x0000000122f7e750: shr    $0x3,%r8
  0x0000000122f7e754: mov    %r8d,0x18(%rbx)
  0x0000000122f7e758: mov    %r9,%r11
  0x0000000122f7e75b: xor    %r10,%r11
  0x0000000122f7e75e: shr    $0x14,%r11
  0x0000000122f7e762: test   %r11,%r11
  0x0000000122f7e765: je     0x0000000122f7e7c5
  0x0000000122f7e767: test   %r9,%r9
  0x0000000122f7e76a: je     0x0000000122f7e7c5
  0x0000000122f7e76c: shr    $0x9,%r10
  0x0000000122f7e770: movabs $0x114326000,%r8
  0x0000000122f7e77a: add    %r10,%r8
  0x0000000122f7e77d: cmpb   $0x20,(%r8)
  0x0000000122f7e781: je     0x0000000122f7e7c5
  0x0000000122f7e783: mov    0x70(%r15),%r10    ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e787: mov    0x80(%r15),%r11
  0x0000000122f7e78e: lock addl $0x0,-0x40(%rsp)
  0x0000000122f7e794: cmpb   $0x0,(%r8)
  0x0000000122f7e798: je     0x0000000122f7e7c5
  0x0000000122f7e79a: movb   $0x0,(%r8)
  0x0000000122f7e79e: test   %r10,%r10
  0x0000000122f7e7a1: jne    0x0000000122f7e7b8  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e7a3: mov    %r8,%rdi           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e7a6: mov    %r15,%rsi
  0x0000000122f7e7a9: movabs $0x10e2fdd7a,%r10
  0x0000000122f7e7b3: callq  *%r10
  0x0000000122f7e7b6: jmp    0x0000000122f7e7c5
  0x0000000122f7e7b8: mov    %r8,-0x8(%r11,%r10,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e7bd: add    $0xfffffffffffffff8,%r10  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e7c1: mov    %r10,0x70(%r15)    ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1797)

  0x0000000122f7e7c5: mov    %rbx,%rax
  0x0000000122f7e7c8: add    $0x30,%rsp
  0x0000000122f7e7cc: pop    %rbp
  0x0000000122f7e7cd: mov    0x108(%r15),%r10
  0x0000000122f7e7d4: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7e7d7: retq   
  0x0000000122f7e7d8: mov    0x18(%rbx),%r10d
  0x0000000122f7e7dc: test   %r10d,%r10d
  0x0000000122f7e7df: je     0x0000000122f7e745
  0x0000000122f7e7e5: mov    0x38(%r15),%r11
  0x0000000122f7e7e9: mov    %r10,%rdi
  0x0000000122f7e7ec: shl    $0x3,%rdi
  0x0000000122f7e7f0: test   %r11,%r11
  0x0000000122f7e7f3: je     0x0000000122f7e858  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e7f5: mov    0x48(%r15),%r10
  0x0000000122f7e7f9: mov    %rdi,-0x8(%r10,%r11,1)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e7fe: add    $0xfffffffffffffff8,%r11  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e802: mov    %r11,0x38(%r15)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e806: jmpq   0x0000000122f7e745
  0x0000000122f7e80b: mov    0x14(%rbx),%r11d
  0x0000000122f7e80f: test   %r11d,%r11d
  0x0000000122f7e812: je     0x0000000122f7e6c0
  0x0000000122f7e818: mov    0x38(%r15),%r10
  0x0000000122f7e81c: mov    %r11,%rdi
  0x0000000122f7e81f: shl    $0x3,%rdi
  0x0000000122f7e823: test   %r10,%r10
  0x0000000122f7e826: je     0x0000000122f7e86d  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e828: mov    0x48(%r15),%r11
  0x0000000122f7e82c: mov    %rdi,-0x8(%r11,%r10,1)  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e831: add    $0xfffffffffffffff8,%r10  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e835: mov    %r10,0x38(%r15)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e839: jmpq   0x0000000122f7e6c0
  0x0000000122f7e83e: movabs $0x80002d030,%rsi  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000122f7e848: data16 xchg %ax,%ax
  0x0000000122f7e84b: callq  0x000000011b59e780  ; ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ;   {runtime_call _new_instance_Java}
  0x0000000122f7e850: mov    %rax,%rbx
  0x0000000122f7e853: jmpq   0x0000000122f7e639  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e858: mov    %r15,%rsi
  0x0000000122f7e85b: movabs $0x10e2fdd56,%r10
  0x0000000122f7e865: callq  *%r10              ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e868: jmpq   0x0000000122f7e745  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e86d: mov    %r15,%rsi
  0x0000000122f7e870: movabs $0x10e2fdd56,%r10
  0x0000000122f7e87a: callq  *%r10              ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x0000000122f7e87d: jmpq   0x0000000122f7e6c0  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)

  0x0000000122f7e882: mov    %rax,%rsi
  0x0000000122f7e885: add    $0x30,%rsp
  0x0000000122f7e889: pop    %rbp
  0x0000000122f7e88a: jmpq   0x000000011b59c180  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)
                                                ;   {runtime_call _rethrow_Java}
  0x0000000122f7e88f: hlt    
  0x0000000122f7e890: hlt    
  0x0000000122f7e891: hlt    
  0x0000000122f7e892: hlt    
  0x0000000122f7e893: hlt    
  0x0000000122f7e894: hlt    
  0x0000000122f7e895: hlt    
  0x0000000122f7e896: hlt    
  0x0000000122f7e897: hlt    
  0x0000000122f7e898: hlt    
  0x0000000122f7e899: hlt    
  0x0000000122f7e89a: hlt    
  0x0000000122f7e89b: hlt    
  0x0000000122f7e89c: hlt    
  0x0000000122f7e89d: hlt    
  0x0000000122f7e89e: hlt    
  0x0000000122f7e89f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7e8a0: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f7e8a5: callq  0x0000000122f7e8aa
  0x0000000122f7e8aa: subq   $0x5,(%rsp)
  0x0000000122f7e8af: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7e8b4: hlt    
  0x0000000122f7e8b5: hlt    
  0x0000000122f7e8b6: hlt    
  0x0000000122f7e8b7: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop [16]=Oop }pc offsets: 688 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='130' compiler='c1' level='3' entry='0x000000011ba5e1c0' size='1056' address='0x000000011ba5e010' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='872' scopes_pcs_offset='920' dependencies_offset='1048' metadata_offset='864' method='java.util.HashMap$HashIterator hasNext ()Z' bytes='13' count='1919' iicount='1919' stamp='0.473'/>
<print_nmethod stamp='0.473'>
Compiled method (c1)     473  130       3       java.util.HashMap$HashIterator::hasNext (13 bytes)
 total in heap  [0x000000011ba5e010,0x000000011ba5e430] = 1056
 relocation     [0x000000011ba5e188,0x000000011ba5e1b8] = 48
 main code      [0x000000011ba5e1c0,0x000000011ba5e2e0] = 288
 stub code      [0x000000011ba5e2e0,0x000000011ba5e370] = 144
 metadata       [0x000000011ba5e370,0x000000011ba5e378] = 8
 scopes data    [0x000000011ba5e378,0x000000011ba5e3a8] = 48
 scopes pcs     [0x000000011ba5e3a8,0x000000011ba5e428] = 128
 dependencies   [0x000000011ba5e428,0x000000011ba5e430] = 8
----------------------------------------------------------------------
java/util/HashMap$HashIterator.hasNext()Z  [0x000000011ba5e1c0, 0x000000011ba5e370]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013273ad30} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/HashMap$HashIterator&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba5e1c0: mov    0x8(%rsi),%r10d
  0x000000011ba5e1c4: movabs $0x800000000,%r12
  0x000000011ba5e1ce: add    %r12,%r10
  0x000000011ba5e1d1: xor    %r12,%r12
  0x000000011ba5e1d4: cmp    %rax,%r10
  0x000000011ba5e1d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5e1dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5e1e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba5e1e7: push   %rbp
  0x000000011ba5e1e8: sub    $0x30,%rsp
  0x000000011ba5e1ec: movabs $0x1328a2798,%rax  ;   {metadata(method data for {method} {0x000000013273ad30} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba5e1f6: mov    0x104(%rax),%edi
  0x000000011ba5e1fc: add    $0x8,%edi
  0x000000011ba5e1ff: mov    %edi,0x104(%rax)
  0x000000011ba5e205: and    $0x1ff8,%edi
  0x000000011ba5e20b: cmp    $0x0,%edi
  0x000000011ba5e20e: je     0x000000011ba5e287  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::hasNext@0 (line 1486)

  0x000000011ba5e214: mov    0x14(%rsi),%eax
  0x000000011ba5e217: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::hasNext@1 (line 1486)

  0x000000011ba5e21b: cmp    $0x0,%rax
  0x000000011ba5e21f: movabs $0x1328a2798,%rax  ;   {metadata(method data for {method} {0x000000013273ad30} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba5e229: movabs $0x140,%rsi
  0x000000011ba5e233: je     0x000000011ba5e243
  0x000000011ba5e239: movabs $0x150,%rsi
  0x000000011ba5e243: mov    (%rax,%rsi,1),%rdi
  0x000000011ba5e247: lea    0x1(%rdi),%rdi
  0x000000011ba5e24b: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba5e24f: je     0x000000011ba5e26f  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::hasNext@4 (line 1486)

  0x000000011ba5e255: movabs $0x1328a2798,%rax  ;   {metadata(method data for {method} {0x000000013273ad30} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba5e25f: incl   0x160(%rax)
  0x000000011ba5e265: mov    $0x1,%eax
  0x000000011ba5e26a: jmpq   0x000000011ba5e274  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::hasNext@8 (line 1486)

  0x000000011ba5e26f: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$HashIterator::hasNext@12 (line 1486)

  0x000000011ba5e274: and    $0x1,%eax
  0x000000011ba5e277: add    $0x30,%rsp
  0x000000011ba5e27b: pop    %rbp
  0x000000011ba5e27c: mov    0x108(%r15),%r10
  0x000000011ba5e283: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5e286: retq   
  0x000000011ba5e287: movabs $0x13273ad30,%r10  ;   {metadata({method} {0x000000013273ad30} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/HashMap$HashIterator&apos;)}
  0x000000011ba5e291: mov    %r10,0x8(%rsp)
  0x000000011ba5e296: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5e29e: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$HashIterator::hasNext@-1 (line 1486)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5e2a3: jmpq   0x000000011ba5e214
  0x000000011ba5e2a8: nop
  0x000000011ba5e2a9: nop
  0x000000011ba5e2aa: mov    0x420(%r15),%rax
  0x000000011ba5e2b1: movabs $0x0,%r10
  0x000000011ba5e2bb: mov    %r10,0x420(%r15)
  0x000000011ba5e2c2: movabs $0x0,%r10
  0x000000011ba5e2cc: mov    %r10,0x428(%r15)
  0x000000011ba5e2d3: add    $0x30,%rsp
  0x000000011ba5e2d7: pop    %rbp
  0x000000011ba5e2d8: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5e2dd: hlt    
  0x000000011ba5e2de: hlt    
  0x000000011ba5e2df: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba5e2e0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba5e2e5: mov    %rsp,-0x28(%rsp)
  0x000000011ba5e2ea: sub    $0x80,%rsp
  0x000000011ba5e2f1: mov    %rax,0x78(%rsp)
  0x000000011ba5e2f6: mov    %rcx,0x70(%rsp)
  0x000000011ba5e2fb: mov    %rdx,0x68(%rsp)
  0x000000011ba5e300: mov    %rbx,0x60(%rsp)
  0x000000011ba5e305: mov    %rbp,0x50(%rsp)
  0x000000011ba5e30a: mov    %rsi,0x48(%rsp)
  0x000000011ba5e30f: mov    %rdi,0x40(%rsp)
  0x000000011ba5e314: mov    %r8,0x38(%rsp)
  0x000000011ba5e319: mov    %r9,0x30(%rsp)
  0x000000011ba5e31e: mov    %r10,0x28(%rsp)
  0x000000011ba5e323: mov    %r11,0x20(%rsp)
  0x000000011ba5e328: mov    %r12,0x18(%rsp)
  0x000000011ba5e32d: mov    %r13,0x10(%rsp)
  0x000000011ba5e332: mov    %r14,0x8(%rsp)
  0x000000011ba5e337: mov    %r15,(%rsp)
  0x000000011ba5e33b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5e345: movabs $0x11ba5e2e5,%rsi  ;   {internal_word}
  0x000000011ba5e34f: mov    %rsp,%rdx
  0x000000011ba5e352: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5e356: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5e35b: hlt    
[Deopt Handler Code]
  0x000000011ba5e35c: movabs $0x11ba5e35c,%r10  ;   {section_word}
  0x000000011ba5e366: push   %r10
  0x000000011ba5e368: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5e36d: hlt    
  0x000000011ba5e36e: hlt    
  0x000000011ba5e36f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 227 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='137' method='java.lang.module.ModuleDescriptor isOpen ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.475' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='119' compiler='c1' level='3' entry='0x000000011ba5e680' size='2280' address='0x000000011ba5e490' relocation_offset='376' insts_offset='496' stub_offset='1520' scopes_data_offset='1736' scopes_pcs_offset='1928' dependencies_offset='2248' nul_chk_table_offset='2256' oops_offset='1704' metadata_offset='1712' method='java.util.HashSet add (Ljava/lang/Object;)Z' bytes='20' count='1260' iicount='1260' stamp='0.476'/>
<print_nmethod stamp='0.476'>
Compiled method (c1)     475  119       3       java.util.HashSet::add (20 bytes)
 total in heap  [0x000000011ba5e490,0x000000011ba5ed78] = 2280
 relocation     [0x000000011ba5e608,0x000000011ba5e670] = 104
 main code      [0x000000011ba5e680,0x000000011ba5ea80] = 1024
 stub code      [0x000000011ba5ea80,0x000000011ba5eb38] = 184
 oops           [0x000000011ba5eb38,0x000000011ba5eb40] = 8
 metadata       [0x000000011ba5eb40,0x000000011ba5eb58] = 24
 scopes data    [0x000000011ba5eb58,0x000000011ba5ec18] = 192
 scopes pcs     [0x000000011ba5ec18,0x000000011ba5ed58] = 320
 dependencies   [0x000000011ba5ed58,0x000000011ba5ed60] = 8
 nul chk table  [0x000000011ba5ed60,0x000000011ba5ed78] = 24
----------------------------------------------------------------------
java/util/HashSet.add(Ljava/lang/Object;)Z  [0x000000011ba5e680, 0x000000011ba5eb38]  1208 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001325ce5b0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashSet&apos;
  # this:     rsi:rsi   = &apos;java/util/HashSet&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0xa0]  (sp of caller)
  0x000000011ba5e680: mov    0x8(%rsi),%r10d
  0x000000011ba5e684: movabs $0x800000000,%r12
  0x000000011ba5e68e: add    %r12,%r10
  0x000000011ba5e691: xor    %r12,%r12
  0x000000011ba5e694: cmp    %rax,%r10
  0x000000011ba5e697: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5e69d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5e6a0: mov    %eax,-0x14000(%rsp)
  0x000000011ba5e6a7: push   %rbp
  0x000000011ba5e6a8: sub    $0x90,%rsp
  0x000000011ba5e6af: movabs $0x1328a2950,%rdi  ;   {metadata(method data for {method} {0x00000001325ce5b0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashSet&apos;)}
  0x000000011ba5e6b9: mov    0x104(%rdi),%ebx
  0x000000011ba5e6bf: add    $0x8,%ebx
  0x000000011ba5e6c2: mov    %ebx,0x104(%rdi)
  0x000000011ba5e6c8: and    $0x1ff8,%ebx
  0x000000011ba5e6ce: cmp    $0x0,%ebx
  0x000000011ba5e6d1: je     0x000000011ba5e9c3  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@0 (line 220)

  0x000000011ba5e6d7: mov    0xc(%rsi),%edi
  0x000000011ba5e6da: shl    $0x3,%rdi          ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@1 (line 220)

  0x000000011ba5e6de: cmp    (%rdi),%rax        ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ; implicit exception: dispatches to 0x000000011ba5e9e4
  0x000000011ba5e6e1: mov    %rdi,%rsi
  0x000000011ba5e6e4: movabs $0x1328a2950,%rbx  ;   {metadata(method data for {method} {0x00000001325ce5b0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashSet&apos;)}
  0x000000011ba5e6ee: mov    0x8(%rsi),%esi
  0x000000011ba5e6f1: movabs $0x800000000,%r12
  0x000000011ba5e6fb: add    %r12,%rsi
  0x000000011ba5e6fe: xor    %r12,%r12
  0x000000011ba5e701: cmp    0x150(%rbx),%rsi
  0x000000011ba5e708: jne    0x000000011ba5e717
  0x000000011ba5e70a: addq   $0x1,0x158(%rbx)
  0x000000011ba5e712: jmpq   0x000000011ba5e77d
  0x000000011ba5e717: cmp    0x160(%rbx),%rsi
  0x000000011ba5e71e: jne    0x000000011ba5e72d
  0x000000011ba5e720: addq   $0x1,0x168(%rbx)
  0x000000011ba5e728: jmpq   0x000000011ba5e77d
  0x000000011ba5e72d: cmpq   $0x0,0x150(%rbx)
  0x000000011ba5e738: jne    0x000000011ba5e751
  0x000000011ba5e73a: mov    %rsi,0x150(%rbx)
  0x000000011ba5e741: movq   $0x1,0x158(%rbx)
  0x000000011ba5e74c: jmpq   0x000000011ba5e77d
  0x000000011ba5e751: cmpq   $0x0,0x160(%rbx)
  0x000000011ba5e75c: jne    0x000000011ba5e775
  0x000000011ba5e75e: mov    %rsi,0x160(%rbx)
  0x000000011ba5e765: movq   $0x1,0x168(%rbx)
  0x000000011ba5e770: jmpq   0x000000011ba5e77d
  0x000000011ba5e775: addq   $0x1,0x140(%rbx)
  0x000000011ba5e77d: movabs $0x1328a0120,%rsi  ;   {metadata(method data for {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e787: mov    0x104(%rsi),%ebx
  0x000000011ba5e78d: add    $0x8,%ebx
  0x000000011ba5e790: mov    %ebx,0x104(%rsi)
  0x000000011ba5e796: and    $0x7ffff8,%ebx
  0x000000011ba5e79c: cmp    $0x0,%ebx
  0x000000011ba5e79f: je     0x000000011ba5e9e9
  0x000000011ba5e7a5: movabs $0x1328a0120,%rsi  ;   {metadata(method data for {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e7af: addq   $0x1,0x140(%rsi)
  0x000000011ba5e7b7: movabs $0x132898ed8,%rsi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e7c1: mov    0x104(%rsi),%ebx
  0x000000011ba5e7c7: add    $0x8,%ebx
  0x000000011ba5e7ca: mov    %ebx,0x104(%rsi)
  0x000000011ba5e7d0: and    $0x7ffff8,%ebx
  0x000000011ba5e7d6: cmp    $0x0,%ebx
  0x000000011ba5e7d9: je     0x000000011ba5ea0a
  0x000000011ba5e7df: cmp    $0x0,%rdx
  0x000000011ba5e7e3: movabs $0x132898ed8,%rsi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e7ed: movabs $0x140,%rbx
  0x000000011ba5e7f7: jne    0x000000011ba5e807
  0x000000011ba5e7fd: movabs $0x150,%rbx
  0x000000011ba5e807: mov    (%rsi,%rbx,1),%rax
  0x000000011ba5e80b: lea    0x1(%rax),%rax
  0x000000011ba5e80f: mov    %rax,(%rsi,%rbx,1)
  0x000000011ba5e813: jne    0x000000011ba5e840  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011ba5e819: movabs $0x132898ed8,%rsi  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e823: incl   0x160(%rsi)
  0x000000011ba5e829: mov    $0x0,%esi
  0x000000011ba5e82e: mov    %rdi,0x78(%rsp)
  0x000000011ba5e833: mov    %rdx,0x80(%rsp)
  0x000000011ba5e83b: jmpq   0x000000011ba5e910  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011ba5e840: mov    %rdi,0x78(%rsp)
  0x000000011ba5e845: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011ba5ea2b
  0x000000011ba5e848: mov    %rdx,%rsi
  0x000000011ba5e84b: movabs $0x132898ed8,%rbx  ;   {metadata(method data for {method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e855: mov    0x8(%rsi),%esi
  0x000000011ba5e858: movabs $0x800000000,%r12
  0x000000011ba5e862: add    %r12,%rsi
  0x000000011ba5e865: xor    %r12,%r12
  0x000000011ba5e868: cmp    0x188(%rbx),%rsi
  0x000000011ba5e86f: jne    0x000000011ba5e87e
  0x000000011ba5e871: addq   $0x1,0x190(%rbx)
  0x000000011ba5e879: jmpq   0x000000011ba5e8e4
  0x000000011ba5e87e: cmp    0x198(%rbx),%rsi
  0x000000011ba5e885: jne    0x000000011ba5e894
  0x000000011ba5e887: addq   $0x1,0x1a0(%rbx)
  0x000000011ba5e88f: jmpq   0x000000011ba5e8e4
  0x000000011ba5e894: cmpq   $0x0,0x188(%rbx)
  0x000000011ba5e89f: jne    0x000000011ba5e8b8
  0x000000011ba5e8a1: mov    %rsi,0x188(%rbx)
  0x000000011ba5e8a8: movq   $0x1,0x190(%rbx)
  0x000000011ba5e8b3: jmpq   0x000000011ba5e8e4
  0x000000011ba5e8b8: cmpq   $0x0,0x198(%rbx)
  0x000000011ba5e8c3: jne    0x000000011ba5e8dc
  0x000000011ba5e8c5: mov    %rsi,0x198(%rbx)
  0x000000011ba5e8cc: movq   $0x1,0x1a0(%rbx)
  0x000000011ba5e8d7: jmpq   0x000000011ba5e8e4
  0x000000011ba5e8dc: addq   $0x1,0x178(%rbx)
  0x000000011ba5e8e4: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011ba5e8e7: mov    %rdx,0x80(%rsp)
  0x000000011ba5e8ef: nopw   0x0(%rax,%rax,1)
  0x000000011ba5e8f5: movabs $0x800007fa8,%rax
  0x000000011ba5e8ff: callq  0x0000000122f760c0  ; ImmutableOopMap{[120]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {virtual_call}
  0x000000011ba5e904: mov    %rax,%rdx
  0x000000011ba5e907: shr    $0x10,%edx
  0x000000011ba5e90a: xor    %rax,%rdx
  0x000000011ba5e90d: mov    %rdx,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011ba5e910: mov    0x78(%rsp),%rbx
  0x000000011ba5e915: mov    0x80(%rsp),%rcx
  0x000000011ba5e91d: mov    %rbx,%rdi
  0x000000011ba5e920: movabs $0x1328a0120,%rdx  ;   {metadata(method data for {method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e92a: addq   $0x1,0x150(%rdx)
  0x000000011ba5e932: movabs $0x70ff07628,%r8   ;   {oop(a &apos;java/lang/Object&apos;{0x000000070ff07628})}
  0x000000011ba5e93c: mov    %rsi,%rdx
  0x000000011ba5e93f: mov    $0x0,%r9d
  0x000000011ba5e945: mov    $0x1,%edi
  0x000000011ba5e94a: mov    %rbx,%rsi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011ba5e94d: xchg   %ax,%ax
  0x000000011ba5e94f: callq  0x000000011ba5b480  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {optimized virtual_call}
  0x000000011ba5e954: cmp    $0x0,%rax
  0x000000011ba5e958: movabs $0x1328a2950,%rax  ;   {metadata(method data for {method} {0x00000001325ce5b0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashSet&apos;)}
  0x000000011ba5e962: movabs $0x178,%rsi
  0x000000011ba5e96c: jne    0x000000011ba5e97c
  0x000000011ba5e972: movabs $0x188,%rsi
  0x000000011ba5e97c: mov    (%rax,%rsi,1),%rdi
  0x000000011ba5e980: lea    0x1(%rdi),%rdi
  0x000000011ba5e984: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba5e988: jne    0x000000011ba5e9a8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@11 (line 220)

  0x000000011ba5e98e: movabs $0x1328a2950,%rax  ;   {metadata(method data for {method} {0x00000001325ce5b0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashSet&apos;)}
  0x000000011ba5e998: incl   0x198(%rax)
  0x000000011ba5e99e: mov    $0x1,%eax
  0x000000011ba5e9a3: jmpq   0x000000011ba5e9ad  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@15 (line 220)

  0x000000011ba5e9a8: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@19 (line 220)

  0x000000011ba5e9ad: and    $0x1,%eax
  0x000000011ba5e9b0: add    $0x90,%rsp
  0x000000011ba5e9b7: pop    %rbp
  0x000000011ba5e9b8: mov    0x108(%r15),%r10
  0x000000011ba5e9bf: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5e9c2: retq   
  0x000000011ba5e9c3: movabs $0x1325ce5b0,%r10  ;   {metadata({method} {0x00000001325ce5b0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashSet&apos;)}
  0x000000011ba5e9cd: mov    %r10,0x8(%rsp)
  0x000000011ba5e9d2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5e9da: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashSet::add@-1 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5e9df: jmpq   0x000000011ba5e6d7
  0x000000011ba5e9e4: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5e9e9: movabs $0x1325d2578,%r10  ;   {metadata({method} {0x00000001325d2578} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5e9f3: mov    %r10,0x8(%rsp)
  0x000000011ba5e9f8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5ea00: callq  0x000000011b59a600  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5ea05: jmpq   0x000000011ba5e7a5
  0x000000011ba5ea0a: movabs $0x1325d17e0,%r10  ;   {metadata({method} {0x00000001325d17e0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011ba5ea14: mov    %r10,0x8(%rsp)
  0x000000011ba5ea19: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5ea21: callq  0x000000011b59a600  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5ea26: jmpq   0x000000011ba5e7df
  0x000000011ba5ea2b: callq  0x000000011b595f20  ; ImmutableOopMap{rdx=Oop [120]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5ea30: nop
  0x000000011ba5ea31: nop
  0x000000011ba5ea32: mov    0x420(%r15),%rax
  0x000000011ba5ea39: movabs $0x0,%r10
  0x000000011ba5ea43: mov    %r10,0x420(%r15)
  0x000000011ba5ea4a: movabs $0x0,%r10
  0x000000011ba5ea54: mov    %r10,0x428(%r15)
  0x000000011ba5ea5b: add    $0x90,%rsp
  0x000000011ba5ea62: pop    %rbp
  0x000000011ba5ea63: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5ea68: hlt    
  0x000000011ba5ea69: hlt    
  0x000000011ba5ea6a: hlt    
  0x000000011ba5ea6b: hlt    
  0x000000011ba5ea6c: hlt    
  0x000000011ba5ea6d: hlt    
  0x000000011ba5ea6e: hlt    
  0x000000011ba5ea6f: hlt    
  0x000000011ba5ea70: hlt    
  0x000000011ba5ea71: hlt    
  0x000000011ba5ea72: hlt    
  0x000000011ba5ea73: hlt    
  0x000000011ba5ea74: hlt    
  0x000000011ba5ea75: hlt    
  0x000000011ba5ea76: hlt    
  0x000000011ba5ea77: hlt    
  0x000000011ba5ea78: hlt    
  0x000000011ba5ea79: hlt    
  0x000000011ba5ea7a: hlt    
  0x000000011ba5ea7b: hlt    
  0x000000011ba5ea7c: hlt    
  0x000000011ba5ea7d: hlt    
  0x000000011ba5ea7e: hlt    
  0x000000011ba5ea7f: hlt    
[Stub Code]
  0x000000011ba5ea80: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5ea85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5ea8f: jmpq   0x000000011ba5ea8f  ;   {runtime_call}
  0x000000011ba5ea94: nop
  0x000000011ba5ea95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5ea9f: jmpq   0x000000011ba5ea9f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5eaa4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5eaa9: mov    %rsp,-0x28(%rsp)
  0x000000011ba5eaae: sub    $0x80,%rsp
  0x000000011ba5eab5: mov    %rax,0x78(%rsp)
  0x000000011ba5eaba: mov    %rcx,0x70(%rsp)
  0x000000011ba5eabf: mov    %rdx,0x68(%rsp)
  0x000000011ba5eac4: mov    %rbx,0x60(%rsp)
  0x000000011ba5eac9: mov    %rbp,0x50(%rsp)
  0x000000011ba5eace: mov    %rsi,0x48(%rsp)
  0x000000011ba5ead3: mov    %rdi,0x40(%rsp)
  0x000000011ba5ead8: mov    %r8,0x38(%rsp)
  0x000000011ba5eadd: mov    %r9,0x30(%rsp)
  0x000000011ba5eae2: mov    %r10,0x28(%rsp)
  0x000000011ba5eae7: mov    %r11,0x20(%rsp)
  0x000000011ba5eaec: mov    %r12,0x18(%rsp)
  0x000000011ba5eaf1: mov    %r13,0x10(%rsp)
  0x000000011ba5eaf6: mov    %r14,0x8(%rsp)
  0x000000011ba5eafb: mov    %r15,(%rsp)
  0x000000011ba5eaff: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5eb09: movabs $0x11ba5eaa9,%rsi  ;   {internal_word}
  0x000000011ba5eb13: mov    %rsp,%rdx
  0x000000011ba5eb16: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5eb1a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5eb1f: hlt    
[Deopt Handler Code]
  0x000000011ba5eb20: movabs $0x11ba5eb20,%r10  ;   {section_word}
  0x000000011ba5eb2a: push   %r10
  0x000000011ba5eb2c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5eb31: hlt    
  0x000000011ba5eb32: hlt    
  0x000000011ba5eb33: hlt    
  0x000000011ba5eb34: hlt    
  0x000000011ba5eb35: hlt    
  0x000000011ba5eb36: hlt    
  0x000000011ba5eb37: hlt    

ImmutableOopMap{[120]=Oop [128]=Oop }pc offsets: 644 
ImmutableOopMap{}pc offsets: 724 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 863 
ImmutableOopMap{rdx=Oop rdi=Oop }pc offsets: 873 901 934 
ImmutableOopMap{rdx=Oop [120]=Oop }pc offsets: 944 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='138' method='java.lang.Module getDescriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='128' iicount='128' level='1' stamp='0.481' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='125' compiler='c1' level='3' entry='0x000000011ba5ef40' size='1056' address='0x000000011ba5ed90' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='872' scopes_pcs_offset='920' dependencies_offset='1048' metadata_offset='864' method='java.util.ImmutableCollections$Set12$1 hasNext ()Z' bytes='13' count='1335' iicount='1335' stamp='0.482'/>
<print_nmethod stamp='0.482'>
Compiled method (c1)     481  125       3       java.util.ImmutableCollections$Set12$1::hasNext (13 bytes)
 total in heap  [0x000000011ba5ed90,0x000000011ba5f1b0] = 1056
 relocation     [0x000000011ba5ef08,0x000000011ba5ef38] = 48
 main code      [0x000000011ba5ef40,0x000000011ba5f060] = 288
 stub code      [0x000000011ba5f060,0x000000011ba5f0f0] = 144
 metadata       [0x000000011ba5f0f0,0x000000011ba5f0f8] = 8
 scopes data    [0x000000011ba5f0f8,0x000000011ba5f128] = 48
 scopes pcs     [0x000000011ba5f128,0x000000011ba5f1a8] = 128
 dependencies   [0x000000011ba5f1a8,0x000000011ba5f1b0] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12$1.hasNext()Z  [0x000000011ba5ef40, 0x000000011ba5f0f0]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013288a800} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba5ef40: mov    0x8(%rsi),%r10d
  0x000000011ba5ef44: movabs $0x800000000,%r12
  0x000000011ba5ef4e: add    %r12,%r10
  0x000000011ba5ef51: xor    %r12,%r12
  0x000000011ba5ef54: cmp    %rax,%r10
  0x000000011ba5ef57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5ef5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5ef60: mov    %eax,-0x14000(%rsp)
  0x000000011ba5ef67: push   %rbp
  0x000000011ba5ef68: sub    $0x30,%rsp
  0x000000011ba5ef6c: movabs $0x1328a4b70,%rax  ;   {metadata(method data for {method} {0x000000013288a800} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5ef76: mov    0x104(%rax),%edi
  0x000000011ba5ef7c: add    $0x8,%edi
  0x000000011ba5ef7f: mov    %edi,0x104(%rax)
  0x000000011ba5ef85: and    $0x1ff8,%edi
  0x000000011ba5ef8b: cmp    $0x0,%edi
  0x000000011ba5ef8e: je     0x000000011ba5f002  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@0 (line 530)

  0x000000011ba5ef94: mov    0xc(%rsi),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@1 (line 530)

  0x000000011ba5ef97: cmp    $0x0,%eax
  0x000000011ba5ef9a: movabs $0x1328a4b70,%rax  ;   {metadata(method data for {method} {0x000000013288a800} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5efa4: movabs $0x140,%rsi
  0x000000011ba5efae: jle    0x000000011ba5efbe
  0x000000011ba5efb4: movabs $0x150,%rsi
  0x000000011ba5efbe: mov    (%rax,%rsi,1),%rdi
  0x000000011ba5efc2: lea    0x1(%rdi),%rdi
  0x000000011ba5efc6: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba5efca: jle    0x000000011ba5efea  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@4 (line 530)

  0x000000011ba5efd0: movabs $0x1328a4b70,%rax  ;   {metadata(method data for {method} {0x000000013288a800} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5efda: incl   0x160(%rax)
  0x000000011ba5efe0: mov    $0x1,%eax
  0x000000011ba5efe5: jmpq   0x000000011ba5efef  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@8 (line 530)

  0x000000011ba5efea: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@12 (line 530)

  0x000000011ba5efef: and    $0x1,%eax
  0x000000011ba5eff2: add    $0x30,%rsp
  0x000000011ba5eff6: pop    %rbp
  0x000000011ba5eff7: mov    0x108(%r15),%r10
  0x000000011ba5effe: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5f001: retq   
  0x000000011ba5f002: movabs $0x13288a800,%r10  ;   {metadata({method} {0x000000013288a800} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f00c: mov    %r10,0x8(%rsp)
  0x000000011ba5f011: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5f019: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@-1 (line 530)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5f01e: jmpq   0x000000011ba5ef94
  0x000000011ba5f023: nop
  0x000000011ba5f024: nop
  0x000000011ba5f025: mov    0x420(%r15),%rax
  0x000000011ba5f02c: movabs $0x0,%r10
  0x000000011ba5f036: mov    %r10,0x420(%r15)
  0x000000011ba5f03d: movabs $0x0,%r10
  0x000000011ba5f047: mov    %r10,0x428(%r15)
  0x000000011ba5f04e: add    $0x30,%rsp
  0x000000011ba5f052: pop    %rbp
  0x000000011ba5f053: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5f058: hlt    
  0x000000011ba5f059: hlt    
  0x000000011ba5f05a: hlt    
  0x000000011ba5f05b: hlt    
  0x000000011ba5f05c: hlt    
  0x000000011ba5f05d: hlt    
  0x000000011ba5f05e: hlt    
  0x000000011ba5f05f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba5f060: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba5f065: mov    %rsp,-0x28(%rsp)
  0x000000011ba5f06a: sub    $0x80,%rsp
  0x000000011ba5f071: mov    %rax,0x78(%rsp)
  0x000000011ba5f076: mov    %rcx,0x70(%rsp)
  0x000000011ba5f07b: mov    %rdx,0x68(%rsp)
  0x000000011ba5f080: mov    %rbx,0x60(%rsp)
  0x000000011ba5f085: mov    %rbp,0x50(%rsp)
  0x000000011ba5f08a: mov    %rsi,0x48(%rsp)
  0x000000011ba5f08f: mov    %rdi,0x40(%rsp)
  0x000000011ba5f094: mov    %r8,0x38(%rsp)
  0x000000011ba5f099: mov    %r9,0x30(%rsp)
  0x000000011ba5f09e: mov    %r10,0x28(%rsp)
  0x000000011ba5f0a3: mov    %r11,0x20(%rsp)
  0x000000011ba5f0a8: mov    %r12,0x18(%rsp)
  0x000000011ba5f0ad: mov    %r13,0x10(%rsp)
  0x000000011ba5f0b2: mov    %r14,0x8(%rsp)
  0x000000011ba5f0b7: mov    %r15,(%rsp)
  0x000000011ba5f0bb: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5f0c5: movabs $0x11ba5f065,%rsi  ;   {internal_word}
  0x000000011ba5f0cf: mov    %rsp,%rdx
  0x000000011ba5f0d2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5f0d6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5f0db: hlt    
[Deopt Handler Code]
  0x000000011ba5f0dc: movabs $0x11ba5f0dc,%r10  ;   {section_word}
  0x000000011ba5f0e6: push   %r10
  0x000000011ba5f0e8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5f0ed: hlt    
  0x000000011ba5f0ee: hlt    
  0x000000011ba5f0ef: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 222 </print_nmethod>
<nmethod compile_id='108' compiler='c1' level='1' entry='0x0000000122f7ed40' size='800' address='0x0000000122f7eb90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ResolvedModule reference ()Ljava/lang/module/ModuleReference;' bytes='5' count='830' iicount='830' stamp='0.484'/>
<print_nmethod stamp='0.484'>
Compiled method (c1)     483  108       1       java.lang.module.ResolvedModule::reference (5 bytes)
 total in heap  [0x0000000122f7eb90,0x0000000122f7eeb0] = 800
 relocation     [0x0000000122f7ed08,0x0000000122f7ed30] = 40
 main code      [0x0000000122f7ed40,0x0000000122f7edc0] = 128
 stub code      [0x0000000122f7edc0,0x0000000122f7ee50] = 144
 metadata       [0x0000000122f7ee50,0x0000000122f7ee58] = 8
 scopes data    [0x0000000122f7ee58,0x0000000122f7ee68] = 16
 scopes pcs     [0x0000000122f7ee68,0x0000000122f7eea8] = 64
 dependencies   [0x0000000122f7eea8,0x0000000122f7eeb0] = 8
----------------------------------------------------------------------
java/lang/module/ResolvedModule.reference()Ljava/lang/module/ModuleReference;  [0x0000000122f7ed40, 0x0000000122f7ee50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001328a1ae0} &apos;reference&apos; &apos;()Ljava/lang/module/ModuleReference;&apos; in &apos;java/lang/module/ResolvedModule&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7ed40: mov    0x8(%rsi),%r10d
  0x0000000122f7ed44: movabs $0x800000000,%r12
  0x0000000122f7ed4e: add    %r12,%r10
  0x0000000122f7ed51: xor    %r12,%r12
  0x0000000122f7ed54: cmp    %rax,%r10
  0x0000000122f7ed57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7ed5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7ed60: mov    %eax,-0x14000(%rsp)
  0x0000000122f7ed67: push   %rbp
  0x0000000122f7ed68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ResolvedModule::reference@0 (line 68)

  0x0000000122f7ed6c: mov    0x10(%rsi),%eax
  0x0000000122f7ed6f: shl    $0x3,%rax          ;*getfield mref {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ResolvedModule::reference@1 (line 68)

  0x0000000122f7ed73: add    $0x30,%rsp
  0x0000000122f7ed77: pop    %rbp
  0x0000000122f7ed78: mov    0x108(%r15),%r10
  0x0000000122f7ed7f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7ed82: retq   
  0x0000000122f7ed83: nop
  0x0000000122f7ed84: nop
  0x0000000122f7ed85: mov    0x420(%r15),%rax
  0x0000000122f7ed8c: movabs $0x0,%r10
  0x0000000122f7ed96: mov    %r10,0x420(%r15)
  0x0000000122f7ed9d: movabs $0x0,%r10
  0x0000000122f7eda7: mov    %r10,0x428(%r15)
  0x0000000122f7edae: add    $0x30,%rsp
  0x0000000122f7edb2: pop    %rbp
  0x0000000122f7edb3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7edb8: hlt    
  0x0000000122f7edb9: hlt    
  0x0000000122f7edba: hlt    
  0x0000000122f7edbb: hlt    
  0x0000000122f7edbc: hlt    
  0x0000000122f7edbd: hlt    
  0x0000000122f7edbe: hlt    
  0x0000000122f7edbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7edc0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7edc5: mov    %rsp,-0x28(%rsp)
  0x0000000122f7edca: sub    $0x80,%rsp
  0x0000000122f7edd1: mov    %rax,0x78(%rsp)
  0x0000000122f7edd6: mov    %rcx,0x70(%rsp)
  0x0000000122f7eddb: mov    %rdx,0x68(%rsp)
  0x0000000122f7ede0: mov    %rbx,0x60(%rsp)
  0x0000000122f7ede5: mov    %rbp,0x50(%rsp)
  0x0000000122f7edea: mov    %rsi,0x48(%rsp)
  0x0000000122f7edef: mov    %rdi,0x40(%rsp)
  0x0000000122f7edf4: mov    %r8,0x38(%rsp)
  0x0000000122f7edf9: mov    %r9,0x30(%rsp)
  0x0000000122f7edfe: mov    %r10,0x28(%rsp)
  0x0000000122f7ee03: mov    %r11,0x20(%rsp)
  0x0000000122f7ee08: mov    %r12,0x18(%rsp)
  0x0000000122f7ee0d: mov    %r13,0x10(%rsp)
  0x0000000122f7ee12: mov    %r14,0x8(%rsp)
  0x0000000122f7ee17: mov    %r15,(%rsp)
  0x0000000122f7ee1b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7ee25: movabs $0x122f7edc5,%rsi  ;   {internal_word}
  0x0000000122f7ee2f: mov    %rsp,%rdx
  0x0000000122f7ee32: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7ee36: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7ee3b: hlt    
[Deopt Handler Code]
  0x0000000122f7ee3c: movabs $0x122f7ee3c,%r10  ;   {section_word}
  0x0000000122f7ee46: push   %r10
  0x0000000122f7ee48: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7ee4d: hlt    
  0x0000000122f7ee4e: hlt    
  0x0000000122f7ee4f: hlt    
</print_nmethod>
<nmethod compile_id='132' compiler='c1' level='3' entry='0x000000011ba5f3c0' size='1040' address='0x000000011ba5f210' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='864' scopes_pcs_offset='904' dependencies_offset='1016' nul_chk_table_offset='1024' metadata_offset='856' method='java.util.HashMap$KeyIterator next ()Ljava/lang/Object;' bytes='8' count='997' iicount='997' stamp='0.485'/>
<print_nmethod stamp='0.485'>
Compiled method (c1)     485  132       3       java.util.HashMap$KeyIterator::next (8 bytes)
 total in heap  [0x000000011ba5f210,0x000000011ba5f620] = 1040
 relocation     [0x000000011ba5f388,0x000000011ba5f3c0] = 56
 main code      [0x000000011ba5f3c0,0x000000011ba5f4c0] = 256
 stub code      [0x000000011ba5f4c0,0x000000011ba5f568] = 168
 metadata       [0x000000011ba5f568,0x000000011ba5f570] = 8
 scopes data    [0x000000011ba5f570,0x000000011ba5f598] = 40
 scopes pcs     [0x000000011ba5f598,0x000000011ba5f608] = 112
 dependencies   [0x000000011ba5f608,0x000000011ba5f610] = 8
 nul chk table  [0x000000011ba5f610,0x000000011ba5f620] = 16
----------------------------------------------------------------------
java/util/HashMap$KeyIterator.next()Ljava/lang/Object;  [0x000000011ba5f3c0, 0x000000011ba5f568]  424 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013273a710} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/HashMap$KeyIterator&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba5f3c0: mov    0x8(%rsi),%r10d
  0x000000011ba5f3c4: movabs $0x800000000,%r12
  0x000000011ba5f3ce: add    %r12,%r10
  0x000000011ba5f3d1: xor    %r12,%r12
  0x000000011ba5f3d4: cmp    %rax,%r10
  0x000000011ba5f3d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5f3dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5f3e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba5f3e7: push   %rbp
  0x000000011ba5f3e8: sub    $0x30,%rsp
  0x000000011ba5f3ec: movabs $0x1328a3c88,%rdi  ;   {metadata(method data for {method} {0x000000013273a710} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/HashMap$KeyIterator&apos;)}
  0x000000011ba5f3f6: mov    0x104(%rdi),%ebx
  0x000000011ba5f3fc: add    $0x8,%ebx
  0x000000011ba5f3ff: mov    %ebx,0x104(%rdi)
  0x000000011ba5f405: and    $0x1ff8,%ebx
  0x000000011ba5f40b: cmp    $0x0,%ebx
  0x000000011ba5f40e: je     0x000000011ba5f44b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$KeyIterator::next@0 (line 1516)

  0x000000011ba5f414: mov    %rsi,%rdi
  0x000000011ba5f417: movabs $0x1328a3c88,%rbx  ;   {metadata(method data for {method} {0x000000013273a710} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/HashMap$KeyIterator&apos;)}
  0x000000011ba5f421: addq   $0x1,0x140(%rbx)
  0x000000011ba5f429: nopw   0x0(%rax,%rax,1)
  0x000000011ba5f42f: callq  0x000000011b4d1f00  ; ImmutableOopMap{}
                                                ;*invokevirtual nextNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$KeyIterator::next@1 (line 1516)
                                                ;   {optimized virtual_call}
  0x000000011ba5f434: mov    0x10(%rax),%eax    ; implicit exception: dispatches to 0x000000011ba5f469
  0x000000011ba5f437: shl    $0x3,%rax          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$KeyIterator::next@4 (line 1516)

  0x000000011ba5f43b: add    $0x30,%rsp
  0x000000011ba5f43f: pop    %rbp
  0x000000011ba5f440: mov    0x108(%r15),%r10
  0x000000011ba5f447: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5f44a: retq   
  0x000000011ba5f44b: movabs $0x13273a710,%r10  ;   {metadata({method} {0x000000013273a710} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/HashMap$KeyIterator&apos;)}
  0x000000011ba5f455: mov    %r10,0x8(%rsp)
  0x000000011ba5f45a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5f462: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$KeyIterator::next@-1 (line 1516)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5f467: jmp    0x000000011ba5f414
  0x000000011ba5f469: callq  0x000000011b595f20  ; ImmutableOopMap{}
                                                ;*getfield key {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$KeyIterator::next@4 (line 1516)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5f46e: nop
  0x000000011ba5f46f: nop
  0x000000011ba5f470: mov    0x420(%r15),%rax
  0x000000011ba5f477: movabs $0x0,%r10
  0x000000011ba5f481: mov    %r10,0x420(%r15)
  0x000000011ba5f488: movabs $0x0,%r10
  0x000000011ba5f492: mov    %r10,0x428(%r15)
  0x000000011ba5f499: add    $0x30,%rsp
  0x000000011ba5f49d: pop    %rbp
  0x000000011ba5f49e: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5f4a3: hlt    
  0x000000011ba5f4a4: hlt    
  0x000000011ba5f4a5: hlt    
  0x000000011ba5f4a6: hlt    
  0x000000011ba5f4a7: hlt    
  0x000000011ba5f4a8: hlt    
  0x000000011ba5f4a9: hlt    
  0x000000011ba5f4aa: hlt    
  0x000000011ba5f4ab: hlt    
  0x000000011ba5f4ac: hlt    
  0x000000011ba5f4ad: hlt    
  0x000000011ba5f4ae: hlt    
  0x000000011ba5f4af: hlt    
  0x000000011ba5f4b0: hlt    
  0x000000011ba5f4b1: hlt    
  0x000000011ba5f4b2: hlt    
  0x000000011ba5f4b3: hlt    
  0x000000011ba5f4b4: hlt    
  0x000000011ba5f4b5: hlt    
  0x000000011ba5f4b6: hlt    
  0x000000011ba5f4b7: hlt    
  0x000000011ba5f4b8: hlt    
  0x000000011ba5f4b9: hlt    
  0x000000011ba5f4ba: hlt    
  0x000000011ba5f4bb: hlt    
  0x000000011ba5f4bc: hlt    
  0x000000011ba5f4bd: hlt    
  0x000000011ba5f4be: hlt    
  0x000000011ba5f4bf: hlt    
[Stub Code]
  0x000000011ba5f4c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5f4c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5f4cf: jmpq   0x000000011ba5f4cf  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5f4d4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5f4d9: mov    %rsp,-0x28(%rsp)
  0x000000011ba5f4de: sub    $0x80,%rsp
  0x000000011ba5f4e5: mov    %rax,0x78(%rsp)
  0x000000011ba5f4ea: mov    %rcx,0x70(%rsp)
  0x000000011ba5f4ef: mov    %rdx,0x68(%rsp)
  0x000000011ba5f4f4: mov    %rbx,0x60(%rsp)
  0x000000011ba5f4f9: mov    %rbp,0x50(%rsp)
  0x000000011ba5f4fe: mov    %rsi,0x48(%rsp)
  0x000000011ba5f503: mov    %rdi,0x40(%rsp)
  0x000000011ba5f508: mov    %r8,0x38(%rsp)
  0x000000011ba5f50d: mov    %r9,0x30(%rsp)
  0x000000011ba5f512: mov    %r10,0x28(%rsp)
  0x000000011ba5f517: mov    %r11,0x20(%rsp)
  0x000000011ba5f51c: mov    %r12,0x18(%rsp)
  0x000000011ba5f521: mov    %r13,0x10(%rsp)
  0x000000011ba5f526: mov    %r14,0x8(%rsp)
  0x000000011ba5f52b: mov    %r15,(%rsp)
  0x000000011ba5f52f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5f539: movabs $0x11ba5f4d9,%rsi  ;   {internal_word}
  0x000000011ba5f543: mov    %rsp,%rdx
  0x000000011ba5f546: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5f54a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5f54f: hlt    
[Deopt Handler Code]
  0x000000011ba5f550: movabs $0x11ba5f550,%r10  ;   {section_word}
  0x000000011ba5f55a: push   %r10
  0x000000011ba5f55c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5f561: hlt    
  0x000000011ba5f562: hlt    
  0x000000011ba5f563: hlt    
  0x000000011ba5f564: hlt    
  0x000000011ba5f565: hlt    
  0x000000011ba5f566: hlt    
  0x000000011ba5f567: hlt    

ImmutableOopMap{}pc offsets: 116 
ImmutableOopMap{rsi=Oop }pc offsets: 167 
ImmutableOopMap{}pc offsets: 174 </print_nmethod>
<nmethod compile_id='133' compiler='c1' level='3' entry='0x000000011ba5f860' size='1784' address='0x000000011ba5f690' relocation_offset='376' insts_offset='464' stub_offset='1008' scopes_data_offset='1184' scopes_pcs_offset='1336' dependencies_offset='1752' nul_chk_table_offset='1760' metadata_offset='1176' method='java.util.ImmutableCollections$Set12$1 next ()Ljava/lang/Object;' bytes='92' count='730' iicount='730' stamp='0.489'/>
<print_nmethod stamp='0.489'>
Compiled method (c1)     488  133       3       java.util.ImmutableCollections$Set12$1::next (92 bytes)
 total in heap  [0x000000011ba5f690,0x000000011ba5fd88] = 1784
 relocation     [0x000000011ba5f808,0x000000011ba5f858] = 80
 main code      [0x000000011ba5f860,0x000000011ba5fa80] = 544
 stub code      [0x000000011ba5fa80,0x000000011ba5fb28] = 168
 metadata       [0x000000011ba5fb28,0x000000011ba5fb30] = 8
 scopes data    [0x000000011ba5fb30,0x000000011ba5fbc8] = 152
 scopes pcs     [0x000000011ba5fbc8,0x000000011ba5fd68] = 416
 dependencies   [0x000000011ba5fd68,0x000000011ba5fd70] = 8
 nul chk table  [0x000000011ba5fd70,0x000000011ba5fd88] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12$1.next()Ljava/lang/Object;  [0x000000011ba5f860, 0x000000011ba5fb28]  712 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba5f860: mov    0x8(%rsi),%r10d
  0x000000011ba5f864: movabs $0x800000000,%r12
  0x000000011ba5f86e: add    %r12,%r10
  0x000000011ba5f871: xor    %r12,%r12
  0x000000011ba5f874: cmp    %rax,%r10
  0x000000011ba5f877: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5f87d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5f880: mov    %eax,-0x14000(%rsp)
  0x000000011ba5f887: push   %rbp
  0x000000011ba5f888: sub    $0x30,%rsp
  0x000000011ba5f88c: movabs $0x1328b1958,%rax  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f896: mov    0x104(%rax),%edx
  0x000000011ba5f89c: add    $0x8,%edx
  0x000000011ba5f89f: mov    %edx,0x104(%rax)
  0x000000011ba5f8a5: and    $0x1ff8,%edx
  0x000000011ba5f8ab: cmp    $0x0,%edx
  0x000000011ba5f8ae: je     0x000000011ba5f9f6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@0 (line 535)

  0x000000011ba5f8b4: mov    0xc(%rsi),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@1 (line 535)

  0x000000011ba5f8b7: cmp    $0x1,%eax
  0x000000011ba5f8ba: movabs $0x1328b1958,%rdx  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f8c4: movabs $0x140,%rdi
  0x000000011ba5f8ce: jne    0x000000011ba5f8de
  0x000000011ba5f8d4: movabs $0x150,%rdi
  0x000000011ba5f8de: mov    (%rdx,%rdi,1),%rbx
  0x000000011ba5f8e2: lea    0x1(%rbx),%rbx
  0x000000011ba5f8e6: mov    %rbx,(%rdx,%rdi,1)
  0x000000011ba5f8ea: jne    0x000000011ba5f90c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@5 (line 535)

  0x000000011ba5f8f0: movl   $0x0,0xc(%rsi)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@10 (line 536)

  0x000000011ba5f8f7: movabs $0x1328b1958,%rax  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f901: incl   0x160(%rax)
  0x000000011ba5f907: jmpq   0x000000011ba5f98a  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@16 (line 537)

  0x000000011ba5f90c: cmp    $0x2,%eax
  0x000000011ba5f90f: movabs $0x1328b1958,%rax  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f919: movabs $0x1b8,%rdx
  0x000000011ba5f923: jne    0x000000011ba5f933
  0x000000011ba5f929: movabs $0x1c8,%rdx
  0x000000011ba5f933: mov    (%rax,%rdx,1),%rdi
  0x000000011ba5f937: lea    0x1(%rdi),%rdi
  0x000000011ba5f93b: mov    %rdi,(%rax,%rdx,1)
  0x000000011ba5f93f: jne    0x000000011ba5f9b8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@52 (line 538)

  0x000000011ba5f945: movl   $0x1,0xc(%rsi)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@57 (line 539)

  0x000000011ba5f94c: movabs $0x1328b1958,%rax  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f956: incl   0x1e8(%rax)        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@63 (line 540)

  0x000000011ba5f95c: mov    0x10(%rsi),%eax
  0x000000011ba5f95f: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@67 (line 540)

  0x000000011ba5f963: mov    0x10(%rax),%eax    ; implicit exception: dispatches to 0x000000011ba5fa17
  0x000000011ba5f966: shl    $0x3,%rax          ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@70 (line 540)

  0x000000011ba5f96a: movabs $0x1328b1958,%rdx  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f974: incl   0x1f8(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@73 (line 540)

  0x000000011ba5f97a: add    $0x30,%rsp
  0x000000011ba5f97e: pop    %rbp
  0x000000011ba5f97f: mov    0x108(%r15),%r10
  0x000000011ba5f986: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5f989: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@83 (line 540)

  0x000000011ba5f98a: mov    0x10(%rsi),%eax
  0x000000011ba5f98d: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@30 (line 537)

  0x000000011ba5f991: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000011ba5fa1c
  0x000000011ba5f994: shl    $0x3,%rax          ;*getfield e0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@33 (line 537)

  0x000000011ba5f998: movabs $0x1328b1958,%rdx  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f9a2: incl   0x1a0(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@36 (line 537)

  0x000000011ba5f9a8: add    $0x30,%rsp
  0x000000011ba5f9ac: pop    %rbp
  0x000000011ba5f9ad: mov    0x108(%r15),%r10
  0x000000011ba5f9b4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba5f9b7: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@46 (line 537)

  0x000000011ba5f9b8: jmpq   0x000000011ba5fa30  ;   {no_reloc}
  0x000000011ba5f9bd: add    %al,(%rax)
  0x000000011ba5f9bf: add    %al,(%rax)
  0x000000011ba5f9c1: add    %ch,%cl
  0x000000011ba5f9c3: jae    0x000000011ba5f9c5
  0x000000011ba5f9c5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@84 (line 542)

  0x000000011ba5f9c7: mov    %rax,%rsi
  0x000000011ba5f9ca: movabs $0x1328b1958,%rdi  ;   {metadata(method data for {method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5f9d4: addq   $0x1,0x210(%rdi)
  0x000000011ba5f9dc: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@88 (line 542)

  0x000000011ba5f9df: mov    %rax,0x20(%rsp)
  0x000000011ba5f9e4: data16 xchg %ax,%ax
  0x000000011ba5f9e7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@88 (line 542)
                                                ;   {optimized virtual_call}
  0x000000011ba5f9ec: mov    0x20(%rsp),%rax
  0x000000011ba5f9f1: jmpq   0x000000011ba5fa6f
  0x000000011ba5f9f6: movabs $0x13288a910,%r10  ;   {metadata({method} {0x000000013288a910} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x000000011ba5fa00: mov    %r10,0x8(%rsp)
  0x000000011ba5fa05: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba5fa0d: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12$1::next@-1 (line 535)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba5fa12: jmpq   0x000000011ba5f8b4
  0x000000011ba5fa17: callq  0x000000011b595f20  ; ImmutableOopMap{}
                                                ;*getfield e1 {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@70 (line 540)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5fa1c: callq  0x000000011b595f20  ; ImmutableOopMap{}
                                                ;*getfield e0 {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@33 (line 537)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba5fa21: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba5fa2b: mov    $0xa050f00,%eax
  0x000000011ba5fa30: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@84 (line 542)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba5fa35: jmp    0x000000011ba5f9b8
  0x000000011ba5fa37: nop
  0x000000011ba5fa38: nop
  0x000000011ba5fa39: nop
  0x000000011ba5fa3a: mov    %rdx,%rdx
  0x000000011ba5fa3d: callq  0x000000011b596480  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@84 (line 542)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011ba5fa42: jmp    0x000000011ba5f9c7
  0x000000011ba5fa44: nop
  0x000000011ba5fa45: nop
  0x000000011ba5fa46: mov    0x420(%r15),%rax
  0x000000011ba5fa4d: movabs $0x0,%r10
  0x000000011ba5fa57: mov    %r10,0x420(%r15)
  0x000000011ba5fa5e: movabs $0x0,%r10
  0x000000011ba5fa68: mov    %r10,0x428(%r15)
  0x000000011ba5fa6f: add    $0x30,%rsp
  0x000000011ba5fa73: pop    %rbp
  0x000000011ba5fa74: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba5fa79: hlt    
  0x000000011ba5fa7a: hlt    
  0x000000011ba5fa7b: hlt    
  0x000000011ba5fa7c: hlt    
  0x000000011ba5fa7d: hlt    
  0x000000011ba5fa7e: hlt    
  0x000000011ba5fa7f: hlt    
[Stub Code]
  0x000000011ba5fa80: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba5fa85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba5fa8f: jmpq   0x000000011ba5fa8f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba5fa94: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba5fa99: mov    %rsp,-0x28(%rsp)
  0x000000011ba5fa9e: sub    $0x80,%rsp
  0x000000011ba5faa5: mov    %rax,0x78(%rsp)
  0x000000011ba5faaa: mov    %rcx,0x70(%rsp)
  0x000000011ba5faaf: mov    %rdx,0x68(%rsp)
  0x000000011ba5fab4: mov    %rbx,0x60(%rsp)
  0x000000011ba5fab9: mov    %rbp,0x50(%rsp)
  0x000000011ba5fabe: mov    %rsi,0x48(%rsp)
  0x000000011ba5fac3: mov    %rdi,0x40(%rsp)
  0x000000011ba5fac8: mov    %r8,0x38(%rsp)
  0x000000011ba5facd: mov    %r9,0x30(%rsp)
  0x000000011ba5fad2: mov    %r10,0x28(%rsp)
  0x000000011ba5fad7: mov    %r11,0x20(%rsp)
  0x000000011ba5fadc: mov    %r12,0x18(%rsp)
  0x000000011ba5fae1: mov    %r13,0x10(%rsp)
  0x000000011ba5fae6: mov    %r14,0x8(%rsp)
  0x000000011ba5faeb: mov    %r15,(%rsp)
  0x000000011ba5faef: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba5faf9: movabs $0x11ba5fa99,%rsi  ;   {internal_word}
  0x000000011ba5fb03: mov    %rsp,%rdx
  0x000000011ba5fb06: and    $0xfffffffffffffff0,%rsp
  0x000000011ba5fb0a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba5fb0f: hlt    
[Deopt Handler Code]
  0x000000011ba5fb10: movabs $0x11ba5fb10,%r10  ;   {section_word}
  0x000000011ba5fb1a: push   %r10
  0x000000011ba5fb1c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba5fb21: hlt    
  0x000000011ba5fb22: hlt    
  0x000000011ba5fb23: hlt    
  0x000000011ba5fb24: hlt    
  0x000000011ba5fb25: hlt    
  0x000000011ba5fb26: hlt    
  0x000000011ba5fb27: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 396 
ImmutableOopMap{rsi=Oop }pc offsets: 434 
ImmutableOopMap{}pc offsets: 444 449 469 482 </print_nmethod>
<nmethod compile_id='128' compiler='c1' level='1' entry='0x0000000122f7f0c0' size='800' address='0x0000000122f7ef10' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='511' iicount='511' stamp='0.493'/>
<print_nmethod stamp='0.493'>
Compiled method (c1)     492  128       1       java.lang.module.ModuleDescriptor::isAutomatic (5 bytes)
 total in heap  [0x0000000122f7ef10,0x0000000122f7f230] = 800
 relocation     [0x0000000122f7f088,0x0000000122f7f0b0] = 40
 main code      [0x0000000122f7f0c0,0x0000000122f7f140] = 128
 stub code      [0x0000000122f7f140,0x0000000122f7f1d0] = 144
 metadata       [0x0000000122f7f1d0,0x0000000122f7f1d8] = 8
 scopes data    [0x0000000122f7f1d8,0x0000000122f7f1e8] = 16
 scopes pcs     [0x0000000122f7f1e8,0x0000000122f7f228] = 64
 dependencies   [0x0000000122f7f228,0x0000000122f7f230] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.isAutomatic()Z  [0x0000000122f7f0c0, 0x0000000122f7f1d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132697e38} &apos;isAutomatic&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7f0c0: mov    0x8(%rsi),%r10d
  0x0000000122f7f0c4: movabs $0x800000000,%r12
  0x0000000122f7f0ce: add    %r12,%r10
  0x0000000122f7f0d1: xor    %r12,%r12
  0x0000000122f7f0d4: cmp    %rax,%r10
  0x0000000122f7f0d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7f0dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7f0e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7f0e7: push   %rbp
  0x0000000122f7f0e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isAutomatic@0 (line 1353)

  0x0000000122f7f0ec: movsbl 0x11(%rsi),%eax    ;*getfield automatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isAutomatic@1 (line 1353)

  0x0000000122f7f0f0: and    $0x1,%eax
  0x0000000122f7f0f3: add    $0x30,%rsp
  0x0000000122f7f0f7: pop    %rbp
  0x0000000122f7f0f8: mov    0x108(%r15),%r10
  0x0000000122f7f0ff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7f102: retq   
  0x0000000122f7f103: nop
  0x0000000122f7f104: nop
  0x0000000122f7f105: mov    0x420(%r15),%rax
  0x0000000122f7f10c: movabs $0x0,%r10
  0x0000000122f7f116: mov    %r10,0x420(%r15)
  0x0000000122f7f11d: movabs $0x0,%r10
  0x0000000122f7f127: mov    %r10,0x428(%r15)
  0x0000000122f7f12e: add    $0x30,%rsp
  0x0000000122f7f132: pop    %rbp
  0x0000000122f7f133: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7f138: hlt    
  0x0000000122f7f139: hlt    
  0x0000000122f7f13a: hlt    
  0x0000000122f7f13b: hlt    
  0x0000000122f7f13c: hlt    
  0x0000000122f7f13d: hlt    
  0x0000000122f7f13e: hlt    
  0x0000000122f7f13f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7f140: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7f145: mov    %rsp,-0x28(%rsp)
  0x0000000122f7f14a: sub    $0x80,%rsp
  0x0000000122f7f151: mov    %rax,0x78(%rsp)
  0x0000000122f7f156: mov    %rcx,0x70(%rsp)
  0x0000000122f7f15b: mov    %rdx,0x68(%rsp)
  0x0000000122f7f160: mov    %rbx,0x60(%rsp)
  0x0000000122f7f165: mov    %rbp,0x50(%rsp)
  0x0000000122f7f16a: mov    %rsi,0x48(%rsp)
  0x0000000122f7f16f: mov    %rdi,0x40(%rsp)
  0x0000000122f7f174: mov    %r8,0x38(%rsp)
  0x0000000122f7f179: mov    %r9,0x30(%rsp)
  0x0000000122f7f17e: mov    %r10,0x28(%rsp)
  0x0000000122f7f183: mov    %r11,0x20(%rsp)
  0x0000000122f7f188: mov    %r12,0x18(%rsp)
  0x0000000122f7f18d: mov    %r13,0x10(%rsp)
  0x0000000122f7f192: mov    %r14,0x8(%rsp)
  0x0000000122f7f197: mov    %r15,(%rsp)
  0x0000000122f7f19b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7f1a5: movabs $0x122f7f145,%rsi  ;   {internal_word}
  0x0000000122f7f1af: mov    %rsp,%rdx
  0x0000000122f7f1b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7f1b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7f1bb: hlt    
[Deopt Handler Code]
  0x0000000122f7f1bc: movabs $0x122f7f1bc,%r10  ;   {section_word}
  0x0000000122f7f1c6: push   %r10
  0x0000000122f7f1c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7f1cd: hlt    
  0x0000000122f7f1ce: hlt    
  0x0000000122f7f1cf: hlt    
</print_nmethod>
<nmethod compile_id='127' compiler='c1' level='3' entry='0x000000011ba5ffc0' size='1152' address='0x000000011ba5fe10' relocation_offset='376' insts_offset='432' stub_offset='816' scopes_data_offset='976' scopes_pcs_offset='1032' dependencies_offset='1144' metadata_offset='960' method='java.lang.String &lt;init&gt; ([BB)V' bytes='15' count='561' iicount='561' stamp='0.496'/>
<print_nmethod stamp='0.496'>
Compiled method (c1)     495  127       3       java.lang.String::&lt;init&gt; (15 bytes)
 total in heap  [0x000000011ba5fe10,0x000000011ba60290] = 1152
 relocation     [0x000000011ba5ff88,0x000000011ba5ffc0] = 56
 main code      [0x000000011ba5ffc0,0x000000011ba60140] = 384
 stub code      [0x000000011ba60140,0x000000011ba601d0] = 144
 metadata       [0x000000011ba601d0,0x000000011ba601e0] = 16
 scopes data    [0x000000011ba601e0,0x000000011ba60218] = 56
 scopes pcs     [0x000000011ba60218,0x000000011ba60288] = 112
 dependencies   [0x000000011ba60288,0x000000011ba60290] = 8
----------------------------------------------------------------------
java/lang/String.&lt;init&gt;([BB)V  [0x000000011ba5ffc0, 0x000000011ba601d0]  528 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = byte
  #           [sp+0x40]  (sp of caller)
  0x000000011ba5ffc0: mov    0x8(%rsi),%r10d
  0x000000011ba5ffc4: movabs $0x800000000,%r12
  0x000000011ba5ffce: add    %r12,%r10
  0x000000011ba5ffd1: xor    %r12,%r12
  0x000000011ba5ffd4: cmp    %rax,%r10
  0x000000011ba5ffd7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba5ffdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba5ffe0: mov    %eax,-0x14000(%rsp)
  0x000000011ba5ffe7: push   %rbp
  0x000000011ba5ffe8: sub    $0x30,%rsp
  0x000000011ba5ffec: movabs $0x1328aa7c0,%rdi  ;   {metadata(method data for {method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba5fff6: mov    0x104(%rdi),%ebx
  0x000000011ba5fffc: add    $0x8,%ebx
  0x000000011ba5ffff: mov    %ebx,0x104(%rdi)
  0x000000011ba60005: and    $0x1ff8,%ebx
  0x000000011ba6000b: cmp    $0x0,%ebx
  0x000000011ba6000e: je     0x000000011ba60091  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@0 (line 3252)

  0x000000011ba60014: mov    %rsi,%rdi
  0x000000011ba60017: movabs $0x1328aa7c0,%rbx  ;   {metadata(method data for {method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba60021: addq   $0x1,0x140(%rbx)
  0x000000011ba60029: movabs $0x1326ded60,%rdi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba60033: mov    0x104(%rdi),%ebx
  0x000000011ba60039: add    $0x8,%ebx
  0x000000011ba6003c: mov    %ebx,0x104(%rdi)
  0x000000011ba60042: and    $0x7ffff8,%ebx
  0x000000011ba60048: cmp    $0x0,%ebx
  0x000000011ba6004b: je     0x000000011ba600b2
  0x000000011ba60051: movsbl 0x30(%r15),%edi
  0x000000011ba60056: cmp    $0x0,%edi
  0x000000011ba60059: jne    0x000000011ba600d0
  0x000000011ba6005f: mov    %rdx,%r10
  0x000000011ba60062: shr    $0x3,%r10
  0x000000011ba60066: mov    %r10d,0xc(%rsi)
  0x000000011ba6006a: mov    %rsi,%rdi
  0x000000011ba6006d: xor    %rdx,%rdi
  0x000000011ba60070: shr    $0x14,%rdi
  0x000000011ba60074: cmp    $0x0,%rdi
  0x000000011ba60078: jne    0x000000011ba600eb  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@6 (line 3253)

  0x000000011ba6007e: mov    %cl,0x14(%rsi)     ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@11 (line 3254)

  0x000000011ba60081: add    $0x30,%rsp
  0x000000011ba60085: pop    %rbp
  0x000000011ba60086: mov    0x108(%r15),%r10
  0x000000011ba6008d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba60090: retq   
  0x000000011ba60091: movabs $0x1324b50d8,%r10  ;   {metadata({method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6009b: mov    %r10,0x8(%rsp)
  0x000000011ba600a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba600a8: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 3252)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba600ad: jmpq   0x000000011ba60014
  0x000000011ba600b2: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba600bc: mov    %r10,0x8(%rsp)
  0x000000011ba600c1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba600c9: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 3252)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba600ce: jmp    0x000000011ba60051
  0x000000011ba600d0: mov    0xc(%rsi),%edi
  0x000000011ba600d3: shl    $0x3,%rdi
  0x000000011ba600d7: cmp    $0x0,%rdi
  0x000000011ba600db: je     0x000000011ba6005f
  0x000000011ba600dd: mov    %rdi,(%rsp)
  0x000000011ba600e1: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba600e6: jmpq   0x000000011ba6005f
  0x000000011ba600eb: cmp    $0x0,%rdx
  0x000000011ba600ef: je     0x000000011ba6007e
  0x000000011ba600f1: mov    %rsi,(%rsp)
  0x000000011ba600f5: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba600fa: jmp    0x000000011ba6007e
  0x000000011ba600fc: nop
  0x000000011ba600fd: nop
  0x000000011ba600fe: mov    0x420(%r15),%rax
  0x000000011ba60105: movabs $0x0,%r10
  0x000000011ba6010f: mov    %r10,0x420(%r15)
  0x000000011ba60116: movabs $0x0,%r10
  0x000000011ba60120: mov    %r10,0x428(%r15)
  0x000000011ba60127: add    $0x30,%rsp
  0x000000011ba6012b: pop    %rbp
  0x000000011ba6012c: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba60131: hlt    
  0x000000011ba60132: hlt    
  0x000000011ba60133: hlt    
  0x000000011ba60134: hlt    
  0x000000011ba60135: hlt    
  0x000000011ba60136: hlt    
  0x000000011ba60137: hlt    
  0x000000011ba60138: hlt    
  0x000000011ba60139: hlt    
  0x000000011ba6013a: hlt    
  0x000000011ba6013b: hlt    
  0x000000011ba6013c: hlt    
  0x000000011ba6013d: hlt    
  0x000000011ba6013e: hlt    
  0x000000011ba6013f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba60140: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba60145: mov    %rsp,-0x28(%rsp)
  0x000000011ba6014a: sub    $0x80,%rsp
  0x000000011ba60151: mov    %rax,0x78(%rsp)
  0x000000011ba60156: mov    %rcx,0x70(%rsp)
  0x000000011ba6015b: mov    %rdx,0x68(%rsp)
  0x000000011ba60160: mov    %rbx,0x60(%rsp)
  0x000000011ba60165: mov    %rbp,0x50(%rsp)
  0x000000011ba6016a: mov    %rsi,0x48(%rsp)
  0x000000011ba6016f: mov    %rdi,0x40(%rsp)
  0x000000011ba60174: mov    %r8,0x38(%rsp)
  0x000000011ba60179: mov    %r9,0x30(%rsp)
  0x000000011ba6017e: mov    %r10,0x28(%rsp)
  0x000000011ba60183: mov    %r11,0x20(%rsp)
  0x000000011ba60188: mov    %r12,0x18(%rsp)
  0x000000011ba6018d: mov    %r13,0x10(%rsp)
  0x000000011ba60192: mov    %r14,0x8(%rsp)
  0x000000011ba60197: mov    %r15,(%rsp)
  0x000000011ba6019b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba601a5: movabs $0x11ba60145,%rsi  ;   {internal_word}
  0x000000011ba601af: mov    %rsp,%rdx
  0x000000011ba601b2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba601b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba601bb: hlt    
[Deopt Handler Code]
  0x000000011ba601bc: movabs $0x11ba601bc,%r10  ;   {section_word}
  0x000000011ba601c6: push   %r10
  0x000000011ba601c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba601cd: hlt    
  0x000000011ba601ce: hlt    
  0x000000011ba601cf: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 237 270 </print_nmethod>
<nmethod compile_id='137' compiler='c1' level='1' entry='0x0000000122f7f440' size='800' address='0x0000000122f7f290' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor isOpen ()Z' bytes='5' count='186' iicount='186' stamp='0.499'/>
<print_nmethod stamp='0.499'>
Compiled method (c1)     498  137       1       java.lang.module.ModuleDescriptor::isOpen (5 bytes)
 total in heap  [0x0000000122f7f290,0x0000000122f7f5b0] = 800
 relocation     [0x0000000122f7f408,0x0000000122f7f430] = 40
 main code      [0x0000000122f7f440,0x0000000122f7f4c0] = 128
 stub code      [0x0000000122f7f4c0,0x0000000122f7f550] = 144
 metadata       [0x0000000122f7f550,0x0000000122f7f558] = 8
 scopes data    [0x0000000122f7f558,0x0000000122f7f568] = 16
 scopes pcs     [0x0000000122f7f568,0x0000000122f7f5a8] = 64
 dependencies   [0x0000000122f7f5a8,0x0000000122f7f5b0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.isOpen()Z  [0x0000000122f7f440, 0x0000000122f7f550]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132697d90} &apos;isOpen&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7f440: mov    0x8(%rsi),%r10d
  0x0000000122f7f444: movabs $0x800000000,%r12
  0x0000000122f7f44e: add    %r12,%r10
  0x0000000122f7f451: xor    %r12,%r12
  0x0000000122f7f454: cmp    %rax,%r10
  0x0000000122f7f457: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7f45d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7f460: mov    %eax,-0x14000(%rsp)
  0x0000000122f7f467: push   %rbp
  0x0000000122f7f468: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isOpen@0 (line 1341)

  0x0000000122f7f46c: movsbl 0x10(%rsi),%eax    ;*getfield open {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isOpen@1 (line 1341)

  0x0000000122f7f470: and    $0x1,%eax
  0x0000000122f7f473: add    $0x30,%rsp
  0x0000000122f7f477: pop    %rbp
  0x0000000122f7f478: mov    0x108(%r15),%r10
  0x0000000122f7f47f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7f482: retq   
  0x0000000122f7f483: nop
  0x0000000122f7f484: nop
  0x0000000122f7f485: mov    0x420(%r15),%rax
  0x0000000122f7f48c: movabs $0x0,%r10
  0x0000000122f7f496: mov    %r10,0x420(%r15)
  0x0000000122f7f49d: movabs $0x0,%r10
  0x0000000122f7f4a7: mov    %r10,0x428(%r15)
  0x0000000122f7f4ae: add    $0x30,%rsp
  0x0000000122f7f4b2: pop    %rbp
  0x0000000122f7f4b3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7f4b8: hlt    
  0x0000000122f7f4b9: hlt    
  0x0000000122f7f4ba: hlt    
  0x0000000122f7f4bb: hlt    
  0x0000000122f7f4bc: hlt    
  0x0000000122f7f4bd: hlt    
  0x0000000122f7f4be: hlt    
  0x0000000122f7f4bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7f4c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7f4c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f7f4ca: sub    $0x80,%rsp
  0x0000000122f7f4d1: mov    %rax,0x78(%rsp)
  0x0000000122f7f4d6: mov    %rcx,0x70(%rsp)
  0x0000000122f7f4db: mov    %rdx,0x68(%rsp)
  0x0000000122f7f4e0: mov    %rbx,0x60(%rsp)
  0x0000000122f7f4e5: mov    %rbp,0x50(%rsp)
  0x0000000122f7f4ea: mov    %rsi,0x48(%rsp)
  0x0000000122f7f4ef: mov    %rdi,0x40(%rsp)
  0x0000000122f7f4f4: mov    %r8,0x38(%rsp)
  0x0000000122f7f4f9: mov    %r9,0x30(%rsp)
  0x0000000122f7f4fe: mov    %r10,0x28(%rsp)
  0x0000000122f7f503: mov    %r11,0x20(%rsp)
  0x0000000122f7f508: mov    %r12,0x18(%rsp)
  0x0000000122f7f50d: mov    %r13,0x10(%rsp)
  0x0000000122f7f512: mov    %r14,0x8(%rsp)
  0x0000000122f7f517: mov    %r15,(%rsp)
  0x0000000122f7f51b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7f525: movabs $0x122f7f4c5,%rsi  ;   {internal_word}
  0x0000000122f7f52f: mov    %rsp,%rdx
  0x0000000122f7f532: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7f536: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7f53b: hlt    
[Deopt Handler Code]
  0x0000000122f7f53c: movabs $0x122f7f53c,%r10  ;   {section_word}
  0x0000000122f7f546: push   %r10
  0x0000000122f7f548: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7f54d: hlt    
  0x0000000122f7f54e: hlt    
  0x0000000122f7f54f: hlt    
</print_nmethod>
<nmethod compile_id='138' compiler='c1' level='1' entry='0x0000000122f7f7c0' size='800' address='0x0000000122f7f610' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.Module getDescriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='142' iicount='142' stamp='0.501'/>
<print_nmethod stamp='0.501'>
Compiled method (c1)     500  138       1       java.lang.Module::getDescriptor (5 bytes)
 total in heap  [0x0000000122f7f610,0x0000000122f7f930] = 800
 relocation     [0x0000000122f7f788,0x0000000122f7f7b0] = 40
 main code      [0x0000000122f7f7c0,0x0000000122f7f840] = 128
 stub code      [0x0000000122f7f840,0x0000000122f7f8d0] = 144
 metadata       [0x0000000122f7f8d0,0x0000000122f7f8d8] = 8
 scopes data    [0x0000000122f7f8d8,0x0000000122f7f8e8] = 16
 scopes pcs     [0x0000000122f7f8e8,0x0000000122f7f928] = 64
 dependencies   [0x0000000122f7f928,0x0000000122f7f930] = 8
----------------------------------------------------------------------
java/lang/Module.getDescriptor()Ljava/lang/module/ModuleDescriptor;  [0x0000000122f7f7c0, 0x0000000122f7f8d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324fbc20} &apos;getDescriptor&apos; &apos;()Ljava/lang/module/ModuleDescriptor;&apos; in &apos;java/lang/Module&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7f7c0: mov    0x8(%rsi),%r10d
  0x0000000122f7f7c4: movabs $0x800000000,%r12
  0x0000000122f7f7ce: add    %r12,%r10
  0x0000000122f7f7d1: xor    %r12,%r12
  0x0000000122f7f7d4: cmp    %rax,%r10
  0x0000000122f7f7d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7f7dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7f7e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7f7e7: push   %rbp
  0x0000000122f7f7e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Module::getDescriptor@0 (line 216)

  0x0000000122f7f7ec: mov    0x20(%rsi),%eax
  0x0000000122f7f7ef: shl    $0x3,%rax          ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Module::getDescriptor@1 (line 216)

  0x0000000122f7f7f3: add    $0x30,%rsp
  0x0000000122f7f7f7: pop    %rbp
  0x0000000122f7f7f8: mov    0x108(%r15),%r10
  0x0000000122f7f7ff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7f802: retq   
  0x0000000122f7f803: nop
  0x0000000122f7f804: nop
  0x0000000122f7f805: mov    0x420(%r15),%rax
  0x0000000122f7f80c: movabs $0x0,%r10
  0x0000000122f7f816: mov    %r10,0x420(%r15)
  0x0000000122f7f81d: movabs $0x0,%r10
  0x0000000122f7f827: mov    %r10,0x428(%r15)
  0x0000000122f7f82e: add    $0x30,%rsp
  0x0000000122f7f832: pop    %rbp
  0x0000000122f7f833: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7f838: hlt    
  0x0000000122f7f839: hlt    
  0x0000000122f7f83a: hlt    
  0x0000000122f7f83b: hlt    
  0x0000000122f7f83c: hlt    
  0x0000000122f7f83d: hlt    
  0x0000000122f7f83e: hlt    
  0x0000000122f7f83f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7f840: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7f845: mov    %rsp,-0x28(%rsp)
  0x0000000122f7f84a: sub    $0x80,%rsp
  0x0000000122f7f851: mov    %rax,0x78(%rsp)
  0x0000000122f7f856: mov    %rcx,0x70(%rsp)
  0x0000000122f7f85b: mov    %rdx,0x68(%rsp)
  0x0000000122f7f860: mov    %rbx,0x60(%rsp)
  0x0000000122f7f865: mov    %rbp,0x50(%rsp)
  0x0000000122f7f86a: mov    %rsi,0x48(%rsp)
  0x0000000122f7f86f: mov    %rdi,0x40(%rsp)
  0x0000000122f7f874: mov    %r8,0x38(%rsp)
  0x0000000122f7f879: mov    %r9,0x30(%rsp)
  0x0000000122f7f87e: mov    %r10,0x28(%rsp)
  0x0000000122f7f883: mov    %r11,0x20(%rsp)
  0x0000000122f7f888: mov    %r12,0x18(%rsp)
  0x0000000122f7f88d: mov    %r13,0x10(%rsp)
  0x0000000122f7f892: mov    %r14,0x8(%rsp)
  0x0000000122f7f897: mov    %r15,(%rsp)
  0x0000000122f7f89b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7f8a5: movabs $0x122f7f845,%rsi  ;   {internal_word}
  0x0000000122f7f8af: mov    %rsp,%rdx
  0x0000000122f7f8b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7f8b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7f8bb: hlt    
[Deopt Handler Code]
  0x0000000122f7f8bc: movabs $0x122f7f8bc,%r10  ;   {section_word}
  0x0000000122f7f8c6: push   %r10
  0x0000000122f7f8c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7f8cd: hlt    
  0x0000000122f7f8ce: hlt    
  0x0000000122f7f8cf: hlt    
</print_nmethod>
<nmethod compile_id='131' compiler='c1' level='1' entry='0x0000000122f7fb40' size='800' address='0x0000000122f7f990' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor exports ()Ljava/util/Set;' bytes='5' count='275' iicount='275' stamp='0.503'/>
<print_nmethod stamp='0.503'>
Compiled method (c1)     502  131       1       java.lang.module.ModuleDescriptor::exports (5 bytes)
 total in heap  [0x0000000122f7f990,0x0000000122f7fcb0] = 800
 relocation     [0x0000000122f7fb08,0x0000000122f7fb30] = 40
 main code      [0x0000000122f7fb40,0x0000000122f7fbc0] = 128
 stub code      [0x0000000122f7fbc0,0x0000000122f7fc50] = 144
 metadata       [0x0000000122f7fc50,0x0000000122f7fc58] = 8
 scopes data    [0x0000000122f7fc58,0x0000000122f7fc68] = 16
 scopes pcs     [0x0000000122f7fc68,0x0000000122f7fca8] = 64
 dependencies   [0x0000000122f7fca8,0x0000000122f7fcb0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.exports()Ljava/util/Set;  [0x0000000122f7fb40, 0x0000000122f7fc50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132697f98} &apos;exports&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7fb40: mov    0x8(%rsi),%r10d
  0x0000000122f7fb44: movabs $0x800000000,%r12
  0x0000000122f7fb4e: add    %r12,%r10
  0x0000000122f7fb51: xor    %r12,%r12
  0x0000000122f7fb54: cmp    %rax,%r10
  0x0000000122f7fb57: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7fb5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7fb60: mov    %eax,-0x14000(%rsp)
  0x0000000122f7fb67: push   %rbp
  0x0000000122f7fb68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::exports@0 (line 1381)

  0x0000000122f7fb6c: mov    0x28(%rsi),%eax
  0x0000000122f7fb6f: shl    $0x3,%rax          ;*getfield exports {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::exports@1 (line 1381)

  0x0000000122f7fb73: add    $0x30,%rsp
  0x0000000122f7fb77: pop    %rbp
  0x0000000122f7fb78: mov    0x108(%r15),%r10
  0x0000000122f7fb7f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7fb82: retq   
  0x0000000122f7fb83: nop
  0x0000000122f7fb84: nop
  0x0000000122f7fb85: mov    0x420(%r15),%rax
  0x0000000122f7fb8c: movabs $0x0,%r10
  0x0000000122f7fb96: mov    %r10,0x420(%r15)
  0x0000000122f7fb9d: movabs $0x0,%r10
  0x0000000122f7fba7: mov    %r10,0x428(%r15)
  0x0000000122f7fbae: add    $0x30,%rsp
  0x0000000122f7fbb2: pop    %rbp
  0x0000000122f7fbb3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7fbb8: hlt    
  0x0000000122f7fbb9: hlt    
  0x0000000122f7fbba: hlt    
  0x0000000122f7fbbb: hlt    
  0x0000000122f7fbbc: hlt    
  0x0000000122f7fbbd: hlt    
  0x0000000122f7fbbe: hlt    
  0x0000000122f7fbbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7fbc0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7fbc5: mov    %rsp,-0x28(%rsp)
  0x0000000122f7fbca: sub    $0x80,%rsp
  0x0000000122f7fbd1: mov    %rax,0x78(%rsp)
  0x0000000122f7fbd6: mov    %rcx,0x70(%rsp)
  0x0000000122f7fbdb: mov    %rdx,0x68(%rsp)
  0x0000000122f7fbe0: mov    %rbx,0x60(%rsp)
  0x0000000122f7fbe5: mov    %rbp,0x50(%rsp)
  0x0000000122f7fbea: mov    %rsi,0x48(%rsp)
  0x0000000122f7fbef: mov    %rdi,0x40(%rsp)
  0x0000000122f7fbf4: mov    %r8,0x38(%rsp)
  0x0000000122f7fbf9: mov    %r9,0x30(%rsp)
  0x0000000122f7fbfe: mov    %r10,0x28(%rsp)
  0x0000000122f7fc03: mov    %r11,0x20(%rsp)
  0x0000000122f7fc08: mov    %r12,0x18(%rsp)
  0x0000000122f7fc0d: mov    %r13,0x10(%rsp)
  0x0000000122f7fc12: mov    %r14,0x8(%rsp)
  0x0000000122f7fc17: mov    %r15,(%rsp)
  0x0000000122f7fc1b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7fc25: movabs $0x122f7fbc5,%rsi  ;   {internal_word}
  0x0000000122f7fc2f: mov    %rsp,%rdx
  0x0000000122f7fc32: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7fc36: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7fc3b: hlt    
[Deopt Handler Code]
  0x0000000122f7fc3c: movabs $0x122f7fc3c,%r10  ;   {section_word}
  0x0000000122f7fc46: push   %r10
  0x0000000122f7fc48: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7fc4d: hlt    
  0x0000000122f7fc4e: hlt    
  0x0000000122f7fc4f: hlt    
</print_nmethod>
<nmethod compile_id='64' compiler='c1' level='1' entry='0x0000000122f7fec0' size='800' address='0x0000000122f7fd10' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.invoke.MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='199' iicount='199' stamp='0.504'/>
<print_nmethod stamp='0.504'>
Compiled method (c1)     504   64       1       java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
 total in heap  [0x0000000122f7fd10,0x0000000122f80030] = 800
 relocation     [0x0000000122f7fe88,0x0000000122f7feb0] = 40
 main code      [0x0000000122f7fec0,0x0000000122f7ff40] = 128
 stub code      [0x0000000122f7ff40,0x0000000122f7ffd0] = 144
 metadata       [0x0000000122f7ffd0,0x0000000122f7ffd8] = 8
 scopes data    [0x0000000122f7ffd8,0x0000000122f7ffe8] = 16
 scopes pcs     [0x0000000122f7ffe8,0x0000000122f80028] = 64
 dependencies   [0x0000000122f80028,0x0000000122f80030] = 8
----------------------------------------------------------------------
java/lang/invoke/MemberName.getDeclaringClass()Ljava/lang/Class;  [0x0000000122f7fec0, 0x0000000122f7ffd0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132529308} &apos;getDeclaringClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f7fec0: mov    0x8(%rsi),%r10d
  0x0000000122f7fec4: movabs $0x800000000,%r12
  0x0000000122f7fece: add    %r12,%r10
  0x0000000122f7fed1: xor    %r12,%r12
  0x0000000122f7fed4: cmp    %rax,%r10
  0x0000000122f7fed7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f7fedd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f7fee0: mov    %eax,-0x14000(%rsp)
  0x0000000122f7fee7: push   %rbp
  0x0000000122f7fee8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::getDeclaringClass@0 (line 91)

  0x0000000122f7feec: mov    0x18(%rsi),%eax
  0x0000000122f7feef: shl    $0x3,%rax          ;*getfield clazz {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::getDeclaringClass@1 (line 91)

  0x0000000122f7fef3: add    $0x30,%rsp
  0x0000000122f7fef7: pop    %rbp
  0x0000000122f7fef8: mov    0x108(%r15),%r10
  0x0000000122f7feff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f7ff02: retq   
  0x0000000122f7ff03: nop
  0x0000000122f7ff04: nop
  0x0000000122f7ff05: mov    0x420(%r15),%rax
  0x0000000122f7ff0c: movabs $0x0,%r10
  0x0000000122f7ff16: mov    %r10,0x420(%r15)
  0x0000000122f7ff1d: movabs $0x0,%r10
  0x0000000122f7ff27: mov    %r10,0x428(%r15)
  0x0000000122f7ff2e: add    $0x30,%rsp
  0x0000000122f7ff32: pop    %rbp
  0x0000000122f7ff33: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f7ff38: hlt    
  0x0000000122f7ff39: hlt    
  0x0000000122f7ff3a: hlt    
  0x0000000122f7ff3b: hlt    
  0x0000000122f7ff3c: hlt    
  0x0000000122f7ff3d: hlt    
  0x0000000122f7ff3e: hlt    
  0x0000000122f7ff3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f7ff40: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f7ff45: mov    %rsp,-0x28(%rsp)
  0x0000000122f7ff4a: sub    $0x80,%rsp
  0x0000000122f7ff51: mov    %rax,0x78(%rsp)
  0x0000000122f7ff56: mov    %rcx,0x70(%rsp)
  0x0000000122f7ff5b: mov    %rdx,0x68(%rsp)
  0x0000000122f7ff60: mov    %rbx,0x60(%rsp)
  0x0000000122f7ff65: mov    %rbp,0x50(%rsp)
  0x0000000122f7ff6a: mov    %rsi,0x48(%rsp)
  0x0000000122f7ff6f: mov    %rdi,0x40(%rsp)
  0x0000000122f7ff74: mov    %r8,0x38(%rsp)
  0x0000000122f7ff79: mov    %r9,0x30(%rsp)
  0x0000000122f7ff7e: mov    %r10,0x28(%rsp)
  0x0000000122f7ff83: mov    %r11,0x20(%rsp)
  0x0000000122f7ff88: mov    %r12,0x18(%rsp)
  0x0000000122f7ff8d: mov    %r13,0x10(%rsp)
  0x0000000122f7ff92: mov    %r14,0x8(%rsp)
  0x0000000122f7ff97: mov    %r15,(%rsp)
  0x0000000122f7ff9b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f7ffa5: movabs $0x122f7ff45,%rsi  ;   {internal_word}
  0x0000000122f7ffaf: mov    %rsp,%rdx
  0x0000000122f7ffb2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f7ffb6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f7ffbb: hlt    
[Deopt Handler Code]
  0x0000000122f7ffbc: movabs $0x122f7ffbc,%r10  ;   {section_word}
  0x0000000122f7ffc6: push   %r10
  0x0000000122f7ffc8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f7ffcd: hlt    
  0x0000000122f7ffce: hlt    
  0x0000000122f7ffcf: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='139' method='java.lang.Class getModule ()Ljava/lang/Module;' bytes='5' count='128' iicount='128' level='1' stamp='0.505' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='139' compiler='c1' level='1' entry='0x0000000122f80240' size='800' address='0x0000000122f80090' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.Class getModule ()Ljava/lang/Module;' bytes='5' count='131' iicount='131' stamp='0.506'/>
<print_nmethod stamp='0.506'>
Compiled method (c1)     505  139       1       java.lang.Class::getModule (5 bytes)
 total in heap  [0x0000000122f80090,0x0000000122f803b0] = 800
 relocation     [0x0000000122f80208,0x0000000122f80230] = 40
 main code      [0x0000000122f80240,0x0000000122f802c0] = 128
 stub code      [0x0000000122f802c0,0x0000000122f80350] = 144
 metadata       [0x0000000122f80350,0x0000000122f80358] = 8
 scopes data    [0x0000000122f80358,0x0000000122f80368] = 16
 scopes pcs     [0x0000000122f80368,0x0000000122f803a8] = 64
 dependencies   [0x0000000122f803a8,0x0000000122f803b0] = 8
----------------------------------------------------------------------
java/lang/Class.getModule()Ljava/lang/Module;  [0x0000000122f80240, 0x0000000122f80350]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324bbe28} &apos;getModule&apos; &apos;()Ljava/lang/Module;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f80240: mov    0x8(%rsi),%r10d
  0x0000000122f80244: movabs $0x800000000,%r12
  0x0000000122f8024e: add    %r12,%r10
  0x0000000122f80251: xor    %r12,%r12
  0x0000000122f80254: cmp    %rax,%r10
  0x0000000122f80257: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f8025d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f80260: mov    %eax,-0x14000(%rsp)
  0x0000000122f80267: push   %rbp
  0x0000000122f80268: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getModule@0 (line 857)

  0x0000000122f8026c: mov    0x18(%rsi),%eax
  0x0000000122f8026f: shl    $0x3,%rax          ;*getfield module {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getModule@1 (line 857)

  0x0000000122f80273: add    $0x30,%rsp
  0x0000000122f80277: pop    %rbp
  0x0000000122f80278: mov    0x108(%r15),%r10
  0x0000000122f8027f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f80282: retq   
  0x0000000122f80283: nop
  0x0000000122f80284: nop
  0x0000000122f80285: mov    0x420(%r15),%rax
  0x0000000122f8028c: movabs $0x0,%r10
  0x0000000122f80296: mov    %r10,0x420(%r15)
  0x0000000122f8029d: movabs $0x0,%r10
  0x0000000122f802a7: mov    %r10,0x428(%r15)
  0x0000000122f802ae: add    $0x30,%rsp
  0x0000000122f802b2: pop    %rbp
  0x0000000122f802b3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f802b8: hlt    
  0x0000000122f802b9: hlt    
  0x0000000122f802ba: hlt    
  0x0000000122f802bb: hlt    
  0x0000000122f802bc: hlt    
  0x0000000122f802bd: hlt    
  0x0000000122f802be: hlt    
  0x0000000122f802bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f802c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f802c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f802ca: sub    $0x80,%rsp
  0x0000000122f802d1: mov    %rax,0x78(%rsp)
  0x0000000122f802d6: mov    %rcx,0x70(%rsp)
  0x0000000122f802db: mov    %rdx,0x68(%rsp)
  0x0000000122f802e0: mov    %rbx,0x60(%rsp)
  0x0000000122f802e5: mov    %rbp,0x50(%rsp)
  0x0000000122f802ea: mov    %rsi,0x48(%rsp)
  0x0000000122f802ef: mov    %rdi,0x40(%rsp)
  0x0000000122f802f4: mov    %r8,0x38(%rsp)
  0x0000000122f802f9: mov    %r9,0x30(%rsp)
  0x0000000122f802fe: mov    %r10,0x28(%rsp)
  0x0000000122f80303: mov    %r11,0x20(%rsp)
  0x0000000122f80308: mov    %r12,0x18(%rsp)
  0x0000000122f8030d: mov    %r13,0x10(%rsp)
  0x0000000122f80312: mov    %r14,0x8(%rsp)
  0x0000000122f80317: mov    %r15,(%rsp)
  0x0000000122f8031b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f80325: movabs $0x122f802c5,%rsi  ;   {internal_word}
  0x0000000122f8032f: mov    %rsp,%rdx
  0x0000000122f80332: and    $0xfffffffffffffff0,%rsp
  0x0000000122f80336: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f8033b: hlt    
[Deopt Handler Code]
  0x0000000122f8033c: movabs $0x122f8033c,%r10  ;   {section_word}
  0x0000000122f80346: push   %r10
  0x0000000122f80348: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f8034d: hlt    
  0x0000000122f8034e: hlt    
  0x0000000122f8034f: hlt    
</print_nmethod>
<nmethod compile_id='124' compiler='c1' level='1' entry='0x0000000122f805c0' size='800' address='0x0000000122f80410' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor packages ()Ljava/util/Set;' bytes='5' count='180' iicount='180' stamp='0.507'/>
<print_nmethod stamp='0.507'>
Compiled method (c1)     507  124       1       java.lang.module.ModuleDescriptor::packages (5 bytes)
 total in heap  [0x0000000122f80410,0x0000000122f80730] = 800
 relocation     [0x0000000122f80588,0x0000000122f805b0] = 40
 main code      [0x0000000122f805c0,0x0000000122f80640] = 128
 stub code      [0x0000000122f80640,0x0000000122f806d0] = 144
 metadata       [0x0000000122f806d0,0x0000000122f806d8] = 8
 scopes data    [0x0000000122f806d8,0x0000000122f806e8] = 16
 scopes pcs     [0x0000000122f806e8,0x0000000122f80728] = 64
 dependencies   [0x0000000122f80728,0x0000000122f80730] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.packages()Ljava/util/Set;  [0x0000000122f805c0, 0x0000000122f806d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132698550} &apos;packages&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f805c0: mov    0x8(%rsi),%r10d
  0x0000000122f805c4: movabs $0x800000000,%r12
  0x0000000122f805ce: add    %r12,%r10
  0x0000000122f805d1: xor    %r12,%r12
  0x0000000122f805d4: cmp    %rax,%r10
  0x0000000122f805d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f805dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f805e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f805e7: push   %rbp
  0x0000000122f805e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::packages@0 (line 1483)

  0x0000000122f805ec: mov    0x38(%rsi),%eax
  0x0000000122f805ef: shl    $0x3,%rax          ;*getfield packages {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::packages@1 (line 1483)

  0x0000000122f805f3: add    $0x30,%rsp
  0x0000000122f805f7: pop    %rbp
  0x0000000122f805f8: mov    0x108(%r15),%r10
  0x0000000122f805ff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f80602: retq   
  0x0000000122f80603: nop
  0x0000000122f80604: nop
  0x0000000122f80605: mov    0x420(%r15),%rax
  0x0000000122f8060c: movabs $0x0,%r10
  0x0000000122f80616: mov    %r10,0x420(%r15)
  0x0000000122f8061d: movabs $0x0,%r10
  0x0000000122f80627: mov    %r10,0x428(%r15)
  0x0000000122f8062e: add    $0x30,%rsp
  0x0000000122f80632: pop    %rbp
  0x0000000122f80633: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f80638: hlt    
  0x0000000122f80639: hlt    
  0x0000000122f8063a: hlt    
  0x0000000122f8063b: hlt    
  0x0000000122f8063c: hlt    
  0x0000000122f8063d: hlt    
  0x0000000122f8063e: hlt    
  0x0000000122f8063f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f80640: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f80645: mov    %rsp,-0x28(%rsp)
  0x0000000122f8064a: sub    $0x80,%rsp
  0x0000000122f80651: mov    %rax,0x78(%rsp)
  0x0000000122f80656: mov    %rcx,0x70(%rsp)
  0x0000000122f8065b: mov    %rdx,0x68(%rsp)
  0x0000000122f80660: mov    %rbx,0x60(%rsp)
  0x0000000122f80665: mov    %rbp,0x50(%rsp)
  0x0000000122f8066a: mov    %rsi,0x48(%rsp)
  0x0000000122f8066f: mov    %rdi,0x40(%rsp)
  0x0000000122f80674: mov    %r8,0x38(%rsp)
  0x0000000122f80679: mov    %r9,0x30(%rsp)
  0x0000000122f8067e: mov    %r10,0x28(%rsp)
  0x0000000122f80683: mov    %r11,0x20(%rsp)
  0x0000000122f80688: mov    %r12,0x18(%rsp)
  0x0000000122f8068d: mov    %r13,0x10(%rsp)
  0x0000000122f80692: mov    %r14,0x8(%rsp)
  0x0000000122f80697: mov    %r15,(%rsp)
  0x0000000122f8069b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f806a5: movabs $0x122f80645,%rsi  ;   {internal_word}
  0x0000000122f806af: mov    %rsp,%rdx
  0x0000000122f806b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f806b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f806bb: hlt    
[Deopt Handler Code]
  0x0000000122f806bc: movabs $0x122f806bc,%r10  ;   {section_word}
  0x0000000122f806c6: push   %r10
  0x0000000122f806c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f806cd: hlt    
  0x0000000122f806ce: hlt    
  0x0000000122f806cf: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='140' method='java.lang.invoke.MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='128' iicount='128' level='1' stamp='0.509' comment='tiered' hot_count='128'/>
<writer thread='15875'/>
<nmethod compile_id='140' compiler='c1' level='1' entry='0x0000000122f80940' size='800' address='0x0000000122f80790' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.invoke.MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='130' iicount='130' stamp='0.509'/>
<print_nmethod stamp='0.509'>
Compiled method (c1)     508  140       1       java.lang.invoke.MethodType::form (5 bytes)
 total in heap  [0x0000000122f80790,0x0000000122f80ab0] = 800
 relocation     [0x0000000122f80908,0x0000000122f80930] = 40
 main code      [0x0000000122f80940,0x0000000122f809c0] = 128
 stub code      [0x0000000122f809c0,0x0000000122f80a50] = 144
 metadata       [0x0000000122f80a50,0x0000000122f80a58] = 8
 scopes data    [0x0000000122f80a58,0x0000000122f80a68] = 16
 scopes pcs     [0x0000000122f80a68,0x0000000122f80aa8] = 64
 dependencies   [0x0000000122f80aa8,0x0000000122f80ab0] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType.form()Ljava/lang/invoke/MethodTypeForm;  [0x0000000122f80940, 0x0000000122f80a50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013253ddd0} &apos;form&apos; &apos;()Ljava/lang/invoke/MethodTypeForm;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f80940: mov    0x8(%rsi),%r10d
  0x0000000122f80944: movabs $0x800000000,%r12
  0x0000000122f8094e: add    %r12,%r10
  0x0000000122f80951: xor    %r12,%r12
  0x0000000122f80954: cmp    %rax,%r10
  0x0000000122f80957: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f8095d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f80960: mov    %eax,-0x14000(%rsp)
  0x0000000122f80967: push   %rbp
  0x0000000122f80968: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::form@0 (line 116)

  0x0000000122f8096c: mov    0x14(%rsi),%eax
  0x0000000122f8096f: shl    $0x3,%rax          ;*getfield form {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::form@1 (line 116)

  0x0000000122f80973: add    $0x30,%rsp
  0x0000000122f80977: pop    %rbp
  0x0000000122f80978: mov    0x108(%r15),%r10
  0x0000000122f8097f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f80982: retq   
  0x0000000122f80983: nop
  0x0000000122f80984: nop
  0x0000000122f80985: mov    0x420(%r15),%rax
  0x0000000122f8098c: movabs $0x0,%r10
  0x0000000122f80996: mov    %r10,0x420(%r15)
  0x0000000122f8099d: movabs $0x0,%r10
  0x0000000122f809a7: mov    %r10,0x428(%r15)
  0x0000000122f809ae: add    $0x30,%rsp
  0x0000000122f809b2: pop    %rbp
  0x0000000122f809b3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f809b8: hlt    
  0x0000000122f809b9: hlt    
  0x0000000122f809ba: hlt    
  0x0000000122f809bb: hlt    
  0x0000000122f809bc: hlt    
  0x0000000122f809bd: hlt    
  0x0000000122f809be: hlt    
  0x0000000122f809bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f809c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f809c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f809ca: sub    $0x80,%rsp
  0x0000000122f809d1: mov    %rax,0x78(%rsp)
  0x0000000122f809d6: mov    %rcx,0x70(%rsp)
  0x0000000122f809db: mov    %rdx,0x68(%rsp)
  0x0000000122f809e0: mov    %rbx,0x60(%rsp)
  0x0000000122f809e5: mov    %rbp,0x50(%rsp)
  0x0000000122f809ea: mov    %rsi,0x48(%rsp)
  0x0000000122f809ef: mov    %rdi,0x40(%rsp)
  0x0000000122f809f4: mov    %r8,0x38(%rsp)
  0x0000000122f809f9: mov    %r9,0x30(%rsp)
  0x0000000122f809fe: mov    %r10,0x28(%rsp)
  0x0000000122f80a03: mov    %r11,0x20(%rsp)
  0x0000000122f80a08: mov    %r12,0x18(%rsp)
  0x0000000122f80a0d: mov    %r13,0x10(%rsp)
  0x0000000122f80a12: mov    %r14,0x8(%rsp)
  0x0000000122f80a17: mov    %r15,(%rsp)
  0x0000000122f80a1b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f80a25: movabs $0x122f809c5,%rsi  ;   {internal_word}
  0x0000000122f80a2f: mov    %rsp,%rdx
  0x0000000122f80a32: and    $0xfffffffffffffff0,%rsp
  0x0000000122f80a36: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f80a3b: hlt    
[Deopt Handler Code]
  0x0000000122f80a3c: movabs $0x122f80a3c,%r10  ;   {section_word}
  0x0000000122f80a46: push   %r10
  0x0000000122f80a48: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f80a4d: hlt    
  0x0000000122f80a4e: hlt    
  0x0000000122f80a4f: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='141' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='384' iicount='384' level='3' stamp='0.510' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='141' compiler='c1' level='3' entry='0x000000011ba604c0' size='1080' address='0x000000011ba60310' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1048' nul_chk_table_offset='1056' metadata_offset='832' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='964' iicount='967' stamp='0.510'/>
<print_nmethod stamp='0.510'>
Compiled method (c1)     510  141       3       java.util.zip.ZipUtils::SH (21 bytes)
 total in heap  [0x000000011ba60310,0x000000011ba60748] = 1080
 relocation     [0x000000011ba60488,0x000000011ba604b8] = 48
 main code      [0x000000011ba604c0,0x000000011ba605c0] = 256
 stub code      [0x000000011ba605c0,0x000000011ba60650] = 144
 metadata       [0x000000011ba60650,0x000000011ba60658] = 8
 scopes data    [0x000000011ba60658,0x000000011ba60688] = 48
 scopes pcs     [0x000000011ba60688,0x000000011ba60728] = 160
 dependencies   [0x000000011ba60728,0x000000011ba60730] = 8
 nul chk table  [0x000000011ba60730,0x000000011ba60748] = 24
----------------------------------------------------------------------
java/util/zip/ZipUtils.SH([BI)I  [0x000000011ba604c0, 0x000000011ba60650]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba604c0: mov    %eax,-0x14000(%rsp)
  0x000000011ba604c7: push   %rbp
  0x000000011ba604c8: sub    $0x30,%rsp
  0x000000011ba604cc: movabs $0x132998178,%rax  ;   {metadata(method data for {method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba604d6: mov    0x104(%rax),%edi
  0x000000011ba604dc: add    $0x8,%edi
  0x000000011ba604df: mov    %edi,0x104(%rax)
  0x000000011ba604e5: and    $0x1ff8,%edi
  0x000000011ba604eb: cmp    $0x0,%edi
  0x000000011ba604ee: je     0x000000011ba6053a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@0 (line 210)

  0x000000011ba604f4: cmp    0xc(%rsi),%edx     ; implicit exception: dispatches to 0x000000011ba60558
  0x000000011ba604f7: jae    0x000000011ba60562
  0x000000011ba604fd: movslq %edx,%rax
  0x000000011ba60500: movsbl 0x10(%rsi,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)

  0x000000011ba60505: inc    %edx
  0x000000011ba60507: cmp    0xc(%rsi),%edx
  0x000000011ba6050a: jae    0x000000011ba60570
  0x000000011ba60510: movslq %edx,%rdx
  0x000000011ba60513: movsbl 0x10(%rsi,%rdx,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)

  0x000000011ba60518: and    $0xff,%eax
  0x000000011ba6051e: and    $0xff,%esi
  0x000000011ba60524: shl    $0x8,%esi
  0x000000011ba60527: or     %rsi,%rax
  0x000000011ba6052a: add    $0x30,%rsp
  0x000000011ba6052e: pop    %rbp
  0x000000011ba6052f: mov    0x108(%r15),%r10
  0x000000011ba60536: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba60539: retq   
  0x000000011ba6053a: movabs $0x132995390,%r10  ;   {metadata({method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba60544: mov    %r10,0x8(%rsp)
  0x000000011ba60549: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba60551: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::SH@-1 (line 210)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba60556: jmp    0x000000011ba604f4
  0x000000011ba60558: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba6055d: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba60562: mov    %rdx,(%rsp)
  0x000000011ba60566: mov    %rsi,0x8(%rsp)
  0x000000011ba6056b: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba60570: mov    %rdx,(%rsp)
  0x000000011ba60574: mov    %rsi,0x8(%rsp)
  0x000000011ba60579: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba6057e: nop
  0x000000011ba6057f: nop
  0x000000011ba60580: mov    0x420(%r15),%rax
  0x000000011ba60587: movabs $0x0,%r10
  0x000000011ba60591: mov    %r10,0x420(%r15)
  0x000000011ba60598: movabs $0x0,%r10
  0x000000011ba605a2: mov    %r10,0x428(%r15)
  0x000000011ba605a9: add    $0x30,%rsp
  0x000000011ba605ad: pop    %rbp
  0x000000011ba605ae: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba605b3: hlt    
  0x000000011ba605b4: hlt    
  0x000000011ba605b5: hlt    
  0x000000011ba605b6: hlt    
  0x000000011ba605b7: hlt    
  0x000000011ba605b8: hlt    
  0x000000011ba605b9: hlt    
  0x000000011ba605ba: hlt    
  0x000000011ba605bb: hlt    
  0x000000011ba605bc: hlt    
  0x000000011ba605bd: hlt    
  0x000000011ba605be: hlt    
  0x000000011ba605bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba605c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba605c5: mov    %rsp,-0x28(%rsp)
  0x000000011ba605ca: sub    $0x80,%rsp
  0x000000011ba605d1: mov    %rax,0x78(%rsp)
  0x000000011ba605d6: mov    %rcx,0x70(%rsp)
  0x000000011ba605db: mov    %rdx,0x68(%rsp)
  0x000000011ba605e0: mov    %rbx,0x60(%rsp)
  0x000000011ba605e5: mov    %rbp,0x50(%rsp)
  0x000000011ba605ea: mov    %rsi,0x48(%rsp)
  0x000000011ba605ef: mov    %rdi,0x40(%rsp)
  0x000000011ba605f4: mov    %r8,0x38(%rsp)
  0x000000011ba605f9: mov    %r9,0x30(%rsp)
  0x000000011ba605fe: mov    %r10,0x28(%rsp)
  0x000000011ba60603: mov    %r11,0x20(%rsp)
  0x000000011ba60608: mov    %r12,0x18(%rsp)
  0x000000011ba6060d: mov    %r13,0x10(%rsp)
  0x000000011ba60612: mov    %r14,0x8(%rsp)
  0x000000011ba60617: mov    %r15,(%rsp)
  0x000000011ba6061b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba60625: movabs $0x11ba605c5,%rsi  ;   {internal_word}
  0x000000011ba6062f: mov    %rsp,%rdx
  0x000000011ba60632: and    $0xfffffffffffffff0,%rsp
  0x000000011ba60636: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba6063b: hlt    
[Deopt Handler Code]
  0x000000011ba6063c: movabs $0x11ba6063c,%r10  ;   {section_word}
  0x000000011ba60646: push   %r10
  0x000000011ba60648: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba6064d: hlt    
  0x000000011ba6064e: hlt    
  0x000000011ba6064f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 150 157 162 176 190 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='142' method='java.util.zip.ZipFile$Source hashN ([BII)I' bytes='26' count='182' backedge_count='7168' iicount='182' level='3' stamp='0.515' comment='tiered' hot_count='182'/>
<task_queued compile_id='143' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='1536' iicount='1536' stamp='0.515' comment='tiered' hot_count='1536'/>
<writer thread='15875'/>
<nmethod compile_id='142' compiler='c1' level='3' entry='0x000000011ba60940' size='1336' address='0x000000011ba60790' relocation_offset='376' insts_offset='432' stub_offset='848' scopes_data_offset='1000' scopes_pcs_offset='1080' dependencies_offset='1304' nul_chk_table_offset='1312' metadata_offset='992' method='java.util.zip.ZipFile$Source hashN ([BII)I' bytes='26' count='268' backedge_count='11845' iicount='269' stamp='0.515'/>
<print_nmethod stamp='0.515'>
Compiled method (c1)     515  142       3       java.util.zip.ZipFile$Source::hashN (26 bytes)
 total in heap  [0x000000011ba60790,0x000000011ba60cc8] = 1336
 relocation     [0x000000011ba60908,0x000000011ba60940] = 56
 main code      [0x000000011ba60940,0x000000011ba60ae0] = 416
 stub code      [0x000000011ba60ae0,0x000000011ba60b70] = 144
 metadata       [0x000000011ba60b70,0x000000011ba60b78] = 8
 scopes data    [0x000000011ba60b78,0x000000011ba60bc8] = 80
 scopes pcs     [0x000000011ba60bc8,0x000000011ba60ca8] = 224
 dependencies   [0x000000011ba60ca8,0x000000011ba60cb0] = 8
 nul chk table  [0x000000011ba60cb0,0x000000011ba60cc8] = 24
----------------------------------------------------------------------
java/util/zip/ZipFile$Source.hashN([BII)I  [0x000000011ba60940, 0x000000011ba60b70]  560 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011ba60940: mov    %eax,-0x14000(%rsp)
  0x000000011ba60947: push   %rbp
  0x000000011ba60948: sub    $0x30,%rsp
  0x000000011ba6094c: movabs $0x1329982f0,%rax  ;   {metadata(method data for {method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;)}
  0x000000011ba60956: mov    0x104(%rax),%edi
  0x000000011ba6095c: add    $0x8,%edi
  0x000000011ba6095f: mov    %edi,0x104(%rax)
  0x000000011ba60965: and    $0x1ff8,%edi
  0x000000011ba6096b: cmp    $0x0,%edi
  0x000000011ba6096e: je     0x000000011ba60a36  ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@0 (line 1316)

  0x000000011ba60974: mov    $0x1,%eax
  0x000000011ba60979: jmpq   0x000000011ba609e8  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@2 (line 1317)

  0x000000011ba6097e: xchg   %ax,%ax
  0x000000011ba60980: mov    %rdx,%rbx
  0x000000011ba60983: inc    %ebx
  0x000000011ba60985: cmp    0xc(%rsi),%edx     ; implicit exception: dispatches to 0x000000011ba60a57
  0x000000011ba60988: jae    0x000000011ba60a61
  0x000000011ba6098e: movslq %edx,%rdx
  0x000000011ba60991: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1318)

  0x000000011ba60996: mov    %rax,%rcx
  0x000000011ba60999: shl    $0x5,%eax
  0x000000011ba6099c: sub    %ecx,%eax
  0x000000011ba6099e: add    %edx,%eax
  0x000000011ba609a0: movabs $0x1329982f0,%rdx  ;   {metadata(method data for {method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;)}
  0x000000011ba609aa: mov    0x108(%rdx),%ecx
  0x000000011ba609b0: add    $0x8,%ecx
  0x000000011ba609b3: mov    %ecx,0x108(%rdx)
  0x000000011ba609b9: and    $0xfff8,%ecx
  0x000000011ba609bf: cmp    $0x0,%ecx
  0x000000011ba609c2: je     0x000000011ba60a6f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1318)

  0x000000011ba609c8: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1318)

  0x000000011ba609cf: test   %eax,(%r10)        ;   {poll}
  0x000000011ba609d2: movabs $0x1329982f0,%rdx  ;   {metadata(method data for {method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;)}
  0x000000011ba609dc: incl   0x160(%rdx)
  0x000000011ba609e2: mov    %rdi,%rcx
  0x000000011ba609e5: mov    %rbx,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1318)

  0x000000011ba609e8: mov    %rcx,%rdi
  0x000000011ba609eb: dec    %edi
  0x000000011ba609ed: cmp    $0x0,%ecx
  0x000000011ba609f0: movabs $0x1329982f0,%rbx  ;   {metadata(method data for {method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;)}
  0x000000011ba609fa: movabs $0x150,%rcx
  0x000000011ba60a04: jg     0x000000011ba60a14
  0x000000011ba60a0a: movabs $0x140,%rcx
  0x000000011ba60a14: mov    (%rbx,%rcx,1),%r8
  0x000000011ba60a18: lea    0x1(%r8),%r8
  0x000000011ba60a1c: mov    %r8,(%rbx,%rcx,1)
  0x000000011ba60a20: jg     0x000000011ba60980  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@6 (line 1317)

  0x000000011ba60a26: add    $0x30,%rsp
  0x000000011ba60a2a: pop    %rbp
  0x000000011ba60a2b: mov    0x108(%r15),%r10
  0x000000011ba60a32: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba60a35: retq   
  0x000000011ba60a36: movabs $0x13291bd30,%r10  ;   {metadata({method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;)}
  0x000000011ba60a40: mov    %r10,0x8(%rsp)
  0x000000011ba60a45: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba60a4d: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile$Source::hashN@-1 (line 1316)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba60a52: jmpq   0x000000011ba60974
  0x000000011ba60a57: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1318)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba60a5c: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1318)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba60a61: mov    %rdx,(%rsp)
  0x000000011ba60a65: mov    %rsi,0x8(%rsp)
  0x000000011ba60a6a: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1318)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba60a6f: movabs $0x13291bd30,%r10  ;   {metadata({method} {0x000000013291bd30} &apos;hashN&apos; &apos;([BII)I&apos; in &apos;java/util/zip/ZipFile$Source&apos;)}
  0x000000011ba60a79: mov    %r10,0x8(%rsp)
  0x000000011ba60a7e: movq   $0x15,(%rsp)
  0x000000011ba60a86: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1318)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba60a8b: jmpq   0x000000011ba609c8
  0x000000011ba60a90: nop
  0x000000011ba60a91: nop
  0x000000011ba60a92: mov    0x420(%r15),%rax
  0x000000011ba60a99: movabs $0x0,%r10
  0x000000011ba60aa3: mov    %r10,0x420(%r15)
  0x000000011ba60aaa: movabs $0x0,%r10
  0x000000011ba60ab4: mov    %r10,0x428(%r15)
  0x000000011ba60abb: add    $0x30,%rsp
  0x000000011ba60abf: pop    %rbp
  0x000000011ba60ac0: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba60ac5: hlt    
  0x000000011ba60ac6: hlt    
  0x000000011ba60ac7: hlt    
  0x000000011ba60ac8: hlt    
  0x000000011ba60ac9: hlt    
  0x000000011ba60aca: hlt    
  0x000000011ba60acb: hlt    
  0x000000011ba60acc: hlt    
  0x000000011ba60acd: hlt    
  0x000000011ba60ace: hlt    
  0x000000011ba60acf: hlt    
  0x000000011ba60ad0: hlt    
  0x000000011ba60ad1: hlt    
  0x000000011ba60ad2: hlt    
  0x000000011ba60ad3: hlt    
  0x000000011ba60ad4: hlt    
  0x000000011ba60ad5: hlt    
  0x000000011ba60ad6: hlt    
  0x000000011ba60ad7: hlt    
  0x000000011ba60ad8: hlt    
  0x000000011ba60ad9: hlt    
  0x000000011ba60ada: hlt    
  0x000000011ba60adb: hlt    
  0x000000011ba60adc: hlt    
  0x000000011ba60add: hlt    
  0x000000011ba60ade: hlt    
  0x000000011ba60adf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba60ae0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba60ae5: mov    %rsp,-0x28(%rsp)
  0x000000011ba60aea: sub    $0x80,%rsp
  0x000000011ba60af1: mov    %rax,0x78(%rsp)
  0x000000011ba60af6: mov    %rcx,0x70(%rsp)
  0x000000011ba60afb: mov    %rdx,0x68(%rsp)
  0x000000011ba60b00: mov    %rbx,0x60(%rsp)
  0x000000011ba60b05: mov    %rbp,0x50(%rsp)
  0x000000011ba60b0a: mov    %rsi,0x48(%rsp)
  0x000000011ba60b0f: mov    %rdi,0x40(%rsp)
  0x000000011ba60b14: mov    %r8,0x38(%rsp)
  0x000000011ba60b19: mov    %r9,0x30(%rsp)
  0x000000011ba60b1e: mov    %r10,0x28(%rsp)
  0x000000011ba60b23: mov    %r11,0x20(%rsp)
  0x000000011ba60b28: mov    %r12,0x18(%rsp)
  0x000000011ba60b2d: mov    %r13,0x10(%rsp)
  0x000000011ba60b32: mov    %r14,0x8(%rsp)
  0x000000011ba60b37: mov    %r15,(%rsp)
  0x000000011ba60b3b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba60b45: movabs $0x11ba60ae5,%rsi  ;   {internal_word}
  0x000000011ba60b4f: mov    %rsp,%rdx
  0x000000011ba60b52: and    $0xfffffffffffffff0,%rsp
  0x000000011ba60b56: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba60b5b: hlt    
[Deopt Handler Code]
  0x000000011ba60b5c: movabs $0x11ba60b5c,%r10  ;   {section_word}
  0x000000011ba60b66: push   %r10
  0x000000011ba60b68: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba60b6d: hlt    
  0x000000011ba60b6e: hlt    
  0x000000011ba60b6f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 143 274 284 289 303 331 </print_nmethod>
<writer thread='15363'/>
<nmethod compile_id='143' compiler='c2' level='4' entry='0x0000000122f80ca0' size='904' address='0x0000000122f80b10' relocation_offset='376' insts_offset='400' stub_offset='560' scopes_data_offset='592' scopes_pcs_offset='672' dependencies_offset='880' nul_chk_table_offset='888' metadata_offset='584' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='2271' iicount='2271' stamp='0.518'/>
<make_not_entrant thread='15363' compile_id='141' compiler='c1' level='3' stamp='0.518'/>
<print_nmethod stamp='0.518'>
Compiled method (c2)     518  143       4       java.util.zip.ZipUtils::SH (21 bytes)
 total in heap  [0x0000000122f80b10,0x0000000122f80e98] = 904
 relocation     [0x0000000122f80c88,0x0000000122f80c98] = 16
 main code      [0x0000000122f80ca0,0x0000000122f80d40] = 160
 stub code      [0x0000000122f80d40,0x0000000122f80d58] = 24
 metadata       [0x0000000122f80d58,0x0000000122f80d60] = 8
 scopes data    [0x0000000122f80d60,0x0000000122f80db0] = 80
 scopes pcs     [0x0000000122f80db0,0x0000000122f80e80] = 208
 dependencies   [0x0000000122f80e80,0x0000000122f80e88] = 8
 nul chk table  [0x0000000122f80e88,0x0000000122f80e98] = 16
----------------------------------------------------------------------
java/util/zip/ZipUtils.SH([BI)I  [0x0000000122f80ca0, 0x0000000122f80d58]  184 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000122f80ca0: mov    %eax,-0x14000(%rsp)
  0x0000000122f80ca7: push   %rbp
  0x0000000122f80ca8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::SH@-1 (line 210)

  0x0000000122f80cac: mov    0xc(%rsi),%r10d    ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; implicit exception: dispatches to 0x0000000122f80d12
  0x0000000122f80cb0: cmp    %r10d,%edx
  0x0000000122f80cb3: jae    0x0000000122f80ce3
  0x0000000122f80cb5: movzbl 0x10(%rsi,%rdx,1),%r11d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@6 (line 210)

  0x0000000122f80cbb: mov    %edx,%ebp
  0x0000000122f80cbd: inc    %ebp               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@10 (line 210)

  0x0000000122f80cbf: cmp    %r10d,%ebp
  0x0000000122f80cc2: jae    0x0000000122f80cfa
  0x0000000122f80cc4: movslq %edx,%r10
  0x0000000122f80cc7: movzbl 0x11(%rsi,%r10,1),%eax
  0x0000000122f80ccd: shl    $0x8,%eax
  0x0000000122f80cd0: or     %r11d,%eax         ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@19 (line 210)

  0x0000000122f80cd3: add    $0x20,%rsp
  0x0000000122f80cd7: pop    %rbp
  0x0000000122f80cd8: mov    0x108(%r15),%r10
  0x0000000122f80cdf: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f80ce2: retq   
  0x0000000122f80ce3: mov    %rsi,0x8(%rsp)
  0x0000000122f80ce8: mov    %edx,0x4(%rsp)
  0x0000000122f80cec: mov    $0xffffffe4,%esi
  0x0000000122f80cf1: xchg   %ax,%ax
  0x0000000122f80cf3: callq  0x000000011b4d3900  ; ImmutableOopMap{[8]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f80cf8: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)

  0x0000000122f80cfa: mov    %rsi,(%rsp)
  0x0000000122f80cfe: mov    %r11d,0x8(%rsp)
  0x0000000122f80d03: mov    $0xffffffe4,%esi
  0x0000000122f80d08: data16 xchg %ax,%ax
  0x0000000122f80d0b: callq  0x000000011b4d3900  ; ImmutableOopMap{[0]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f80d10: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)

  0x0000000122f80d12: mov    $0xfffffff6,%esi
  0x0000000122f80d17: mov    %edx,%ebp
  0x0000000122f80d19: xchg   %ax,%ax
  0x0000000122f80d1b: callq  0x000000011b4d3900  ; ImmutableOopMap{}
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call UncommonTrapBlob}
  0x0000000122f80d20: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)

  0x0000000122f80d22: hlt    
  0x0000000122f80d23: hlt    
  0x0000000122f80d24: hlt    
  0x0000000122f80d25: hlt    
  0x0000000122f80d26: hlt    
  0x0000000122f80d27: hlt    
  0x0000000122f80d28: hlt    
  0x0000000122f80d29: hlt    
  0x0000000122f80d2a: hlt    
  0x0000000122f80d2b: hlt    
  0x0000000122f80d2c: hlt    
  0x0000000122f80d2d: hlt    
  0x0000000122f80d2e: hlt    
  0x0000000122f80d2f: hlt    
  0x0000000122f80d30: hlt    
  0x0000000122f80d31: hlt    
  0x0000000122f80d32: hlt    
  0x0000000122f80d33: hlt    
  0x0000000122f80d34: hlt    
  0x0000000122f80d35: hlt    
  0x0000000122f80d36: hlt    
  0x0000000122f80d37: hlt    
  0x0000000122f80d38: hlt    
  0x0000000122f80d39: hlt    
  0x0000000122f80d3a: hlt    
  0x0000000122f80d3b: hlt    
  0x0000000122f80d3c: hlt    
  0x0000000122f80d3d: hlt    
  0x0000000122f80d3e: hlt    
  0x0000000122f80d3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f80d40: jmpq   0x000000011b595a80  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000122f80d45: callq  0x0000000122f80d4a
  0x0000000122f80d4a: subq   $0x5,(%rsp)
  0x0000000122f80d4f: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f80d54: hlt    
  0x0000000122f80d55: hlt    
  0x0000000122f80d56: hlt    
  0x0000000122f80d57: hlt    

ImmutableOopMap{[8]=Oop }pc offsets: 88 
ImmutableOopMap{[0]=Oop }pc offsets: 112 
ImmutableOopMap{}pc offsets: 128 </print_nmethod>
<writer thread='15875'/>
<nmethod compile_id='136' compiler='c1' level='1' entry='0x0000000122f810c0' size='800' address='0x0000000122f80f10' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor$Provides service ()Ljava/lang/String;' bytes='5' count='159' iicount='159' stamp='0.520'/>
<print_nmethod stamp='0.520'>
Compiled method (c1)     519  136       1       java.lang.module.ModuleDescriptor$Provides::service (5 bytes)
 total in heap  [0x0000000122f80f10,0x0000000122f81230] = 800
 relocation     [0x0000000122f81088,0x0000000122f810b0] = 40
 main code      [0x0000000122f810c0,0x0000000122f81140] = 128
 stub code      [0x0000000122f81140,0x0000000122f811d0] = 144
 metadata       [0x0000000122f811d0,0x0000000122f811d8] = 8
 scopes data    [0x0000000122f811d8,0x0000000122f811e8] = 16
 scopes pcs     [0x0000000122f811e8,0x0000000122f81228] = 64
 dependencies   [0x0000000122f81228,0x0000000122f81230] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Provides.service()Ljava/lang/String;  [0x0000000122f810c0, 0x0000000122f811d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326e0f00} &apos;service&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/module/ModuleDescriptor$Provides&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f810c0: mov    0x8(%rsi),%r10d
  0x0000000122f810c4: movabs $0x800000000,%r12
  0x0000000122f810ce: add    %r12,%r10
  0x0000000122f810d1: xor    %r12,%r12
  0x0000000122f810d4: cmp    %rax,%r10
  0x0000000122f810d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f810dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f810e0: mov    %eax,-0x14000(%rsp)
  0x0000000122f810e7: push   %rbp
  0x0000000122f810e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Provides::service@0 (line 816)

  0x0000000122f810ec: mov    0xc(%rsi),%eax
  0x0000000122f810ef: shl    $0x3,%rax          ;*getfield service {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Provides::service@1 (line 816)

  0x0000000122f810f3: add    $0x30,%rsp
  0x0000000122f810f7: pop    %rbp
  0x0000000122f810f8: mov    0x108(%r15),%r10
  0x0000000122f810ff: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f81102: retq   
  0x0000000122f81103: nop
  0x0000000122f81104: nop
  0x0000000122f81105: mov    0x420(%r15),%rax
  0x0000000122f8110c: movabs $0x0,%r10
  0x0000000122f81116: mov    %r10,0x420(%r15)
  0x0000000122f8111d: movabs $0x0,%r10
  0x0000000122f81127: mov    %r10,0x428(%r15)
  0x0000000122f8112e: add    $0x30,%rsp
  0x0000000122f81132: pop    %rbp
  0x0000000122f81133: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f81138: hlt    
  0x0000000122f81139: hlt    
  0x0000000122f8113a: hlt    
  0x0000000122f8113b: hlt    
  0x0000000122f8113c: hlt    
  0x0000000122f8113d: hlt    
  0x0000000122f8113e: hlt    
  0x0000000122f8113f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f81140: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f81145: mov    %rsp,-0x28(%rsp)
  0x0000000122f8114a: sub    $0x80,%rsp
  0x0000000122f81151: mov    %rax,0x78(%rsp)
  0x0000000122f81156: mov    %rcx,0x70(%rsp)
  0x0000000122f8115b: mov    %rdx,0x68(%rsp)
  0x0000000122f81160: mov    %rbx,0x60(%rsp)
  0x0000000122f81165: mov    %rbp,0x50(%rsp)
  0x0000000122f8116a: mov    %rsi,0x48(%rsp)
  0x0000000122f8116f: mov    %rdi,0x40(%rsp)
  0x0000000122f81174: mov    %r8,0x38(%rsp)
  0x0000000122f81179: mov    %r9,0x30(%rsp)
  0x0000000122f8117e: mov    %r10,0x28(%rsp)
  0x0000000122f81183: mov    %r11,0x20(%rsp)
  0x0000000122f81188: mov    %r12,0x18(%rsp)
  0x0000000122f8118d: mov    %r13,0x10(%rsp)
  0x0000000122f81192: mov    %r14,0x8(%rsp)
  0x0000000122f81197: mov    %r15,(%rsp)
  0x0000000122f8119b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f811a5: movabs $0x122f81145,%rsi  ;   {internal_word}
  0x0000000122f811af: mov    %rsp,%rdx
  0x0000000122f811b2: and    $0xfffffffffffffff0,%rsp
  0x0000000122f811b6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f811bb: hlt    
[Deopt Handler Code]
  0x0000000122f811bc: movabs $0x122f811bc,%r10  ;   {section_word}
  0x0000000122f811c6: push   %r10
  0x0000000122f811c8: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f811cd: hlt    
  0x0000000122f811ce: hlt    
  0x0000000122f811cf: hlt    
</print_nmethod>
<nmethod compile_id='129' compiler='c1' level='1' entry='0x0000000122f81440' size='800' address='0x0000000122f81290' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='728' dependencies_offset='792' metadata_offset='704' method='java.lang.module.ModuleDescriptor$Version toString ()Ljava/lang/String;' bytes='5' count='129' iicount='129' stamp='0.521'/>
<print_nmethod stamp='0.521'>
Compiled method (c1)     521  129       1       java.lang.module.ModuleDescriptor$Version::toString (5 bytes)
 total in heap  [0x0000000122f81290,0x0000000122f815b0] = 800
 relocation     [0x0000000122f81408,0x0000000122f81430] = 40
 main code      [0x0000000122f81440,0x0000000122f814c0] = 128
 stub code      [0x0000000122f814c0,0x0000000122f81550] = 144
 metadata       [0x0000000122f81550,0x0000000122f81558] = 8
 scopes data    [0x0000000122f81558,0x0000000122f81568] = 16
 scopes pcs     [0x0000000122f81568,0x0000000122f815a8] = 64
 dependencies   [0x0000000122f815a8,0x0000000122f815b0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Version.toString()Ljava/lang/String;  [0x0000000122f81440, 0x0000000122f81550]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001326e5e98} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/module/ModuleDescriptor$Version&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000122f81440: mov    0x8(%rsi),%r10d
  0x0000000122f81444: movabs $0x800000000,%r12
  0x0000000122f8144e: add    %r12,%r10
  0x0000000122f81451: xor    %r12,%r12
  0x0000000122f81454: cmp    %rax,%r10
  0x0000000122f81457: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x0000000122f8145d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000122f81460: mov    %eax,-0x14000(%rsp)
  0x0000000122f81467: push   %rbp
  0x0000000122f81468: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Version::toString@0 (line 1231)

  0x0000000122f8146c: mov    0xc(%rsi),%eax
  0x0000000122f8146f: shl    $0x3,%rax          ;*getfield version {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Version::toString@1 (line 1231)

  0x0000000122f81473: add    $0x30,%rsp
  0x0000000122f81477: pop    %rbp
  0x0000000122f81478: mov    0x108(%r15),%r10
  0x0000000122f8147f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000122f81482: retq   
  0x0000000122f81483: nop
  0x0000000122f81484: nop
  0x0000000122f81485: mov    0x420(%r15),%rax
  0x0000000122f8148c: movabs $0x0,%r10
  0x0000000122f81496: mov    %r10,0x420(%r15)
  0x0000000122f8149d: movabs $0x0,%r10
  0x0000000122f814a7: mov    %r10,0x428(%r15)
  0x0000000122f814ae: add    $0x30,%rsp
  0x0000000122f814b2: pop    %rbp
  0x0000000122f814b3: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000122f814b8: hlt    
  0x0000000122f814b9: hlt    
  0x0000000122f814ba: hlt    
  0x0000000122f814bb: hlt    
  0x0000000122f814bc: hlt    
  0x0000000122f814bd: hlt    
  0x0000000122f814be: hlt    
  0x0000000122f814bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000122f814c0: callq  0x000000011b597b00  ;   {no_reloc}
  0x0000000122f814c5: mov    %rsp,-0x28(%rsp)
  0x0000000122f814ca: sub    $0x80,%rsp
  0x0000000122f814d1: mov    %rax,0x78(%rsp)
  0x0000000122f814d6: mov    %rcx,0x70(%rsp)
  0x0000000122f814db: mov    %rdx,0x68(%rsp)
  0x0000000122f814e0: mov    %rbx,0x60(%rsp)
  0x0000000122f814e5: mov    %rbp,0x50(%rsp)
  0x0000000122f814ea: mov    %rsi,0x48(%rsp)
  0x0000000122f814ef: mov    %rdi,0x40(%rsp)
  0x0000000122f814f4: mov    %r8,0x38(%rsp)
  0x0000000122f814f9: mov    %r9,0x30(%rsp)
  0x0000000122f814fe: mov    %r10,0x28(%rsp)
  0x0000000122f81503: mov    %r11,0x20(%rsp)
  0x0000000122f81508: mov    %r12,0x18(%rsp)
  0x0000000122f8150d: mov    %r13,0x10(%rsp)
  0x0000000122f81512: mov    %r14,0x8(%rsp)
  0x0000000122f81517: mov    %r15,(%rsp)
  0x0000000122f8151b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x0000000122f81525: movabs $0x122f814c5,%rsi  ;   {internal_word}
  0x0000000122f8152f: mov    %rsp,%rdx
  0x0000000122f81532: and    $0xfffffffffffffff0,%rsp
  0x0000000122f81536: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000122f8153b: hlt    
[Deopt Handler Code]
  0x0000000122f8153c: movabs $0x122f8153c,%r10  ;   {section_word}
  0x0000000122f81546: push   %r10
  0x0000000122f81548: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x0000000122f8154d: hlt    
  0x0000000122f8154e: hlt    
  0x0000000122f8154f: hlt    
</print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='144' method='java.lang.AbstractStringBuilder ensureCapacityInternal (I)V' bytes='39' count='512' iicount='512' level='3' stamp='0.525' comment='tiered' hot_count='512'/>
<task_queued compile_id='145' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='384' iicount='384' level='3' stamp='0.525' comment='tiered' hot_count='384'/>
<task_queued compile_id='146' method='java.lang.StringLatin1 indexOf ([BII)I' bytes='61' count='347' backedge_count='5120' iicount='347' level='3' stamp='0.526' comment='tiered' hot_count='347'/>
<task_queued compile_id='147' method='java.util.zip.ZipUtils LG ([BI)J' bytes='22' count='384' iicount='384' level='3' stamp='0.526' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='144' compiler='c1' level='3' entry='0x000000011ba60f00' size='2376' address='0x000000011ba60d10' relocation_offset='376' insts_offset='496' stub_offset='1552' scopes_data_offset='1760' scopes_pcs_offset='2000' dependencies_offset='2352' nul_chk_table_offset='2360' metadata_offset='1736' method='java.lang.AbstractStringBuilder ensureCapacityInternal (I)V' bytes='39' count='527' iicount='527' stamp='0.526'/>
<print_nmethod stamp='0.526'>
Compiled method (c1)     526  144       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
 total in heap  [0x000000011ba60d10,0x000000011ba61658] = 2376
 relocation     [0x000000011ba60e88,0x000000011ba60ef0] = 104
 main code      [0x000000011ba60f00,0x000000011ba61320] = 1056
 stub code      [0x000000011ba61320,0x000000011ba613d8] = 184
 metadata       [0x000000011ba613d8,0x000000011ba613f0] = 24
 scopes data    [0x000000011ba613f0,0x000000011ba614e0] = 240
 scopes pcs     [0x000000011ba614e0,0x000000011ba61640] = 352
 dependencies   [0x000000011ba61640,0x000000011ba61648] = 8
 nul chk table  [0x000000011ba61648,0x000000011ba61658] = 16
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V  [0x000000011ba60f00, 0x000000011ba613d8]  1240 bytes
[Entry Point]
[Constants]
  # {method} {0x000000013254d9a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011ba60f00: mov    0x8(%rsi),%r10d
  0x000000011ba60f04: movabs $0x800000000,%r12
  0x000000011ba60f0e: add    %r12,%r10
  0x000000011ba60f11: xor    %r12,%r12
  0x000000011ba60f14: cmp    %rax,%r10
  0x000000011ba60f17: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba60f1d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba60f20: mov    %eax,-0x14000(%rsp)
  0x000000011ba60f27: push   %rbp
  0x000000011ba60f28: sub    $0xa0,%rsp
  0x000000011ba60f2f: mov    %rsi,0x78(%rsp)
  0x000000011ba60f34: movabs $0x1329c26a0,%rcx  ;   {metadata(method data for {method} {0x000000013254d9a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba60f3e: mov    0x104(%rcx),%edi
  0x000000011ba60f44: add    $0x8,%edi
  0x000000011ba60f47: mov    %edi,0x104(%rcx)
  0x000000011ba60f4d: and    $0x1ff8,%edi
  0x000000011ba60f53: cmp    $0x0,%edi
  0x000000011ba60f56: je     0x000000011ba6122b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 167)

  0x000000011ba60f5c: mov    0x14(%rsi),%edi
  0x000000011ba60f5f: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 167)

  0x000000011ba60f63: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 167)
                                                ; implicit exception: dispatches to 0x000000011ba6124c
  0x000000011ba60f66: movsbl 0x10(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 167)

  0x000000011ba60f6a: mov    %rbx,%rax
  0x000000011ba60f6d: sar    %cl,%eax
  0x000000011ba60f6f: mov    %rdx,%rcx
  0x000000011ba60f72: sub    %eax,%ecx
  0x000000011ba60f74: cmp    $0x0,%ecx
  0x000000011ba60f77: movabs $0x1329c26a0,%rax  ;   {metadata(method data for {method} {0x000000013254d9a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba60f81: movabs $0x140,%rcx
  0x000000011ba60f8b: jle    0x000000011ba60f9b
  0x000000011ba60f91: movabs $0x150,%rcx
  0x000000011ba60f9b: mov    (%rax,%rcx,1),%r8
  0x000000011ba60f9f: lea    0x1(%r8),%r8
  0x000000011ba60fa3: mov    %r8,(%rax,%rcx,1)
  0x000000011ba60fa7: jle    0x000000011ba61218  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 168)

  0x000000011ba60fad: mov    %ebx,0x80(%rsp)
  0x000000011ba60fb4: mov    %rdi,0x88(%rsp)
  0x000000011ba60fbc: mov    %rsi,%rax
  0x000000011ba60fbf: movabs $0x1329c26a0,%rcx  ;   {metadata(method data for {method} {0x000000013254d9a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba60fc9: addq   $0x1,0x160(%rcx)
  0x000000011ba60fd1: mov    %rsi,%rax
  0x000000011ba60fd4: mov    %rax,%rsi          ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 170)

  0x000000011ba60fd7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[120]=Oop [136]=Oop }
                                                ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 170)
                                                ;   {optimized virtual_call}
  0x000000011ba60fdc: mov    0x78(%rsp),%rsi
  0x000000011ba60fe1: movsbl 0x10(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 170)

  0x000000011ba60fe5: mov    %rax,%r8
  0x000000011ba60fe8: shl    %cl,%r8d
  0x000000011ba60feb: movabs $0x1329c26a0,%rbx  ;   {metadata(method data for {method} {0x000000013254d9a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba60ff5: addq   $0x1,0x198(%rbx)
  0x000000011ba60ffd: movabs $0x1329c2b68,%rbx  ;   {metadata(method data for {method} {0x0000000132664030} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba61007: mov    0x104(%rbx),%edx
  0x000000011ba6100d: add    $0x8,%edx
  0x000000011ba61010: mov    %edx,0x104(%rbx)
  0x000000011ba61016: and    $0x7ffff8,%edx
  0x000000011ba6101c: cmp    $0x0,%edx
  0x000000011ba6101f: je     0x000000011ba61251
  0x000000011ba61025: mov    %r8,%rbx
  0x000000011ba61028: movabs $0x800000820,%rdx  ;   {metadata({type array byte})}
  0x000000011ba61032: movslq %ebx,%rbx
  0x000000011ba61035: mov    %rbx,%rdi
  0x000000011ba61038: cmp    $0xffffff,%rbx
  0x000000011ba6103f: ja     0x000000011ba61272
  0x000000011ba61045: movabs $0x17,%rsi
  0x000000011ba6104f: lea    (%rsi,%rbx,1),%rsi
  0x000000011ba61053: and    $0xfffffffffffffff8,%rsi
  0x000000011ba61057: mov    0x118(%r15),%rax
  0x000000011ba6105e: lea    (%rax,%rsi,1),%rsi
  0x000000011ba61062: cmp    0x128(%r15),%rsi
  0x000000011ba61069: ja     0x000000011ba61272
  0x000000011ba6106f: mov    %rsi,0x118(%r15)
  0x000000011ba61076: sub    %rax,%rsi
  0x000000011ba61079: movq   $0x1,(%rax)
  0x000000011ba61080: mov    %rdx,%rcx
  0x000000011ba61083: movabs $0x800000000,%r12
  0x000000011ba6108d: sub    %r12,%rcx
  0x000000011ba61090: xor    %r12,%r12
  0x000000011ba61093: mov    %ecx,0x8(%rax)
  0x000000011ba61096: mov    %ebx,0xc(%rax)
  0x000000011ba61099: sub    $0x10,%rsi
  0x000000011ba6109d: je     0x000000011ba610bd
  0x000000011ba610a3: test   %rsi,%rsi
  0x000000011ba610a6: je     0x000000011ba610bd
  0x000000011ba610ac: xor    %rbx,%rbx
  0x000000011ba610af: shr    $0x3,%rsi
  0x000000011ba610b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011ba610b8: dec    %rsi
  0x000000011ba610bb: jne    0x000000011ba610b3  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)

  0x000000011ba610bd: movabs $0x1329c2b68,%rsi  ;   {metadata(method data for {method} {0x0000000132664030} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba610c7: addq   $0x1,0x140(%rsi)
  0x000000011ba610cf: movabs $0x132865168,%rsi  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba610d9: mov    0x104(%rsi),%edx
  0x000000011ba610df: add    $0x8,%edx
  0x000000011ba610e2: mov    %edx,0x104(%rsi)
  0x000000011ba610e8: and    $0x7ffff8,%edx
  0x000000011ba610ee: cmp    $0x0,%edx
  0x000000011ba610f1: je     0x000000011ba6127c
  0x000000011ba610f7: mov    0x80(%rsp),%ebx
  0x000000011ba610fe: cmp    %r8d,%ebx
  0x000000011ba61101: movabs $0x132865168,%rsi  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba6110b: movabs $0x140,%rdx
  0x000000011ba61115: jg     0x000000011ba61125
  0x000000011ba6111b: movabs $0x150,%rdx
  0x000000011ba61125: mov    (%rsi,%rdx,1),%rcx
  0x000000011ba61129: lea    0x1(%rcx),%rcx
  0x000000011ba6112d: mov    %rcx,(%rsi,%rdx,1)
  0x000000011ba61131: jg     0x000000011ba6114c  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1513)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)

  0x000000011ba61137: movabs $0x132865168,%rsi  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba61141: incl   0x160(%rsi)
  0x000000011ba61147: jmpq   0x000000011ba6114f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1513)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)

  0x000000011ba6114c: mov    %r8,%rbx           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1513)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)

  0x000000011ba6114f: mov    0x88(%rsp),%rdi
  0x000000011ba61157: movabs $0x1329c2b68,%rdx  ;   {metadata(method data for {method} {0x0000000132664030} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba61161: addq   $0x1,0x150(%rdx)
  0x000000011ba61169: mov    %rdi,%rsi
  0x000000011ba6116c: mov    $0x0,%edx
  0x000000011ba61171: mov    %rax,%rcx
  0x000000011ba61174: mov    $0x0,%r8d
  0x000000011ba6117a: mov    %rbx,%r9
  0x000000011ba6117d: mov    %rax,0x90(%rsp)
  0x000000011ba61185: lea    (%rdx,%r9,1),%rdi
  0x000000011ba61189: cmp    0xc(%rsi),%edi
  0x000000011ba6118c: ja     0x000000011ba6129d
  0x000000011ba61192: lea    (%r8,%r9,1),%rdi
  0x000000011ba61196: cmp    0xc(%rcx),%edi
  0x000000011ba61199: ja     0x000000011ba6129d
  0x000000011ba6119f: test   %r9d,%r9d
  0x000000011ba611a2: jl     0x000000011ba6129d
  0x000000011ba611a8: movslq %edx,%rdx
  0x000000011ba611ab: movslq %r8d,%r8
  0x000000011ba611ae: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000011ba611b3: lea    0x10(%rcx,%r8,1),%rsi
  0x000000011ba611b8: mov    %r9,%rdx
  0x000000011ba611bb: test   $0xf,%esp
  0x000000011ba611c1: je     0x000000011ba611d9
  0x000000011ba611c7: sub    $0x8,%rsp
  0x000000011ba611cb: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x000000011ba611d0: add    $0x8,%rsp
  0x000000011ba611d4: jmpq   0x000000011ba611de
  0x000000011ba611d9: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)
                                                ;   {runtime_call StubRoutines (2)}
  0x000000011ba611de: mov    0x90(%rsp),%rax
  0x000000011ba611e6: mov    0x78(%rsp),%rsi
  0x000000011ba611eb: movsbl 0x30(%r15),%edi
  0x000000011ba611f0: cmp    $0x0,%edi
  0x000000011ba611f3: jne    0x000000011ba612a9
  0x000000011ba611f9: mov    %rax,%r10
  0x000000011ba611fc: shr    $0x3,%r10
  0x000000011ba61200: mov    %r10d,0x14(%rsi)
  0x000000011ba61204: mov    %rsi,%rdi
  0x000000011ba61207: xor    %rax,%rdi
  0x000000011ba6120a: shr    $0x14,%rdi
  0x000000011ba6120e: cmp    $0x0,%rdi
  0x000000011ba61212: jne    0x000000011ba612c8  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 169)

  0x000000011ba61218: add    $0xa0,%rsp
  0x000000011ba6121f: pop    %rbp
  0x000000011ba61220: mov    0x108(%r15),%r10
  0x000000011ba61227: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba6122a: retq   
  0x000000011ba6122b: movabs $0x13254d9a0,%r10  ;   {metadata({method} {0x000000013254d9a0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba61235: mov    %r10,0x8(%rsp)
  0x000000011ba6123a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba61242: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 167)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba61247: jmpq   0x000000011ba60f5c
  0x000000011ba6124c: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop [120]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 167)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba61251: movabs $0x132664030,%r10  ;   {metadata({method} {0x0000000132664030} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba6125b: mov    %r10,0x8(%rsp)
  0x000000011ba61260: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba61268: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop rsi=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba6126d: jmpq   0x000000011ba61025
  0x000000011ba61272: callq  0x000000011b596d80  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x000000011ba61277: jmpq   0x000000011ba610bd
  0x000000011ba6127c: movabs $0x132629900,%r10  ;   {metadata({method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba61286: mov    %r10,0x8(%rsp)
  0x000000011ba6128b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba61293: callq  0x000000011b59a600  ; ImmutableOopMap{[136]=Oop [120]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1513)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba61298: jmpq   0x000000011ba610f7
  0x000000011ba6129d: xchg   %ax,%ax
  0x000000011ba6129f: callq  0x000000011b4d2400  ; ImmutableOopMap{[120]=Oop [144]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 169)
                                                ;   {static_call}
  0x000000011ba612a4: jmpq   0x000000011ba611de
  0x000000011ba612a9: mov    0x14(%rsi),%edi
  0x000000011ba612ac: shl    $0x3,%rdi
  0x000000011ba612b0: cmp    $0x0,%rdi
  0x000000011ba612b4: je     0x000000011ba611f9
  0x000000011ba612ba: mov    %rdi,(%rsp)
  0x000000011ba612be: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba612c3: jmpq   0x000000011ba611f9
  0x000000011ba612c8: cmp    $0x0,%rax
  0x000000011ba612cc: je     0x000000011ba61218
  0x000000011ba612d2: mov    %rsi,(%rsp)
  0x000000011ba612d6: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba612db: jmpq   0x000000011ba61218
  0x000000011ba612e0: nop
  0x000000011ba612e1: nop
  0x000000011ba612e2: mov    0x420(%r15),%rax
  0x000000011ba612e9: movabs $0x0,%r10
  0x000000011ba612f3: mov    %r10,0x420(%r15)
  0x000000011ba612fa: movabs $0x0,%r10
  0x000000011ba61304: mov    %r10,0x428(%r15)
  0x000000011ba6130b: add    $0xa0,%rsp
  0x000000011ba61312: pop    %rbp
  0x000000011ba61313: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba61318: hlt    
  0x000000011ba61319: hlt    
  0x000000011ba6131a: hlt    
  0x000000011ba6131b: hlt    
  0x000000011ba6131c: hlt    
  0x000000011ba6131d: hlt    
  0x000000011ba6131e: hlt    
  0x000000011ba6131f: hlt    
[Stub Code]
  0x000000011ba61320: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba61325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6132f: jmpq   0x000000011ba6132f  ;   {runtime_call}
  0x000000011ba61334: nop
  0x000000011ba61335: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6133f: jmpq   0x000000011ba6133f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba61344: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba61349: mov    %rsp,-0x28(%rsp)
  0x000000011ba6134e: sub    $0x80,%rsp
  0x000000011ba61355: mov    %rax,0x78(%rsp)
  0x000000011ba6135a: mov    %rcx,0x70(%rsp)
  0x000000011ba6135f: mov    %rdx,0x68(%rsp)
  0x000000011ba61364: mov    %rbx,0x60(%rsp)
  0x000000011ba61369: mov    %rbp,0x50(%rsp)
  0x000000011ba6136e: mov    %rsi,0x48(%rsp)
  0x000000011ba61373: mov    %rdi,0x40(%rsp)
  0x000000011ba61378: mov    %r8,0x38(%rsp)
  0x000000011ba6137d: mov    %r9,0x30(%rsp)
  0x000000011ba61382: mov    %r10,0x28(%rsp)
  0x000000011ba61387: mov    %r11,0x20(%rsp)
  0x000000011ba6138c: mov    %r12,0x18(%rsp)
  0x000000011ba61391: mov    %r13,0x10(%rsp)
  0x000000011ba61396: mov    %r14,0x8(%rsp)
  0x000000011ba6139b: mov    %r15,(%rsp)
  0x000000011ba6139f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba613a9: movabs $0x11ba61349,%rsi  ;   {internal_word}
  0x000000011ba613b3: mov    %rsp,%rdx
  0x000000011ba613b6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba613ba: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba613bf: hlt    
[Deopt Handler Code]
  0x000000011ba613c0: movabs $0x11ba613c0,%r10  ;   {section_word}
  0x000000011ba613ca: push   %r10
  0x000000011ba613cc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba613d1: hlt    
  0x000000011ba613d2: hlt    
  0x000000011ba613d3: hlt    
  0x000000011ba613d4: hlt    
  0x000000011ba613d5: hlt    
  0x000000011ba613d6: hlt    
  0x000000011ba613d7: hlt    

ImmutableOopMap{[120]=Oop [136]=Oop }pc offsets: 220 
ImmutableOopMap{rsi=Oop [120]=Oop }pc offsets: 839 
ImmutableOopMap{rsi=Oop [120]=Oop rdi=Oop }pc offsets: 849 
ImmutableOopMap{[136]=Oop rsi=Oop [120]=Oop }pc offsets: 877 
ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 887 
ImmutableOopMap{[136]=Oop [120]=Oop rax=Oop }pc offsets: 920 
ImmutableOopMap{[120]=Oop [144]=Oop }pc offsets: 932 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='148' method='java.util.zip.ZipUtils CENHOW ([BI)I' bytes='9' count='384' iicount='384' level='3' stamp='0.532' comment='tiered' hot_count='384'/>
<task_queued compile_id='149' method='java.util.zip.ZipUtils CENNAM ([BI)I' bytes='9' count='384' iicount='384' level='3' stamp='0.532' comment='tiered' hot_count='384'/>
<task_queued compile_id='150' method='java.util.zip.ZipUtils CENFLG ([BI)I' bytes='9' count='384' iicount='384' level='3' stamp='0.532' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='146' compiler='c1' level='3' entry='0x000000011ba61860' size='2152' address='0x000000011ba61690' relocation_offset='376' insts_offset='464' stub_offset='1360' scopes_data_offset='1520' scopes_pcs_offset='1712' dependencies_offset='2128' nul_chk_table_offset='2136' metadata_offset='1504' method='java.lang.StringLatin1 indexOf ([BII)I' bytes='61' count='354' backedge_count='5398' iicount='354' stamp='0.532'/>
<print_nmethod stamp='0.532'>
Compiled method (c1)     532  146       3       java.lang.StringLatin1::indexOf (61 bytes)
 total in heap  [0x000000011ba61690,0x000000011ba61ef8] = 2152
 relocation     [0x000000011ba61808,0x000000011ba61860] = 88
 main code      [0x000000011ba61860,0x000000011ba61be0] = 896
 stub code      [0x000000011ba61be0,0x000000011ba61c70] = 144
 metadata       [0x000000011ba61c70,0x000000011ba61c80] = 16
 scopes data    [0x000000011ba61c80,0x000000011ba61d40] = 192
 scopes pcs     [0x000000011ba61d40,0x000000011ba61ee0] = 416
 dependencies   [0x000000011ba61ee0,0x000000011ba61ee8] = 8
 nul chk table  [0x000000011ba61ee8,0x000000011ba61ef8] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([BII)I  [0x000000011ba61860, 0x000000011ba61c70]  1040 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011ba61860: mov    %eax,-0x14000(%rsp)
  0x000000011ba61867: push   %rbp
  0x000000011ba61868: sub    $0x40,%rsp
  0x000000011ba6186c: movabs $0x1328fcd20,%rax  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61876: mov    0x104(%rax),%edi
  0x000000011ba6187c: add    $0x8,%edi
  0x000000011ba6187f: mov    %edi,0x104(%rax)
  0x000000011ba61885: and    $0x1ff8,%edi
  0x000000011ba6188b: cmp    $0x0,%edi
  0x000000011ba6188e: je     0x000000011ba61b1c  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@0 (line 202)

  0x000000011ba61894: movabs $0x1328fcd20,%rax  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba6189e: addq   $0x1,0x140(%rax)
  0x000000011ba618a6: movabs $0x132865690,%rax  ;   {metadata(method data for {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba618b0: mov    0x104(%rax),%edi
  0x000000011ba618b6: add    $0x8,%edi
  0x000000011ba618b9: mov    %edi,0x104(%rax)
  0x000000011ba618bf: and    $0x7ffff8,%edi
  0x000000011ba618c5: cmp    $0x0,%edi
  0x000000011ba618c8: je     0x000000011ba61b3d
  0x000000011ba618ce: mov    %rdx,%rax
  0x000000011ba618d1: shr    $0x8,%eax
  0x000000011ba618d4: cmp    $0x0,%eax
  0x000000011ba618d7: movabs $0x132865690,%rax  ;   {metadata(method data for {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba618e1: movabs $0x140,%rdi
  0x000000011ba618eb: jne    0x000000011ba618fb
  0x000000011ba618f1: movabs $0x150,%rdi
  0x000000011ba618fb: mov    (%rax,%rdi,1),%rbx
  0x000000011ba618ff: lea    0x1(%rbx),%rbx
  0x000000011ba61903: mov    %rbx,(%rax,%rdi,1)
  0x000000011ba61907: jne    0x000000011ba61927  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x000000011ba6190d: movabs $0x132865690,%rax  ;   {metadata(method data for {method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61917: incl   0x160(%rax)
  0x000000011ba6191d: mov    $0x1,%eax
  0x000000011ba61922: jmpq   0x000000011ba6192c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x000000011ba61927: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x000000011ba6192c: and    $0x1,%eax
  0x000000011ba6192f: cmp    $0x0,%eax
  0x000000011ba61932: movabs $0x1328fcd20,%rax  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba6193c: movabs $0x160,%rdi
  0x000000011ba61946: je     0x000000011ba61956
  0x000000011ba6194c: movabs $0x150,%rdi
  0x000000011ba61956: mov    (%rax,%rdi,1),%rbx
  0x000000011ba6195a: lea    0x1(%rbx),%rbx
  0x000000011ba6195e: mov    %rbx,(%rax,%rdi,1)
  0x000000011ba61962: je     0x000000011ba61b07  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@4 (line 202)

  0x000000011ba61968: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ; implicit exception: dispatches to 0x000000011ba61b5e
  0x000000011ba6196b: cmp    $0x0,%ecx
  0x000000011ba6196e: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61978: movabs $0x170,%rbx
  0x000000011ba61982: jge    0x000000011ba61992
  0x000000011ba61988: movabs $0x180,%rbx
  0x000000011ba61992: mov    (%rdi,%rbx,1),%r8
  0x000000011ba61996: lea    0x1(%r8),%r8
  0x000000011ba6199a: mov    %r8,(%rdi,%rbx,1)
  0x000000011ba6199e: jge    0x000000011ba619be  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@13 (line 206)

  0x000000011ba619a4: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba619ae: incl   0x190(%rdi)
  0x000000011ba619b4: mov    $0x0,%ecx
  0x000000011ba619b9: jmpq   0x000000011ba619f6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18 (line 207)

  0x000000011ba619be: cmp    %eax,%ecx
  0x000000011ba619c0: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba619ca: movabs $0x1b8,%rbx
  0x000000011ba619d4: jge    0x000000011ba619e4
  0x000000011ba619da: movabs $0x1a8,%rbx
  0x000000011ba619e4: mov    (%rdi,%rbx,1),%r8
  0x000000011ba619e8: lea    0x1(%r8),%r8
  0x000000011ba619ec: mov    %r8,(%rdi,%rbx,1)
  0x000000011ba619f0: jge    0x000000011ba61af2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@23 (line 208)

  0x000000011ba619f6: movsbl %dl,%edx
  0x000000011ba619f9: jmpq   0x000000011ba61a8d  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@35 (line 213)

  0x000000011ba619fe: xchg   %ax,%ax
  0x000000011ba61a00: cmp    0xc(%rsi),%ecx
  0x000000011ba61a03: jae    0x000000011ba61b63
  0x000000011ba61a09: movslq %ecx,%rdi
  0x000000011ba61a0c: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x000000011ba61a11: cmp    %edx,%edi
  0x000000011ba61a13: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61a1d: movabs $0x1f8,%rbx
  0x000000011ba61a27: je     0x000000011ba61a37
  0x000000011ba61a2d: movabs $0x1e8,%rbx
  0x000000011ba61a37: mov    (%rdi,%rbx,1),%r8
  0x000000011ba61a3b: lea    0x1(%r8),%r8
  0x000000011ba61a3f: mov    %r8,(%rdi,%rbx,1)
  0x000000011ba61a43: je     0x000000011ba61aca  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x000000011ba61a49: inc    %ecx
  0x000000011ba61a4b: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61a55: mov    0x108(%rdi),%ebx
  0x000000011ba61a5b: add    $0x8,%ebx
  0x000000011ba61a5e: mov    %ebx,0x108(%rdi)
  0x000000011ba61a64: and    $0xfff8,%ebx
  0x000000011ba61a6a: cmp    $0x0,%ebx
  0x000000011ba61a6d: je     0x000000011ba61b71  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x000000011ba61a73: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x000000011ba61a7a: test   %eax,(%r10)        ;   {poll}
  0x000000011ba61a7d: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61a87: incl   0x208(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x000000011ba61a8d: cmp    %eax,%ecx
  0x000000011ba61a8f: movabs $0x1328fcd20,%rdi  ;   {metadata(method data for {method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61a99: movabs $0x1c8,%rbx
  0x000000011ba61aa3: jge    0x000000011ba61ab3
  0x000000011ba61aa9: movabs $0x1d8,%rbx
  0x000000011ba61ab3: mov    (%rdi,%rbx,1),%r8
  0x000000011ba61ab7: lea    0x1(%r8),%r8
  0x000000011ba61abb: mov    %r8,(%rdi,%rbx,1)
  0x000000011ba61abf: jge    0x000000011ba61add
  0x000000011ba61ac5: jmpq   0x000000011ba61a00  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x000000011ba61aca: mov    %rcx,%rax
  0x000000011ba61acd: add    $0x40,%rsp
  0x000000011ba61ad1: pop    %rbp
  0x000000011ba61ad2: mov    0x108(%r15),%r10
  0x000000011ba61ad9: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba61adc: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@52 (line 215)

  0x000000011ba61add: mov    $0xffffffff,%eax
  0x000000011ba61ae2: add    $0x40,%rsp
  0x000000011ba61ae6: pop    %rbp
  0x000000011ba61ae7: mov    0x108(%r15),%r10
  0x000000011ba61aee: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba61af1: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@60 (line 218)

  0x000000011ba61af2: mov    $0xffffffff,%eax
  0x000000011ba61af7: add    $0x40,%rsp
  0x000000011ba61afb: pop    %rbp
  0x000000011ba61afc: mov    0x108(%r15),%r10
  0x000000011ba61b03: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba61b06: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27 (line 210)

  0x000000011ba61b07: mov    $0xffffffff,%eax
  0x000000011ba61b0c: add    $0x40,%rsp
  0x000000011ba61b10: pop    %rbp
  0x000000011ba61b11: mov    0x108(%r15),%r10
  0x000000011ba61b18: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba61b1b: retq   
  0x000000011ba61b1c: movabs $0x132603720,%r10  ;   {metadata({method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61b26: mov    %r10,0x8(%rsp)
  0x000000011ba61b2b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba61b33: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 202)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba61b38: jmpq   0x000000011ba61894
  0x000000011ba61b3d: movabs $0x132602590,%r10  ;   {metadata({method} {0x0000000132602590} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61b47: mov    %r10,0x8(%rsp)
  0x000000011ba61b4c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba61b54: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba61b59: jmpq   0x000000011ba618ce
  0x000000011ba61b5e: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba61b63: mov    %rcx,(%rsp)
  0x000000011ba61b67: mov    %rsi,0x8(%rsp)
  0x000000011ba61b6c: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba61b71: movabs $0x132603720,%r10  ;   {metadata({method} {0x0000000132603720} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba61b7b: mov    %r10,0x8(%rsp)
  0x000000011ba61b80: movq   $0x38,(%rsp)
  0x000000011ba61b88: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba61b8d: jmpq   0x000000011ba61a73
  0x000000011ba61b92: nop
  0x000000011ba61b93: nop
  0x000000011ba61b94: mov    0x420(%r15),%rax
  0x000000011ba61b9b: movabs $0x0,%r10
  0x000000011ba61ba5: mov    %r10,0x420(%r15)
  0x000000011ba61bac: movabs $0x0,%r10
  0x000000011ba61bb6: mov    %r10,0x428(%r15)
  0x000000011ba61bbd: add    $0x40,%rsp
  0x000000011ba61bc1: pop    %rbp
  0x000000011ba61bc2: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba61bc7: hlt    
  0x000000011ba61bc8: hlt    
  0x000000011ba61bc9: hlt    
  0x000000011ba61bca: hlt    
  0x000000011ba61bcb: hlt    
  0x000000011ba61bcc: hlt    
  0x000000011ba61bcd: hlt    
  0x000000011ba61bce: hlt    
  0x000000011ba61bcf: hlt    
  0x000000011ba61bd0: hlt    
  0x000000011ba61bd1: hlt    
  0x000000011ba61bd2: hlt    
  0x000000011ba61bd3: hlt    
  0x000000011ba61bd4: hlt    
  0x000000011ba61bd5: hlt    
  0x000000011ba61bd6: hlt    
  0x000000011ba61bd7: hlt    
  0x000000011ba61bd8: hlt    
  0x000000011ba61bd9: hlt    
  0x000000011ba61bda: hlt    
  0x000000011ba61bdb: hlt    
  0x000000011ba61bdc: hlt    
  0x000000011ba61bdd: hlt    
  0x000000011ba61bde: hlt    
  0x000000011ba61bdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba61be0: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba61be5: mov    %rsp,-0x28(%rsp)
  0x000000011ba61bea: sub    $0x80,%rsp
  0x000000011ba61bf1: mov    %rax,0x78(%rsp)
  0x000000011ba61bf6: mov    %rcx,0x70(%rsp)
  0x000000011ba61bfb: mov    %rdx,0x68(%rsp)
  0x000000011ba61c00: mov    %rbx,0x60(%rsp)
  0x000000011ba61c05: mov    %rbp,0x50(%rsp)
  0x000000011ba61c0a: mov    %rsi,0x48(%rsp)
  0x000000011ba61c0f: mov    %rdi,0x40(%rsp)
  0x000000011ba61c14: mov    %r8,0x38(%rsp)
  0x000000011ba61c19: mov    %r9,0x30(%rsp)
  0x000000011ba61c1e: mov    %r10,0x28(%rsp)
  0x000000011ba61c23: mov    %r11,0x20(%rsp)
  0x000000011ba61c28: mov    %r12,0x18(%rsp)
  0x000000011ba61c2d: mov    %r13,0x10(%rsp)
  0x000000011ba61c32: mov    %r14,0x8(%rsp)
  0x000000011ba61c37: mov    %r15,(%rsp)
  0x000000011ba61c3b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba61c45: movabs $0x11ba61be5,%rsi  ;   {internal_word}
  0x000000011ba61c4f: mov    %rsp,%rdx
  0x000000011ba61c52: and    $0xfffffffffffffff0,%rsp
  0x000000011ba61c56: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba61c5b: hlt    
[Deopt Handler Code]
  0x000000011ba61c5c: movabs $0x11ba61c5c,%r10  ;   {section_word}
  0x000000011ba61c66: push   %r10
  0x000000011ba61c68: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba61c6d: hlt    
  0x000000011ba61c6e: hlt    
  0x000000011ba61c6f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 538 728 761 771 785 813 </print_nmethod>
<nmethod compile_id='145' compiler='c1' level='3' entry='0x000000011ba620c0' size='1104' address='0x000000011ba61f10' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='952' dependencies_offset='1096' metadata_offset='896' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='567' iicount='567' stamp='0.537'/>
<print_nmethod stamp='0.537'>
Compiled method (c1)     536  145       3       java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
 total in heap  [0x000000011ba61f10,0x000000011ba62360] = 1104
 relocation     [0x000000011ba62088,0x000000011ba620b8] = 48
 main code      [0x000000011ba620c0,0x000000011ba62200] = 320
 stub code      [0x000000011ba62200,0x000000011ba62290] = 144
 metadata       [0x000000011ba62290,0x000000011ba62298] = 8
 scopes data    [0x000000011ba62298,0x000000011ba622c8] = 48
 scopes pcs     [0x000000011ba622c8,0x000000011ba62358] = 144
 dependencies   [0x000000011ba62358,0x000000011ba62360] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.isLatin1()Z  [0x000000011ba620c0, 0x000000011ba62290]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011ba620c0: mov    0x8(%rsi),%r10d
  0x000000011ba620c4: movabs $0x800000000,%r12
  0x000000011ba620ce: add    %r12,%r10
  0x000000011ba620d1: xor    %r12,%r12
  0x000000011ba620d4: cmp    %rax,%r10
  0x000000011ba620d7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba620dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba620e0: mov    %eax,-0x14000(%rsp)
  0x000000011ba620e7: push   %rbp
  0x000000011ba620e8: sub    $0x30,%rsp
  0x000000011ba620ec: movabs $0x1329fa390,%rax  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba620f6: mov    0x104(%rax),%edi
  0x000000011ba620fc: add    $0x8,%edi
  0x000000011ba620ff: mov    %edi,0x104(%rax)
  0x000000011ba62105: and    $0x1ff8,%edi
  0x000000011ba6210b: cmp    $0x0,%edi
  0x000000011ba6210e: je     0x000000011ba62193  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@0 (line 1621)

  0x000000011ba62114: movabs $0x1329fa390,%rax  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba6211e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@3 (line 1621)

  0x000000011ba62124: movsbl 0x10(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1621)

  0x000000011ba62128: cmp    $0x0,%eax
  0x000000011ba6212b: movabs $0x1329fa390,%rax  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba62135: movabs $0x160,%rsi
  0x000000011ba6213f: jne    0x000000011ba6214f
  0x000000011ba62145: movabs $0x170,%rsi
  0x000000011ba6214f: mov    (%rax,%rsi,1),%rdi
  0x000000011ba62153: lea    0x1(%rdi),%rdi
  0x000000011ba62157: mov    %rdi,(%rax,%rsi,1)
  0x000000011ba6215b: jne    0x000000011ba6217b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1621)

  0x000000011ba62161: movabs $0x1329fa390,%rax  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba6216b: incl   0x180(%rax)
  0x000000011ba62171: mov    $0x1,%eax
  0x000000011ba62176: jmpq   0x000000011ba62180  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@14 (line 1621)

  0x000000011ba6217b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18 (line 1621)

  0x000000011ba62180: and    $0x1,%eax
  0x000000011ba62183: add    $0x30,%rsp
  0x000000011ba62187: pop    %rbp
  0x000000011ba62188: mov    0x108(%r15),%r10
  0x000000011ba6218f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba62192: retq   
  0x000000011ba62193: movabs $0x132551038,%r10  ;   {metadata({method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba6219d: mov    %r10,0x8(%rsp)
  0x000000011ba621a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba621aa: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1 (line 1621)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba621af: jmpq   0x000000011ba62114
  0x000000011ba621b4: nop
  0x000000011ba621b5: nop
  0x000000011ba621b6: mov    0x420(%r15),%rax
  0x000000011ba621bd: movabs $0x0,%r10
  0x000000011ba621c7: mov    %r10,0x420(%r15)
  0x000000011ba621ce: movabs $0x0,%r10
  0x000000011ba621d8: mov    %r10,0x428(%r15)
  0x000000011ba621df: add    $0x30,%rsp
  0x000000011ba621e3: pop    %rbp
  0x000000011ba621e4: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba621e9: hlt    
  0x000000011ba621ea: hlt    
  0x000000011ba621eb: hlt    
  0x000000011ba621ec: hlt    
  0x000000011ba621ed: hlt    
  0x000000011ba621ee: hlt    
  0x000000011ba621ef: hlt    
  0x000000011ba621f0: hlt    
  0x000000011ba621f1: hlt    
  0x000000011ba621f2: hlt    
  0x000000011ba621f3: hlt    
  0x000000011ba621f4: hlt    
  0x000000011ba621f5: hlt    
  0x000000011ba621f6: hlt    
  0x000000011ba621f7: hlt    
  0x000000011ba621f8: hlt    
  0x000000011ba621f9: hlt    
  0x000000011ba621fa: hlt    
  0x000000011ba621fb: hlt    
  0x000000011ba621fc: hlt    
  0x000000011ba621fd: hlt    
  0x000000011ba621fe: hlt    
  0x000000011ba621ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba62200: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba62205: mov    %rsp,-0x28(%rsp)
  0x000000011ba6220a: sub    $0x80,%rsp
  0x000000011ba62211: mov    %rax,0x78(%rsp)
  0x000000011ba62216: mov    %rcx,0x70(%rsp)
  0x000000011ba6221b: mov    %rdx,0x68(%rsp)
  0x000000011ba62220: mov    %rbx,0x60(%rsp)
  0x000000011ba62225: mov    %rbp,0x50(%rsp)
  0x000000011ba6222a: mov    %rsi,0x48(%rsp)
  0x000000011ba6222f: mov    %rdi,0x40(%rsp)
  0x000000011ba62234: mov    %r8,0x38(%rsp)
  0x000000011ba62239: mov    %r9,0x30(%rsp)
  0x000000011ba6223e: mov    %r10,0x28(%rsp)
  0x000000011ba62243: mov    %r11,0x20(%rsp)
  0x000000011ba62248: mov    %r12,0x18(%rsp)
  0x000000011ba6224d: mov    %r13,0x10(%rsp)
  0x000000011ba62252: mov    %r14,0x8(%rsp)
  0x000000011ba62257: mov    %r15,(%rsp)
  0x000000011ba6225b: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba62265: movabs $0x11ba62205,%rsi  ;   {internal_word}
  0x000000011ba6226f: mov    %rsp,%rdx
  0x000000011ba62272: and    $0xfffffffffffffff0,%rsp
  0x000000011ba62276: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba6227b: hlt    
[Deopt Handler Code]
  0x000000011ba6227c: movabs $0x11ba6227c,%r10  ;   {section_word}
  0x000000011ba62286: push   %r10
  0x000000011ba62288: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba6228d: hlt    
  0x000000011ba6228e: hlt    
  0x000000011ba6228f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 239 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='151' method='java.lang.String indexOf (II)I' bytes='29' count='384' iicount='384' level='3' stamp='0.539' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='147' compiler='c1' level='3' entry='0x000000011ba62560' size='1568' address='0x000000011ba62390' relocation_offset='376' insts_offset='464' stub_offset='1008' scopes_data_offset='1168' scopes_pcs_offset='1280' dependencies_offset='1536' nul_chk_table_offset='1544' metadata_offset='1152' method='java.util.zip.ZipUtils LG ([BI)J' bytes='22' count='506' iicount='506' stamp='0.539'/>
<print_nmethod stamp='0.539'>
Compiled method (c1)     539  147       3       java.util.zip.ZipUtils::LG (22 bytes)
 total in heap  [0x000000011ba62390,0x000000011ba629b0] = 1568
 relocation     [0x000000011ba62508,0x000000011ba62550] = 72
 main code      [0x000000011ba62560,0x000000011ba62780] = 544
 stub code      [0x000000011ba62780,0x000000011ba62810] = 144
 metadata       [0x000000011ba62810,0x000000011ba62820] = 16
 scopes data    [0x000000011ba62820,0x000000011ba62890] = 112
 scopes pcs     [0x000000011ba62890,0x000000011ba62990] = 256
 dependencies   [0x000000011ba62990,0x000000011ba62998] = 8
 nul chk table  [0x000000011ba62998,0x000000011ba629b0] = 24
----------------------------------------------------------------------
java/util/zip/ZipUtils.LG([BI)J  [0x000000011ba62560, 0x000000011ba62810]  688 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132995458} &apos;LG&apos; &apos;([BI)J&apos; in &apos;java/util/zip/ZipUtils&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011ba62560: mov    %eax,-0x14000(%rsp)
  0x000000011ba62567: push   %rbp
  0x000000011ba62568: sub    $0x60,%rsp
  0x000000011ba6256c: movabs $0x132a07080,%rax  ;   {metadata(method data for {method} {0x0000000132995458} &apos;LG&apos; &apos;([BI)J&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba62576: mov    0x104(%rax),%edi
  0x000000011ba6257c: add    $0x8,%edi
  0x000000011ba6257f: mov    %edi,0x104(%rax)
  0x000000011ba62585: and    $0x1ff8,%edi
  0x000000011ba6258b: cmp    $0x0,%edi
  0x000000011ba6258e: je     0x000000011ba626a0  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::LG@0 (line 214)

  0x000000011ba62594: movabs $0x132a07080,%rax  ;   {metadata(method data for {method} {0x0000000132995458} &apos;LG&apos; &apos;([BI)J&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba6259e: addq   $0x1,0x140(%rax)
  0x000000011ba625a6: movabs $0x132998178,%rax  ;   {metadata(method data for {method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba625b0: mov    0x104(%rax),%edi
  0x000000011ba625b6: add    $0x8,%edi
  0x000000011ba625b9: mov    %edi,0x104(%rax)
  0x000000011ba625bf: and    $0x7ffff8,%edi
  0x000000011ba625c5: cmp    $0x0,%edi
  0x000000011ba625c8: je     0x000000011ba626c1
  0x000000011ba625ce: cmp    0xc(%rsi),%edx     ; implicit exception: dispatches to 0x000000011ba626e2
  0x000000011ba625d1: jae    0x000000011ba626ec
  0x000000011ba625d7: movslq %edx,%rax
  0x000000011ba625da: movsbl 0x10(%rsi,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)

  0x000000011ba625df: mov    %rdx,%rdi
  0x000000011ba625e2: inc    %edi
  0x000000011ba625e4: cmp    0xc(%rsi),%edi
  0x000000011ba625e7: jae    0x000000011ba626fa
  0x000000011ba625ed: movslq %edi,%rdi
  0x000000011ba625f0: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)

  0x000000011ba625f5: movabs $0x132a07080,%rbx  ;   {metadata(method data for {method} {0x0000000132995458} &apos;LG&apos; &apos;([BI)J&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba625ff: addq   $0x1,0x150(%rbx)
  0x000000011ba62607: add    $0x2,%edx
  0x000000011ba6260a: and    $0xff,%eax
  0x000000011ba62610: and    $0xff,%edi
  0x000000011ba62616: shl    $0x8,%edi
  0x000000011ba62619: or     %rdi,%rax
  0x000000011ba6261c: movabs $0x132998178,%rdi  ;   {metadata(method data for {method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba62626: mov    0x104(%rdi),%ebx
  0x000000011ba6262c: add    $0x8,%ebx
  0x000000011ba6262f: mov    %ebx,0x104(%rdi)
  0x000000011ba62635: and    $0x7ffff8,%ebx
  0x000000011ba6263b: cmp    $0x0,%ebx
  0x000000011ba6263e: je     0x000000011ba62708
  0x000000011ba62644: cmp    0xc(%rsi),%edx
  0x000000011ba62647: jae    0x000000011ba62729
  0x000000011ba6264d: movslq %edx,%rdi
  0x000000011ba62650: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@9 (line 214)

  0x000000011ba62655: inc    %edx
  0x000000011ba62657: cmp    0xc(%rsi),%edx
  0x000000011ba6265a: jae    0x000000011ba62737
  0x000000011ba62660: movslq %edx,%rdx
  0x000000011ba62663: movsbl 0x10(%rsi,%rdx,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@9 (line 214)

  0x000000011ba62668: and    $0xff,%edi
  0x000000011ba6266e: and    $0xff,%esi
  0x000000011ba62674: shl    $0x8,%esi
  0x000000011ba62677: or     %rsi,%rdi
  0x000000011ba6267a: shl    $0x10,%edi
  0x000000011ba6267d: or     %rdi,%rax
  0x000000011ba62680: movslq %eax,%rax
  0x000000011ba62683: movabs $0xffffffff,%r10
  0x000000011ba6268d: and    %r10,%rax
  0x000000011ba62690: add    $0x60,%rsp
  0x000000011ba62694: pop    %rbp
  0x000000011ba62695: mov    0x108(%r15),%r10
  0x000000011ba6269c: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba6269f: retq   
  0x000000011ba626a0: movabs $0x132995458,%r10  ;   {metadata({method} {0x0000000132995458} &apos;LG&apos; &apos;([BI)J&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba626aa: mov    %r10,0x8(%rsp)
  0x000000011ba626af: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba626b7: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::LG@-1 (line 214)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba626bc: jmpq   0x000000011ba62594
  0x000000011ba626c1: movabs $0x132995390,%r10  ;   {metadata({method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba626cb: mov    %r10,0x8(%rsp)
  0x000000011ba626d0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba626d8: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::SH@-1 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba626dd: jmpq   0x000000011ba625ce
  0x000000011ba626e2: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba626e7: callq  0x000000011b595f20  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba626ec: mov    %rdx,(%rsp)
  0x000000011ba626f0: mov    %rsi,0x8(%rsp)
  0x000000011ba626f5: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba626fa: mov    %rdi,(%rsp)
  0x000000011ba626fe: mov    %rsi,0x8(%rsp)
  0x000000011ba62703: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba62708: movabs $0x132995390,%r10  ;   {metadata({method} {0x0000000132995390} &apos;SH&apos; &apos;([BI)I&apos; in &apos;java/util/zip/ZipUtils&apos;)}
  0x000000011ba62712: mov    %r10,0x8(%rsp)
  0x000000011ba62717: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba6271f: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::SH@-1 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@9 (line 214)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba62724: jmpq   0x000000011ba62644
  0x000000011ba62729: mov    %rdx,(%rsp)
  0x000000011ba6272d: mov    %rsi,0x8(%rsp)
  0x000000011ba62732: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@9 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba62737: mov    %rdx,(%rsp)
  0x000000011ba6273b: mov    %rsi,0x8(%rsp)
  0x000000011ba62740: callq  0x000000011b595320  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@9 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011ba62745: nop
  0x000000011ba62746: nop
  0x000000011ba62747: mov    0x420(%r15),%rax
  0x000000011ba6274e: movabs $0x0,%r10
  0x000000011ba62758: mov    %r10,0x420(%r15)
  0x000000011ba6275f: movabs $0x0,%r10
  0x000000011ba62769: mov    %r10,0x428(%r15)
  0x000000011ba62770: add    $0x60,%rsp
  0x000000011ba62774: pop    %rbp
  0x000000011ba62775: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba6277a: hlt    
  0x000000011ba6277b: hlt    
  0x000000011ba6277c: hlt    
  0x000000011ba6277d: hlt    
  0x000000011ba6277e: hlt    
  0x000000011ba6277f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011ba62780: callq  0x000000011b597b00  ;   {no_reloc}
  0x000000011ba62785: mov    %rsp,-0x28(%rsp)
  0x000000011ba6278a: sub    $0x80,%rsp
  0x000000011ba62791: mov    %rax,0x78(%rsp)
  0x000000011ba62796: mov    %rcx,0x70(%rsp)
  0x000000011ba6279b: mov    %rdx,0x68(%rsp)
  0x000000011ba627a0: mov    %rbx,0x60(%rsp)
  0x000000011ba627a5: mov    %rbp,0x50(%rsp)
  0x000000011ba627aa: mov    %rsi,0x48(%rsp)
  0x000000011ba627af: mov    %rdi,0x40(%rsp)
  0x000000011ba627b4: mov    %r8,0x38(%rsp)
  0x000000011ba627b9: mov    %r9,0x30(%rsp)
  0x000000011ba627be: mov    %r10,0x28(%rsp)
  0x000000011ba627c3: mov    %r11,0x20(%rsp)
  0x000000011ba627c8: mov    %r12,0x18(%rsp)
  0x000000011ba627cd: mov    %r13,0x10(%rsp)
  0x000000011ba627d2: mov    %r14,0x8(%rsp)
  0x000000011ba627d7: mov    %r15,(%rsp)
  0x000000011ba627db: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba627e5: movabs $0x11ba62785,%rsi  ;   {internal_word}
  0x000000011ba627ef: mov    %rsp,%rdx
  0x000000011ba627f2: and    $0xfffffffffffffff0,%rsp
  0x000000011ba627f6: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba627fb: hlt    
[Deopt Handler Code]
  0x000000011ba627fc: movabs $0x11ba627fc,%r10  ;   {section_word}
  0x000000011ba62806: push   %r10
  0x000000011ba62808: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba6280d: hlt    
  0x000000011ba6280e: hlt    
  0x000000011ba6280f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 348 381 391 396 410 424 452 471 485 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='152' method='java.lang.String indexOf (I)I' bytes='7' count='384' iicount='384' level='3' stamp='0.543' comment='tiered' hot_count='384'/>
<writer thread='15875'/>
<nmethod compile_id='151' compiler='c1' level='3' entry='0x000000011ba62be0' size='1624' address='0x000000011ba62a10' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1240' scopes_pcs_offset='1360' dependencies_offset='1616' metadata_offset='1224' method='java.lang.String indexOf (II)I' bytes='29' count='421' iicount='421' stamp='0.544'/>
<print_nmethod stamp='0.544'>
Compiled method (c1)     543  151       3       java.lang.String::indexOf (29 bytes)
 total in heap  [0x000000011ba62a10,0x000000011ba63068] = 1624
 relocation     [0x000000011ba62b88,0x000000011ba62be0] = 88
 main code      [0x000000011ba62be0,0x000000011ba62e20] = 576
 stub code      [0x000000011ba62e20,0x000000011ba62ed8] = 184
 metadata       [0x000000011ba62ed8,0x000000011ba62ee8] = 16
 scopes data    [0x000000011ba62ee8,0x000000011ba62f60] = 120
 scopes pcs     [0x000000011ba62f60,0x000000011ba63060] = 256
 dependencies   [0x000000011ba63060,0x000000011ba63068] = 8
----------------------------------------------------------------------
java/lang/String.indexOf(II)I  [0x000000011ba62be0, 0x000000011ba62ed8]  760 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011ba62be0: mov    0x8(%rsi),%r10d
  0x000000011ba62be4: movabs $0x800000000,%r12
  0x000000011ba62bee: add    %r12,%r10
  0x000000011ba62bf1: xor    %r12,%r12
  0x000000011ba62bf4: cmp    %rax,%r10
  0x000000011ba62bf7: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba62bfd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba62c00: mov    %eax,-0x14000(%rsp)
  0x000000011ba62c07: push   %rbp
  0x000000011ba62c08: sub    $0x40,%rsp
  0x000000011ba62c0c: movabs $0x132a079e8,%rdi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62c16: mov    0x104(%rdi),%ebx
  0x000000011ba62c1c: add    $0x8,%ebx
  0x000000011ba62c1f: mov    %ebx,0x104(%rdi)
  0x000000011ba62c25: and    $0x1ff8,%ebx
  0x000000011ba62c2b: cmp    $0x0,%ebx
  0x000000011ba62c2e: je     0x000000011ba62d8c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1578)

  0x000000011ba62c34: mov    %rsi,%rdi
  0x000000011ba62c37: movabs $0x132a079e8,%rbx  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62c41: addq   $0x1,0x140(%rbx)
  0x000000011ba62c49: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62c53: mov    0x104(%rdi),%ebx
  0x000000011ba62c59: add    $0x8,%ebx
  0x000000011ba62c5c: mov    %ebx,0x104(%rdi)
  0x000000011ba62c62: and    $0x7ffff8,%ebx
  0x000000011ba62c68: cmp    $0x0,%ebx
  0x000000011ba62c6b: je     0x000000011ba62dad
  0x000000011ba62c71: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62c7b: incl   0x150(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)

  0x000000011ba62c81: movsbl 0x14(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)

  0x000000011ba62c85: cmp    $0x0,%edi
  0x000000011ba62c88: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62c92: movabs $0x160,%rbx
  0x000000011ba62c9c: jne    0x000000011ba62cac
  0x000000011ba62ca2: movabs $0x170,%rbx
  0x000000011ba62cac: mov    (%rdi,%rbx,1),%rax
  0x000000011ba62cb0: lea    0x1(%rax),%rax
  0x000000011ba62cb4: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba62cb8: jne    0x000000011ba62cd8  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)

  0x000000011ba62cbe: movabs $0x1326e4890,%rdi  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62cc8: incl   0x180(%rdi)
  0x000000011ba62cce: mov    $0x1,%edi
  0x000000011ba62cd3: jmpq   0x000000011ba62cdd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)

  0x000000011ba62cd8: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)

  0x000000011ba62cdd: and    $0x1,%edi
  0x000000011ba62ce0: cmp    $0x0,%edi
  0x000000011ba62ce3: movabs $0x132a079e8,%rdi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62ced: movabs $0x178,%rbx
  0x000000011ba62cf7: je     0x000000011ba62d07
  0x000000011ba62cfd: movabs $0x188,%rbx
  0x000000011ba62d07: mov    (%rdi,%rbx,1),%rax
  0x000000011ba62d0b: lea    0x1(%rax),%rax
  0x000000011ba62d0f: mov    %rax,(%rdi,%rbx,1)
  0x000000011ba62d13: je     0x000000011ba62d5c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4 (line 1578)

  0x000000011ba62d19: mov    0xc(%rsi),%esi
  0x000000011ba62d1c: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1578)

  0x000000011ba62d20: movabs $0x132a079e8,%rdi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62d2a: addq   $0x1,0x198(%rdi)
  0x000000011ba62d32: nopl   0x0(%rax,%rax,1)
  0x000000011ba62d37: callq  0x000000011ba61860  ; ImmutableOopMap{}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@13 (line 1578)
                                                ;   {static_call}
  0x000000011ba62d3c: movabs $0x132a079e8,%rsi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62d46: incl   0x1a8(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@16 (line 1578)

  0x000000011ba62d4c: add    $0x40,%rsp
  0x000000011ba62d50: pop    %rbp
  0x000000011ba62d51: mov    0x108(%r15),%r10
  0x000000011ba62d58: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba62d5b: retq   
  0x000000011ba62d5c: mov    0xc(%rsi),%esi
  0x000000011ba62d5f: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@20 (line 1579)

  0x000000011ba62d63: movabs $0x132a079e8,%rdi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62d6d: addq   $0x1,0x1c0(%rdi)
  0x000000011ba62d75: xchg   %ax,%ax
  0x000000011ba62d77: callq  0x000000011b4d2400  ; ImmutableOopMap{}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1579)
                                                ;   {static_call}
  0x000000011ba62d7c: add    $0x40,%rsp
  0x000000011ba62d80: pop    %rbp
  0x000000011ba62d81: mov    0x108(%r15),%r10
  0x000000011ba62d88: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba62d8b: retq   
  0x000000011ba62d8c: movabs $0x1324b1d58,%r10  ;   {metadata({method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62d96: mov    %r10,0x8(%rsp)
  0x000000011ba62d9b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba62da3: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1578)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba62da8: jmpq   0x000000011ba62c34
  0x000000011ba62dad: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba62db7: mov    %r10,0x8(%rsp)
  0x000000011ba62dbc: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba62dc4: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba62dc9: jmpq   0x000000011ba62c71
  0x000000011ba62dce: nop
  0x000000011ba62dcf: nop
  0x000000011ba62dd0: mov    0x420(%r15),%rax
  0x000000011ba62dd7: movabs $0x0,%r10
  0x000000011ba62de1: mov    %r10,0x420(%r15)
  0x000000011ba62de8: movabs $0x0,%r10
  0x000000011ba62df2: mov    %r10,0x428(%r15)
  0x000000011ba62df9: add    $0x40,%rsp
  0x000000011ba62dfd: pop    %rbp
  0x000000011ba62dfe: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba62e03: hlt    
  0x000000011ba62e04: hlt    
  0x000000011ba62e05: hlt    
  0x000000011ba62e06: hlt    
  0x000000011ba62e07: hlt    
  0x000000011ba62e08: hlt    
  0x000000011ba62e09: hlt    
  0x000000011ba62e0a: hlt    
  0x000000011ba62e0b: hlt    
  0x000000011ba62e0c: hlt    
  0x000000011ba62e0d: hlt    
  0x000000011ba62e0e: hlt    
  0x000000011ba62e0f: hlt    
  0x000000011ba62e10: hlt    
  0x000000011ba62e11: hlt    
  0x000000011ba62e12: hlt    
  0x000000011ba62e13: hlt    
  0x000000011ba62e14: hlt    
  0x000000011ba62e15: hlt    
  0x000000011ba62e16: hlt    
  0x000000011ba62e17: hlt    
  0x000000011ba62e18: hlt    
  0x000000011ba62e19: hlt    
  0x000000011ba62e1a: hlt    
  0x000000011ba62e1b: hlt    
  0x000000011ba62e1c: hlt    
  0x000000011ba62e1d: hlt    
  0x000000011ba62e1e: hlt    
  0x000000011ba62e1f: hlt    
[Stub Code]
  0x000000011ba62e20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba62e25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba62e2f: jmpq   0x000000011ba62e2f  ;   {runtime_call}
  0x000000011ba62e34: nop
  0x000000011ba62e35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba62e3f: jmpq   0x000000011ba62e3f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba62e44: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba62e49: mov    %rsp,-0x28(%rsp)
  0x000000011ba62e4e: sub    $0x80,%rsp
  0x000000011ba62e55: mov    %rax,0x78(%rsp)
  0x000000011ba62e5a: mov    %rcx,0x70(%rsp)
  0x000000011ba62e5f: mov    %rdx,0x68(%rsp)
  0x000000011ba62e64: mov    %rbx,0x60(%rsp)
  0x000000011ba62e69: mov    %rbp,0x50(%rsp)
  0x000000011ba62e6e: mov    %rsi,0x48(%rsp)
  0x000000011ba62e73: mov    %rdi,0x40(%rsp)
  0x000000011ba62e78: mov    %r8,0x38(%rsp)
  0x000000011ba62e7d: mov    %r9,0x30(%rsp)
  0x000000011ba62e82: mov    %r10,0x28(%rsp)
  0x000000011ba62e87: mov    %r11,0x20(%rsp)
  0x000000011ba62e8c: mov    %r12,0x18(%rsp)
  0x000000011ba62e91: mov    %r13,0x10(%rsp)
  0x000000011ba62e96: mov    %r14,0x8(%rsp)
  0x000000011ba62e9b: mov    %r15,(%rsp)
  0x000000011ba62e9f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba62ea9: movabs $0x11ba62e49,%rsi  ;   {internal_word}
  0x000000011ba62eb3: mov    %rsp,%rdx
  0x000000011ba62eb6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba62eba: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba62ebf: hlt    
[Deopt Handler Code]
  0x000000011ba62ec0: movabs $0x11ba62ec0,%r10  ;   {section_word}
  0x000000011ba62eca: push   %r10
  0x000000011ba62ecc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba62ed1: hlt    
  0x000000011ba62ed2: hlt    
  0x000000011ba62ed3: hlt    
  0x000000011ba62ed4: hlt    
  0x000000011ba62ed5: hlt    
  0x000000011ba62ed6: hlt    
  0x000000011ba62ed7: hlt    

ImmutableOopMap{}pc offsets: 348 412 
ImmutableOopMap{rsi=Oop }pc offsets: 456 489 </print_nmethod>
<writer thread='42243'/>
<task_queued compile_id='153' method='java.util.Arrays copyOfRange ([BII)[B' bytes='63' count='512' iicount='512' level='3' stamp='0.548' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='152' compiler='c1' level='3' entry='0x000000011ba63280' size='1848' address='0x000000011ba63090' relocation_offset='376' insts_offset='496' stub_offset='1168' scopes_data_offset='1376' scopes_pcs_offset='1536' dependencies_offset='1840' metadata_offset='1352' method='java.lang.String indexOf (I)I' bytes='7' count='403' iicount='403' stamp='0.548'/>
<print_nmethod stamp='0.548'>
Compiled method (c1)     547  152       3       java.lang.String::indexOf (7 bytes)
 total in heap  [0x000000011ba63090,0x000000011ba637c8] = 1848
 relocation     [0x000000011ba63208,0x000000011ba63268] = 96
 main code      [0x000000011ba63280,0x000000011ba63520] = 672
 stub code      [0x000000011ba63520,0x000000011ba635d8] = 184
 metadata       [0x000000011ba635d8,0x000000011ba635f0] = 24
 scopes data    [0x000000011ba635f0,0x000000011ba63690] = 160
 scopes pcs     [0x000000011ba63690,0x000000011ba637c0] = 304
 dependencies   [0x000000011ba637c0,0x000000011ba637c8] = 8
----------------------------------------------------------------------
java/lang/String.indexOf(I)I  [0x000000011ba63280, 0x000000011ba635d8]  856 bytes
[Entry Point]
[Constants]
  # {method} {0x00000001324b1c78} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011ba63280: mov    0x8(%rsi),%r10d
  0x000000011ba63284: movabs $0x800000000,%r12
  0x000000011ba6328e: add    %r12,%r10
  0x000000011ba63291: xor    %r12,%r12
  0x000000011ba63294: cmp    %rax,%r10
  0x000000011ba63297: jne    0x000000011b4d1c80  ;   {runtime_call ic_miss_stub}
  0x000000011ba6329d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011ba632a0: mov    %eax,-0x14000(%rsp)
  0x000000011ba632a7: push   %rbp
  0x000000011ba632a8: sub    $0x60,%rsp
  0x000000011ba632ac: movabs $0x132a1ae40,%rcx  ;   {metadata(method data for {method} {0x00000001324b1c78} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba632b6: mov    0x104(%rcx),%edi
  0x000000011ba632bc: add    $0x8,%edi
  0x000000011ba632bf: mov    %edi,0x104(%rcx)
  0x000000011ba632c5: and    $0x1ff8,%edi
  0x000000011ba632cb: cmp    $0x0,%edi
  0x000000011ba632ce: je     0x000000011ba63474  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0 (line 1535)

  0x000000011ba632d4: mov    %rsi,%rcx
  0x000000011ba632d7: movabs $0x132a1ae40,%rdi  ;   {metadata(method data for {method} {0x00000001324b1c78} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba632e1: addq   $0x1,0x140(%rdi)
  0x000000011ba632e9: movabs $0x132a079e8,%rcx  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba632f3: mov    0x104(%rcx),%edi
  0x000000011ba632f9: add    $0x8,%edi
  0x000000011ba632fc: mov    %edi,0x104(%rcx)
  0x000000011ba63302: and    $0x7ffff8,%edi
  0x000000011ba63308: cmp    $0x0,%edi
  0x000000011ba6330b: je     0x000000011ba63495
  0x000000011ba63311: mov    %rsi,%rcx
  0x000000011ba63314: movabs $0x132a079e8,%rdi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6331e: addq   $0x1,0x140(%rdi)
  0x000000011ba63326: movabs $0x1326e4890,%rcx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba63330: mov    0x104(%rcx),%edi
  0x000000011ba63336: add    $0x8,%edi
  0x000000011ba63339: mov    %edi,0x104(%rcx)
  0x000000011ba6333f: and    $0x7ffff8,%edi
  0x000000011ba63345: cmp    $0x0,%edi
  0x000000011ba63348: je     0x000000011ba634b6
  0x000000011ba6334e: movabs $0x1326e4890,%rcx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba63358: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba6335e: movsbl 0x14(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba63362: cmp    $0x0,%ecx
  0x000000011ba63365: movabs $0x1326e4890,%rcx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6336f: movabs $0x160,%rdi
  0x000000011ba63379: jne    0x000000011ba63389
  0x000000011ba6337f: movabs $0x170,%rdi
  0x000000011ba63389: mov    (%rcx,%rdi,1),%rbx
  0x000000011ba6338d: lea    0x1(%rbx),%rbx
  0x000000011ba63391: mov    %rbx,(%rcx,%rdi,1)
  0x000000011ba63395: jne    0x000000011ba633b5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba6339b: movabs $0x1326e4890,%rcx  ;   {metadata(method data for {method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba633a5: incl   0x180(%rcx)
  0x000000011ba633ab: mov    $0x1,%ecx
  0x000000011ba633b0: jmpq   0x000000011ba633ba  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba633b5: mov    $0x0,%ecx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba633ba: and    $0x1,%ecx
  0x000000011ba633bd: cmp    $0x0,%ecx
  0x000000011ba633c0: movabs $0x132a079e8,%rcx  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba633ca: movabs $0x178,%rdi
  0x000000011ba633d4: je     0x000000011ba633e4
  0x000000011ba633da: movabs $0x188,%rdi
  0x000000011ba633e4: mov    (%rcx,%rdi,1),%rbx
  0x000000011ba633e8: lea    0x1(%rbx),%rbx
  0x000000011ba633ec: mov    %rbx,(%rcx,%rdi,1)
  0x000000011ba633f0: je     0x000000011ba6343c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba633f6: mov    0xc(%rsi),%esi
  0x000000011ba633f9: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba633fd: movabs $0x132a079e8,%rcx  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba63407: addq   $0x1,0x198(%rcx)
  0x000000011ba6340f: mov    $0x0,%ecx          ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@13 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba63414: data16 xchg %ax,%ax
  0x000000011ba63417: callq  0x000000011ba61860  ; ImmutableOopMap{}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@13 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)
                                                ;   {static_call}
  0x000000011ba6341c: movabs $0x132a079e8,%rsi  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba63426: incl   0x1a8(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@16 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba6342c: add    $0x60,%rsp
  0x000000011ba63430: pop    %rbp
  0x000000011ba63431: mov    0x108(%r15),%r10
  0x000000011ba63438: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba6343b: retq   
  0x000000011ba6343c: mov    0xc(%rsi),%esi
  0x000000011ba6343f: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@20 (line 1579)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba63443: movabs $0x132a079e8,%rcx  ;   {metadata(method data for {method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6344d: addq   $0x1,0x1c0(%rcx)
  0x000000011ba63455: mov    $0x0,%ecx          ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1579)
                                                ; - java.lang.String::indexOf@3 (line 1535)

  0x000000011ba6345a: nopl   0x0(%rax,%rax,1)
  0x000000011ba6345f: callq  0x000000011b4d2400  ; ImmutableOopMap{}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25 (line 1579)
                                                ; - java.lang.String::indexOf@3 (line 1535)
                                                ;   {static_call}
  0x000000011ba63464: add    $0x60,%rsp
  0x000000011ba63468: pop    %rbp
  0x000000011ba63469: mov    0x108(%r15),%r10
  0x000000011ba63470: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba63473: retq   
  0x000000011ba63474: movabs $0x1324b1c78,%r10  ;   {metadata({method} {0x00000001324b1c78} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6347e: mov    %r10,0x8(%rsp)
  0x000000011ba63483: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba6348b: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1535)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba63490: jmpq   0x000000011ba632d4
  0x000000011ba63495: movabs $0x1324b1d58,%r10  ;   {metadata({method} {0x00000001324b1d58} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6349f: mov    %r10,0x8(%rsp)
  0x000000011ba634a4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba634ac: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba634b1: jmpq   0x000000011ba63311
  0x000000011ba634b6: movabs $0x1324b52f0,%r10  ;   {metadata({method} {0x00000001324b52f0} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba634c0: mov    %r10,0x8(%rsp)
  0x000000011ba634c5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba634cd: callq  0x000000011b59a600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::indexOf@1 (line 1578)
                                                ; - java.lang.String::indexOf@3 (line 1535)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba634d2: jmpq   0x000000011ba6334e
  0x000000011ba634d7: nop
  0x000000011ba634d8: nop
  0x000000011ba634d9: mov    0x420(%r15),%rax
  0x000000011ba634e0: movabs $0x0,%r10
  0x000000011ba634ea: mov    %r10,0x420(%r15)
  0x000000011ba634f1: movabs $0x0,%r10
  0x000000011ba634fb: mov    %r10,0x428(%r15)
  0x000000011ba63502: add    $0x60,%rsp
  0x000000011ba63506: pop    %rbp
  0x000000011ba63507: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba6350c: hlt    
  0x000000011ba6350d: hlt    
  0x000000011ba6350e: hlt    
  0x000000011ba6350f: hlt    
  0x000000011ba63510: hlt    
  0x000000011ba63511: hlt    
  0x000000011ba63512: hlt    
  0x000000011ba63513: hlt    
  0x000000011ba63514: hlt    
  0x000000011ba63515: hlt    
  0x000000011ba63516: hlt    
  0x000000011ba63517: hlt    
  0x000000011ba63518: hlt    
  0x000000011ba63519: hlt    
  0x000000011ba6351a: hlt    
  0x000000011ba6351b: hlt    
  0x000000011ba6351c: hlt    
  0x000000011ba6351d: hlt    
  0x000000011ba6351e: hlt    
  0x000000011ba6351f: hlt    
[Stub Code]
  0x000000011ba63520: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba63525: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6352f: jmpq   0x000000011ba6352f  ;   {runtime_call}
  0x000000011ba63534: nop
  0x000000011ba63535: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6353f: jmpq   0x000000011ba6353f  ;   {runtime_call}
[Exception Handler]
  0x000000011ba63544: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba63549: mov    %rsp,-0x28(%rsp)
  0x000000011ba6354e: sub    $0x80,%rsp
  0x000000011ba63555: mov    %rax,0x78(%rsp)
  0x000000011ba6355a: mov    %rcx,0x70(%rsp)
  0x000000011ba6355f: mov    %rdx,0x68(%rsp)
  0x000000011ba63564: mov    %rbx,0x60(%rsp)
  0x000000011ba63569: mov    %rbp,0x50(%rsp)
  0x000000011ba6356e: mov    %rsi,0x48(%rsp)
  0x000000011ba63573: mov    %rdi,0x40(%rsp)
  0x000000011ba63578: mov    %r8,0x38(%rsp)
  0x000000011ba6357d: mov    %r9,0x30(%rsp)
  0x000000011ba63582: mov    %r10,0x28(%rsp)
  0x000000011ba63587: mov    %r11,0x20(%rsp)
  0x000000011ba6358c: mov    %r12,0x18(%rsp)
  0x000000011ba63591: mov    %r13,0x10(%rsp)
  0x000000011ba63596: mov    %r14,0x8(%rsp)
  0x000000011ba6359b: mov    %r15,(%rsp)
  0x000000011ba6359f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba635a9: movabs $0x11ba63549,%rsi  ;   {internal_word}
  0x000000011ba635b3: mov    %rsp,%rdx
  0x000000011ba635b6: and    $0xfffffffffffffff0,%rsp
  0x000000011ba635ba: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba635bf: hlt    
[Deopt Handler Code]
  0x000000011ba635c0: movabs $0x11ba635c0,%r10  ;   {section_word}
  0x000000011ba635ca: push   %r10
  0x000000011ba635cc: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba635d1: hlt    
  0x000000011ba635d2: hlt    
  0x000000011ba635d3: hlt    
  0x000000011ba635d4: hlt    
  0x000000011ba635d5: hlt    
  0x000000011ba635d6: hlt    
  0x000000011ba635d7: hlt    

ImmutableOopMap{}pc offsets: 412 484 
ImmutableOopMap{rsi=Oop }pc offsets: 528 561 594 </print_nmethod>
<writer thread='9987'/>
<task_queued compile_id='154' method='java.lang.StringLatin1 newString ([BII)Ljava/lang/String;' bytes='17' count='515' iicount='515' level='3' stamp='0.552' comment='tiered' hot_count='512'/>
<writer thread='42243'/>
<task_queued compile_id='155' method='java.lang.StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='384' iicount='384' level='3' stamp='0.553' comment='tiered' hot_count='384'/>
<writer thread='9987'/>
<task_queued compile_id='156' method='sun.nio.fs.UnixPath checkNotNul (Ljava/lang/String;C)V' bytes='16' count='512' iicount='512' level='3' stamp='0.553' comment='tiered' hot_count='512'/>
<writer thread='15875'/>
<nmethod compile_id='153' compiler='c1' level='3' entry='0x000000011ba63ac0' size='5448' address='0x000000011ba63810' relocation_offset='376' insts_offset='688' stub_offset='3376' scopes_data_offset='3744' scopes_pcs_offset='4464' dependencies_offset='5424' nul_chk_table_offset='5432' oops_offset='3656' metadata_offset='3664' method='java.util.Arrays copyOfRange ([BII)[B' bytes='63' count='539' iicount='539' stamp='0.554'/>
<print_nmethod stamp='0.554'>
Compiled method (c1)     553  153       3       java.util.Arrays::copyOfRange (63 bytes)
 total in heap  [0x000000011ba63810,0x000000011ba64d58] = 5448
 relocation     [0x000000011ba63988,0x000000011ba63aa8] = 288
 main code      [0x000000011ba63ac0,0x000000011ba64540] = 2688
 stub code      [0x000000011ba64540,0x000000011ba64658] = 280
 oops           [0x000000011ba64658,0x000000011ba64660] = 8
 metadata       [0x000000011ba64660,0x000000011ba646b0] = 80
 scopes data    [0x000000011ba646b0,0x000000011ba64980] = 720
 scopes pcs     [0x000000011ba64980,0x000000011ba64d40] = 960
 dependencies   [0x000000011ba64d40,0x000000011ba64d48] = 8
 nul chk table  [0x000000011ba64d48,0x000000011ba64d58] = 16
----------------------------------------------------------------------
java/util/Arrays.copyOfRange([BII)[B  [0x000000011ba63ac0, 0x000000011ba64658]  2968 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xf0]  (sp of caller)
  0x000000011ba63ac0: mov    %eax,-0x14000(%rsp)
  0x000000011ba63ac7: push   %rbp
  0x000000011ba63ac8: sub    $0xe0,%rsp
  0x000000011ba63acf: mov    %rsi,%r8
  0x000000011ba63ad2: movabs $0x132a1bf70,%rsi  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63adc: mov    0x104(%rsi),%edi
  0x000000011ba63ae2: add    $0x8,%edi
  0x000000011ba63ae5: mov    %edi,0x104(%rsi)
  0x000000011ba63aeb: and    $0x1ff8,%edi
  0x000000011ba63af1: cmp    $0x0,%edi
  0x000000011ba63af4: je     0x000000011ba642e1  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@0 (line 4027)

  0x000000011ba63afa: mov    %rcx,%r9
  0x000000011ba63afd: sub    %edx,%r9d
  0x000000011ba63b00: cmp    $0x0,%r9d
  0x000000011ba63b04: movabs $0x132a1bf70,%rsi  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63b0e: movabs $0x140,%rdi
  0x000000011ba63b18: jge    0x000000011ba63b28
  0x000000011ba63b1e: movabs $0x150,%rdi
  0x000000011ba63b28: mov    (%rsi,%rdi,1),%rax
  0x000000011ba63b2c: lea    0x1(%rax),%rax
  0x000000011ba63b30: mov    %rax,(%rsi,%rdi,1)
  0x000000011ba63b34: jge    0x000000011ba640d1  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5 (line 4028)

  0x000000011ba63b3a: mov    %ecx,0xbc(%rsp)
  0x000000011ba63b41: mov    %edx,0xb8(%rsp)
  0x000000011ba63b48: jmpq   0x000000011ba64311  ;   {no_reloc}
  0x000000011ba63b4d: add    %al,(%rax)
  0x000000011ba63b4f: add    %al,(%rax)
  0x000000011ba63b51: add    %cl,-0x75(%rcx)
  0x000000011ba63b54: xchg   %ebx,(%rax)
  0x000000011ba63b56: add    %eax,(%rax)
  0x000000011ba63b58: add    %cl,-0x73(%rax)
  0x000000011ba63b5b: js     0x000000011ba63b85
  0x000000011ba63b5d: cmp    0x128(%r15),%rdi
  0x000000011ba63b64: ja     0x000000011ba6431b
  0x000000011ba63b6a: mov    %rdi,0x118(%r15)
  0x000000011ba63b71: mov    0xb8(%rdx),%rcx
  0x000000011ba63b78: mov    %rcx,(%rax)
  0x000000011ba63b7b: mov    %rdx,%rcx
  0x000000011ba63b7e: movabs $0x800000000,%r12
  0x000000011ba63b88: sub    %r12,%rcx
  0x000000011ba63b8b: xor    %r12,%r12
  0x000000011ba63b8e: mov    %ecx,0x8(%rax)
  0x000000011ba63b91: xor    %rcx,%rcx
  0x000000011ba63b94: mov    %ecx,0xc(%rax)
  0x000000011ba63b97: xor    %rcx,%rcx
  0x000000011ba63b9a: mov    %rcx,0x10(%rax)
  0x000000011ba63b9e: mov    %rcx,0x18(%rax)
  0x000000011ba63ba2: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 4029)

  0x000000011ba63ba6: mov    %rax,0xc0(%rsp)
  0x000000011ba63bae: xchg   %ax,%ax
  0x000000011ba63bb0: jmpq   0x000000011ba64337  ;   {no_reloc}
  0x000000011ba63bb5: add    %al,(%rax)
  0x000000011ba63bb7: add    %al,(%rax)
  0x000000011ba63bb9: add    %cl,-0x75(%rcx)
  0x000000011ba63bbc: xchg   %ebx,(%rax)
  0x000000011ba63bbe: add    %eax,(%rax)
  0x000000011ba63bc0: add    %cl,-0x73(%rax)
  0x000000011ba63bc3: js     0x000000011ba63bdd
  0x000000011ba63bc5: cmp    0x128(%r15),%rdi
  0x000000011ba63bcc: ja     0x000000011ba64341
  0x000000011ba63bd2: mov    %rdi,0x118(%r15)
  0x000000011ba63bd9: mov    0xb8(%rdx),%rcx
  0x000000011ba63be0: mov    %rcx,(%rax)
  0x000000011ba63be3: mov    %rdx,%rcx
  0x000000011ba63be6: movabs $0x800000000,%r12
  0x000000011ba63bf0: sub    %r12,%rcx
  0x000000011ba63bf3: xor    %r12,%r12
  0x000000011ba63bf6: mov    %ecx,0x8(%rax)
  0x000000011ba63bf9: xor    %rcx,%rcx
  0x000000011ba63bfc: mov    %ecx,0xc(%rax)
  0x000000011ba63bff: xor    %rcx,%rcx
  0x000000011ba63c02: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 4029)

  0x000000011ba63c06: mov    %rax,%rdx
  0x000000011ba63c09: movabs $0x132a1bf70,%rsi  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63c13: addq   $0x1,0x160(%rsi)
  0x000000011ba63c1b: movabs $0x132a433a8,%rdx  ;   {metadata(method data for {method} {0x0000000132553098} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63c25: mov    0x104(%rdx),%esi
  0x000000011ba63c2b: add    $0x8,%esi
  0x000000011ba63c2e: mov    %esi,0x104(%rdx)
  0x000000011ba63c34: and    $0x7ffff8,%esi
  0x000000011ba63c3a: cmp    $0x0,%esi
  0x000000011ba63c3d: je     0x000000011ba6434e
  0x000000011ba63c43: mov    %rax,%rdx
  0x000000011ba63c46: movabs $0x132a433a8,%rsi  ;   {metadata(method data for {method} {0x0000000132553098} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63c50: addq   $0x1,0x140(%rsi)
  0x000000011ba63c58: mov    $0x10,%edx
  0x000000011ba63c5d: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 99)
                                                ; - java.util.Arrays::copyOfRange@16 (line 4029)

  0x000000011ba63c60: mov    %rax,0xb0(%rsp)
  0x000000011ba63c68: nopl   0x0(%rax)
  0x000000011ba63c6f: callq  0x000000011b4d1f00  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 99)
                                                ; - java.util.Arrays::copyOfRange@16 (line 4029)
                                                ;   {optimized virtual_call}
  0x000000011ba63c74: mov    0xb0(%rsp),%rax
  0x000000011ba63c7c: movabs $0x132a1bf70,%rdx  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63c86: addq   $0x1,0x170(%rdx)
  0x000000011ba63c8e: movabs $0x132a43748,%rdx  ;   {metadata(method data for {method} {0x0000000132553ba8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63c98: mov    0x104(%rdx),%esi
  0x000000011ba63c9e: add    $0x8,%esi
  0x000000011ba63ca1: mov    %esi,0x104(%rdx)
  0x000000011ba63ca7: and    $0x7ffff8,%esi
  0x000000011ba63cad: cmp    $0x0,%esi
  0x000000011ba63cb0: je     0x000000011ba6436f
  0x000000011ba63cb6: mov    0xb0(%rsp),%rax
  0x000000011ba63cbe: movabs $0x132a43748,%rdx  ;   {metadata(method data for {method} {0x0000000132553ba8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63cc8: addq   $0x1,0x140(%rdx)
  0x000000011ba63cd0: mov    0xb8(%rsp),%edx
  0x000000011ba63cd7: mov    0xb0(%rsp),%rsi    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 248)
                                                ; - java.util.Arrays::copyOfRange@20 (line 4029)

  0x000000011ba63cdf: callq  0x000000011b4d1f00  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 248)
                                                ; - java.util.Arrays::copyOfRange@20 (line 4029)
                                                ;   {optimized virtual_call}
  0x000000011ba63ce4: mov    0xb0(%rsp),%rax
  0x000000011ba63cec: movabs $0x132a1bf70,%rdx  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63cf6: addq   $0x1,0x1a8(%rdx)
  0x000000011ba63cfe: movabs $0x132a44770,%rdx  ;   {metadata(method data for {method} {0x0000000132553568} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63d08: mov    0x104(%rdx),%esi
  0x000000011ba63d0e: add    $0x8,%esi
  0x000000011ba63d11: mov    %esi,0x104(%rdx)
  0x000000011ba63d17: and    $0x7ffff8,%esi
  0x000000011ba63d1d: cmp    $0x0,%esi
  0x000000011ba63d20: je     0x000000011ba64390
  0x000000011ba63d26: mov    0xb0(%rsp),%rax
  0x000000011ba63d2e: movabs $0x132a44770,%rdx  ;   {metadata(method data for {method} {0x0000000132553568} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63d38: addq   $0x1,0x140(%rdx)
  0x000000011ba63d40: movabs $0x70fff5d98,%rdx  ;   {oop(&quot; &gt; &quot;{0x000000070fff5d98})}
  0x000000011ba63d4a: mov    0xb0(%rsp),%rsi    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ; - java.util.Arrays::copyOfRange@25 (line 4029)

  0x000000011ba63d52: nopl   0x0(%rax,%rax,1)
  0x000000011ba63d57: callq  0x000000011b4d1f00  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ; - java.util.Arrays::copyOfRange@25 (line 4029)
                                                ;   {optimized virtual_call}
  0x000000011ba63d5c: mov    0xb0(%rsp),%rax
  0x000000011ba63d64: movabs $0x132a1bf70,%rdx  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63d6e: addq   $0x1,0x1e0(%rdx)
  0x000000011ba63d76: movabs $0x132a43748,%rdx  ;   {metadata(method data for {method} {0x0000000132553ba8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63d80: mov    0x104(%rdx),%esi
  0x000000011ba63d86: add    $0x8,%esi
  0x000000011ba63d89: mov    %esi,0x104(%rdx)
  0x000000011ba63d8f: and    $0x7ffff8,%esi
  0x000000011ba63d95: cmp    $0x0,%esi
  0x000000011ba63d98: je     0x000000011ba643b1
  0x000000011ba63d9e: mov    0xb0(%rsp),%rax
  0x000000011ba63da6: movabs $0x132a43748,%rdx  ;   {metadata(method data for {method} {0x0000000132553ba8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63db0: addq   $0x1,0x140(%rdx)
  0x000000011ba63db8: mov    0xbc(%rsp),%edx
  0x000000011ba63dbf: mov    0xb0(%rsp),%rsi    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 248)
                                                ; - java.util.Arrays::copyOfRange@29 (line 4029)

  0x000000011ba63dc7: callq  0x000000011b4d1f00  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 248)
                                                ; - java.util.Arrays::copyOfRange@29 (line 4029)
                                                ;   {optimized virtual_call}
  0x000000011ba63dcc: mov    0xb0(%rsp),%rax
  0x000000011ba63dd4: movabs $0x132a1bf70,%rdx  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba63dde: addq   $0x1,0x218(%rdx)
  0x000000011ba63de6: movabs $0x132a44b78,%rdx  ;   {metadata(method data for {method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63df0: mov    0x104(%rdx),%esi
  0x000000011ba63df6: add    $0x8,%esi
  0x000000011ba63df9: mov    %esi,0x104(%rdx)
  0x000000011ba63dff: and    $0x7ffff8,%esi
  0x000000011ba63e05: cmp    $0x0,%esi
  0x000000011ba63e08: je     0x000000011ba643d2
  0x000000011ba63e0e: mov    0xb0(%rsp),%rax
  0x000000011ba63e16: movabs $0x132a44b78,%rdx  ;   {metadata(method data for {method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63e20: addq   $0x1,0x140(%rdx)
  0x000000011ba63e28: movabs $0x1329fa390,%rdx  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba63e32: mov    0x104(%rdx),%esi
  0x000000011ba63e38: add    $0x8,%esi
  0x000000011ba63e3b: mov    %esi,0x104(%rdx)
  0x000000011ba63e41: and    $0x7ffff8,%esi
  0x000000011ba63e47: cmp    $0x0,%esi
  0x000000011ba63e4a: je     0x000000011ba643f3
  0x000000011ba63e50: movabs $0x1329fa390,%rdx  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba63e5a: incl   0x150(%rdx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@3 (line 1621)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63e60: mov    0xb0(%rsp),%rax
  0x000000011ba63e68: movsbl 0x10(%rax),%edx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1621)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63e6c: cmp    $0x0,%edx
  0x000000011ba63e6f: movabs $0x1329fa390,%rdx  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba63e79: movabs $0x160,%rsi
  0x000000011ba63e83: jne    0x000000011ba63e93
  0x000000011ba63e89: movabs $0x170,%rsi
  0x000000011ba63e93: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba63e97: lea    0x1(%rdi),%rdi
  0x000000011ba63e9b: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba63e9f: jne    0x000000011ba63ebf  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1621)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63ea5: movabs $0x1329fa390,%rdx  ;   {metadata(method data for {method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba63eaf: incl   0x180(%rdx)
  0x000000011ba63eb5: mov    $0x1,%edx
  0x000000011ba63eba: jmpq   0x000000011ba63ec4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@14 (line 1621)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63ebf: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18 (line 1621)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63ec4: and    $0x1,%edx
  0x000000011ba63ec7: cmp    $0x0,%edx
  0x000000011ba63eca: movabs $0x132a44b78,%rdx  ;   {metadata(method data for {method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63ed4: movabs $0x178,%rsi
  0x000000011ba63ede: je     0x000000011ba63eee
  0x000000011ba63ee4: movabs $0x188,%rsi
  0x000000011ba63eee: mov    (%rdx,%rsi,1),%rdi
  0x000000011ba63ef2: lea    0x1(%rdi),%rdi
  0x000000011ba63ef6: mov    %rdi,(%rdx,%rsi,1)
  0x000000011ba63efa: je     0x000000011ba640a1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@4 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63f00: mov    0x14(%rax),%ebx
  0x000000011ba63f03: shl    $0x3,%rbx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@8 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63f07: mov    0xc(%rax),%r8d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63f0b: movabs $0x132a44b78,%rdx  ;   {metadata(method data for {method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba63f15: addq   $0x1,0x198(%rdx)
  0x000000011ba63f1d: movabs $0x132a265a8,%rdx  ;   {metadata(method data for {method} {0x00000001326054a0} &apos;newString&apos; &apos;([BII)Ljava/lang/String;&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba63f27: mov    0x104(%rdx),%esi
  0x000000011ba63f2d: add    $0x8,%esi
  0x000000011ba63f30: mov    %esi,0x104(%rdx)
  0x000000011ba63f36: and    $0x7ffff8,%esi
  0x000000011ba63f3c: cmp    $0x0,%esi
  0x000000011ba63f3f: je     0x000000011ba64414
  0x000000011ba63f45: movabs $0x800001808,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011ba63f4f: mov    0x118(%r15),%rax
  0x000000011ba63f56: lea    0x18(%rax),%rdi
  0x000000011ba63f5a: cmp    0x128(%r15),%rdi
  0x000000011ba63f61: ja     0x000000011ba64435
  0x000000011ba63f67: mov    %rdi,0x118(%r15)
  0x000000011ba63f6e: mov    0xb8(%rdx),%rcx
  0x000000011ba63f75: mov    %rcx,(%rax)
  0x000000011ba63f78: mov    %rdx,%rcx
  0x000000011ba63f7b: movabs $0x800000000,%r12
  0x000000011ba63f85: sub    %r12,%rcx
  0x000000011ba63f88: xor    %r12,%r12
  0x000000011ba63f8b: mov    %ecx,0x8(%rax)
  0x000000011ba63f8e: xor    %rcx,%rcx
  0x000000011ba63f91: mov    %ecx,0xc(%rax)
  0x000000011ba63f94: xor    %rcx,%rcx
  0x000000011ba63f97: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63f9b: movabs $0x132a265a8,%rsi  ;   {metadata(method data for {method} {0x00000001326054a0} &apos;newString&apos; &apos;([BII)Ljava/lang/String;&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba63fa5: addq   $0x1,0x140(%rsi)
  0x000000011ba63fad: mov    %rbx,%rsi
  0x000000011ba63fb0: mov    $0x0,%edx
  0x000000011ba63fb5: mov    %r8,%rcx           ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba63fb8: mov    %rax,0xc8(%rsp)
  0x000000011ba63fc0: nopl   0x0(%rax)
  0x000000011ba63fc7: callq  0x000000011b4d2400  ; ImmutableOopMap{[192]=Oop [200]=Oop }
                                                ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@9 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {static_call}
  0x000000011ba63fcc: mov    0xc8(%rsp),%rsi
  0x000000011ba63fd4: movabs $0x132a265a8,%rdx  ;   {metadata(method data for {method} {0x00000001326054a0} &apos;newString&apos; &apos;([BII)Ljava/lang/String;&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba63fde: addq   $0x1,0x150(%rdx)
  0x000000011ba63fe6: movabs $0x1328aa7c0,%rsi  ;   {metadata(method data for {method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba63ff0: mov    0x104(%rsi),%edx
  0x000000011ba63ff6: add    $0x8,%edx
  0x000000011ba63ff9: mov    %edx,0x104(%rsi)
  0x000000011ba63fff: and    $0x7ffff8,%edx
  0x000000011ba64005: cmp    $0x0,%edx
  0x000000011ba64008: je     0x000000011ba64442
  0x000000011ba6400e: mov    0xc8(%rsp),%rsi
  0x000000011ba64016: movabs $0x1328aa7c0,%rdx  ;   {metadata(method data for {method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba64020: addq   $0x1,0x140(%rdx)
  0x000000011ba64028: movabs $0x1326ded60,%rsi  ;   {metadata(method data for {method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba64032: mov    0x104(%rsi),%edx
  0x000000011ba64038: add    $0x8,%edx
  0x000000011ba6403b: mov    %edx,0x104(%rsi)
  0x000000011ba64041: and    $0x7ffff8,%edx
  0x000000011ba64047: cmp    $0x0,%edx
  0x000000011ba6404a: je     0x000000011ba64463
  0x000000011ba64050: movsbl 0x30(%r15),%esi
  0x000000011ba64055: cmp    $0x0,%esi
  0x000000011ba64058: mov    0xc8(%rsp),%rsi
  0x000000011ba64060: jne    0x000000011ba64484
  0x000000011ba64066: mov    %rax,%r10
  0x000000011ba64069: shr    $0x3,%r10
  0x000000011ba6406d: mov    %r10d,0xc(%rsi)
  0x000000011ba64071: mov    %rsi,%rdx
  0x000000011ba64074: xor    %rax,%rdx
  0x000000011ba64077: shr    $0x14,%rdx
  0x000000011ba6407b: cmp    $0x0,%rdx
  0x000000011ba6407f: jne    0x000000011ba644a3  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@6 (line 3253)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba64085: movb   $0x0,0x14(%rsi)    ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::&lt;init&gt;@11 (line 3254)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba64089: movabs $0x132a44b78,%rdx  ;   {metadata(method data for {method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba64093: incl   0x1a8(%rdx)
  0x000000011ba64099: mov    %rsi,%rax
  0x000000011ba6409c: jmpq   0x000000011ba642aa  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@19 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba640a1: mov    0x14(%rax),%esi
  0x000000011ba640a4: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@23 (line 449)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba640a8: mov    0xc(%rax),%ecx     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@28 (line 449)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba640ab: movabs $0x132a44b78,%rdx  ;   {metadata(method data for {method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba640b5: addq   $0x1,0x1c0(%rdx)
  0x000000011ba640bd: mov    $0x0,%edx          ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@31 (line 449)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba640c2: nopl   0x0(%rax,%rax,1)
  0x000000011ba640c7: callq  0x000000011b4d2400  ; ImmutableOopMap{[192]=Oop }
                                                ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@31 (line 449)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {static_call}
  0x000000011ba640cc: jmpq   0x000000011ba642aa  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@34 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)

  0x000000011ba640d1: mov    %edx,0xb8(%rsp)
  0x000000011ba640d8: mov    %r9,%rbx
  0x000000011ba640db: movabs $0x800000820,%rdx  ;   {metadata({type array byte})}
  0x000000011ba640e5: movslq %ebx,%rbx
  0x000000011ba640e8: mov    %rbx,%rdi
  0x000000011ba640eb: cmp    $0xffffff,%rbx
  0x000000011ba640f2: ja     0x000000011ba644bb
  0x000000011ba640f8: movabs $0x17,%rsi
  0x000000011ba64102: lea    (%rsi,%rbx,1),%rsi
  0x000000011ba64106: and    $0xfffffffffffffff8,%rsi
  0x000000011ba6410a: mov    0x118(%r15),%rax
  0x000000011ba64111: lea    (%rax,%rsi,1),%rsi
  0x000000011ba64115: cmp    0x128(%r15),%rsi
  0x000000011ba6411c: ja     0x000000011ba644bb
  0x000000011ba64122: mov    %rsi,0x118(%r15)
  0x000000011ba64129: sub    %rax,%rsi
  0x000000011ba6412c: movq   $0x1,(%rax)
  0x000000011ba64133: mov    %rdx,%rcx
  0x000000011ba64136: movabs $0x800000000,%r12
  0x000000011ba64140: sub    %r12,%rcx
  0x000000011ba64143: xor    %r12,%r12
  0x000000011ba64146: mov    %ecx,0x8(%rax)
  0x000000011ba64149: mov    %ebx,0xc(%rax)
  0x000000011ba6414c: sub    $0x10,%rsi
  0x000000011ba64150: je     0x000000011ba64170
  0x000000011ba64156: test   %rsi,%rsi
  0x000000011ba64159: je     0x000000011ba64170
  0x000000011ba6415f: xor    %rbx,%rbx
  0x000000011ba64162: shr    $0x3,%rsi
  0x000000011ba64166: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011ba6416b: dec    %rsi
  0x000000011ba6416e: jne    0x000000011ba64166  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)

  0x000000011ba64170: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ; implicit exception: dispatches to 0x000000011ba644c5
  0x000000011ba64174: sub    0xb8(%rsp),%esi
  0x000000011ba6417b: movabs $0x132a1bf70,%rdx  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba64185: addq   $0x1,0x260(%rdx)
  0x000000011ba6418d: movabs $0x132865168,%rdx  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba64197: mov    0x104(%rdx),%ecx
  0x000000011ba6419d: add    $0x8,%ecx
  0x000000011ba641a0: mov    %ecx,0x104(%rdx)
  0x000000011ba641a6: and    $0x7ffff8,%ecx
  0x000000011ba641ac: cmp    $0x0,%ecx
  0x000000011ba641af: je     0x000000011ba644ca
  0x000000011ba641b5: cmp    %r9d,%esi
  0x000000011ba641b8: movabs $0x132865168,%rdx  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba641c2: movabs $0x140,%rcx
  0x000000011ba641cc: jg     0x000000011ba641dc
  0x000000011ba641d2: movabs $0x150,%rcx
  0x000000011ba641dc: mov    (%rdx,%rcx,1),%rdi
  0x000000011ba641e0: lea    0x1(%rdi),%rdi
  0x000000011ba641e4: mov    %rdi,(%rdx,%rcx,1)
  0x000000011ba641e8: jg     0x000000011ba64201  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1513)
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)

  0x000000011ba641ee: movabs $0x132865168,%rdx  ;   {metadata(method data for {method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba641f8: incl   0x160(%rdx)
  0x000000011ba641fe: mov    %rsi,%r9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1513)
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)

  0x000000011ba64201: mov    0xb8(%rsp),%edx
  0x000000011ba64208: movabs $0x132a1bf70,%rsi  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba64212: addq   $0x1,0x270(%rsi)
  0x000000011ba6421a: mov    %r8,%rsi
  0x000000011ba6421d: mov    %rax,%rcx
  0x000000011ba64220: mov    $0x0,%r8d
  0x000000011ba64226: mov    %rax,0xd0(%rsp)
  0x000000011ba6422e: test   %edx,%edx
  0x000000011ba64230: jl     0x000000011ba644eb
  0x000000011ba64236: lea    (%rdx,%r9,1),%rdi
  0x000000011ba6423a: cmp    0xc(%rsi),%edi
  0x000000011ba6423d: ja     0x000000011ba644eb
  0x000000011ba64243: lea    (%r8,%r9,1),%rdi
  0x000000011ba64247: cmp    0xc(%rcx),%edi
  0x000000011ba6424a: ja     0x000000011ba644eb
  0x000000011ba64250: test   %r9d,%r9d
  0x000000011ba64253: jl     0x000000011ba644eb
  0x000000011ba64259: movslq %edx,%rdx
  0x000000011ba6425c: movslq %r8d,%r8
  0x000000011ba6425f: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000011ba64264: lea    0x10(%rcx,%r8,1),%rsi
  0x000000011ba64269: mov    %r9,%rdx
  0x000000011ba6426c: test   $0xf,%esp
  0x000000011ba64272: je     0x000000011ba6428a
  0x000000011ba64278: sub    $0x8,%rsp
  0x000000011ba6427c: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x000000011ba64281: add    $0x8,%rsp
  0x000000011ba64285: jmpq   0x000000011ba6428f
  0x000000011ba6428a: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ;   {runtime_call StubRoutines (2)}
  0x000000011ba6428f: mov    0xd0(%rsp),%rax
  0x000000011ba64297: add    $0xe0,%rsp
  0x000000011ba6429e: pop    %rbp
  0x000000011ba6429f: mov    0x108(%r15),%r10
  0x000000011ba642a6: test   %eax,(%r10)        ;   {poll_return}
  0x000000011ba642a9: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@62 (line 4033)

  0x000000011ba642aa: mov    0xc0(%rsp),%rdi
  0x000000011ba642b2: mov    %rdi,%rdx
  0x000000011ba642b5: movabs $0x132a1bf70,%rsi  ;   {metadata(method data for {method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba642bf: addq   $0x1,0x250(%rsi)
  0x000000011ba642c7: mov    %rax,%rdx
  0x000000011ba642ca: mov    %rdi,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@35 (line 4029)

  0x000000011ba642cd: xchg   %ax,%ax
  0x000000011ba642cf: callq  0x000000011b4d1f00  ; ImmutableOopMap{[192]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@35 (line 4029)
                                                ;   {optimized virtual_call}
  0x000000011ba642d4: mov    0xc0(%rsp),%rax
  0x000000011ba642dc: jmpq   0x000000011ba64524
  0x000000011ba642e1: movabs $0x132664968,%r10  ;   {metadata({method} {0x0000000132664968} &apos;copyOfRange&apos; &apos;([BII)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011ba642eb: mov    %r10,0x8(%rsp)
  0x000000011ba642f0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba642f8: callq  0x000000011b59a600  ; ImmutableOopMap{r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 4027)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba642fd: jmpq   0x000000011ba63afa
  0x000000011ba64302: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba6430c: mov    $0xa050f00,%eax
  0x000000011ba64311: callq  0x000000011b599680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 4029)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba64316: jmpq   0x000000011ba63b48
  0x000000011ba6431b: mov    %rdx,%rdx
  0x000000011ba6431e: callq  0x000000011b596780  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8 (line 4029)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba64323: jmpq   0x000000011ba63ba6
  0x000000011ba64328: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011ba64332: mov    $0xa050f00,%eax
  0x000000011ba64337: callq  0x000000011b599680  ; ImmutableOopMap{rax=Oop [192]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 4029)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011ba6433c: jmpq   0x000000011ba63bb0
  0x000000011ba64341: mov    %rdx,%rdx
  0x000000011ba64344: callq  0x000000011b596780  ; ImmutableOopMap{[192]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12 (line 4029)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba64349: jmpq   0x000000011ba63c06
  0x000000011ba6434e: movabs $0x132553098,%r10  ;   {metadata({method} {0x0000000132553098} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba64358: mov    %r10,0x8(%rsp)
  0x000000011ba6435d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba64365: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 99)
                                                ; - java.util.Arrays::copyOfRange@16 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba6436a: jmpq   0x000000011ba63c43
  0x000000011ba6436f: movabs $0x132553ba8,%r10  ;   {metadata({method} {0x0000000132553ba8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba64379: mov    %r10,0x8(%rsp)
  0x000000011ba6437e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba64386: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 248)
                                                ; - java.util.Arrays::copyOfRange@20 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba6438b: jmpq   0x000000011ba63cb6
  0x000000011ba64390: movabs $0x132553568,%r10  ;   {metadata({method} {0x0000000132553568} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba6439a: mov    %r10,0x8(%rsp)
  0x000000011ba6439f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba643a7: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 174)
                                                ; - java.util.Arrays::copyOfRange@25 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba643ac: jmpq   0x000000011ba63d26
  0x000000011ba643b1: movabs $0x132553ba8,%r10  ;   {metadata({method} {0x0000000132553ba8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba643bb: mov    %r10,0x8(%rsp)
  0x000000011ba643c0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba643c8: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 248)
                                                ; - java.util.Arrays::copyOfRange@29 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba643cd: jmpq   0x000000011ba63d9e
  0x000000011ba643d2: movabs $0x132554f10,%r10  ;   {metadata({method} {0x0000000132554f10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011ba643dc: mov    %r10,0x8(%rsp)
  0x000000011ba643e1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba643e9: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba643ee: jmpq   0x000000011ba63e0e
  0x000000011ba643f3: movabs $0x132551038,%r10  ;   {metadata({method} {0x0000000132551038} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011ba643fd: mov    %r10,0x8(%rsp)
  0x000000011ba64402: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba6440a: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1 (line 1621)
                                                ; - java.lang.StringBuilder::toString@1 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba6440f: jmpq   0x000000011ba63e50
  0x000000011ba64414: movabs $0x1326054a0,%r10  ;   {metadata({method} {0x00000001326054a0} &apos;newString&apos; &apos;([BII)Ljava/lang/String;&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x000000011ba6441e: mov    %r10,0x8(%rsp)
  0x000000011ba64423: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba6442b: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::newString@-1 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba64430: jmpq   0x000000011ba63f45
  0x000000011ba64435: mov    %rdx,%rdx
  0x000000011ba64438: callq  0x000000011b596780  ; ImmutableOopMap{[192]=Oop rbx=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011ba6443d: jmpq   0x000000011ba63f9b
  0x000000011ba64442: movabs $0x1324b50d8,%r10  ;   {metadata({method} {0x00000001324b50d8} &apos;&lt;init&gt;&apos; &apos;([BB)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011ba6444c: mov    %r10,0x8(%rsp)
  0x000000011ba64451: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba64459: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [200]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 3252)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba6445e: jmpq   0x000000011ba6400e
  0x000000011ba64463: movabs $0x1324ab610,%r10  ;   {metadata({method} {0x00000001324ab610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011ba6446d: mov    %r10,0x8(%rsp)
  0x000000011ba64472: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba6447a: callq  0x000000011b59a600  ; ImmutableOopMap{[192]=Oop [200]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 3252)
                                                ; - java.lang.StringLatin1::newString@13 (line 715)
                                                ; - java.lang.StringBuilder::toString@16 (line 448)
                                                ; - java.util.Arrays::copyOfRange@32 (line 4029)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba6447f: jmpq   0x000000011ba64050
  0x000000011ba64484: mov    0xc(%rsi),%edx
  0x000000011ba64487: shl    $0x3,%rdx
  0x000000011ba6448b: cmp    $0x0,%rdx
  0x000000011ba6448f: je     0x000000011ba64066
  0x000000011ba64495: mov    %rdx,(%rsp)
  0x000000011ba64499: callq  0x000000011b59ab00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011ba6449e: jmpq   0x000000011ba64066
  0x000000011ba644a3: cmp    $0x0,%rax
  0x000000011ba644a7: je     0x000000011ba64085
  0x000000011ba644ad: mov    %rsi,(%rsp)
  0x000000011ba644b1: callq  0x000000011b59ad80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011ba644b6: jmpq   0x000000011ba64085
  0x000000011ba644bb: callq  0x000000011b596d80  ; ImmutableOopMap{r8=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@40 (line 4030)
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x000000011ba644c0: jmpq   0x000000011ba64170
  0x000000011ba644c5: callq  0x000000011b595f20  ; ImmutableOopMap{r8=Oop rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@50 (line 4031)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011ba644ca: movabs $0x132629900,%r10  ;   {metadata({method} {0x0000000132629900} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011ba644d4: mov    %r10,0x8(%rsp)
  0x000000011ba644d9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011ba644e1: callq  0x000000011b59a600  ; ImmutableOopMap{r8=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1513)
                                                ; - java.util.Arrays::copyOfRange@54 (line 4032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011ba644e6: jmpq   0x000000011ba641b5
  0x000000011ba644eb: nopl   0x0(%rax)
  0x000000011ba644ef: callq  0x000000011b4d2400  ; ImmutableOopMap{[208]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@57 (line 4031)
                                                ;   {static_call}
  0x000000011ba644f4: jmpq   0x000000011ba6428f
  0x000000011ba644f9: nop
  0x000000011ba644fa: nop
  0x000000011ba644fb: mov    0x420(%r15),%rax
  0x000000011ba64502: movabs $0x0,%r10
  0x000000011ba6450c: mov    %r10,0x420(%r15)
  0x000000011ba64513: movabs $0x0,%r10
  0x000000011ba6451d: mov    %r10,0x428(%r15)
  0x000000011ba64524: add    $0xe0,%rsp
  0x000000011ba6452b: pop    %rbp
  0x000000011ba6452c: jmpq   0x000000011b595880  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011ba64531: hlt    
  0x000000011ba64532: hlt    
  0x000000011ba64533: hlt    
  0x000000011ba64534: hlt    
  0x000000011ba64535: hlt    
  0x000000011ba64536: hlt    
  0x000000011ba64537: hlt    
  0x000000011ba64538: hlt    
  0x000000011ba64539: hlt    
  0x000000011ba6453a: hlt    
  0x000000011ba6453b: hlt    
  0x000000011ba6453c: hlt    
  0x000000011ba6453d: hlt    
  0x000000011ba6453e: hlt    
  0x000000011ba6453f: hlt    
[Stub Code]
  0x000000011ba64540: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011ba64545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6454f: jmpq   0x000000011ba6454f  ;   {runtime_call}
  0x000000011ba64554: nop
  0x000000011ba64555: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6455f: jmpq   0x000000011ba6455f  ;   {runtime_call}
  0x000000011ba64564: nop
  0x000000011ba64565: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6456f: jmpq   0x000000011ba6456f  ;   {runtime_call}
  0x000000011ba64574: nop
  0x000000011ba64575: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6457f: jmpq   0x000000011ba6457f  ;   {runtime_call}
  0x000000011ba64584: nop
  0x000000011ba64585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6458f: jmpq   0x000000011ba6458f  ;   {runtime_call}
  0x000000011ba64594: nop
  0x000000011ba64595: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba6459f: jmpq   0x000000011ba6459f  ;   {runtime_call}
  0x000000011ba645a4: nop
  0x000000011ba645a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba645af: jmpq   0x000000011ba645af  ;   {runtime_call}
  0x000000011ba645b4: nop
  0x000000011ba645b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011ba645bf: jmpq   0x000000011ba645bf  ;   {runtime_call}
[Exception Handler]
  0x000000011ba645c4: callq  0x000000011b597b00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011ba645c9: mov    %rsp,-0x28(%rsp)
  0x000000011ba645ce: sub    $0x80,%rsp
  0x000000011ba645d5: mov    %rax,0x78(%rsp)
  0x000000011ba645da: mov    %rcx,0x70(%rsp)
  0x000000011ba645df: mov    %rdx,0x68(%rsp)
  0x000000011ba645e4: mov    %rbx,0x60(%rsp)
  0x000000011ba645e9: mov    %rbp,0x50(%rsp)
  0x000000011ba645ee: mov    %rsi,0x48(%rsp)
  0x000000011ba645f3: mov    %rdi,0x40(%rsp)
  0x000000011ba645f8: mov    %r8,0x38(%rsp)
  0x000000011ba645fd: mov    %r9,0x30(%rsp)
  0x000000011ba64602: mov    %r10,0x28(%rsp)
  0x000000011ba64607: mov    %r11,0x20(%rsp)
  0x000000011ba6460c: mov    %r12,0x18(%rsp)
  0x000000011ba64611: mov    %r13,0x10(%rsp)
  0x000000011ba64616: mov    %r14,0x8(%rsp)
  0x000000011ba6461b: mov    %r15,(%rsp)
  0x000000011ba6461f: movabs $0x10e78ec7d,%rdi  ;   {external_word}
  0x000000011ba64629: movabs $0x11ba645c9,%rsi  ;   {internal_word}
  0x000000011ba64633: mov    %rsp,%rdx
  0x000000011ba64636: and    $0xfffffffffffffff0,%rsp
  0x000000011ba6463a: callq  0x000000010e544734  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011ba6463f: hlt    
[Deopt Handler Code]
  0x000000011ba64640: movabs $0x11ba64640,%r10  ;   {section_word}
  0x000000011ba6464a: push   %r10
  0x000000011ba6464c: jmpq   0x000000011b4d3520  ;   {runtime_call DeoptimizationBlob}
  0x000000011ba64651: hlt    
  0x000000011ba64652: hlt    
  0x000000011ba64653: hlt    
  0x000000011ba64654: hlt    
  0x000000011ba64655: hlt    
  0x000000011ba64656: hlt    
  0x000000011ba64657: hlt    

ImmutableOopMap{[192]=Oop [176]=Oop }pc offsets: 436 548 668 780 
ImmutableOopMap{[192]=Oop [200]=Oop }pc offsets: 1292 
ImmutableOopMap{[192]=Oop }pc offsets: 1548 2068 
ImmutableOopMap{r8=Oop }pc offsets: 2109 
ImmutableOopMap{}pc offsets: 2134 2147 
ImmutableOopMap{rax=Oop [192]=Oop }pc offsets: 2172 
ImmutableOopMap{[192]=Oop }pc offsets: 2185 
ImmutableOopMap{[192]=Oop rax=Oop }pc offsets: 2218 
ImmutableOopMap{[192]=Oop [176]=Oop }pc offsets: 2251 2284 2317 2350 2383 
ImmutableOopMap{[192]=Oop rbx=Oop }pc offsets: 2416 2429 
ImmutableOopMap{[192]=Oop [200]=Oop rax=Oop }pc offsets: 2462 2495 
ImmutableOopMap{r8=Oop }pc offsets: 2560 
ImmutableOopMap{r8=Oop rax=Oop }pc offsets: 2570 2598 
ImmutableOopMap{[208]=Oop }pc offsets: 2612 </print_nmethod>
<writer thread='42243'/>
<task_queued compile_id='157' method='java.lang.invoke.MethodType ptypes ()[Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.567' comment='tiered' hot_count='128'/>
<writer thread='12035'/>
<destroy_vm stamp='0.567'/>
<tty_done stamp='0.568'/>
</tty>
<compilation_log thread='15363'>
<start_compile_thread name='C2 CompilerThread0' thread='15363' process='47175' stamp='0.052'/>
<task compile_id='15' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='1002' backedge_count='32793' iicount='1003' stamp='0.086'>
<type id='962' name='int'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.lang.StringLatin1' flags='16'/>
<method id='1082' holder='1081' name='hashCode' return='962' arguments='1073' flags='9' bytes='42' compile_id='5' compiler='c1' level='3' iicount='1004'/>
<parse method='1082' uses='1004.000000' stamp='0.086'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='788' not_taken='28795' cnt='29583.000000' prob='0.0266369'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='51' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='788' not_taken='28795' cnt='28795.000000' prob='0.0266369'/>
<parse_done nodes='154' live='148' memory='46800' stamp='0.086'/>
</parse>
<loop_tree>
<loop idx='166' >
<loop idx='167' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='166' >
<loop idx='284' inner_loop='1' main_loop='284' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='231' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='325' inner_loop='1' main_loop='325' >
</loop>
</loop>
<loop idx='204' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='231' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='325' inner_loop='1' main_loop='325' >
</loop>
</loop>
<loop idx='204' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='231' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='407' inner_loop='1' main_loop='407' >
</loop>
</loop>
<loop idx='204' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='231' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='407' inner_loop='1' main_loop='407' >
</loop>
</loop>
<loop idx='204' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='231' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='407' inner_loop='1' main_loop='407' >
</loop>
</loop>
<loop idx='204' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<regalloc attempts='2' success='1'/>
<code_cache total_blobs='274' nmethods='9' adapters='131' free_code_cache='250641408'/>
<task_done success='1' nmsize='408' count='1360' backedge_count='43458' stamp='0.092'/>
</task>
<task compile_id='53' method='java.lang.String isLatin1 ()Z' bytes='19' count='5686' iicount='5686' stamp='0.184'>
<type id='956' name='boolean'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='7' compiler='c1' level='3' iicount='5823'/>
<parse method='1081' uses='5823.000000' stamp='0.184'>
<bc code='153' bci='3'/>
<branch target_bci='17' taken='0' not_taken='5821' cnt='5821.000000' prob='never'/>
<bc code='154' bci='10'/>
<branch target_bci='17' taken='0' not_taken='5821' cnt='5821.000000' prob='never'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done nodes='51' live='49' memory='26568' stamp='0.184'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='380' nmethods='52' adapters='192' free_code_cache='250553856'/>
<task_done success='1' nmsize='120' count='5861' stamp='0.186'/>
</task>
<task compile_id='71' method='java.lang.String charAt (I)C' bytes='25' count='5657' iicount='5657' stamp='0.232'>
<type id='957' name='char'/>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='charAt' return='957' arguments='962' flags='1' bytes='25' compile_id='22' compiler='c1' level='3' iicount='5679'/>
<klass id='1084' name='java.lang.StringUTF16' unloaded='1'/>
<uncommon_trap method='1081' bci='21' reason='unloaded' action='reinterpret' index='562' debug_id='0' klass='1084'/>
<parse method='1081' uses='5679.000000' stamp='0.232'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1083' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='53' compiler='c2' level='4' iicount='8706'/>
<call method='1083' count='5184' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1083' uses='5678.000000' stamp='0.232'>
<bc code='153' bci='3'/>
<branch target_bci='17' taken='0' not_taken='8706' cnt='8706.000000' prob='never'/>
<bc code='154' bci='10'/>
<branch target_bci='17' taken='0' not_taken='8706' cnt='8706.000000' prob='never'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done nodes='62' live='60' memory='28456' stamp='0.232'/>
</parse>
<bc code='153' bci='4'/>
<branch target_bci='16' taken='0' not_taken='5677' cnt='5677.000000' prob='never'/>
<bc code='184' bci='12'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1086' name='java.lang.StringLatin1' flags='16'/>
<method id='1087' holder='1086' name='charAt' return='957' arguments='1073 962' flags='9' bytes='28' compile_id='23' compiler='c1' level='3' iicount='5722'/>
<call method='1087' count='5183' prof_factor='1.000000' inline='1'/>
<klass id='1090' name='java.lang.StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='1087' bci='10' reason='unloaded' action='reinterpret' index='3' debug_id='0' klass='1090'/>
<inline_success reason='inline (hot)'/>
<parse method='1087' uses='5677.000000' stamp='0.232'>
<bc code='155' bci='1'/>
<branch target_bci='10' taken='0' not_taken='5722' cnt='5722.000000' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='190' bci='6'/>
<uncommon_trap bci='6' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='161' bci='7'/>
<branch target_bci='19' taken='5722' not_taken='0' cnt='5722.000000' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='51' bci='21'/>
<uncommon_trap bci='21' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<parse_done nodes='154' live='147' memory='45192' stamp='0.232'/>
</parse>
<parse_done nodes='155' live='147' memory='45648' stamp='0.232'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='401' nmethods='69' adapters='194' free_code_cache='250521088'/>
<task_done success='1' nmsize='184' count='5967' inlined_bytes='47' stamp='0.248'/>
</task>
<task compile_id='97' method='java.lang.String hashCode ()I' bytes='49' count='5646' iicount='5646' stamp='0.302'>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='hashCode' return='962' flags='1' bytes='49' compile_id='6' compiler='c1' level='3' iicount='5685'/>
<klass id='1084' name='java.lang.StringUTF16' unloaded='1'/>
<uncommon_trap method='1081' bci='39' reason='unloaded' action='reinterpret' index='562' debug_id='0' klass='1084'/>
<parse method='1081' uses='5685.000000' stamp='0.302'>
<bc code='154' bci='6'/>
<branch target_bci='47' taken='4110' not_taken='1574' cnt='5684.000000' prob='0.723082'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='158' bci='14'/>
<branch target_bci='47' taken='4' not_taken='1569' cnt='1573.000000' prob='0.00254291'/>
<bc code='182' bci='19'/>
<type id='956' name='boolean'/>
<method id='1083' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='53' compiler='c2' level='4' iicount='9826'/>
<call method='1083' count='1430' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1083' uses='1569.000000' stamp='0.302'>
<bc code='153' bci='3'/>
<branch target_bci='17' taken='0' not_taken='9826' cnt='9826.000000' prob='never'/>
<bc code='154' bci='10'/>
<branch target_bci='17' taken='0' not_taken='9826' cnt='9826.000000' prob='never'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done nodes='104' live='101' memory='35464' stamp='0.302'/>
</parse>
<bc code='153' bci='22'/>
<branch target_bci='35' taken='0' not_taken='1569' cnt='1569.000000' prob='never'/>
<bc code='184' bci='29'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1086' name='java.lang.StringLatin1' flags='16'/>
<method id='1087' holder='1086' name='hashCode' return='962' arguments='1073' flags='9' bytes='42' compile_id='15' compiler='c2' level='4' iicount='1360'/>
<call method='1087' count='1430' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1087' uses='1569.000000' stamp='0.302'>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='1144' not_taken='39406' cnt='40550.000000' prob='0.0282121'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='51' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='1144' not_taken='39406' cnt='39406.000000' prob='0.0282121'/>
<parse_done nodes='243' live='235' memory='58528' stamp='0.303'/>
</parse>
<parse_done nodes='250' live='241' memory='59912' stamp='0.303'/>
</parse>
<loop_tree>
<loop idx='263' >
<loop idx='264' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='263' >
<loop idx='383' inner_loop='1' main_loop='383' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='330' inner_loop='1' pre_loop='264' >
</loop>
<loop idx='263' >
<loop idx='424' inner_loop='1' main_loop='424' >
</loop>
</loop>
<loop idx='302' inner_loop='1' post_loop='264' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='330' inner_loop='1' pre_loop='264' >
</loop>
<loop idx='263' >
<loop idx='424' inner_loop='1' main_loop='424' >
</loop>
</loop>
<loop idx='302' inner_loop='1' post_loop='264' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='330' inner_loop='1' pre_loop='264' >
</loop>
<loop idx='263' >
<loop idx='505' inner_loop='1' main_loop='505' >
</loop>
</loop>
<loop idx='302' inner_loop='1' post_loop='264' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='330' inner_loop='1' pre_loop='264' >
</loop>
<loop idx='263' >
<loop idx='505' inner_loop='1' main_loop='505' >
</loop>
</loop>
<loop idx='302' inner_loop='1' post_loop='264' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='330' inner_loop='1' pre_loop='264' >
</loop>
<loop idx='263' >
<loop idx='505' inner_loop='1' main_loop='505' >
</loop>
</loop>
<loop idx='302' inner_loop='1' post_loop='264' >
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='412' nmethods='78' adapters='194' free_code_cache='250495872'/>
<task_done success='1' nmsize='504' count='5860' inlined_bytes='61' stamp='0.313'/>
</task>
<task compile_id='100' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='5640' iicount='5640' stamp='0.316'>
<type id='962' name='int'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1082' holder='1081' name='nextIndex' return='962' flags='2' bytes='56' compile_id='25' compiler='c1' level='3' iicount='5641'/>
<parse method='1082' uses='5641.000000' stamp='0.316'>
<bc code='155' bci='8'/>
<branch target_bci='31' taken='0' not_taken='5641' cnt='5641.000000' prob='never'/>
<bc code='180' bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='190' bci='22'/>
<uncommon_trap bci='22' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='161' bci='23'/>
<branch target_bci='49' taken='5500' not_taken='141' cnt='5641.000000' prob='0.975004'/>
<parse_done nodes='87' live='84' memory='32928' stamp='0.316'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='417' nmethods='81' adapters='194' free_code_cache='250492032'/>
<task_done success='1' nmsize='152' count='6440' stamp='0.321'/>
</task>
<task compile_id='103' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='7747' iicount='7747' stamp='0.321'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1082' holder='1081' name='hasNext' return='956' flags='1' bytes='13' compile_id='24' compiler='c1' level='3' iicount='7747'/>
<parse method='1082' uses='7747.000000' stamp='0.321'>
<bc code='158' bci='4'/>
<branch target_bci='11' taken='188' not_taken='7559' cnt='7747.000000' prob='0.0242675'/>
<parse_done nodes='37' live='36' memory='24864' stamp='0.321'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='421' nmethods='83' adapters='194' free_code_cache='250489472'/>
<task_done success='1' nmsize='120' count='7920' stamp='0.327'/>
</task>
<task compile_id='107' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='5535' backedge_count='5300' iicount='5538' stamp='0.334'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1082' holder='1081' name='next' return='969' flags='1' bytes='47' compile_id='74' compiler='c1' level='3' iicount='5543'/>
<klass id='1085' name='java.util.NoSuchElementException' unloaded='1'/>
<uncommon_trap method='1082' bci='39' reason='unloaded' action='reinterpret' index='11' debug_id='0' klass='1085'/>
<parse method='1082' uses='5543.000000' stamp='0.334'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1084' holder='1081' name='hasNext' return='956' flags='1' bytes='13' compile_id='103' compiler='c2' level='4' iicount='9541'/>
<call method='1084' count='5150' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1084' uses='5543.000000' stamp='0.334'>
<bc code='158' bci='4'/>
<branch target_bci='11' taken='185' not_taken='9354' cnt='9539.000000' prob='0.0193941'/>
<parse_done nodes='47' live='46' memory='26472' stamp='0.334'/>
</parse>
<bc code='153' bci='4'/>
<branch target_bci='39' taken='0' not_taken='5543' cnt='5543.000000' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='180' bci='11'/>
<uncommon_trap bci='11' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='15'/>
<type id='962' name='int'/>
<method id='1088' holder='1081' name='nextIndex' return='962' flags='2' bytes='56' compile_id='100' compiler='c2' level='4' iicount='6440'/>
<call method='1088' count='10083' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1088' uses='10852.000000' stamp='0.334'>
<bc code='155' bci='8'/>
<branch target_bci='31' taken='0' not_taken='6440' cnt='6440.000000' prob='never'/>
<bc code='190' bci='22'/>
<uncommon_trap bci='22' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='161' bci='23'/>
<branch target_bci='49' taken='6288' not_taken='152' cnt='6440.000000' prob='0.976398'/>
<parse_done nodes='141' live='136' memory='42776' stamp='0.335'/>
</parse>
<bc code='50' bci='18'/>
<uncommon_trap bci='18' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='199' bci='21'/>
<branch target_bci='27' taken='5543' not_taken='5309' cnt='10852.000000' prob='0.510781'/>
<uncommon_trap bci='21' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='21' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='180' bci='11'/>
<uncommon_trap bci='11' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='15'/>
<call method='1088' count='10083' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1088' uses='10852.000000' stamp='0.335'>
<bc code='155' bci='8'/>
<branch target_bci='31' taken='0' not_taken='6440' cnt='6440.000000' prob='never'/>
<bc code='190' bci='22'/>
<uncommon_trap bci='22' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='161' bci='23'/>
<branch target_bci='49' taken='6288' not_taken='152' cnt='6440.000000' prob='0.976398'/>
<parse_done nodes='305' live='293' memory='78056' stamp='0.335'/>
</parse>
<bc code='50' bci='18'/>
<uncommon_trap bci='18' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='199' bci='21'/>
<branch target_bci='27' taken='5543' not_taken='5309' cnt='5309.000000' prob='0.510781'/>
<parse_done nodes='349' live='335' memory='83984' stamp='0.335'/>
</parse>
<loop_tree>
<loop idx='356' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='356' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='356' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='356' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='356' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='428' nmethods='88' adapters='194' free_code_cache='250482944'/>
<task_done success='1' nmsize='312' count='5964' backedge_count='5721' inlined_bytes='125' stamp='0.340'/>
</task>
<task compile_id='109' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='6308' iicount='6308' stamp='0.340'>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='equals' return='956' arguments='969' flags='1' bytes='65' compile_id='13' compiler='c1' level='3' iicount='6361'/>
<klass id='1085' name='java.lang.StringUTF16' unloaded='1'/>
<uncommon_trap method='1081' bci='59' reason='unloaded' action='reinterpret' index='562' debug_id='0' klass='1085'/>
<parse method='1081' uses='6361.000000' stamp='0.340'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='5720' not_taken='641' cnt='6361.000000' prob='0.89923'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='153' bci='11'/>
<branch target_bci='63' taken='1445' not_taken='4275' cnt='5720.000000' prob='0.252622'/>
<bc code='192' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='make_not_entrant' debug_id='0'/>
<uncommon_trap bci='15' reason='speculate_class_check' action='maybe_recompile' debug_id='0'/>
<bc code='182' bci='20'/>
<type id='960' name='byte'/>
<method id='1083' holder='970' name='coder' return='960' flags='0' bytes='15' compile_id='10' compiler='c1' level='3' iicount='10691'/>
<call method='1083' count='3960' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1083' uses='4275.000000' stamp='0.340'>
<bc code='153' bci='3'/>
<branch target_bci='13' taken='0' not_taken='10691' cnt='10691.000000' prob='never'/>
<parse_done nodes='134' live='129' memory='41000' stamp='0.340'/>
</parse>
<bc code='182' bci='24'/>
<call method='1083' count='3960' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1083' uses='4275.000000' stamp='0.340'>
<bc code='153' bci='3'/>
<branch target_bci='13' taken='0' not_taken='10691' cnt='10691.000000' prob='never'/>
<parse_done nodes='158' live='152' memory='44608' stamp='0.340'/>
</parse>
<bc code='160' bci='27'/>
<branch target_bci='63' taken='0' not_taken='4275' cnt='4275.000000' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='182' bci='31'/>
<method id='1084' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='53' compiler='c2' level='4' iicount='12339'/>
<call method='1084' count='3960' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1084' uses='4275.000000' stamp='0.340'>
<bc code='153' bci='3'/>
<branch target_bci='17' taken='0' not_taken='12339' cnt='12339.000000' prob='never'/>
<bc code='154' bci='10'/>
<branch target_bci='17' taken='0' not_taken='12339' cnt='12339.000000' prob='never'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done nodes='205' live='196' memory='52328' stamp='0.340'/>
</parse>
<bc code='153' bci='34'/>
<branch target_bci='51' taken='0' not_taken='4275' cnt='4275.000000' prob='never'/>
<bc code='184' bci='45'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1087' name='java.lang.StringLatin1' flags='16'/>
<method id='1088' holder='1087' name='equals' return='956' arguments='1073 1073' flags='9' bytes='36' compile_id='14' compiler='c1' level='3' iicount='4462'/>
<call method='1088' count='3960' prof_factor='1.000000' inline='1'/>
<intrinsic id='_equalsL' nodes='15'/>
<parse_done nodes='237' live='226' memory='55960' stamp='0.341'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='432' nmethods='90' adapters='194' free_code_cache='250480512'/>
<task_done success='1' nmsize='504' count='6744' inlined_bytes='85' stamp='0.345'/>
</task>
<task compile_id='111' method='java.lang.module.ModuleDescriptor$Exports isQualified ()Z' bytes='18' count='6175' iicount='6175' stamp='0.345'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor$Exports' flags='25'/>
<method id='1082' holder='1081' name='isQualified' return='956' flags='1' bytes='18' compile_id='96' compiler='c1' level='3' iicount='6175'/>
<parse method='1082' uses='6175.000000' stamp='0.345'>
<bc code='185' bci='4'/>
<klass id='1084' name='java.util.Collections$EmptySet' flags='10'/>
<klass id='1085' name='java.util.ImmutableCollections$Set12' flags='24'/>
<klass id='1086' name='java.util.Set' flags='1537'/>
<method id='1087' holder='1086' name='isEmpty' return='956' flags='1025' bytes='0' iicount='1'/>
<call method='1087' count='5663' prof_factor='1.000000' virtual='1' inline='1' receiver='1084' receiver_count='2897' receiver2='1085' receiver2_count='2021'/>
<inline_fail reason='virtual call'/>
<virtual_call bci='4'/>
<bc code='154' bci='9'/>
<branch target_bci='16' taken='3159' not_taken='3016' cnt='6175.000000' prob='0.511579'/>
<parse_done nodes='58' live='57' memory='27776' stamp='0.345'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='437' nmethods='93' adapters='194' free_code_cache='250477952'/>
<task_done success='1' nmsize='152' count='6535' stamp='0.349'/>
</task>
<task compile_id='112' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='7011' iicount='7011' stamp='0.349'>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='hash' return='962' arguments='969' flags='24' bytes='20' compile_id='77' compiler='c1' level='3' iicount='7022'/>
<parse method='1082' uses='7022.000000' stamp='0.349'>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='7022' not_taken='0' cnt='7022.000000' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='182' bci='9'/>
<klass id='970' name='java.lang.String' flags='17'/>
<klass id='1084' name='jdk.internal.module.ModuleReferenceImpl' flags='1'/>
<method id='1085' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1085' count='6536' prof_factor='1.000000' virtual='1' inline='1' receiver='970' receiver_count='5446' receiver2='1084' receiver2_count='45'/>
<intrinsic id='_hashCode' virtual='1' nodes='55'/>
<parse_done nodes='100' live='98' memory='34360' stamp='0.349'/>
</parse>
<regalloc attempts='2' success='1'/>
<code_cache total_blobs='441' nmethods='95' adapters='194' free_code_cache='250475904'/>
<task_done success='1' nmsize='216' count='7533' stamp='0.353'/>
</task>
<task compile_id='115' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='5859' backedge_count='704' iicount='5859' stamp='0.353'>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='962' name='int'/>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='putVal' return='969' arguments='962 969 969 956 956' flags='16' bytes='300' compile_id='83' compiler='c1' level='3' iicount='5859'/>
<parse method='1082' uses='5859.000000' stamp='0.353'>
<bc code='198' bci='7'/>
<branch target_bci='19' taken='218' not_taken='5641' cnt='5859.000000' prob='0.0372077'/>
<bc code='154' bci='16'/>
<branch target_bci='29' taken='5641' not_taken='0' cnt='5641.000000' prob='always'/>
<uncommon_trap bci='16' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='182' bci='20'/>
<klass id='1087' name='[Ljava.util.HashMap$Node;' flags='1040'/>
<method id='1088' holder='1081' name='resize' return='1087' flags='16' bytes='356' compile_id='114' compiler='c1' level='3' iicount='471'/>
<call method='1088' count='199' prof_factor='1.000000' inline='1'/>
<inline_fail reason='hot method too big'/>
<direct_call bci='20'/>
<bc code='190' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='50' bci='40'/>
<uncommon_trap bci='40' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='199' bci='44'/>
<branch target_bci='63' taken='2142' not_taken='3717' cnt='5859.000000' prob='0.365591'/>
<bc code='182' bci='56'/>
<klass id='1084' name='java.util.LinkedHashMap' flags='1'/>
<klass id='1086' name='java.util.HashMap$Node' flags='8'/>
<method id='1093' holder='1081' name='newNode' return='1086' arguments='962 969 969 1086' flags='0' bytes='13' compile_id='87' compiler='c1' level='3' iicount='5795'/>
<call method='1093' count='3392' prof_factor='1.000000' virtual='1' inline='1' receiver='1081' receiver_count='3365' receiver2='1084' receiver2_count='27'/>
<call method='1093' count='3392' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<method id='1100' holder='1084' name='newNode' return='1086' arguments='962 969 969 1086' flags='0' bytes='23' iicount='63'/>
<call method='1100' count='3392' prof_factor='1.000000' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<predicted_call bci='56' klass='1081'/>
<virtual_call bci='56'/>
<parse method='1093' uses='3717.000000' stamp='0.354'>
<bc code='183' bci='9'/>
<type id='964' name='void'/>
<method id='1099' holder='1086' name='&lt;init&gt;' return='964' arguments='962 969 969 1086' flags='0' bytes='26' compile_id='85' compiler='c1' level='3' iicount='5858'/>
<call method='1099' count='5283' prof_factor='0.641415' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1099' uses='3717.000000' stamp='0.354'>
<bc code='183' bci='1'/>
<method id='1104' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='5731'/>
<call method='1104' count='5346' prof_factor='0.634517' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1104' uses='3717.000000' stamp='0.354'>
<parse_done nodes='235' live='231' memory='65088' stamp='0.354'/>
</parse>
<parse_done nodes='567' live='562' memory='129704' stamp='0.354'/>
</parse>
<parse_done nodes='567' live='561' memory='129832' stamp='0.354'/>
</parse>
<bc code='83' bci='59'/>
<uncommon_trap bci='59' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<uncommon_trap bci='59' reason='array_check' action='maybe_recompile' debug_id='0' klass='1087'/>
<cast_up reason='monomorphic_array' from='1087' to='(exact)'/>
<bc code='160' bci='69'/>
<branch target_bci='104' taken='2142' not_taken='0' cnt='2142.000000' prob='always'/>
<uncommon_trap bci='69' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='153' bci='109'/>
<branch target_bci='131' taken='2142' not_taken='0' cnt='2142.000000' prob='always'/>
<uncommon_trap bci='109' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='199' bci='142'/>
<branch target_bci='175' taken='723' not_taken='2142' cnt='2865.000000' prob='0.252356'/>
<uncommon_trap bci='142' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='142' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='142' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='180' bci='177'/>
<uncommon_trap bci='177' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='160' bci='181'/>
<branch target_bci='212' taken='723' not_taken='0' cnt='723.000000' prob='always'/>
<uncommon_trap bci='181' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='199' bci='142'/>
<branch target_bci='175' taken='723' not_taken='2142' cnt='723.000000' prob='0.252356'/>
<bc code='182' bci='152'/>
<call method='1093' count='1955' prof_factor='1.000000' virtual='1' inline='1' receiver='1081' receiver_count='1955'/>
<call method='1093' count='1955' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='152' klass='1081'/>
<uncommon_trap bci='152' reason='class_check' action='maybe_recompile' debug_id='0' comment='monomorphic vcall checkcast'/>
<parse method='1093' uses='2142.000000' stamp='0.354'>
<bc code='183' bci='9'/>
<call method='1099' count='5283' prof_factor='0.369629' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1099' uses='2142.000000' stamp='0.354'>
<bc code='183' bci='1'/>
<call method='1104' count='5346' prof_factor='0.365654' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1104' uses='2142.000000' stamp='0.354'>
<parse_done nodes='1006' live='989' memory='202208' stamp='0.354'/>
</parse>
<parse_done nodes='1324' live='1306' memory='272544' stamp='0.354'/>
</parse>
<parse_done nodes='1324' live='1305' memory='272672' stamp='0.354'/>
</parse>
<bc code='161' bci='162'/>
<branch target_bci='222' taken='2142' not_taken='0' cnt='2142.000000' prob='always'/>
<uncommon_trap bci='162' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<bc code='198' bci='224'/>
<branch target_bci='259' taken='2142' not_taken='0' cnt='2142.000000' prob='always'/>
<bc code='164' bci='284'/>
<branch target_bci='292' taken='5648' not_taken='211' cnt='5859.000000' prob='0.963987'/>
<bc code='182' bci='288'/>
<call method='1088' count='193' prof_factor='1.000000' inline='1'/>
<inline_fail reason='hot method too big'/>
<direct_call bci='288'/>
<bc code='182' bci='295'/>
<method id='1090' holder='1081' name='afterNodeInsertion' return='964' arguments='956' flags='0' bytes='1' compile_id='106' compiler='c1' level='1' iicount='3657'/>
<call method='1090' count='5347' prof_factor='1.000000' virtual='1' inline='1' receiver='1081' receiver_count='5320' receiver2='1084' receiver2_count='27'/>
<call method='1090' count='5347' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<method id='1107' holder='1084' name='afterNodeInsertion' return='964' arguments='956' flags='0' bytes='40' iicount='63'/>
<call method='1107' count='5347' prof_factor='1.000000' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<predicted_call bci='295' klass='1081'/>
<virtual_call bci='295'/>
<parse method='1090' uses='5859.000000' stamp='0.355'>
<parse_done nodes='1573' live='1552' memory='313720' stamp='0.355'/>
</parse>
<parse_done nodes='1590' live='1568' memory='317360' stamp='0.355'/>
</parse>
<loop_tree>
<loop idx='1626' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='1626' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='1626' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='1626' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='1626' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='1626' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='446' nmethods='98' adapters='194' free_code_cache='250458240'/>
<task_done success='1' nmsize='3000' count='5948' backedge_count='708' inlined_bytes='81' stamp='0.401'/>
</task>
<task compile_id='126' method='java.lang.String coder ()B' bytes='15' count='11780' iicount='11780' stamp='0.438'>
<type id='960' name='byte'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='coder' return='960' flags='0' bytes='15' compile_id='10' compiler='c1' level='3' iicount='11786'/>
<parse method='1081' uses='11786.000000' stamp='0.438'>
<bc code='153' bci='3'/>
<branch target_bci='13' taken='0' not_taken='11785' cnt='11785.000000' prob='never'/>
<parse_done nodes='39' live='38' memory='24928' stamp='0.438'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='451' nmethods='101' adapters='194' free_code_cache='250441728'/>
<task_done success='1' nmsize='88' count='11856' stamp='0.439'/>
</task>
<task compile_id='134' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='6672' iicount='6672' stamp='0.463'>
<klass id='1082' name='java.util.HashMap$Node' flags='8'/>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1083' holder='1081' name='newNode' return='1082' arguments='962 969 969 1082' flags='0' bytes='13' compile_id='87' compiler='c1' level='3' iicount='6674'/>
<parse method='1083' uses='6674.000000' stamp='0.463'>
<bc code='183' bci='9'/>
<type id='964' name='void'/>
<method id='1085' holder='1082' name='&lt;init&gt;' return='964' arguments='962 969 969 1082' flags='0' bytes='26' compile_id='85' compiler='c1' level='3' iicount='6755'/>
<call method='1085' count='6172' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1085' uses='6674.000000' stamp='0.463'>
<bc code='183' bci='1'/>
<method id='1086' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='7520'/>
<call method='1086' count='6269' prof_factor='0.988009' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1086' uses='6674.000000' stamp='0.463'>
<parse_done nodes='90' live='89' memory='36768' stamp='0.463'/>
</parse>
<parse_done nodes='520' live='518' memory='119040' stamp='0.464'/>
</parse>
<parse_done nodes='520' live='517' memory='119168' stamp='0.464'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='457' nmethods='105' adapters='194' free_code_cache='250427904'/>
<task_done success='1' nmsize='792' count='6718' inlined_bytes='27' stamp='0.473'/>
</task>
<task compile_id='143' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='1541' iicount='1541' stamp='0.515'>
<type id='962' name='int'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.util.zip.ZipUtils' flags='0'/>
<method id='1082' holder='1081' name='SH' return='962' arguments='1073 962' flags='24' bytes='21' compile_id='141' compiler='c1' level='3' iicount='1541'/>
<parse method='1082' uses='1541.000000' stamp='0.515'>
<bc code='51' bci='2'/>
<uncommon_trap bci='2' reason='null_check' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='2' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='51' bci='11'/>
<uncommon_trap bci='11' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<parse_done nodes='92' live='88' memory='33744' stamp='0.515'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='519' nmethods='123' adapters='236' free_code_cache='250381568'/>
<task_done success='1' nmsize='184' count='2271' stamp='0.520'/>
</task>
</compilation_log>
<compilation_log thread='15875'>
<start_compile_thread name='C1 CompilerThread0' thread='15875' process='47175' stamp='0.052'/>
<task compile_id='1' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='256' iicount='256' level='3' stamp='0.055'>
<phase name='setup' stamp='0.055'>
<phase_done name='setup' stamp='0.055'/>
</phase>
<phase name='buildIR' stamp='0.055'>
<klass id='1082' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1083' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<type id='962' name='int'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1084' holder='1081' name='tabAt' return='1082' arguments='1083 962' flags='24' bytes='22' iicount='256'/>
<parse method='1084'  stamp='0.055'>
<phase name='parse_hir' stamp='0.055'>
<bc code='182' bci='15'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='963' name='long'/>
<klass id='1040' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1088' holder='1040' name='getObjectAcquire' return='969' arguments='969 963' flags='17' bytes='7' iicount='256'/>
<call method='1088' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1088'>
<bc code='182' bci='3'/>
<method id='1090' holder='1040' name='getObjectVolatile' return='969' arguments='969 963' flags='257' bytes='0' compile_id='3' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1090' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.055'/>
</parse>
<phase_done name='parse_hir' stamp='0.055'/>
</phase>
<parse_done stamp='0.055'/>
</parse>
<phase name='optimize_blocks' stamp='0.055'>
<phase_done name='optimize_blocks' stamp='0.055'/>
</phase>
<phase name='gvn' stamp='0.055'>
<phase_done name='gvn' stamp='0.055'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.055'>
<phase_done name='rangeCheckElimination' stamp='0.055'/>
</phase>
<phase name='optimize_null_checks' stamp='0.055'>
<phase_done name='optimize_null_checks' stamp='0.055'/>
</phase>
<phase_done name='buildIR' stamp='0.055'/>
</phase>
<phase name='emit_lir' stamp='0.055'>
<phase name='lirGeneration' stamp='0.055'>
<phase_done name='lirGeneration' stamp='0.056'/>
</phase>
<phase name='linearScan' stamp='0.056'>
<phase_done name='linearScan' stamp='0.056'/>
</phase>
<phase_done name='emit_lir' stamp='0.056'/>
</phase>
<phase name='codeemit' stamp='0.056'>
<phase_done name='codeemit' stamp='0.056'/>
</phase>
<phase name='codeinstall' stamp='0.056'>
<phase_done name='codeinstall' stamp='0.063'/>
</phase>
<code_cache total_blobs='259' nmethods='2' adapters='126' free_code_cache='250664064'/>
<task_done success='1' nmsize='848' count='259' inlined_bytes='7' stamp='0.067'/>
</task>
<task compile_id='4' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='513' iicount='513' level='3' stamp='0.067'>
<phase name='setup' stamp='0.067'>
<phase_done name='setup' stamp='0.067'/>
</phase>
<phase name='buildIR' stamp='0.067'>
<type id='964' name='void'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<method id='1081' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' iicount='518'/>
<parse method='1081'  stamp='0.067'>
<phase name='parse_hir' stamp='0.067'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='969'/>
<phase_done name='parse_hir' stamp='0.067'/>
</phase>
<parse_done stamp='0.067'/>
</parse>
<phase name='optimize_blocks' stamp='0.067'>
<phase_done name='optimize_blocks' stamp='0.067'/>
</phase>
<phase name='gvn' stamp='0.067'>
<phase_done name='gvn' stamp='0.067'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.067'>
<phase_done name='rangeCheckElimination' stamp='0.067'/>
</phase>
<phase name='optimize_null_checks' stamp='0.067'>
<phase_done name='optimize_null_checks' stamp='0.067'/>
</phase>
<phase_done name='buildIR' stamp='0.067'/>
</phase>
<phase name='emit_lir' stamp='0.067'>
<phase name='lirGeneration' stamp='0.067'>
<phase_done name='lirGeneration' stamp='0.067'/>
</phase>
<phase name='linearScan' stamp='0.067'>
<phase_done name='linearScan' stamp='0.067'/>
</phase>
<phase_done name='emit_lir' stamp='0.067'/>
</phase>
<phase name='codeemit' stamp='0.067'>
<phase_done name='codeemit' stamp='0.067'/>
</phase>
<phase name='codeinstall' stamp='0.067'>
<dependency type='no_finalizable_subclasses' ctxk='969'/>
<phase_done name='codeinstall' stamp='0.067'/>
</phase>
<code_cache total_blobs='265' nmethods='3' adapters='131' free_code_cache='250659968'/>
<task_done success='1' nmsize='336' count='655' stamp='0.068'/>
</task>
<task compile_id='5' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='206' backedge_count='3849' iicount='206' level='3' stamp='0.068'>
<phase name='setup' stamp='0.068'>
<phase_done name='setup' stamp='0.068'/>
</phase>
<phase name='buildIR' stamp='0.068'>
<type id='962' name='int'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.lang.StringLatin1' flags='16'/>
<method id='1082' holder='1081' name='hashCode' return='962' arguments='1073' flags='9' bytes='42' iicount='212'/>
<parse method='1082'  stamp='0.068'>
<phase name='parse_hir' stamp='0.068'>
<phase_done name='parse_hir' stamp='0.068'/>
</phase>
<parse_done stamp='0.068'/>
</parse>
<phase name='optimize_blocks' stamp='0.068'>
<phase_done name='optimize_blocks' stamp='0.068'/>
</phase>
<phase name='gvn' stamp='0.068'>
<phase_done name='gvn' stamp='0.068'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.068'>
<phase_done name='rangeCheckElimination' stamp='0.068'/>
</phase>
<phase name='optimize_null_checks' stamp='0.068'>
<phase_done name='optimize_null_checks' stamp='0.068'/>
</phase>
<phase_done name='buildIR' stamp='0.068'/>
</phase>
<phase name='emit_lir' stamp='0.068'>
<phase name='lirGeneration' stamp='0.068'>
<phase_done name='lirGeneration' stamp='0.069'/>
</phase>
<phase name='linearScan' stamp='0.069'>
<phase_done name='linearScan' stamp='0.069'/>
</phase>
<phase_done name='emit_lir' stamp='0.069'/>
</phase>
<phase name='codeemit' stamp='0.069'>
<phase_done name='codeemit' stamp='0.069'/>
</phase>
<phase name='codeinstall' stamp='0.069'>
<phase_done name='codeinstall' stamp='0.069'/>
</phase>
<code_cache total_blobs='266' nmethods='4' adapters='131' free_code_cache='250658560'/>
<task_done success='1' nmsize='528' count='327' backedge_count='6841' stamp='0.071'/>
</task>
<task compile_id='6' method='java.lang.String hashCode ()I' bytes='49' count='638' iicount='638' level='3' stamp='0.071'>
<phase name='setup' stamp='0.072'>
<phase_done name='setup' stamp='0.072'/>
</phase>
<phase name='buildIR' stamp='0.072'>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='hashCode' return='962' flags='1' bytes='49' iicount='640'/>
<parse method='1081'  stamp='0.072'>
<phase name='parse_hir' stamp='0.072'>
<bc code='182' bci='19'/>
<type id='956' name='boolean'/>
<method id='1083' holder='970' name='isLatin1' return='956' flags='2' bytes='19' iicount='583'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.072'/>
</parse>
<bc code='184' bci='29'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1086' name='java.lang.StringLatin1' flags='16'/>
<method id='1087' holder='1086' name='hashCode' return='962' arguments='1073' flags='9' bytes='42' compile_id='5' compiler='c1' level='3' iicount='346'/>
<call method='1087' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='39'/>
<klass id='1089' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1090' holder='1089' name='hashCode' return='962' arguments='1073' unloaded='1'/>
<call method='1090' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.072'/>
</phase>
<parse_done stamp='0.072'/>
</parse>
<phase name='optimize_blocks' stamp='0.072'>
<phase_done name='optimize_blocks' stamp='0.072'/>
</phase>
<phase name='gvn' stamp='0.072'>
<phase_done name='gvn' stamp='0.072'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.072'>
<phase_done name='rangeCheckElimination' stamp='0.072'/>
</phase>
<phase name='optimize_null_checks' stamp='0.072'>
<phase_done name='optimize_null_checks' stamp='0.072'/>
</phase>
<phase_done name='buildIR' stamp='0.072'/>
</phase>
<phase name='emit_lir' stamp='0.072'>
<phase name='lirGeneration' stamp='0.072'>
<phase_done name='lirGeneration' stamp='0.072'/>
</phase>
<phase name='linearScan' stamp='0.072'>
<phase_done name='linearScan' stamp='0.072'/>
</phase>
<phase_done name='emit_lir' stamp='0.072'/>
</phase>
<phase name='codeemit' stamp='0.072'>
<phase_done name='codeemit' stamp='0.072'/>
</phase>
<phase name='codeinstall' stamp='0.072'>
<phase_done name='codeinstall' stamp='0.072'/>
</phase>
<code_cache total_blobs='267' nmethods='5' adapters='131' free_code_cache='250656512'/>
<task_done success='1' nmsize='856' count='825' inlined_bytes='19' stamp='0.076'/>
</task>
<task compile_id='11' method='java.util.ImmutableCollections$SetN probe (Ljava/lang/Object;)I' bytes='56' count='515' backedge_count='194' iicount='515' level='3' stamp='0.076'>
<phase name='setup' stamp='0.076'>
<phase_done name='setup' stamp='0.076'/>
</phase>
<phase name='buildIR' stamp='0.076'>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN' flags='24'/>
<method id='1082' holder='1081' name='probe' return='962' arguments='969' flags='2' bytes='56' iicount='540'/>
<parse method='1082'  stamp='0.076'>
<phase name='parse_hir' stamp='0.076'>
<bc code='182' bci='1'/>
<method id='1084' holder='969' name='hashCode' return='962' flags='257' bytes='0' iicount='1'/>
<call method='1084' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='9'/>
<klass id='1086' name='java.lang.Math' flags='17'/>
<method id='1087' holder='1086' name='floorMod' return='962' arguments='962 962' flags='9' bytes='10' iicount='608'/>
<call method='1087' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1087'>
<bc code='184' bci='3'/>
<method id='1089' holder='1086' name='floorDiv' return='962' arguments='962 962' flags='9' bytes='22' iicount='608'/>
<call method='1089' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<parse_done stamp='0.076'/>
</parse>
<parse_done stamp='0.076'/>
</parse>
<bc code='182' bci='31'/>
<type id='956' name='boolean'/>
<method id='1091' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='1'/>
<call method='1091' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.076'/>
</phase>
<parse_done stamp='0.076'/>
</parse>
<phase name='optimize_blocks' stamp='0.076'>
<phase_done name='optimize_blocks' stamp='0.076'/>
</phase>
<phase name='gvn' stamp='0.076'>
<phase_done name='gvn' stamp='0.076'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.076'>
<phase_done name='rangeCheckElimination' stamp='0.076'/>
</phase>
<phase name='optimize_null_checks' stamp='0.076'>
<phase_done name='optimize_null_checks' stamp='0.076'/>
</phase>
<phase_done name='buildIR' stamp='0.076'/>
</phase>
<phase name='emit_lir' stamp='0.076'>
<phase name='lirGeneration' stamp='0.076'>
<phase_done name='lirGeneration' stamp='0.076'/>
</phase>
<phase name='linearScan' stamp='0.076'>
<phase_done name='linearScan' stamp='0.076'/>
</phase>
<phase_done name='emit_lir' stamp='0.076'/>
</phase>
<phase name='codeemit' stamp='0.076'>
<phase_done name='codeemit' stamp='0.076'/>
</phase>
<phase name='codeinstall' stamp='0.076'>
<phase_done name='codeinstall' stamp='0.076'/>
</phase>
<code_cache total_blobs='268' nmethods='6' adapters='131' free_code_cache='250653440'/>
<task_done success='1' nmsize='1560' count='843' backedge_count='410' inlined_bytes='32' stamp='0.084'/>
</task>
<task compile_id='7' method='java.lang.String isLatin1 ()Z' bytes='19' count='1227' iicount='1227' level='3' stamp='0.084'>
<phase name='setup' stamp='0.084'>
<phase_done name='setup' stamp='0.084'/>
</phase>
<phase name='buildIR' stamp='0.084'>
<type id='956' name='boolean'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='isLatin1' return='956' flags='2' bytes='19' iicount='1234'/>
<parse method='1081'  stamp='0.084'>
<phase name='parse_hir' stamp='0.084'>
<phase_done name='parse_hir' stamp='0.084'/>
</phase>
<parse_done stamp='0.084'/>
</parse>
<phase name='optimize_blocks' stamp='0.084'>
<phase_done name='optimize_blocks' stamp='0.084'/>
</phase>
<phase name='gvn' stamp='0.084'>
<phase_done name='gvn' stamp='0.084'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.084'>
<phase_done name='rangeCheckElimination' stamp='0.084'/>
</phase>
<phase name='optimize_null_checks' stamp='0.084'>
<phase_done name='optimize_null_checks' stamp='0.084'/>
</phase>
<phase_done name='buildIR' stamp='0.084'/>
</phase>
<phase name='emit_lir' stamp='0.084'>
<phase name='lirGeneration' stamp='0.084'>
<phase_done name='lirGeneration' stamp='0.084'/>
</phase>
<phase name='linearScan' stamp='0.084'>
<phase_done name='linearScan' stamp='0.084'/>
</phase>
<phase_done name='emit_lir' stamp='0.084'/>
</phase>
<phase name='codeemit' stamp='0.084'>
<phase_done name='codeemit' stamp='0.084'/>
</phase>
<phase name='codeinstall' stamp='0.084'>
<phase_done name='codeinstall' stamp='0.084'/>
</phase>
<code_cache total_blobs='270' nmethods='7' adapters='131' free_code_cache='250649984'/>
<task_done success='1' nmsize='464' count='1564' stamp='0.086'/>
</task>
<task compile_id='14' method='java.lang.StringLatin1 equals ([B[B)Z' bytes='36' count='594' backedge_count='456' iicount='594' level='3' stamp='0.086'>
<phase name='setup' stamp='0.086'>
<phase_done name='setup' stamp='0.086'/>
</phase>
<phase name='buildIR' stamp='0.086'>
<type id='956' name='boolean'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.lang.StringLatin1' flags='16'/>
<method id='1082' holder='1081' name='equals' return='956' arguments='1073 1073' flags='9' bytes='36' iicount='597'/>
<parse method='1082'  stamp='0.086'>
<phase name='parse_hir' stamp='0.086'>
<phase_done name='parse_hir' stamp='0.086'/>
</phase>
<parse_done stamp='0.086'/>
</parse>
<phase name='optimize_blocks' stamp='0.086'>
<phase_done name='optimize_blocks' stamp='0.086'/>
</phase>
<phase name='gvn' stamp='0.086'>
<phase_done name='gvn' stamp='0.086'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.086'>
<phase_done name='rangeCheckElimination' stamp='0.086'/>
</phase>
<phase name='optimize_null_checks' stamp='0.086'>
<phase_done name='optimize_null_checks' stamp='0.086'/>
</phase>
<phase_done name='buildIR' stamp='0.086'/>
</phase>
<phase name='emit_lir' stamp='0.086'>
<phase name='lirGeneration' stamp='0.086'>
<phase_done name='lirGeneration' stamp='0.086'/>
</phase>
<phase name='linearScan' stamp='0.086'>
<phase_done name='linearScan' stamp='0.086'/>
</phase>
<phase_done name='emit_lir' stamp='0.086'/>
</phase>
<phase name='codeemit' stamp='0.086'>
<phase_done name='codeemit' stamp='0.086'/>
</phase>
<phase name='codeinstall' stamp='0.086'>
<phase_done name='codeinstall' stamp='0.086'/>
</phase>
<code_cache total_blobs='271' nmethods='8' adapters='131' free_code_cache='250648192'/>
<task_done success='1' nmsize='688' count='818' backedge_count='706' stamp='0.090'/>
</task>
<task compile_id='8' method='java.lang.Math floorMod (II)I' bytes='10' count='1593' iicount='1593' level='3' stamp='0.090'>
<phase name='setup' stamp='0.090'>
<phase_done name='setup' stamp='0.090'/>
</phase>
<phase name='buildIR' stamp='0.090'>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.Math' flags='17'/>
<method id='1082' holder='1081' name='floorMod' return='962' arguments='962 962' flags='9' bytes='10' iicount='1595'/>
<parse method='1082'  stamp='0.090'>
<phase name='parse_hir' stamp='0.090'>
<bc code='184' bci='3'/>
<method id='1084' holder='1081' name='floorDiv' return='962' arguments='962 962' flags='9' bytes='22' iicount='1610'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<parse_done stamp='0.090'/>
</parse>
<phase_done name='parse_hir' stamp='0.090'/>
</phase>
<parse_done stamp='0.090'/>
</parse>
<phase name='optimize_blocks' stamp='0.090'>
<phase_done name='optimize_blocks' stamp='0.090'/>
</phase>
<phase name='gvn' stamp='0.090'>
<phase_done name='gvn' stamp='0.090'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.090'>
<phase_done name='rangeCheckElimination' stamp='0.090'/>
</phase>
<phase name='optimize_null_checks' stamp='0.090'>
<phase_done name='optimize_null_checks' stamp='0.090'/>
</phase>
<phase_done name='buildIR' stamp='0.090'/>
</phase>
<phase name='emit_lir' stamp='0.090'>
<phase name='lirGeneration' stamp='0.090'>
<phase_done name='lirGeneration' stamp='0.090'/>
</phase>
<phase name='linearScan' stamp='0.090'>
<phase_done name='linearScan' stamp='0.090'/>
</phase>
<phase_done name='emit_lir' stamp='0.090'/>
</phase>
<phase name='codeemit' stamp='0.090'>
<phase_done name='codeemit' stamp='0.090'/>
</phase>
<phase name='codeinstall' stamp='0.090'>
<phase_done name='codeinstall' stamp='0.092'/>
</phase>
<code_cache total_blobs='275' nmethods='10' adapters='131' free_code_cache='250645376'/>
<task_done success='1' nmsize='592' count='1648' inlined_bytes='22' stamp='0.095'/>
</task>
<task compile_id='18' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1542' iicount='1542' level='1' stamp='0.095'>
<phase name='setup' stamp='0.095'>
<phase_done name='setup' stamp='0.095'/>
</phase>
<phase name='buildIR' stamp='0.095'>
<type id='964' name='void'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<method id='1081' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='4' compiler='c1' level='3' iicount='1550'/>
<parse method='1081'  stamp='0.095'>
<phase name='parse_hir' stamp='0.095'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='969'/>
<phase_done name='parse_hir' stamp='0.095'/>
</phase>
<parse_done stamp='0.095'/>
</parse>
<phase name='optimize_blocks' stamp='0.095'>
<phase_done name='optimize_blocks' stamp='0.095'/>
</phase>
<phase name='gvn' stamp='0.095'>
<phase_done name='gvn' stamp='0.095'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.095'>
<phase_done name='rangeCheckElimination' stamp='0.095'/>
</phase>
<phase name='optimize_null_checks' stamp='0.095'>
<phase_done name='optimize_null_checks' stamp='0.095'/>
</phase>
<phase_done name='buildIR' stamp='0.095'/>
</phase>
<phase name='emit_lir' stamp='0.095'>
<phase name='lirGeneration' stamp='0.095'>
<phase_done name='lirGeneration' stamp='0.095'/>
</phase>
<phase name='linearScan' stamp='0.095'>
<phase_done name='linearScan' stamp='0.095'/>
</phase>
<phase_done name='emit_lir' stamp='0.095'/>
</phase>
<phase name='codeemit' stamp='0.095'>
<phase_done name='codeemit' stamp='0.095'/>
</phase>
<phase name='codeinstall' stamp='0.095'>
<dependency type='no_finalizable_subclasses' ctxk='969'/>
<phase_done name='codeinstall' stamp='0.095'/>
</phase>
<code_cache total_blobs='276' nmethods='11' adapters='131' free_code_cache='250644480'/>
<task_done success='1' nmsize='272' count='1626' stamp='0.096'/>
</task>
<task compile_id='10' method='java.lang.String coder ()B' bytes='15' count='1819' iicount='1819' level='3' stamp='0.096'>
<phase name='setup' stamp='0.096'>
<phase_done name='setup' stamp='0.096'/>
</phase>
<phase name='buildIR' stamp='0.096'>
<type id='960' name='byte'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='coder' return='960' flags='0' bytes='15' iicount='1819'/>
<parse method='1081'  stamp='0.096'>
<phase name='parse_hir' stamp='0.096'>
<phase_done name='parse_hir' stamp='0.096'/>
</phase>
<parse_done stamp='0.096'/>
</parse>
<phase name='optimize_blocks' stamp='0.096'>
<phase_done name='optimize_blocks' stamp='0.096'/>
</phase>
<phase name='gvn' stamp='0.096'>
<phase_done name='gvn' stamp='0.096'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.096'>
<phase_done name='rangeCheckElimination' stamp='0.096'/>
</phase>
<phase name='optimize_null_checks' stamp='0.096'>
<phase_done name='optimize_null_checks' stamp='0.096'/>
</phase>
<phase_done name='buildIR' stamp='0.096'/>
</phase>
<phase name='emit_lir' stamp='0.096'>
<phase name='lirGeneration' stamp='0.096'>
<phase_done name='lirGeneration' stamp='0.096'/>
</phase>
<phase name='linearScan' stamp='0.096'>
<phase_done name='linearScan' stamp='0.096'/>
</phase>
<phase_done name='emit_lir' stamp='0.096'/>
</phase>
<phase name='codeemit' stamp='0.096'>
<phase_done name='codeemit' stamp='0.096'/>
</phase>
<phase name='codeinstall' stamp='0.096'>
<phase_done name='codeinstall' stamp='0.096'/>
</phase>
<code_cache total_blobs='277' nmethods='12' adapters='131' free_code_cache='250643456'/>
<task_done success='1' nmsize='400' count='1969' stamp='0.098'/>
</task>
<task compile_id='17' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='752' iicount='752' level='3' stamp='0.098'>
<phase name='setup' stamp='0.098'>
<phase_done name='setup' stamp='0.098'/>
</phase>
<phase name='buildIR' stamp='0.098'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.Objects' flags='17'/>
<method id='1082' holder='1081' name='requireNonNull' return='969' arguments='969' flags='9' bytes='14' iicount='766'/>
<parse method='1082'  stamp='0.098'>
<phase name='parse_hir' stamp='0.098'>
<bc code='183' bci='8'/>
<type id='964' name='void'/>
<klass id='1077' name='java.lang.NullPointerException' flags='1'/>
<method id='1084' holder='1077' name='&lt;init&gt;' return='964' flags='1' bytes='5' iicount='1'/>
<call method='1084' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<phase_done name='parse_hir' stamp='0.098'/>
</phase>
<parse_done stamp='0.098'/>
</parse>
<phase name='optimize_blocks' stamp='0.098'>
<phase_done name='optimize_blocks' stamp='0.098'/>
</phase>
<phase name='gvn' stamp='0.098'>
<phase_done name='gvn' stamp='0.098'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.098'>
<phase_done name='rangeCheckElimination' stamp='0.098'/>
</phase>
<phase name='optimize_null_checks' stamp='0.098'>
<phase_done name='optimize_null_checks' stamp='0.098'/>
</phase>
<phase_done name='buildIR' stamp='0.098'/>
</phase>
<phase name='emit_lir' stamp='0.098'>
<phase name='lirGeneration' stamp='0.098'>
<phase_done name='lirGeneration' stamp='0.098'/>
</phase>
<phase name='linearScan' stamp='0.098'>
<phase_done name='linearScan' stamp='0.098'/>
</phase>
<phase_done name='emit_lir' stamp='0.098'/>
</phase>
<phase name='codeemit' stamp='0.098'>
<phase_done name='codeemit' stamp='0.098'/>
</phase>
<phase name='codeinstall' stamp='0.098'>
<phase_done name='codeinstall' stamp='0.098'/>
</phase>
<code_cache total_blobs='278' nmethods='13' adapters='131' free_code_cache='250642048'/>
<task_done success='1' nmsize='584' count='864' stamp='0.100'/>
</task>
<task compile_id='9' method='java.lang.Math floorDiv (II)I' bytes='22' count='1807' iicount='1807' level='3' stamp='0.100'>
<phase name='setup' stamp='0.100'>
<phase_done name='setup' stamp='0.100'/>
</phase>
<phase name='buildIR' stamp='0.100'>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.Math' flags='17'/>
<method id='1082' holder='1081' name='floorDiv' return='962' arguments='962 962' flags='9' bytes='22' iicount='1813'/>
<parse method='1082'  stamp='0.100'>
<phase name='parse_hir' stamp='0.100'>
<phase_done name='parse_hir' stamp='0.100'/>
</phase>
<parse_done stamp='0.100'/>
</parse>
<phase name='optimize_blocks' stamp='0.100'>
<phase_done name='optimize_blocks' stamp='0.100'/>
</phase>
<phase name='gvn' stamp='0.100'>
<phase_done name='gvn' stamp='0.100'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.100'>
<phase_done name='rangeCheckElimination' stamp='0.100'/>
</phase>
<phase name='optimize_null_checks' stamp='0.100'>
<phase_done name='optimize_null_checks' stamp='0.100'/>
</phase>
<phase_done name='buildIR' stamp='0.100'/>
</phase>
<phase name='emit_lir' stamp='0.100'>
<phase name='lirGeneration' stamp='0.100'>
<phase_done name='lirGeneration' stamp='0.100'/>
</phase>
<phase name='linearScan' stamp='0.100'>
<phase_done name='linearScan' stamp='0.101'/>
</phase>
<phase_done name='emit_lir' stamp='0.101'/>
</phase>
<phase name='codeemit' stamp='0.101'>
<phase_done name='codeemit' stamp='0.101'/>
</phase>
<phase name='codeinstall' stamp='0.101'>
<phase_done name='codeinstall' stamp='0.101'/>
</phase>
<code_cache total_blobs='279' nmethods='14' adapters='131' free_code_cache='250640896'/>
<task_done success='1' nmsize='464' count='1890' stamp='0.103'/>
</task>
<task compile_id='13' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='1027' iicount='1027' level='3' stamp='0.103'>
<phase name='setup' stamp='0.103'>
<phase_done name='setup' stamp='0.103'/>
</phase>
<phase name='buildIR' stamp='0.103'>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='equals' return='956' arguments='969' flags='1' bytes='65' iicount='1027'/>
<parse method='1081'  stamp='0.103'>
<phase name='parse_hir' stamp='0.103'>
<bc code='182' bci='20'/>
<type id='960' name='byte'/>
<method id='1083' holder='970' name='coder' return='960' flags='0' bytes='15' compile_id='10' compiler='c1' level='3' iicount='2234'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.103'/>
</parse>
<bc code='182' bci='24'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.103'/>
</parse>
<bc code='182' bci='31'/>
<method id='1086' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='7' compiler='c1' level='3' iicount='2797'/>
<call method='1086' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1086'>
<parse_done stamp='0.103'/>
</parse>
<bc code='184' bci='45'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1088' name='java.lang.StringLatin1' flags='16'/>
<method id='1089' holder='1088' name='equals' return='956' arguments='1073 1073' flags='9' bytes='36' compile_id='14' compiler='c1' level='3' iicount='955'/>
<call method='1089' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='59'/>
<klass id='1091' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1092' holder='1091' name='equals' return='956' arguments='1073 1073' unloaded='1'/>
<call method='1092' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.103'/>
</phase>
<parse_done stamp='0.103'/>
</parse>
<phase name='optimize_blocks' stamp='0.103'>
<phase_done name='optimize_blocks' stamp='0.103'/>
</phase>
<phase name='gvn' stamp='0.103'>
<phase_done name='gvn' stamp='0.103'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.103'>
<phase_done name='rangeCheckElimination' stamp='0.103'/>
</phase>
<phase name='optimize_null_checks' stamp='0.103'>
<phase_done name='optimize_null_checks' stamp='0.103'/>
</phase>
<phase_done name='buildIR' stamp='0.103'/>
</phase>
<phase name='emit_lir' stamp='0.103'>
<phase name='lirGeneration' stamp='0.103'>
<phase_done name='lirGeneration' stamp='0.103'/>
</phase>
<phase name='linearScan' stamp='0.103'>
<phase_done name='linearScan' stamp='0.103'/>
</phase>
<phase_done name='emit_lir' stamp='0.103'/>
</phase>
<phase name='codeemit' stamp='0.103'>
<phase_done name='codeemit' stamp='0.103'/>
</phase>
<phase name='codeinstall' stamp='0.103'>
<phase_done name='codeinstall' stamp='0.103'/>
</phase>
<code_cache total_blobs='281' nmethods='15' adapters='132' free_code_cache='250637056'/>
<task_done success='1' nmsize='1720' count='1032' inlined_bytes='49' stamp='0.109'/>
</task>
<task compile_id='16' method='java.util.Collections emptySet ()Ljava/util/Set;' bytes='4' count='650' iicount='650' level='3' stamp='0.109'>
<phase name='setup' stamp='0.109'>
<phase_done name='setup' stamp='0.109'/>
</phase>
<phase name='buildIR' stamp='0.109'>
<klass id='1082' name='java.util.Set' flags='1537'/>
<klass id='1081' name='java.util.Collections' flags='1'/>
<method id='1083' holder='1081' name='emptySet' return='1082' flags='25' bytes='4' iicount='650'/>
<parse method='1083'  stamp='0.109'>
<phase name='parse_hir' stamp='0.109'>
<phase_done name='parse_hir' stamp='0.109'/>
</phase>
<parse_done stamp='0.109'/>
</parse>
<phase name='optimize_blocks' stamp='0.109'>
<phase_done name='optimize_blocks' stamp='0.109'/>
</phase>
<phase name='gvn' stamp='0.109'>
<phase_done name='gvn' stamp='0.109'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.109'>
<phase_done name='rangeCheckElimination' stamp='0.109'/>
</phase>
<phase name='optimize_null_checks' stamp='0.109'>
<phase_done name='optimize_null_checks' stamp='0.109'/>
</phase>
<phase_done name='buildIR' stamp='0.109'/>
</phase>
<phase name='emit_lir' stamp='0.109'>
<phase name='lirGeneration' stamp='0.109'>
<phase_done name='lirGeneration' stamp='0.109'/>
</phase>
<phase name='linearScan' stamp='0.109'>
<phase_done name='linearScan' stamp='0.109'/>
</phase>
<phase_done name='emit_lir' stamp='0.109'/>
</phase>
<phase name='codeemit' stamp='0.109'>
<phase_done name='codeemit' stamp='0.109'/>
</phase>
<phase name='codeinstall' stamp='0.109'>
<phase_done name='codeinstall' stamp='0.109'/>
</phase>
<code_cache total_blobs='289' nmethods='16' adapters='139' free_code_cache='250631680'/>
<task_done success='1' nmsize='336' count='650' stamp='0.111'/>
</task>
<task compile_id='23' method='java.lang.StringLatin1 charAt ([BI)C' bytes='28' count='737' iicount='737' level='3' stamp='0.111'>
<phase name='setup' stamp='0.111'>
<phase_done name='setup' stamp='0.111'/>
</phase>
<phase name='buildIR' stamp='0.111'>
<type id='957' name='char'/>
<klass id='1073' name='[B' flags='1041'/>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.StringLatin1' flags='16'/>
<method id='1082' holder='1081' name='charAt' return='957' arguments='1073 962' flags='9' bytes='28' iicount='737'/>
<parse method='1082'  stamp='0.111'>
<phase name='parse_hir' stamp='0.111'>
<bc code='183' bci='15'/>
<type id='964' name='void'/>
<klass id='1084' name='java.lang.StringIndexOutOfBoundsException' unloaded='1'/>
<method id='1085' holder='1084' name='&lt;init&gt;' return='964' arguments='962' unloaded='1'/>
<call method='1085' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.111'/>
</phase>
<parse_done stamp='0.111'/>
</parse>
<phase name='optimize_blocks' stamp='0.111'>
<phase_done name='optimize_blocks' stamp='0.111'/>
</phase>
<phase name='gvn' stamp='0.111'>
<phase_done name='gvn' stamp='0.111'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.111'>
<phase_done name='rangeCheckElimination' stamp='0.111'/>
</phase>
<phase name='optimize_null_checks' stamp='0.111'>
<phase_done name='optimize_null_checks' stamp='0.111'/>
</phase>
<phase_done name='buildIR' stamp='0.111'/>
</phase>
<phase name='emit_lir' stamp='0.111'>
<phase name='lirGeneration' stamp='0.111'>
<phase_done name='lirGeneration' stamp='0.111'/>
</phase>
<phase name='linearScan' stamp='0.111'>
<phase_done name='linearScan' stamp='0.111'/>
</phase>
<phase_done name='emit_lir' stamp='0.111'/>
</phase>
<phase name='codeemit' stamp='0.111'>
<phase_done name='codeemit' stamp='0.111'/>
</phase>
<phase name='codeinstall' stamp='0.111'>
<phase_done name='codeinstall' stamp='0.111'/>
</phase>
<code_cache total_blobs='291' nmethods='17' adapters='140' free_code_cache='250629632'/>
<task_done success='1' nmsize='584' count='737' stamp='0.114'/>
</task>
<task compile_id='22' method='java.lang.String charAt (I)C' bytes='25' count='737' iicount='737' level='3' stamp='0.114'>
<phase name='setup' stamp='0.114'>
<phase_done name='setup' stamp='0.114'/>
</phase>
<phase name='buildIR' stamp='0.114'>
<type id='957' name='char'/>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='charAt' return='957' arguments='962' flags='1' bytes='25' iicount='737'/>
<parse method='1081'  stamp='0.114'>
<phase name='parse_hir' stamp='0.114'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1083' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='7' compiler='c1' level='3' iicount='3361'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.114'/>
</parse>
<bc code='184' bci='12'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1086' name='java.lang.StringLatin1' flags='16'/>
<method id='1087' holder='1086' name='charAt' return='957' arguments='1073 962' flags='9' bytes='28' compile_id='23' compiler='c1' level='3' iicount='737'/>
<call method='1087' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1087'>
<bc code='183' bci='15'/>
<type id='964' name='void'/>
<klass id='1089' name='java.lang.StringIndexOutOfBoundsException' unloaded='1'/>
<method id='1090' holder='1089' name='&lt;init&gt;' return='964' arguments='962' unloaded='1'/>
<call method='1090' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.114'/>
</parse>
<bc code='184' bci='21'/>
<klass id='1091' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1092' holder='1091' name='charAt' return='957' arguments='1073 962' unloaded='1'/>
<call method='1092' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.114'/>
</phase>
<parse_done stamp='0.114'/>
</parse>
<phase name='optimize_blocks' stamp='0.114'>
<phase_done name='optimize_blocks' stamp='0.114'/>
</phase>
<phase name='gvn' stamp='0.114'>
<phase_done name='gvn' stamp='0.114'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.114'>
<phase_done name='rangeCheckElimination' stamp='0.114'/>
</phase>
<phase name='optimize_null_checks' stamp='0.114'>
<phase_done name='optimize_null_checks' stamp='0.114'/>
</phase>
<phase_done name='buildIR' stamp='0.114'/>
</phase>
<phase name='emit_lir' stamp='0.114'>
<phase name='lirGeneration' stamp='0.114'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.115'/>
</phase>
<phase_done name='emit_lir' stamp='0.115'/>
</phase>
<phase name='codeemit' stamp='0.115'>
<phase_done name='codeemit' stamp='0.115'/>
</phase>
<phase name='codeinstall' stamp='0.115'>
<phase_done name='codeinstall' stamp='0.115'/>
</phase>
<code_cache total_blobs='295' nmethods='18' adapters='143' free_code_cache='250625536'/>
<task_done success='1' nmsize='1048' count='780' inlined_bytes='47' stamp='0.120'/>
</task>
<task compile_id='24' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='654' iicount='654' level='3' stamp='0.120'>
<phase name='setup' stamp='0.120'>
<phase_done name='setup' stamp='0.120'/>
</phase>
<phase name='buildIR' stamp='0.120'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1082' holder='1081' name='hasNext' return='956' flags='1' bytes='13' iicount='654'/>
<parse method='1082'  stamp='0.120'>
<phase name='parse_hir' stamp='0.120'>
<phase_done name='parse_hir' stamp='0.120'/>
</phase>
<parse_done stamp='0.120'/>
</parse>
<phase name='optimize_blocks' stamp='0.120'>
<phase_done name='optimize_blocks' stamp='0.120'/>
</phase>
<phase name='gvn' stamp='0.120'>
<phase_done name='gvn' stamp='0.120'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.120'>
<phase_done name='rangeCheckElimination' stamp='0.120'/>
</phase>
<phase name='optimize_null_checks' stamp='0.120'>
<phase_done name='optimize_null_checks' stamp='0.120'/>
</phase>
<phase_done name='buildIR' stamp='0.120'/>
</phase>
<phase name='emit_lir' stamp='0.120'>
<phase name='lirGeneration' stamp='0.120'>
<phase_done name='lirGeneration' stamp='0.120'/>
</phase>
<phase name='linearScan' stamp='0.120'>
<phase_done name='linearScan' stamp='0.120'/>
</phase>
<phase_done name='emit_lir' stamp='0.120'/>
</phase>
<phase name='codeemit' stamp='0.120'>
<phase_done name='codeemit' stamp='0.120'/>
</phase>
<phase name='codeinstall' stamp='0.120'>
<phase_done name='codeinstall' stamp='0.121'/>
</phase>
<code_cache total_blobs='328' nmethods='20' adapters='174' free_code_cache='250603136'/>
<task_done success='1' nmsize='432' count='654' stamp='0.123'/>
</task>
<task compile_id='25' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='640' iicount='640' level='3' stamp='0.123'>
<phase name='setup' stamp='0.123'>
<phase_done name='setup' stamp='0.123'/>
</phase>
<phase name='buildIR' stamp='0.123'>
<type id='962' name='int'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1082' holder='1081' name='nextIndex' return='962' flags='2' bytes='56' iicount='640'/>
<parse method='1082'  stamp='0.123'>
<phase name='parse_hir' stamp='0.123'>
<phase_done name='parse_hir' stamp='0.123'/>
</phase>
<parse_done stamp='0.123'/>
</parse>
<phase name='optimize_blocks' stamp='0.123'>
<phase_done name='optimize_blocks' stamp='0.123'/>
</phase>
<phase name='gvn' stamp='0.123'>
<phase_done name='gvn' stamp='0.123'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.123'>
<phase_done name='rangeCheckElimination' stamp='0.123'/>
</phase>
<phase name='optimize_null_checks' stamp='0.123'>
<phase_done name='optimize_null_checks' stamp='0.123'/>
</phase>
<phase_done name='buildIR' stamp='0.123'/>
</phase>
<phase name='emit_lir' stamp='0.123'>
<phase name='lirGeneration' stamp='0.123'>
<phase_done name='lirGeneration' stamp='0.123'/>
</phase>
<phase name='linearScan' stamp='0.123'>
<phase_done name='linearScan' stamp='0.123'/>
</phase>
<phase_done name='emit_lir' stamp='0.123'/>
</phase>
<phase name='codeemit' stamp='0.123'>
<phase_done name='codeemit' stamp='0.123'/>
</phase>
<phase name='codeinstall' stamp='0.123'>
<phase_done name='codeinstall' stamp='0.123'/>
</phase>
<code_cache total_blobs='332' nmethods='21' adapters='177' free_code_cache='250599936'/>
<task_done success='1' nmsize='464' count='640' stamp='0.125'/>
</task>
<task compile_id='2' method='jdk.internal.misc.Unsafe getObjectAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='466' iicount='466' level='3' stamp='0.125'>
<phase name='setup' stamp='0.125'>
<phase_done name='setup' stamp='0.125'/>
</phase>
<phase name='buildIR' stamp='0.125'>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='963' name='long'/>
<klass id='1040' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1081' holder='1040' name='getObjectAcquire' return='969' arguments='969 963' flags='17' bytes='7' iicount='466'/>
<parse method='1081'  stamp='0.126'>
<phase name='parse_hir' stamp='0.126'>
<bc code='182' bci='3'/>
<method id='1083' holder='1040' name='getObjectVolatile' return='969' arguments='969 963' flags='257' bytes='0' compile_id='3' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<phase_done name='parse_hir' stamp='0.126'/>
</phase>
<parse_done stamp='0.126'/>
</parse>
<phase name='optimize_blocks' stamp='0.126'>
<phase_done name='optimize_blocks' stamp='0.126'/>
</phase>
<phase name='gvn' stamp='0.126'>
<phase_done name='gvn' stamp='0.126'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.126'>
<phase_done name='rangeCheckElimination' stamp='0.126'/>
</phase>
<phase name='optimize_null_checks' stamp='0.126'>
<phase_done name='optimize_null_checks' stamp='0.126'/>
</phase>
<phase_done name='buildIR' stamp='0.126'/>
</phase>
<phase name='emit_lir' stamp='0.126'>
<phase name='lirGeneration' stamp='0.126'>
<phase_done name='lirGeneration' stamp='0.126'/>
</phase>
<phase name='linearScan' stamp='0.126'>
<phase_done name='linearScan' stamp='0.126'/>
</phase>
<phase_done name='emit_lir' stamp='0.126'/>
</phase>
<phase name='codeemit' stamp='0.126'>
<phase_done name='codeemit' stamp='0.126'/>
</phase>
<phase name='codeinstall' stamp='0.126'>
<phase_done name='codeinstall' stamp='0.126'/>
</phase>
<code_cache total_blobs='334' nmethods='23' adapters='177' free_code_cache='250598400'/>
<task_done success='1' nmsize='432' count='500' stamp='0.128'/>
</task>
<task compile_id='27' method='java.lang.Enum ordinal ()I' bytes='5' count='176' iicount='176' level='1' stamp='0.128'>
<phase name='setup' stamp='0.128'>
<phase_done name='setup' stamp='0.128'/>
</phase>
<phase name='buildIR' stamp='0.128'>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.Enum' flags='1025'/>
<method id='1082' holder='1081' name='ordinal' return='962' flags='17' bytes='5' iicount='176'/>
<parse method='1082'  stamp='0.128'>
<phase name='parse_hir' stamp='0.128'>
<phase_done name='parse_hir' stamp='0.128'/>
</phase>
<parse_done stamp='0.128'/>
</parse>
<phase name='optimize_blocks' stamp='0.128'>
<phase_done name='optimize_blocks' stamp='0.128'/>
</phase>
<phase name='gvn' stamp='0.128'>
<phase_done name='gvn' stamp='0.128'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.128'>
<phase_done name='rangeCheckElimination' stamp='0.128'/>
</phase>
<phase name='optimize_null_checks' stamp='0.128'>
<phase_done name='optimize_null_checks' stamp='0.128'/>
</phase>
<phase_done name='buildIR' stamp='0.128'/>
</phase>
<phase name='emit_lir' stamp='0.128'>
<phase name='lirGeneration' stamp='0.128'>
<phase_done name='lirGeneration' stamp='0.128'/>
</phase>
<phase name='linearScan' stamp='0.128'>
<phase_done name='linearScan' stamp='0.128'/>
</phase>
<phase_done name='emit_lir' stamp='0.128'/>
</phase>
<phase name='codeemit' stamp='0.128'>
<phase_done name='codeemit' stamp='0.128'/>
</phase>
<phase name='codeinstall' stamp='0.128'>
<phase_done name='codeinstall' stamp='0.129'/>
</phase>
<code_cache total_blobs='336' nmethods='25' adapters='177' free_code_cache='250596992'/>
<task_done success='1' nmsize='272' count='176' stamp='0.131'/>
</task>
<task compile_id='21' method='java.lang.module.ModuleReference descriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='185' iicount='185' level='1' stamp='0.131'>
<phase name='setup' stamp='0.131'>
<phase_done name='setup' stamp='0.131'/>
</phase>
<phase name='buildIR' stamp='0.131'>
<klass id='1082' name='java.lang.module.ModuleDescriptor' flags='1'/>
<klass id='1081' name='java.lang.module.ModuleReference' flags='1025'/>
<method id='1083' holder='1081' name='descriptor' return='1082' flags='17' bytes='5' iicount='185'/>
<parse method='1083'  stamp='0.131'>
<phase name='parse_hir' stamp='0.131'>
<phase_done name='parse_hir' stamp='0.131'/>
</phase>
<parse_done stamp='0.131'/>
</parse>
<phase name='optimize_blocks' stamp='0.131'>
<phase_done name='optimize_blocks' stamp='0.131'/>
</phase>
<phase name='gvn' stamp='0.131'>
<phase_done name='gvn' stamp='0.131'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.131'>
<phase_done name='rangeCheckElimination' stamp='0.131'/>
</phase>
<phase name='optimize_null_checks' stamp='0.131'>
<phase_done name='optimize_null_checks' stamp='0.131'/>
</phase>
<phase_done name='buildIR' stamp='0.131'/>
</phase>
<phase name='emit_lir' stamp='0.131'>
<phase name='lirGeneration' stamp='0.131'>
<phase_done name='lirGeneration' stamp='0.131'/>
</phase>
<phase name='linearScan' stamp='0.131'>
<phase_done name='linearScan' stamp='0.131'/>
</phase>
<phase_done name='emit_lir' stamp='0.131'/>
</phase>
<phase name='codeemit' stamp='0.131'>
<phase_done name='codeemit' stamp='0.131'/>
</phase>
<phase name='codeinstall' stamp='0.131'>
<phase_done name='codeinstall' stamp='0.131'/>
</phase>
<code_cache total_blobs='338' nmethods='27' adapters='177' free_code_cache='250595584'/>
<task_done success='1' nmsize='272' count='185' stamp='0.133'/>
</task>
<task compile_id='20' method='java.lang.module.ModuleDescriptor name ()Ljava/lang/String;' bytes='5' count='212' iicount='212' level='1' stamp='0.133'>
<phase name='setup' stamp='0.133'>
<phase_done name='setup' stamp='0.133'/>
</phase>
<phase name='buildIR' stamp='0.133'>
<klass id='970' name='java.lang.String' flags='17'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1082' holder='1081' name='name' return='970' flags='1' bytes='5' iicount='212'/>
<parse method='1082'  stamp='0.133'>
<phase name='parse_hir' stamp='0.133'>
<phase_done name='parse_hir' stamp='0.133'/>
</phase>
<parse_done stamp='0.133'/>
</parse>
<phase name='optimize_blocks' stamp='0.133'>
<phase_done name='optimize_blocks' stamp='0.133'/>
</phase>
<phase name='gvn' stamp='0.133'>
<phase_done name='gvn' stamp='0.133'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.133'>
<phase_done name='rangeCheckElimination' stamp='0.133'/>
</phase>
<phase name='optimize_null_checks' stamp='0.133'>
<phase_done name='optimize_null_checks' stamp='0.133'/>
</phase>
<phase_done name='buildIR' stamp='0.133'/>
</phase>
<phase name='emit_lir' stamp='0.133'>
<phase name='lirGeneration' stamp='0.133'>
<phase_done name='lirGeneration' stamp='0.133'/>
</phase>
<phase name='linearScan' stamp='0.133'>
<phase_done name='linearScan' stamp='0.133'/>
</phase>
<phase_done name='emit_lir' stamp='0.133'/>
</phase>
<phase name='codeemit' stamp='0.133'>
<phase_done name='codeemit' stamp='0.133'/>
</phase>
<phase name='codeinstall' stamp='0.133'>
<phase_done name='codeinstall' stamp='0.133'/>
</phase>
<code_cache total_blobs='340' nmethods='28' adapters='178' free_code_cache='250594048'/>
<task_done success='1' nmsize='272' count='212' stamp='0.134'/>
</task>
<task compile_id='12' method='java.util.Collections$EmptySet hashCode ()I' bytes='2' count='202' iicount='202' level='1' stamp='0.134'>
<phase name='setup' stamp='0.134'>
<phase_done name='setup' stamp='0.134'/>
</phase>
<phase name='buildIR' stamp='0.134'>
<type id='962' name='int'/>
<klass id='1081' name='java.util.Collections$EmptySet' flags='10'/>
<method id='1082' holder='1081' name='hashCode' return='962' flags='1' bytes='2' iicount='202'/>
<parse method='1082'  stamp='0.134'>
<phase name='parse_hir' stamp='0.134'>
<phase_done name='parse_hir' stamp='0.134'/>
</phase>
<parse_done stamp='0.134'/>
</parse>
<phase name='optimize_blocks' stamp='0.134'>
<phase_done name='optimize_blocks' stamp='0.134'/>
</phase>
<phase name='gvn' stamp='0.134'>
<phase_done name='gvn' stamp='0.134'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.134'>
<phase_done name='rangeCheckElimination' stamp='0.134'/>
</phase>
<phase name='optimize_null_checks' stamp='0.134'>
<phase_done name='optimize_null_checks' stamp='0.134'/>
</phase>
<phase_done name='buildIR' stamp='0.134'/>
</phase>
<phase name='emit_lir' stamp='0.134'>
<phase name='lirGeneration' stamp='0.134'>
<phase_done name='lirGeneration' stamp='0.134'/>
</phase>
<phase name='linearScan' stamp='0.134'>
<phase_done name='linearScan' stamp='0.134'/>
</phase>
<phase_done name='emit_lir' stamp='0.134'/>
</phase>
<phase name='codeemit' stamp='0.134'>
<phase_done name='codeemit' stamp='0.134'/>
</phase>
<phase name='codeinstall' stamp='0.134'>
<phase_done name='codeinstall' stamp='0.134'/>
</phase>
<code_cache total_blobs='343' nmethods='29' adapters='180' free_code_cache='250591872'/>
<task_done success='1' nmsize='272' count='202' stamp='0.135'/>
</task>
<task compile_id='19' method='java.util.Collections$EmptySet contains (Ljava/lang/Object;)Z' bytes='2' count='140' iicount='140' level='1' stamp='0.135'>
<phase name='setup' stamp='0.135'>
<phase_done name='setup' stamp='0.135'/>
</phase>
<phase name='buildIR' stamp='0.135'>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.Collections$EmptySet' flags='10'/>
<method id='1082' holder='1081' name='contains' return='956' arguments='969' flags='1' bytes='2' iicount='140'/>
<parse method='1082'  stamp='0.135'>
<phase name='parse_hir' stamp='0.135'>
<phase_done name='parse_hir' stamp='0.135'/>
</phase>
<parse_done stamp='0.135'/>
</parse>
<phase name='optimize_blocks' stamp='0.135'>
<phase_done name='optimize_blocks' stamp='0.135'/>
</phase>
<phase name='gvn' stamp='0.135'>
<phase_done name='gvn' stamp='0.135'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.135'>
<phase_done name='rangeCheckElimination' stamp='0.135'/>
</phase>
<phase name='optimize_null_checks' stamp='0.135'>
<phase_done name='optimize_null_checks' stamp='0.135'/>
</phase>
<phase_done name='buildIR' stamp='0.135'/>
</phase>
<phase name='emit_lir' stamp='0.135'>
<phase name='lirGeneration' stamp='0.135'>
<phase_done name='lirGeneration' stamp='0.135'/>
</phase>
<phase name='linearScan' stamp='0.135'>
<phase_done name='linearScan' stamp='0.135'/>
</phase>
<phase_done name='emit_lir' stamp='0.135'/>
</phase>
<phase name='codeemit' stamp='0.135'>
<phase_done name='codeemit' stamp='0.135'/>
</phase>
<phase name='codeinstall' stamp='0.135'>
<phase_done name='codeinstall' stamp='0.135'/>
</phase>
<code_cache total_blobs='349' nmethods='30' adapters='185' free_code_cache='250587776'/>
<task_done success='1' nmsize='272' count='140' stamp='0.137'/>
</task>
<task compile_id='32' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='289' count='256' iicount='256' level='3' stamp='0.141'>
<phase name='setup' stamp='0.141'>
<phase_done name='setup' stamp='0.141'/>
</phase>
<phase name='buildIR' stamp='0.141'>
<type id='964' name='void'/>
<type id='963' name='long'/>
<type id='962' name='int'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1082' holder='1081' name='addCount' return='964' arguments='963 962' flags='18' bytes='289' iicount='256'/>
<parse method='1082'  stamp='0.141'>
<phase name='parse_hir' stamp='0.141'>
<bc code='182' bci='31'/>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1040' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1088' holder='1040' name='compareAndSetLong' return='956' arguments='969 963 963 963' flags='273' bytes='0' compile_id='33' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1088' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='58'/>
<klass id='1089' name='java.util.concurrent.ThreadLocalRandom' unloaded='1'/>
<method id='1090' holder='1089' name='getProbe' return='962' unloaded='1'/>
<call method='1090' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='91'/>
<call method='1088' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='115'/>
<method id='1091' holder='1081' name='sumCount' return='963' flags='16' bytes='60' iicount='3'/>
<call method='1091' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='161'/>
<method id='1095' holder='1081' name='resizeStamp' return='962' arguments='962' flags='24' bytes='8' iicount='1'/>
<call method='1095' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1095'>
<bc code='184' bci='1'/>
<klass id='1065' name='java.lang.Integer' flags='17'/>
<method id='1097' holder='1065' name='numberOfLeadingZeros' return='962' arguments='962' flags='9' bytes='78' iicount='9'/>
<call method='1097' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.142'/>
</parse>
<bc code='182' bci='233'/>
<method id='1099' holder='1040' name='compareAndSetInt' return='956' arguments='969 963 962 962' flags='273' bytes='0' iicount='8'/>
<call method='1099' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='244'/>
<klass id='1094' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1100' holder='1081' name='transfer' return='964' arguments='1094 1094' flags='18' bytes='828' iicount='1'/>
<call method='1100' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='266'/>
<call method='1099' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='276'/>
<call method='1100' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='280'/>
<call method='1091' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='104'/>
<method id='1102' holder='1081' name='fullAddCount' return='964' arguments='963 956' flags='18' bytes='462' iicount='1'/>
<call method='1102' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.142'/>
</phase>
<parse_done stamp='0.142'/>
</parse>
<phase name='optimize_blocks' stamp='0.142'>
<phase_done name='optimize_blocks' stamp='0.142'/>
</phase>
<phase name='gvn' stamp='0.142'>
<phase_done name='gvn' stamp='0.142'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.142'>
<phase_done name='rangeCheckElimination' stamp='0.142'/>
</phase>
<phase name='optimize_null_checks' stamp='0.142'>
<phase_done name='optimize_null_checks' stamp='0.142'/>
</phase>
<phase_done name='buildIR' stamp='0.142'/>
</phase>
<phase name='emit_lir' stamp='0.142'>
<phase name='lirGeneration' stamp='0.142'>
<phase_done name='lirGeneration' stamp='0.142'/>
</phase>
<phase name='linearScan' stamp='0.142'>
<phase_done name='linearScan' stamp='0.143'/>
</phase>
<phase_done name='emit_lir' stamp='0.143'/>
</phase>
<phase name='codeemit' stamp='0.143'>
<phase_done name='codeemit' stamp='0.143'/>
</phase>
<phase name='codeinstall' stamp='0.143'>
<dependency type='leaf_type' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.147'/>
</phase>
<code_cache total_blobs='353' nmethods='34' adapters='185' free_code_cache='250579712'/>
<task_done success='1' nmsize='2536' count='258' inlined_bytes='8' stamp='0.156'/>
</task>
<task compile_id='35' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='256' iicount='256' level='3' stamp='0.156'>
<phase name='setup' stamp='0.156'>
<phase_done name='setup' stamp='0.156'/>
</phase>
<phase name='buildIR' stamp='0.156'>
<type id='964' name='void'/>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<method id='1082' holder='1081' name='&lt;init&gt;' return='964' arguments='962 969 969' flags='0' bytes='20' iicount='257'/>
<parse method='1082'  stamp='0.156'>
<phase name='parse_hir' stamp='0.156'>
<bc code='183' bci='1'/>
<method id='1084' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='1626'/>
<call method='1084' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1081'/>
<parse_done stamp='0.156'/>
</parse>
<phase_done name='parse_hir' stamp='0.156'/>
</phase>
<parse_done stamp='0.156'/>
</parse>
<phase name='optimize_blocks' stamp='0.156'>
<phase_done name='optimize_blocks' stamp='0.156'/>
</phase>
<phase name='gvn' stamp='0.156'>
<phase_done name='gvn' stamp='0.156'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.156'>
<phase_done name='rangeCheckElimination' stamp='0.156'/>
</phase>
<phase name='optimize_null_checks' stamp='0.156'>
<phase_done name='optimize_null_checks' stamp='0.156'/>
</phase>
<phase_done name='buildIR' stamp='0.156'/>
</phase>
<phase name='emit_lir' stamp='0.156'>
<phase name='lirGeneration' stamp='0.156'>
<phase_done name='lirGeneration' stamp='0.156'/>
</phase>
<phase name='linearScan' stamp='0.156'>
<phase_done name='linearScan' stamp='0.156'/>
</phase>
<phase_done name='emit_lir' stamp='0.156'/>
</phase>
<phase name='codeemit' stamp='0.156'>
<phase_done name='codeemit' stamp='0.156'/>
</phase>
<phase name='codeinstall' stamp='0.156'>
<dependency type='no_finalizable_subclasses' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.159'/>
</phase>
<code_cache total_blobs='355' nmethods='36' adapters='185' free_code_cache='250577280'/>
<task_done success='1' nmsize='656' count='264' inlined_bytes='1' stamp='0.162'/>
</task>
<task compile_id='36' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='399' iicount='399' level='3' stamp='0.162'>
<phase name='setup' stamp='0.162'>
<phase_done name='setup' stamp='0.162'/>
</phase>
<phase name='buildIR' stamp='0.162'>
<type id='962' name='int'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1082' holder='1081' name='spread' return='962' arguments='962' flags='24' bytes='10' iicount='399'/>
<parse method='1082'  stamp='0.162'>
<phase name='parse_hir' stamp='0.162'>
<phase_done name='parse_hir' stamp='0.162'/>
</phase>
<parse_done stamp='0.162'/>
</parse>
<phase name='optimize_blocks' stamp='0.162'>
<phase_done name='optimize_blocks' stamp='0.162'/>
</phase>
<phase name='gvn' stamp='0.162'>
<phase_done name='gvn' stamp='0.162'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.162'>
<phase_done name='rangeCheckElimination' stamp='0.162'/>
</phase>
<phase name='optimize_null_checks' stamp='0.162'>
<phase_done name='optimize_null_checks' stamp='0.162'/>
</phase>
<phase_done name='buildIR' stamp='0.162'/>
</phase>
<phase name='emit_lir' stamp='0.162'>
<phase name='lirGeneration' stamp='0.162'>
<phase_done name='lirGeneration' stamp='0.162'/>
</phase>
<phase name='linearScan' stamp='0.162'>
<phase_done name='linearScan' stamp='0.162'/>
</phase>
<phase_done name='emit_lir' stamp='0.162'/>
</phase>
<phase name='codeemit' stamp='0.162'>
<phase_done name='codeemit' stamp='0.162'/>
</phase>
<phase name='codeinstall' stamp='0.162'>
<phase_done name='codeinstall' stamp='0.162'/>
</phase>
<code_cache total_blobs='356' nmethods='37' adapters='185' free_code_cache='250576384'/>
<task_done success='1' nmsize='336' count='400' stamp='0.164'/>
</task>
<task compile_id='39' method='java.util.concurrent.ConcurrentHashMap casTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' bytes='21' count='256' iicount='256' level='3' stamp='0.164'>
<phase name='setup' stamp='0.164'>
<phase_done name='setup' stamp='0.164'/>
</phase>
<phase name='buildIR' stamp='0.164'>
<type id='956' name='boolean'/>
<klass id='1083' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<type id='962' name='int'/>
<klass id='1082' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1084' holder='1081' name='casTabAt' return='956' arguments='1083 962 1082 1082' flags='24' bytes='21' iicount='256'/>
<parse method='1084'  stamp='0.164'>
<phase name='parse_hir' stamp='0.164'>
<bc code='182' bci='17'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='963' name='long'/>
<klass id='1040' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1088' holder='1040' name='compareAndSetObject' return='956' arguments='969 963 969 969' flags='273' bytes='0' compile_id='37' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1088' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<phase_done name='parse_hir' stamp='0.164'/>
</phase>
<parse_done stamp='0.164'/>
</parse>
<phase name='optimize_blocks' stamp='0.164'>
<phase_done name='optimize_blocks' stamp='0.164'/>
</phase>
<phase name='gvn' stamp='0.164'>
<phase_done name='gvn' stamp='0.164'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.164'>
<phase_done name='rangeCheckElimination' stamp='0.164'/>
</phase>
<phase name='optimize_null_checks' stamp='0.164'>
<phase_done name='optimize_null_checks' stamp='0.164'/>
</phase>
<phase_done name='buildIR' stamp='0.164'/>
</phase>
<phase name='emit_lir' stamp='0.164'>
<phase name='lirGeneration' stamp='0.164'>
<phase_done name='lirGeneration' stamp='0.164'/>
</phase>
<phase name='linearScan' stamp='0.164'>
<phase_done name='linearScan' stamp='0.164'/>
</phase>
<phase_done name='emit_lir' stamp='0.164'/>
</phase>
<phase name='codeemit' stamp='0.164'>
<phase_done name='codeemit' stamp='0.164'/>
</phase>
<phase name='codeinstall' stamp='0.164'>
<phase_done name='codeinstall' stamp='0.164'/>
</phase>
<code_cache total_blobs='357' nmethods='38' adapters='185' free_code_cache='250575232'/>
<task_done success='1' nmsize='464' count='257' stamp='0.166'/>
</task>
<task compile_id='38' method='java.lang.Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='140' iicount='140' level='1' stamp='0.166'>
<phase name='setup' stamp='0.166'>
<phase_done name='setup' stamp='0.166'/>
</phase>
<phase name='buildIR' stamp='0.166'>
<klass id='973' name='java.lang.ClassLoader' flags='1025'/>
<klass id='971' name='java.lang.Class' flags='17'/>
<method id='1081' holder='971' name='getClassLoader0' return='973' flags='0' bytes='5' iicount='140'/>
<parse method='1081'  stamp='0.167'>
<phase name='parse_hir' stamp='0.167'>
<phase_done name='parse_hir' stamp='0.167'/>
</phase>
<parse_done stamp='0.167'/>
</parse>
<phase name='optimize_blocks' stamp='0.167'>
<phase_done name='optimize_blocks' stamp='0.167'/>
</phase>
<phase name='gvn' stamp='0.167'>
<phase_done name='gvn' stamp='0.167'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.167'>
<phase_done name='rangeCheckElimination' stamp='0.167'/>
</phase>
<phase name='optimize_null_checks' stamp='0.167'>
<phase_done name='optimize_null_checks' stamp='0.167'/>
</phase>
<phase_done name='buildIR' stamp='0.167'/>
</phase>
<phase name='emit_lir' stamp='0.167'>
<phase name='lirGeneration' stamp='0.167'>
<phase_done name='lirGeneration' stamp='0.167'/>
</phase>
<phase name='linearScan' stamp='0.167'>
<phase_done name='linearScan' stamp='0.167'/>
</phase>
<phase_done name='emit_lir' stamp='0.167'/>
</phase>
<phase name='codeemit' stamp='0.167'>
<phase_done name='codeemit' stamp='0.167'/>
</phase>
<phase name='codeinstall' stamp='0.167'>
<phase_done name='codeinstall' stamp='0.167'/>
</phase>
<code_cache total_blobs='362' nmethods='40' adapters='188' free_code_cache='250571904'/>
<task_done success='1' nmsize='272' count='142' stamp='0.168'/>
</task>
<task compile_id='42' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='129' iicount='129' level='1' stamp='0.169'>
<phase name='setup' stamp='0.169'>
<phase_done name='setup' stamp='0.169'/>
</phase>
<phase name='buildIR' stamp='0.169'>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry' flags='10'/>
<method id='1082' holder='1081' name='hashCode' return='962' flags='1' bytes='5' iicount='129'/>
<parse method='1082'  stamp='0.169'>
<phase name='parse_hir' stamp='0.169'>
<phase_done name='parse_hir' stamp='0.169'/>
</phase>
<parse_done stamp='0.169'/>
</parse>
<phase name='optimize_blocks' stamp='0.169'>
<phase_done name='optimize_blocks' stamp='0.169'/>
</phase>
<phase name='gvn' stamp='0.169'>
<phase_done name='gvn' stamp='0.169'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.169'>
<phase_done name='rangeCheckElimination' stamp='0.169'/>
</phase>
<phase name='optimize_null_checks' stamp='0.169'>
<phase_done name='optimize_null_checks' stamp='0.169'/>
</phase>
<phase_done name='buildIR' stamp='0.169'/>
</phase>
<phase name='emit_lir' stamp='0.169'>
<phase name='lirGeneration' stamp='0.169'>
<phase_done name='lirGeneration' stamp='0.169'/>
</phase>
<phase name='linearScan' stamp='0.169'>
<phase_done name='linearScan' stamp='0.169'/>
</phase>
<phase_done name='emit_lir' stamp='0.169'/>
</phase>
<phase name='codeemit' stamp='0.169'>
<phase_done name='codeemit' stamp='0.169'/>
</phase>
<phase name='codeinstall' stamp='0.169'>
<phase_done name='codeinstall' stamp='0.169'/>
</phase>
<code_cache total_blobs='364' nmethods='42' adapters='188' free_code_cache='250570496'/>
<task_done success='1' nmsize='272' count='129' stamp='0.170'/>
</task>
<task compile_id='43' method='java.lang.String length ()I' bytes='11' count='384' iicount='384' level='3' stamp='0.170'>
<phase name='setup' stamp='0.170'>
<phase_done name='setup' stamp='0.170'/>
</phase>
<phase name='buildIR' stamp='0.170'>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='length' return='962' flags='1' bytes='11' iicount='384'/>
<parse method='1081'  stamp='0.170'>
<phase name='parse_hir' stamp='0.170'>
<bc code='182' bci='6'/>
<type id='960' name='byte'/>
<method id='1083' holder='970' name='coder' return='960' flags='0' bytes='15' compile_id='10' compiler='c1' level='3' iicount='2640'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.170'/>
</parse>
<phase_done name='parse_hir' stamp='0.170'/>
</phase>
<parse_done stamp='0.170'/>
</parse>
<phase name='optimize_blocks' stamp='0.170'>
<phase_done name='optimize_blocks' stamp='0.170'/>
</phase>
<phase name='gvn' stamp='0.170'>
<phase_done name='gvn' stamp='0.170'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.170'>
<phase_done name='rangeCheckElimination' stamp='0.170'/>
</phase>
<phase name='optimize_null_checks' stamp='0.170'>
<phase_done name='optimize_null_checks' stamp='0.170'/>
</phase>
<phase_done name='buildIR' stamp='0.170'/>
</phase>
<phase name='emit_lir' stamp='0.170'>
<phase name='lirGeneration' stamp='0.170'>
<phase_done name='lirGeneration' stamp='0.170'/>
</phase>
<phase name='linearScan' stamp='0.170'>
<phase_done name='linearScan' stamp='0.170'/>
</phase>
<phase_done name='emit_lir' stamp='0.170'/>
</phase>
<phase name='codeemit' stamp='0.170'>
<phase_done name='codeemit' stamp='0.170'/>
</phase>
<phase name='codeinstall' stamp='0.170'>
<phase_done name='codeinstall' stamp='0.174'/>
</phase>
<code_cache total_blobs='366' nmethods='44' adapters='188' free_code_cache='250568192'/>
<task_done success='1' nmsize='496' count='409' inlined_bytes='15' stamp='0.176'/>
</task>
<task compile_id='45' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='129' iicount='129' level='1' stamp='0.176'>
<phase name='setup' stamp='0.176'>
<phase_done name='setup' stamp='0.176'/>
</phase>
<phase name='buildIR' stamp='0.176'>
<klass id='971' name='java.lang.Class' flags='17'/>
<klass id='1029' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1081' holder='1029' name='returnType' return='971' flags='1' bytes='5' iicount='129'/>
<parse method='1081'  stamp='0.176'>
<phase name='parse_hir' stamp='0.176'>
<phase_done name='parse_hir' stamp='0.176'/>
</phase>
<parse_done stamp='0.176'/>
</parse>
<phase name='optimize_blocks' stamp='0.176'>
<phase_done name='optimize_blocks' stamp='0.176'/>
</phase>
<phase name='gvn' stamp='0.176'>
<phase_done name='gvn' stamp='0.176'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.176'>
<phase_done name='rangeCheckElimination' stamp='0.176'/>
</phase>
<phase name='optimize_null_checks' stamp='0.176'>
<phase_done name='optimize_null_checks' stamp='0.176'/>
</phase>
<phase_done name='buildIR' stamp='0.176'/>
</phase>
<phase name='emit_lir' stamp='0.176'>
<phase name='lirGeneration' stamp='0.176'>
<phase_done name='lirGeneration' stamp='0.176'/>
</phase>
<phase name='linearScan' stamp='0.176'>
<phase_done name='linearScan' stamp='0.176'/>
</phase>
<phase_done name='emit_lir' stamp='0.176'/>
</phase>
<phase name='codeemit' stamp='0.176'>
<phase_done name='codeemit' stamp='0.176'/>
</phase>
<phase name='codeinstall' stamp='0.176'>
<phase_done name='codeinstall' stamp='0.176'/>
</phase>
<code_cache total_blobs='370' nmethods='45' adapters='191' free_code_cache='250565376'/>
<task_done success='1' nmsize='272' count='129' stamp='0.178'/>
</task>
<task compile_id='48' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='513' iicount='513' level='3' stamp='0.179'>
<phase name='setup' stamp='0.179'>
<phase_done name='setup' stamp='0.179'/>
</phase>
<phase name='buildIR' stamp='0.179'>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.Objects' flags='17'/>
<method id='1082' holder='1081' name='equals' return='956' arguments='969 969' flags='9' bytes='23' iicount='514'/>
<parse method='1082'  stamp='0.179'>
<phase name='parse_hir' stamp='0.179'>
<bc code='182' bci='11'/>
<method id='1084' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='10'/>
<call method='1084' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.179'/>
</phase>
<parse_done stamp='0.179'/>
</parse>
<phase name='optimize_blocks' stamp='0.179'>
<phase_done name='optimize_blocks' stamp='0.179'/>
</phase>
<phase name='gvn' stamp='0.179'>
<phase_done name='gvn' stamp='0.179'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.179'>
<phase_done name='rangeCheckElimination' stamp='0.179'/>
</phase>
<phase name='optimize_null_checks' stamp='0.179'>
<phase_done name='optimize_null_checks' stamp='0.179'/>
</phase>
<phase_done name='buildIR' stamp='0.179'/>
</phase>
<phase name='emit_lir' stamp='0.179'>
<phase name='lirGeneration' stamp='0.179'>
<phase_done name='lirGeneration' stamp='0.179'/>
</phase>
<phase name='linearScan' stamp='0.179'>
<phase_done name='linearScan' stamp='0.179'/>
</phase>
<phase_done name='emit_lir' stamp='0.179'/>
</phase>
<phase name='codeemit' stamp='0.179'>
<phase_done name='codeemit' stamp='0.179'/>
</phase>
<phase name='codeinstall' stamp='0.179'>
<phase_done name='codeinstall' stamp='0.179'/>
</phase>
<code_cache total_blobs='373' nmethods='48' adapters='191' free_code_cache='250562816'/>
<task_done success='1' nmsize='744' count='525' stamp='0.182'/>
</task>
<task compile_id='50' method='java.lang.invoke.MemberName testFlags (II)Z' bytes='16' count='257' iicount='257' level='3' stamp='0.182'>
<phase name='setup' stamp='0.182'>
<phase_done name='setup' stamp='0.182'/>
</phase>
<phase name='buildIR' stamp='0.182'>
<type id='956' name='boolean'/>
<type id='962' name='int'/>
<klass id='1025' name='java.lang.invoke.MemberName' flags='16'/>
<method id='1081' holder='1025' name='testFlags' return='956' arguments='962 962' flags='2' bytes='16' iicount='261'/>
<parse method='1081'  stamp='0.182'>
<phase name='parse_hir' stamp='0.182'>
<phase_done name='parse_hir' stamp='0.182'/>
</phase>
<parse_done stamp='0.182'/>
</parse>
<phase name='optimize_blocks' stamp='0.182'>
<phase_done name='optimize_blocks' stamp='0.182'/>
</phase>
<phase name='gvn' stamp='0.182'>
<phase_done name='gvn' stamp='0.182'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.182'>
<phase_done name='rangeCheckElimination' stamp='0.182'/>
</phase>
<phase name='optimize_null_checks' stamp='0.182'>
<phase_done name='optimize_null_checks' stamp='0.182'/>
</phase>
<phase_done name='buildIR' stamp='0.182'/>
</phase>
<phase name='emit_lir' stamp='0.182'>
<phase name='lirGeneration' stamp='0.182'>
<phase_done name='lirGeneration' stamp='0.183'/>
</phase>
<phase name='linearScan' stamp='0.183'>
<phase_done name='linearScan' stamp='0.183'/>
</phase>
<phase_done name='emit_lir' stamp='0.183'/>
</phase>
<phase name='codeemit' stamp='0.183'>
<phase_done name='codeemit' stamp='0.183'/>
</phase>
<phase name='codeinstall' stamp='0.183'>
<phase_done name='codeinstall' stamp='0.183'/>
</phase>
<code_cache total_blobs='375' nmethods='50' adapters='191' free_code_cache='250561152'/>
<task_done success='1' nmsize='432' count='264' stamp='0.184'/>
</task>
<task compile_id='51' method='java.lang.invoke.MethodTypeForm canonicalize (Ljava/lang/Class;I)Ljava/lang/Class;' bytes='233' count='257' iicount='257' level='3' stamp='0.184'>
<phase name='setup' stamp='0.184'>
<phase_done name='setup' stamp='0.184'/>
</phase>
<phase name='buildIR' stamp='0.184'>
<klass id='971' name='java.lang.Class' flags='17'/>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.invoke.MethodTypeForm' flags='16'/>
<method id='1082' holder='1081' name='canonicalize' return='971' arguments='971 962' flags='8' bytes='233' iicount='257'/>
<parse method='1082'  stamp='0.184'>
<phase name='parse_hir' stamp='0.184'>
<bc code='182' bci='10'/>
<type id='956' name='boolean'/>
<method id='1085' holder='971' name='isPrimitive' return='956' flags='257' bytes='0' compile_id='44' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1085' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='53'/>
<klass id='1087' name='sun.invoke.util.Wrapper' flags='16401'/>
<method id='1088' holder='1087' name='asPrimitiveType' return='971' arguments='971' flags='9' bytes='20' iicount='1'/>
<call method='1088' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1088'>
<bc code='184' bci='1'/>
<method id='1090' holder='1087' name='findWrapperType' return='1087' arguments='971' flags='8' bytes='25' iicount='1'/>
<call method='1090' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1090'>
<bc code='184' bci='4'/>
<method id='1095' holder='1087' name='hashWrap' return='962' arguments='971' flags='10' bytes='62' iicount='10'/>
<call method='1095' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.184'/>
</parse>
<bc code='182' bci='10'/>
<method id='1097' holder='1087' name='primitiveType' return='971' flags='1' bytes='5' iicount='2'/>
<call method='1097' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1097'>
<parse_done stamp='0.184'/>
</parse>
<bc code='184' bci='14'/>
<method id='1099' holder='1087' name='forceType' return='971' arguments='971 971' flags='8' bytes='72' iicount='1'/>
<call method='1099' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.184'/>
</parse>
<bc code='184' bci='149'/>
<method id='1106' holder='1087' name='asWrapperType' return='971' arguments='971' flags='9' bytes='18' iicount='1'/>
<call method='1106' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1106'>
<bc code='182' bci='1'/>
<call method='1085' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='8'/>
<method id='1108' holder='1087' name='forPrimitiveType' return='1087' arguments='971' flags='9' bytes='49' iicount='27'/>
<call method='1108' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='12'/>
<method id='1110' holder='1087' name='wrapperType' return='971' arguments='971' flags='1' bytes='52' iicount='1'/>
<call method='1110' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.184'/>
</parse>
<phase_done name='parse_hir' stamp='0.184'/>
</phase>
<parse_done stamp='0.184'/>
</parse>
<phase name='optimize_blocks' stamp='0.184'>
<phase_done name='optimize_blocks' stamp='0.184'/>
</phase>
<phase name='gvn' stamp='0.185'>
<phase_done name='gvn' stamp='0.185'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.185'>
<phase_done name='rangeCheckElimination' stamp='0.185'/>
</phase>
<phase name='optimize_null_checks' stamp='0.185'>
<phase_done name='optimize_null_checks' stamp='0.185'/>
</phase>
<phase_done name='buildIR' stamp='0.185'/>
</phase>
<phase name='emit_lir' stamp='0.185'>
<phase name='lirGeneration' stamp='0.185'>
<phase_done name='lirGeneration' stamp='0.185'/>
</phase>
<phase name='linearScan' stamp='0.185'>
<phase_done name='linearScan' stamp='0.185'/>
</phase>
<phase_done name='emit_lir' stamp='0.185'/>
</phase>
<phase name='codeemit' stamp='0.185'>
<phase_done name='codeemit' stamp='0.185'/>
</phase>
<phase name='codeinstall' stamp='0.185'>
<phase_done name='codeinstall' stamp='0.186'/>
</phase>
<code_cache total_blobs='382' nmethods='54' adapters='192' free_code_cache='250553472'/>
<task_done success='1' nmsize='2872' count='260' inlined_bytes='68' stamp='0.196'/>
</task>
<task compile_id='52' method='java.lang.Math min (II)I' bytes='11' count='274' iicount='274' level='3' stamp='0.196'>
<phase name='setup' stamp='0.196'>
<phase_done name='setup' stamp='0.196'/>
</phase>
<phase name='buildIR' stamp='0.196'>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.Math' flags='17'/>
<method id='1082' holder='1081' name='min' return='962' arguments='962 962' flags='9' bytes='11' iicount='274'/>
<parse method='1082'  stamp='0.196'>
<phase name='parse_hir' stamp='0.196'>
<phase_done name='parse_hir' stamp='0.196'/>
</phase>
<parse_done stamp='0.196'/>
</parse>
<phase name='optimize_blocks' stamp='0.196'>
<phase_done name='optimize_blocks' stamp='0.196'/>
</phase>
<phase name='gvn' stamp='0.196'>
<phase_done name='gvn' stamp='0.196'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.196'>
<phase_done name='rangeCheckElimination' stamp='0.196'/>
</phase>
<phase name='optimize_null_checks' stamp='0.196'>
<phase_done name='optimize_null_checks' stamp='0.196'/>
</phase>
<phase_done name='buildIR' stamp='0.196'/>
</phase>
<phase name='emit_lir' stamp='0.196'>
<phase name='lirGeneration' stamp='0.196'>
<phase_done name='lirGeneration' stamp='0.196'/>
</phase>
<phase name='linearScan' stamp='0.196'>
<phase_done name='linearScan' stamp='0.196'/>
</phase>
<phase_done name='emit_lir' stamp='0.196'/>
</phase>
<phase name='codeemit' stamp='0.196'>
<phase_done name='codeemit' stamp='0.196'/>
</phase>
<phase name='codeinstall' stamp='0.196'>
<phase_done name='codeinstall' stamp='0.196'/>
</phase>
<code_cache total_blobs='384' nmethods='56' adapters='192' free_code_cache='250551936'/>
<task_done success='1' nmsize='400' count='280' stamp='0.198'/>
</task>
<task compile_id='57' method='java.lang.ref.Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='257' iicount='257' level='3' stamp='0.198'>
<phase name='setup' stamp='0.198'>
<phase_done name='setup' stamp='0.198'/>
</phase>
<phase name='buildIR' stamp='0.198'>
<type id='964' name='void'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.lang.ref.ReferenceQueue' flags='1'/>
<klass id='995' name='java.lang.ref.Reference' flags='1025'/>
<method id='1082' holder='995' name='&lt;init&gt;' return='964' arguments='969 1081' flags='0' bytes='25' iicount='258'/>
<parse method='1082'  stamp='0.198'>
<phase name='parse_hir' stamp='0.198'>
<bc code='183' bci='1'/>
<method id='1084' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='1661'/>
<call method='1084' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='995'/>
<parse_done stamp='0.198'/>
</parse>
<phase_done name='parse_hir' stamp='0.198'/>
</phase>
<parse_done stamp='0.198'/>
</parse>
<phase name='optimize_blocks' stamp='0.198'>
<phase_done name='optimize_blocks' stamp='0.198'/>
</phase>
<phase name='gvn' stamp='0.198'>
<phase_done name='gvn' stamp='0.198'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.198'>
<phase_done name='rangeCheckElimination' stamp='0.198'/>
</phase>
<phase name='optimize_null_checks' stamp='0.198'>
<phase_done name='optimize_null_checks' stamp='0.198'/>
</phase>
<phase_done name='buildIR' stamp='0.198'/>
</phase>
<phase name='emit_lir' stamp='0.198'>
<phase name='lirGeneration' stamp='0.198'>
<phase_done name='lirGeneration' stamp='0.198'/>
</phase>
<phase name='linearScan' stamp='0.198'>
<phase_done name='linearScan' stamp='0.198'/>
</phase>
<phase_done name='emit_lir' stamp='0.198'/>
</phase>
<phase name='codeemit' stamp='0.198'>
<phase_done name='codeemit' stamp='0.198'/>
</phase>
<phase name='codeinstall' stamp='0.198'>
<dependency type='no_finalizable_subclasses' ctxk='995'/>
<phase_done name='codeinstall' stamp='0.198'/>
</phase>
<code_cache total_blobs='386' nmethods='58' adapters='192' free_code_cache='250549888'/>
<task_done success='1' nmsize='720' count='265' inlined_bytes='1' stamp='0.201'/>
</task>
<task compile_id='59' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='256' iicount='256' level='3' stamp='0.201'>
<phase name='setup' stamp='0.201'>
<phase_done name='setup' stamp='0.201'/>
</phase>
<phase name='buildIR' stamp='0.201'>
<type id='956' name='boolean'/>
<type id='962' name='int'/>
<klass id='1081' name='java.lang.StringLatin1' flags='16'/>
<method id='1082' holder='1081' name='canEncode' return='956' arguments='962' flags='9' bytes='13' iicount='256'/>
<parse method='1082'  stamp='0.201'>
<phase name='parse_hir' stamp='0.201'>
<phase_done name='parse_hir' stamp='0.201'/>
</phase>
<parse_done stamp='0.201'/>
</parse>
<phase name='optimize_blocks' stamp='0.201'>
<phase_done name='optimize_blocks' stamp='0.201'/>
</phase>
<phase name='gvn' stamp='0.201'>
<phase_done name='gvn' stamp='0.201'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.201'>
<phase_done name='rangeCheckElimination' stamp='0.201'/>
</phase>
<phase name='optimize_null_checks' stamp='0.201'>
<phase_done name='optimize_null_checks' stamp='0.201'/>
</phase>
<phase_done name='buildIR' stamp='0.201'/>
</phase>
<phase name='emit_lir' stamp='0.201'>
<phase name='lirGeneration' stamp='0.201'>
<phase_done name='lirGeneration' stamp='0.201'/>
</phase>
<phase name='linearScan' stamp='0.201'>
<phase_done name='linearScan' stamp='0.201'/>
</phase>
<phase_done name='emit_lir' stamp='0.201'/>
</phase>
<phase name='codeemit' stamp='0.201'>
<phase_done name='codeemit' stamp='0.201'/>
</phase>
<phase name='codeinstall' stamp='0.201'>
<phase_done name='codeinstall' stamp='0.201'/>
</phase>
<code_cache total_blobs='387' nmethods='59' adapters='192' free_code_cache='250548864'/>
<task_done success='1' nmsize='400' count='286' stamp='0.203'/>
</task>
<task compile_id='60' method='java.lang.ref.ReferenceQueue poll ()Ljava/lang/ref/Reference;' bytes='28' count='259' iicount='259' level='3' stamp='0.203'>
<phase name='setup' stamp='0.203'>
<phase_done name='setup' stamp='0.203'/>
</phase>
<phase name='buildIR' stamp='0.203'>
<klass id='995' name='java.lang.ref.Reference' flags='1025'/>
<klass id='1081' name='java.lang.ref.ReferenceQueue' flags='1'/>
<method id='1082' holder='1081' name='poll' return='995' flags='1' bytes='28' iicount='261'/>
<parse method='1082'  stamp='0.203'>
<phase name='parse_hir' stamp='0.203'>
<bc code='182' bci='17'/>
<method id='1085' holder='1081' name='reallyPoll' return='995' flags='2' bytes='65' iicount='2'/>
<call method='1085' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.203'/>
</phase>
<parse_done stamp='0.203'/>
</parse>
<phase name='optimize_blocks' stamp='0.203'>
<phase_done name='optimize_blocks' stamp='0.203'/>
</phase>
<phase name='gvn' stamp='0.203'>
<phase_done name='gvn' stamp='0.203'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.203'>
<phase_done name='rangeCheckElimination' stamp='0.203'/>
</phase>
<phase name='optimize_null_checks' stamp='0.203'>
<phase_done name='optimize_null_checks' stamp='0.203'/>
</phase>
<phase_done name='buildIR' stamp='0.203'/>
</phase>
<phase name='emit_lir' stamp='0.203'>
<phase name='lirGeneration' stamp='0.203'>
<phase_done name='lirGeneration' stamp='0.203'/>
</phase>
<phase name='linearScan' stamp='0.203'>
<phase_done name='linearScan' stamp='0.204'/>
</phase>
<phase_done name='emit_lir' stamp='0.204'/>
</phase>
<phase name='codeemit' stamp='0.204'>
<phase_done name='codeemit' stamp='0.204'/>
</phase>
<phase name='codeinstall' stamp='0.204'>
<phase_done name='codeinstall' stamp='0.204'/>
</phase>
<code_cache total_blobs='389' nmethods='61' adapters='192' free_code_cache='250546432'/>
<task_done success='1' nmsize='936' count='263' stamp='0.207'/>
</task>
<task compile_id='61' method='java.lang.invoke.MethodType hashCode ()I' bytes='53' count='259' backedge_count='612' iicount='259' level='3' stamp='0.207'>
<phase name='setup' stamp='0.207'>
<phase_done name='setup' stamp='0.207'/>
</phase>
<phase name='buildIR' stamp='0.207'>
<type id='962' name='int'/>
<klass id='1029' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1081' holder='1029' name='hashCode' return='962' flags='1' bytes='53' iicount='259'/>
<parse method='1081'  stamp='0.207'>
<phase name='parse_hir' stamp='0.207'>
<bc code='182' bci='6'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<method id='1083' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1083' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<bc code='182' bci='40'/>
<call method='1083' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<phase_done name='parse_hir' stamp='0.207'/>
</phase>
<parse_done stamp='0.207'/>
</parse>
<phase name='optimize_blocks' stamp='0.207'>
<phase_done name='optimize_blocks' stamp='0.207'/>
</phase>
<phase name='gvn' stamp='0.207'>
<phase_done name='gvn' stamp='0.207'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.207'>
<phase_done name='rangeCheckElimination' stamp='0.207'/>
</phase>
<phase name='optimize_null_checks' stamp='0.207'>
<phase_done name='optimize_null_checks' stamp='0.207'/>
</phase>
<phase_done name='buildIR' stamp='0.207'/>
</phase>
<phase name='emit_lir' stamp='0.207'>
<phase name='lirGeneration' stamp='0.207'>
<phase_done name='lirGeneration' stamp='0.207'/>
</phase>
<phase name='linearScan' stamp='0.207'>
<phase_done name='linearScan' stamp='0.207'/>
</phase>
<phase_done name='emit_lir' stamp='0.207'/>
</phase>
<phase name='codeemit' stamp='0.207'>
<phase_done name='codeemit' stamp='0.207'/>
</phase>
<phase name='codeinstall' stamp='0.207'>
<phase_done name='codeinstall' stamp='0.207'/>
</phase>
<code_cache total_blobs='390' nmethods='62' adapters='192' free_code_cache='250544256'/>
<task_done success='1' nmsize='1016' count='278' backedge_count='629' stamp='0.211'/>
</task>
<task compile_id='63' method='java.lang.invoke.MemberName isInvocable ()Z' bytes='7' count='286' iicount='286' level='3' stamp='0.211'>
<phase name='setup' stamp='0.211'>
<phase_done name='setup' stamp='0.211'/>
</phase>
<phase name='buildIR' stamp='0.211'>
<type id='956' name='boolean'/>
<klass id='1025' name='java.lang.invoke.MemberName' flags='16'/>
<method id='1081' holder='1025' name='isInvocable' return='956' flags='1' bytes='7' iicount='286'/>
<parse method='1081'  stamp='0.211'>
<phase name='parse_hir' stamp='0.211'>
<bc code='182' bci='3'/>
<type id='962' name='int'/>
<method id='1083' holder='1025' name='testAnyFlags' return='956' arguments='962' flags='2' bytes='15' iicount='286'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<bc code='182' bci='3'/>
<method id='1085' holder='1025' name='testFlags' return='956' arguments='962 962' flags='2' bytes='16' compile_id='50' compiler='c1' level='3' iicount='401'/>
<call method='1085' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1085'>
<parse_done stamp='0.211'/>
</parse>
<parse_done stamp='0.211'/>
</parse>
<phase_done name='parse_hir' stamp='0.211'/>
</phase>
<parse_done stamp='0.211'/>
</parse>
<phase name='optimize_blocks' stamp='0.211'>
<phase_done name='optimize_blocks' stamp='0.211'/>
</phase>
<phase name='gvn' stamp='0.211'>
<phase_done name='gvn' stamp='0.211'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.211'>
<phase_done name='rangeCheckElimination' stamp='0.211'/>
</phase>
<phase name='optimize_null_checks' stamp='0.211'>
<phase_done name='optimize_null_checks' stamp='0.211'/>
</phase>
<phase_done name='buildIR' stamp='0.211'/>
</phase>
<phase name='emit_lir' stamp='0.211'>
<phase name='lirGeneration' stamp='0.211'>
<phase_done name='lirGeneration' stamp='0.211'/>
</phase>
<phase name='linearScan' stamp='0.211'>
<phase_done name='linearScan' stamp='0.211'/>
</phase>
<phase_done name='emit_lir' stamp='0.211'/>
</phase>
<phase name='codeemit' stamp='0.211'>
<phase_done name='codeemit' stamp='0.211'/>
</phase>
<phase name='codeinstall' stamp='0.211'>
<phase_done name='codeinstall' stamp='0.212'/>
</phase>
<code_cache total_blobs='392' nmethods='64' adapters='192' free_code_cache='250541952'/>
<task_done success='1' nmsize='720' count='298' inlined_bytes='31' stamp='0.214'/>
</task>
<task compile_id='66' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='256' backedge_count='1' iicount='256' level='3' stamp='0.215'>
<phase name='setup' stamp='0.215'>
<phase_done name='setup' stamp='0.215'/>
</phase>
<phase name='buildIR' stamp='0.215'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1082' holder='1081' name='get' return='969' arguments='969' flags='1' bytes='162' iicount='256'/>
<parse method='1082'  stamp='0.215'>
<phase name='parse_hir' stamp='0.215'>
<bc code='182' bci='1'/>
<type id='962' name='int'/>
<method id='1084' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1084' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='4'/>
<method id='1085' holder='1081' name='spread' return='962' arguments='962' flags='24' bytes='10' compile_id='36' compiler='c1' level='3' iicount='587'/>
<call method='1085' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1085'>
<parse_done stamp='0.215'/>
</parse>
<bc code='184' bci='34'/>
<klass id='1087' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1088' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1089' holder='1081' name='tabAt' return='1087' arguments='1088 962' flags='24' bytes='22' compile_id='1' compiler='c1' level='3' iicount='736'/>
<call method='1089' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<bc code='182' bci='15'/>
<type id='963' name='long'/>
<klass id='1040' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1093' holder='1040' name='getObjectAcquire' return='969' arguments='969 963' flags='17' bytes='7' compile_id='2' compiler='c1' level='3' iicount='737'/>
<call method='1093' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1093'>
<bc code='182' bci='3'/>
<method id='1095' holder='1040' name='getObjectVolatile' return='969' arguments='969 963' flags='257' bytes='0' compile_id='3' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1095' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.215'/>
</parse>
<parse_done stamp='0.215'/>
</parse>
<bc code='182' bci='73'/>
<type id='956' name='boolean'/>
<method id='1096' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='48'/>
<call method='1096' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='93'/>
<method id='1097' holder='1087' name='find' return='1087' arguments='962 969' flags='0' bytes='52' iicount='1'/>
<call method='1097' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='149'/>
<call method='1096' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.215'/>
</phase>
<parse_done stamp='0.215'/>
</parse>
<phase name='optimize_blocks' stamp='0.215'>
<phase_done name='optimize_blocks' stamp='0.215'/>
</phase>
<phase name='gvn' stamp='0.215'>
<phase_done name='gvn' stamp='0.215'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.215'>
<phase_done name='rangeCheckElimination' stamp='0.215'/>
</phase>
<phase name='optimize_null_checks' stamp='0.215'>
<phase_done name='optimize_null_checks' stamp='0.215'/>
</phase>
<phase_done name='buildIR' stamp='0.215'/>
</phase>
<phase name='emit_lir' stamp='0.215'>
<phase name='lirGeneration' stamp='0.215'>
<phase_done name='lirGeneration' stamp='0.215'/>
</phase>
<phase name='linearScan' stamp='0.215'>
<phase_done name='linearScan' stamp='0.215'/>
</phase>
<phase_done name='emit_lir' stamp='0.215'/>
</phase>
<phase name='codeemit' stamp='0.215'>
<phase_done name='codeemit' stamp='0.215'/>
</phase>
<phase name='codeinstall' stamp='0.215'>
<phase_done name='codeinstall' stamp='0.215'/>
</phase>
<code_cache total_blobs='393' nmethods='65' adapters='192' free_code_cache='250535936'/>
<task_done success='1' nmsize='3480' count='296' backedge_count='1' inlined_bytes='39' stamp='0.228'/>
</task>
<task compile_id='67' method='jdk.internal.org.objectweb.asm.ByteVector putShort (I)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='52' count='360' iicount='360' level='3' stamp='0.228'>
<phase name='setup' stamp='0.228'>
<phase_done name='setup' stamp='0.228'/>
</phase>
<phase name='buildIR' stamp='0.228'>
<klass id='1081' name='jdk.internal.org.objectweb.asm.ByteVector' flags='1'/>
<type id='962' name='int'/>
<method id='1082' holder='1081' name='putShort' return='1081' arguments='962' flags='1' bytes='52' iicount='360'/>
<parse method='1082'  stamp='0.228'>
<phase name='parse_hir' stamp='0.228'>
<bc code='182' bci='18'/>
<type id='964' name='void'/>
<method id='1084' holder='1081' name='enlarge' return='964' arguments='962' flags='2' bytes='51' iicount='30'/>
<call method='1084' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.228'/>
</phase>
<parse_done stamp='0.228'/>
</parse>
<phase name='optimize_blocks' stamp='0.228'>
<phase_done name='optimize_blocks' stamp='0.228'/>
</phase>
<phase name='gvn' stamp='0.228'>
<phase_done name='gvn' stamp='0.228'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.228'>
<phase_done name='rangeCheckElimination' stamp='0.228'/>
</phase>
<phase name='optimize_null_checks' stamp='0.228'>
<phase_done name='optimize_null_checks' stamp='0.228'/>
</phase>
<phase_done name='buildIR' stamp='0.228'/>
</phase>
<phase name='emit_lir' stamp='0.228'>
<phase name='lirGeneration' stamp='0.228'>
<phase_done name='lirGeneration' stamp='0.228'/>
</phase>
<phase name='linearScan' stamp='0.228'>
<phase_done name='linearScan' stamp='0.228'/>
</phase>
<phase_done name='emit_lir' stamp='0.228'/>
</phase>
<phase name='codeemit' stamp='0.228'>
<phase_done name='codeemit' stamp='0.228'/>
</phase>
<phase name='codeinstall' stamp='0.228'>
<dependency type='leaf_type' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.228'/>
</phase>
<code_cache total_blobs='397' nmethods='67' adapters='194' free_code_cache='250532736'/>
<task_done success='1' nmsize='616' count='360' stamp='0.231'/>
</task>
<task compile_id='69' method='jdk.internal.org.objectweb.asm.ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='143' backedge_count='3093' iicount='143' level='3' stamp='0.232'>
<phase name='setup' stamp='0.232'>
<phase_done name='setup' stamp='0.232'/>
</phase>
<phase name='buildIR' stamp='0.232'>
<klass id='1081' name='jdk.internal.org.objectweb.asm.ByteVector' flags='1'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1082' holder='1081' name='putUTF8' return='1081' arguments='970' flags='1' bytes='142' iicount='145'/>
<parse method='1082'  stamp='0.232'>
<phase name='parse_hir' stamp='0.232'>
<bc code='182' bci='1'/>
<type id='962' name='int'/>
<method id='1084' holder='970' name='length' return='962' flags='1' bytes='11' compile_id='43' compiler='c1' level='3' iicount='726'/>
<call method='1084' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='182' bci='6'/>
<type id='960' name='byte'/>
<method id='1086' holder='970' name='coder' return='960' flags='0' bytes='15' compile_id='10' compiler='c1' level='3' iicount='3356'/>
<call method='1086' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1086'>
<parse_done stamp='0.232'/>
</parse>
<parse_done stamp='0.232'/>
</parse>
<bc code='183' bci='15'/>
<type id='964' name='void'/>
<klass id='1089' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1090' holder='1089' name='&lt;init&gt;' return='964' flags='1' bytes='5' iicount='1'/>
<call method='1090' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='41'/>
<method id='1092' holder='1081' name='enlarge' return='964' arguments='962' flags='2' bytes='51' iicount='33'/>
<call method='1092' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='83'/>
<type id='957' name='char'/>
<method id='1094' holder='970' name='charAt' return='957' arguments='962' flags='1' bytes='25' compile_id='22' compiler='c1' level='3' iicount='5220'/>
<call method='1094' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1094'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1096' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='53' compiler='c2' level='4' iicount='8184'/>
<call method='1096' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1096'>
<parse_done stamp='0.232'/>
</parse>
<bc code='184' bci='12'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1098' name='java.lang.StringLatin1' flags='16'/>
<method id='1099' holder='1098' name='charAt' return='957' arguments='1073 962' flags='9' bytes='28' compile_id='23' compiler='c1' level='3' iicount='5220'/>
<call method='1099' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1099'>
<bc code='183' bci='15'/>
<klass id='1101' name='java.lang.StringIndexOutOfBoundsException' unloaded='1'/>
<method id='1102' holder='1101' name='&lt;init&gt;' return='964' arguments='962' unloaded='1'/>
<call method='1102' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.232'/>
</parse>
<bc code='184' bci='21'/>
<klass id='1103' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1104' holder='1103' name='charAt' return='957' arguments='1073 962' unloaded='1'/>
<call method='1104' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.232'/>
</parse>
<bc code='182' bci='125'/>
<method id='1105' holder='1081' name='encodeUTF8' return='1081' arguments='970 962 962' flags='0' bytes='335' iicount='1'/>
<call method='1105' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='1081'/>
<phase_done name='parse_hir' stamp='0.232'/>
</phase>
<parse_done stamp='0.232'/>
</parse>
<phase name='optimize_blocks' stamp='0.232'>
<phase_done name='optimize_blocks' stamp='0.232'/>
</phase>
<phase name='gvn' stamp='0.232'>
<phase_done name='gvn' stamp='0.232'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.232'>
<phase_done name='rangeCheckElimination' stamp='0.232'/>
</phase>
<phase name='optimize_null_checks' stamp='0.232'>
<phase_done name='optimize_null_checks' stamp='0.232'/>
</phase>
<phase_done name='buildIR' stamp='0.232'/>
</phase>
<phase name='emit_lir' stamp='0.232'>
<phase name='lirGeneration' stamp='0.232'>
<phase_done name='lirGeneration' stamp='0.232'/>
</phase>
<phase name='linearScan' stamp='0.232'>
<phase_done name='linearScan' stamp='0.232'/>
</phase>
<phase_done name='emit_lir' stamp='0.232'/>
</phase>
<phase name='codeemit' stamp='0.232'>
<phase_done name='codeemit' stamp='0.233'/>
</phase>
<phase name='codeinstall' stamp='0.233'>
<dependency type='leaf_type' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.233'/>
</phase>
<code_cache total_blobs='398' nmethods='68' adapters='194' free_code_cache='250527488'/>
<task_done success='1' nmsize='2504' count='186' backedge_count='3894' inlined_bytes='98' stamp='0.246'/>
</task>
<task compile_id='74' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='394' backedge_count='380' iicount='394' level='3' stamp='0.246'>
<phase name='setup' stamp='0.246'>
<phase_done name='setup' stamp='0.246'/>
</phase>
<phase name='buildIR' stamp='0.246'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1082' holder='1081' name='next' return='969' flags='1' bytes='47' iicount='399'/>
<parse method='1082'  stamp='0.246'>
<phase name='parse_hir' stamp='0.246'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1084' holder='1081' name='hasNext' return='956' flags='1' bytes='13' compile_id='24' compiler='c1' level='3' iicount='863'/>
<call method='1084' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<parse_done stamp='0.247'/>
</parse>
<bc code='182' bci='15'/>
<type id='962' name='int'/>
<method id='1088' holder='1081' name='nextIndex' return='962' flags='2' bytes='56' compile_id='25' compiler='c1' level='3' iicount='843'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='43'/>
<type id='964' name='void'/>
<klass id='1090' name='java.util.NoSuchElementException' unloaded='1'/>
<method id='1091' holder='1090' name='&lt;init&gt;' return='964' unloaded='1'/>
<call method='1091' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.247'/>
</phase>
<parse_done stamp='0.247'/>
</parse>
<phase name='optimize_blocks' stamp='0.247'>
<phase_done name='optimize_blocks' stamp='0.247'/>
</phase>
<phase name='gvn' stamp='0.247'>
<phase_done name='gvn' stamp='0.247'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.247'>
<phase_done name='rangeCheckElimination' stamp='0.247'/>
</phase>
<phase name='optimize_null_checks' stamp='0.247'>
<phase_done name='optimize_null_checks' stamp='0.247'/>
</phase>
<phase_done name='buildIR' stamp='0.247'/>
</phase>
<phase name='emit_lir' stamp='0.247'>
<phase name='lirGeneration' stamp='0.247'>
<phase_done name='lirGeneration' stamp='0.247'/>
</phase>
<phase name='linearScan' stamp='0.247'>
<phase_done name='linearScan' stamp='0.247'/>
</phase>
<phase_done name='emit_lir' stamp='0.247'/>
</phase>
<phase name='codeemit' stamp='0.247'>
<phase_done name='codeemit' stamp='0.247'/>
</phase>
<phase name='codeinstall' stamp='0.247'>
<phase_done name='codeinstall' stamp='0.248'/>
</phase>
<code_cache total_blobs='402' nmethods='70' adapters='194' free_code_cache='250524160'/>
<task_done success='1' nmsize='1016' count='470' backedge_count='453' inlined_bytes='13' stamp='0.253'/>
</task>
<task compile_id='73' method='jdk.internal.org.objectweb.asm.ClassWriter get (Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' bytes='49' count='421' backedge_count='11' iicount='421' level='3' stamp='0.253'>
<phase name='setup' stamp='0.253'>
<phase_done name='setup' stamp='0.253'/>
</phase>
<phase name='buildIR' stamp='0.253'>
<klass id='1082' name='jdk.internal.org.objectweb.asm.Item' flags='16'/>
<klass id='1081' name='jdk.internal.org.objectweb.asm.ClassWriter' flags='1'/>
<method id='1083' holder='1081' name='get' return='1082' arguments='1082' flags='2' bytes='49' iicount='421'/>
<parse method='1083'  stamp='0.253'>
<phase name='parse_hir' stamp='0.253'>
<bc code='182' bci='33'/>
<type id='956' name='boolean'/>
<method id='1086' holder='1082' name='isEqualTo' return='956' arguments='1082' flags='0' bytes='354' iicount='119'/>
<call method='1086' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.253'/>
</phase>
<parse_done stamp='0.253'/>
</parse>
<phase name='optimize_blocks' stamp='0.253'>
<phase_done name='optimize_blocks' stamp='0.253'/>
</phase>
<phase name='gvn' stamp='0.253'>
<phase_done name='gvn' stamp='0.253'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.253'>
<phase_done name='rangeCheckElimination' stamp='0.253'/>
</phase>
<phase name='optimize_null_checks' stamp='0.253'>
<phase_done name='optimize_null_checks' stamp='0.253'/>
</phase>
<phase_done name='buildIR' stamp='0.253'/>
</phase>
<phase name='emit_lir' stamp='0.253'>
<phase name='lirGeneration' stamp='0.253'>
<phase_done name='lirGeneration' stamp='0.253'/>
</phase>
<phase name='linearScan' stamp='0.253'>
<phase_done name='linearScan' stamp='0.253'/>
</phase>
<phase_done name='emit_lir' stamp='0.253'/>
</phase>
<phase name='codeemit' stamp='0.253'>
<phase_done name='codeemit' stamp='0.253'/>
</phase>
<phase name='codeinstall' stamp='0.253'>
<phase_done name='codeinstall' stamp='0.254'/>
</phase>
<code_cache total_blobs='403' nmethods='71' adapters='194' free_code_cache='250522112'/>
<task_done success='1' nmsize='808' count='421' backedge_count='11' stamp='0.260'/>
</task>
<task compile_id='77' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='513' iicount='513' level='3' stamp='0.260'>
<phase name='setup' stamp='0.260'>
<phase_done name='setup' stamp='0.260'/>
</phase>
<phase name='buildIR' stamp='0.260'>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='hash' return='962' arguments='969' flags='24' bytes='20' iicount='514'/>
<parse method='1082'  stamp='0.260'>
<phase name='parse_hir' stamp='0.260'>
<bc code='182' bci='9'/>
<method id='1085' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1085' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.260'/>
</phase>
<parse_done stamp='0.260'/>
</parse>
<phase name='optimize_blocks' stamp='0.260'>
<phase_done name='optimize_blocks' stamp='0.260'/>
</phase>
<phase name='gvn' stamp='0.260'>
<phase_done name='gvn' stamp='0.260'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.260'>
<phase_done name='rangeCheckElimination' stamp='0.260'/>
</phase>
<phase name='optimize_null_checks' stamp='0.260'>
<phase_done name='optimize_null_checks' stamp='0.260'/>
</phase>
<phase_done name='buildIR' stamp='0.260'/>
</phase>
<phase name='emit_lir' stamp='0.260'>
<phase name='lirGeneration' stamp='0.260'>
<phase_done name='lirGeneration' stamp='0.260'/>
</phase>
<phase name='linearScan' stamp='0.260'>
<phase_done name='linearScan' stamp='0.260'/>
</phase>
<phase_done name='emit_lir' stamp='0.260'/>
</phase>
<phase name='codeemit' stamp='0.260'>
<phase_done name='codeemit' stamp='0.260'/>
</phase>
<phase name='codeinstall' stamp='0.260'>
<phase_done name='codeinstall' stamp='0.260'/>
</phase>
<code_cache total_blobs='404' nmethods='72' adapters='194' free_code_cache='250520704'/>
<task_done success='1' nmsize='616' count='697' stamp='0.263'/>
</task>
<task compile_id='79' method='java.util.AbstractCollection &lt;init&gt; ()V' bytes='5' count='512' iicount='512' level='3' stamp='0.263'>
<phase name='setup' stamp='0.263'>
<phase_done name='setup' stamp='0.263'/>
</phase>
<phase name='buildIR' stamp='0.263'>
<type id='964' name='void'/>
<klass id='1081' name='java.util.AbstractCollection' flags='1025'/>
<method id='1082' holder='1081' name='&lt;init&gt;' return='964' flags='4' bytes='5' iicount='513'/>
<parse method='1082'  stamp='0.263'>
<phase name='parse_hir' stamp='0.263'>
<bc code='183' bci='1'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<method id='1084' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='1834'/>
<call method='1084' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1081'/>
<parse_done stamp='0.263'/>
</parse>
<phase_done name='parse_hir' stamp='0.263'/>
</phase>
<parse_done stamp='0.263'/>
</parse>
<phase name='optimize_blocks' stamp='0.263'>
<phase_done name='optimize_blocks' stamp='0.263'/>
</phase>
<phase name='gvn' stamp='0.263'>
<phase_done name='gvn' stamp='0.263'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.263'>
<phase_done name='rangeCheckElimination' stamp='0.263'/>
</phase>
<phase name='optimize_null_checks' stamp='0.263'>
<phase_done name='optimize_null_checks' stamp='0.263'/>
</phase>
<phase_done name='buildIR' stamp='0.263'/>
</phase>
<phase name='emit_lir' stamp='0.263'>
<phase name='lirGeneration' stamp='0.263'>
<phase_done name='lirGeneration' stamp='0.263'/>
</phase>
<phase name='linearScan' stamp='0.263'>
<phase_done name='linearScan' stamp='0.263'/>
</phase>
<phase_done name='emit_lir' stamp='0.263'/>
</phase>
<phase name='codeemit' stamp='0.263'>
<phase_done name='codeemit' stamp='0.263'/>
</phase>
<phase name='codeinstall' stamp='0.263'>
<dependency type='no_finalizable_subclasses' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.263'/>
</phase>
<code_cache total_blobs='405' nmethods='73' adapters='194' free_code_cache='250519680'/>
<task_done success='1' nmsize='432' count='542' inlined_bytes='1' stamp='0.265'/>
</task>
<task compile_id='78' method='java.util.ImmutableCollections$SetN size ()I' bytes='5' count='190' iicount='190' level='1' stamp='0.265'>
<phase name='setup' stamp='0.265'>
<phase_done name='setup' stamp='0.265'/>
</phase>
<phase name='buildIR' stamp='0.265'>
<type id='962' name='int'/>
<klass id='1081' name='java.util.ImmutableCollections$SetN' flags='24'/>
<method id='1082' holder='1081' name='size' return='962' flags='1' bytes='5' iicount='190'/>
<parse method='1082'  stamp='0.265'>
<phase name='parse_hir' stamp='0.265'>
<phase_done name='parse_hir' stamp='0.265'/>
</phase>
<parse_done stamp='0.265'/>
</parse>
<phase name='optimize_blocks' stamp='0.265'>
<phase_done name='optimize_blocks' stamp='0.265'/>
</phase>
<phase name='gvn' stamp='0.265'>
<phase_done name='gvn' stamp='0.265'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.265'>
<phase_done name='rangeCheckElimination' stamp='0.265'/>
</phase>
<phase name='optimize_null_checks' stamp='0.265'>
<phase_done name='optimize_null_checks' stamp='0.265'/>
</phase>
<phase_done name='buildIR' stamp='0.265'/>
</phase>
<phase name='emit_lir' stamp='0.265'>
<phase name='lirGeneration' stamp='0.265'>
<phase_done name='lirGeneration' stamp='0.265'/>
</phase>
<phase name='linearScan' stamp='0.265'>
<phase_done name='linearScan' stamp='0.265'/>
</phase>
<phase_done name='emit_lir' stamp='0.265'/>
</phase>
<phase name='codeemit' stamp='0.265'>
<phase_done name='codeemit' stamp='0.265'/>
</phase>
<phase name='codeinstall' stamp='0.265'>
<phase_done name='codeinstall' stamp='0.266'/>
</phase>
<code_cache total_blobs='406' nmethods='74' adapters='194' free_code_cache='250518784'/>
<task_done success='1' nmsize='272' count='200' stamp='0.267'/>
</task>
<task compile_id='82' method='java.util.HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='512' backedge_count='17' iicount='512' level='3' stamp='0.267'>
<phase name='setup' stamp='0.267'>
<phase_done name='setup' stamp='0.267'/>
</phase>
<phase name='buildIR' stamp='0.267'>
<klass id='1082' name='java.util.HashMap$Node' flags='8'/>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1083' holder='1081' name='getNode' return='1082' arguments='962 969' flags='16' bytes='148' iicount='523'/>
<parse method='1083'  stamp='0.267'>
<phase name='parse_hir' stamp='0.267'>
<bc code='182' bci='59'/>
<type id='956' name='boolean'/>
<method id='1086' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='116'/>
<call method='1086' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='1087' name='java.util.HashMap$TreeNode' flags='24'/>
<method id='1088' holder='1087' name='getTreeNode' return='1087' arguments='962 969' flags='16' bytes='22' iicount='1'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='1086' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.267'/>
</phase>
<parse_done stamp='0.267'/>
</parse>
<phase name='optimize_blocks' stamp='0.267'>
<phase_done name='optimize_blocks' stamp='0.267'/>
</phase>
<phase name='gvn' stamp='0.267'>
<phase_done name='gvn' stamp='0.267'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.267'>
<phase_done name='rangeCheckElimination' stamp='0.267'/>
</phase>
<phase name='optimize_null_checks' stamp='0.267'>
<phase_done name='optimize_null_checks' stamp='0.267'/>
</phase>
<phase_done name='buildIR' stamp='0.267'/>
</phase>
<phase name='emit_lir' stamp='0.267'>
<phase name='lirGeneration' stamp='0.267'>
<phase_done name='lirGeneration' stamp='0.267'/>
</phase>
<phase name='linearScan' stamp='0.267'>
<phase_done name='linearScan' stamp='0.268'/>
</phase>
<phase_done name='emit_lir' stamp='0.268'/>
</phase>
<phase name='codeemit' stamp='0.268'>
<phase_done name='codeemit' stamp='0.268'/>
</phase>
<phase name='codeinstall' stamp='0.268'>
<phase_done name='codeinstall' stamp='0.268'/>
</phase>
<code_cache total_blobs='407' nmethods='75' adapters='194' free_code_cache='250514304'/>
<task_done success='1' nmsize='2600' count='888' backedge_count='23' stamp='0.279'/>
</task>
<task compile_id='83' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='885' backedge_count='53' iicount='885' level='3' stamp='0.280'>
<phase name='setup' stamp='0.280'>
<phase_done name='setup' stamp='0.280'/>
</phase>
<phase name='buildIR' stamp='0.280'>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='962' name='int'/>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='putVal' return='969' arguments='962 969 969 956 956' flags='16' bytes='300' iicount='890'/>
<parse method='1082'  stamp='0.280'>
<phase name='parse_hir' stamp='0.280'>
<bc code='182' bci='20'/>
<klass id='1087' name='[Ljava.util.HashMap$Node;' flags='1040'/>
<method id='1088' holder='1081' name='resize' return='1087' flags='16' bytes='356' iicount='159'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='1086' name='java.util.HashMap$Node' flags='8'/>
<method id='1090' holder='1081' name='newNode' return='1086' arguments='962 969 969 1086' flags='0' bytes='13' iicount='854'/>
<call method='1090' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='1091' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='116'/>
<call method='1091' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='1092' name='java.util.HashMap$TreeNode' flags='24'/>
<method id='1093' holder='1092' name='putTreeVal' return='1092' arguments='1081 1087 962 969 969' flags='16' bytes='314' iicount='1'/>
<call method='1093' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='1090' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='964' name='void'/>
<method id='1094' holder='1081' name='treeifyBin' return='964' arguments='1087 962' flags='16' bytes='110' iicount='1'/>
<call method='1094' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='1091' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='1096' holder='1081' name='afterNodeAccess' return='964' arguments='1086' flags='0' bytes='1' iicount='1'/>
<call method='1096' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='1097' holder='1081' name='afterNodeInsertion' return='964' arguments='956' flags='0' bytes='1' iicount='854'/>
<call method='1097' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.280'/>
</phase>
<parse_done stamp='0.280'/>
</parse>
<phase name='optimize_blocks' stamp='0.280'>
<phase_done name='optimize_blocks' stamp='0.280'/>
</phase>
<phase name='gvn' stamp='0.281'>
<phase_done name='gvn' stamp='0.281'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.281'>
<phase_done name='rangeCheckElimination' stamp='0.281'/>
</phase>
<phase name='optimize_null_checks' stamp='0.281'>
<phase_done name='optimize_null_checks' stamp='0.281'/>
</phase>
<phase_done name='buildIR' stamp='0.281'/>
</phase>
<phase name='emit_lir' stamp='0.281'>
<phase name='lirGeneration' stamp='0.281'>
<phase_done name='lirGeneration' stamp='0.281'/>
</phase>
<phase name='linearScan' stamp='0.281'>
<phase_done name='linearScan' stamp='0.281'/>
</phase>
<phase_done name='emit_lir' stamp='0.281'/>
</phase>
<phase name='codeemit' stamp='0.281'>
<phase_done name='codeemit' stamp='0.281'/>
</phase>
<phase name='codeinstall' stamp='0.281'>
<phase_done name='codeinstall' stamp='0.281'/>
</phase>
<code_cache total_blobs='408' nmethods='76' adapters='194' free_code_cache='250506112'/>
<task_done success='1' nmsize='4824' count='1458' backedge_count='126' stamp='0.302'/>
</task>
<task compile_id='72' method='jdk.internal.org.objectweb.asm.Item set (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' bytes='219' count='421' iicount='421' level='3' stamp='0.302'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='421' stamp='0.302'/>
</task>
<task compile_id='70' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='256' iicount='256' level='3' stamp='0.302'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='256' stamp='0.302'/>
</task>
<task compile_id='91' method='java.util.HashMap$HashIterator nextNode ()Ljava/util/HashMap$Node;' bytes='100' count='963' backedge_count='1892' iicount='963' level='3' stamp='0.302'>
<phase name='setup' stamp='0.302'>
<phase_done name='setup' stamp='0.302'/>
</phase>
<phase name='buildIR' stamp='0.302'>
<klass id='1082' name='java.util.HashMap$Node' flags='8'/>
<klass id='1081' name='java.util.HashMap$HashIterator' flags='1024'/>
<method id='1083' holder='1081' name='nextNode' return='1082' flags='16' bytes='100' iicount='964'/>
<parse method='1083'  stamp='0.302'>
<phase name='parse_hir' stamp='0.302'>
<bc code='183' bci='23'/>
<type id='964' name='void'/>
<klass id='1086' name='java.util.ConcurrentModificationException' unloaded='1'/>
<method id='1087' holder='1086' name='&lt;init&gt;' return='964' unloaded='1'/>
<call method='1087' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='35'/>
<klass id='1088' name='java.util.NoSuchElementException' unloaded='1'/>
<method id='1089' holder='1088' name='&lt;init&gt;' return='964' unloaded='1'/>
<call method='1089' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.302'/>
</phase>
<parse_done stamp='0.302'/>
</parse>
<phase name='optimize_blocks' stamp='0.302'>
<phase_done name='optimize_blocks' stamp='0.302'/>
</phase>
<phase name='gvn' stamp='0.302'>
<phase_done name='gvn' stamp='0.302'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.302'>
<phase_done name='rangeCheckElimination' stamp='0.302'/>
</phase>
<phase name='optimize_null_checks' stamp='0.302'>
<phase_done name='optimize_null_checks' stamp='0.302'/>
</phase>
<phase_done name='buildIR' stamp='0.302'/>
</phase>
<phase name='emit_lir' stamp='0.302'>
<phase name='lirGeneration' stamp='0.302'>
<phase_done name='lirGeneration' stamp='0.302'/>
</phase>
<phase name='linearScan' stamp='0.302'>
<phase_done name='linearScan' stamp='0.302'/>
</phase>
<phase_done name='emit_lir' stamp='0.302'/>
</phase>
<phase name='codeemit' stamp='0.302'>
<phase_done name='codeemit' stamp='0.302'/>
</phase>
<phase name='codeinstall' stamp='0.302'>
<phase_done name='codeinstall' stamp='0.302'/>
</phase>
<code_cache total_blobs='409' nmethods='77' adapters='194' free_code_cache='250503040'/>
<task_done success='1' nmsize='1464' count='982' backedge_count='1919' stamp='0.309'/>
</task>
<task compile_id='96' method='java.lang.module.ModuleDescriptor$Exports isQualified ()Z' bytes='18' count='1485' iicount='1485' level='3' stamp='0.309'>
<phase name='setup' stamp='0.309'>
<phase_done name='setup' stamp='0.309'/>
</phase>
<phase name='buildIR' stamp='0.309'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor$Exports' flags='25'/>
<method id='1082' holder='1081' name='isQualified' return='956' flags='1' bytes='18' iicount='1500'/>
<parse method='1082'  stamp='0.309'>
<phase name='parse_hir' stamp='0.309'>
<bc code='185' bci='4'/>
<klass id='1086' name='java.util.Set' flags='1537'/>
<method id='1087' holder='1086' name='isEmpty' return='956' flags='1025' bytes='0' iicount='1'/>
<call method='1087' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.309'/>
</phase>
<parse_done stamp='0.309'/>
</parse>
<phase name='optimize_blocks' stamp='0.309'>
<phase_done name='optimize_blocks' stamp='0.309'/>
</phase>
<phase name='gvn' stamp='0.309'>
<phase_done name='gvn' stamp='0.309'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.309'>
<phase_done name='rangeCheckElimination' stamp='0.309'/>
</phase>
<phase name='optimize_null_checks' stamp='0.309'>
<phase_done name='optimize_null_checks' stamp='0.309'/>
</phase>
<phase_done name='buildIR' stamp='0.309'/>
</phase>
<phase name='emit_lir' stamp='0.309'>
<phase name='lirGeneration' stamp='0.309'>
<phase_done name='lirGeneration' stamp='0.309'/>
</phase>
<phase name='linearScan' stamp='0.309'>
<phase_done name='linearScan' stamp='0.309'/>
</phase>
<phase_done name='emit_lir' stamp='0.309'/>
</phase>
<phase name='codeemit' stamp='0.309'>
<phase_done name='codeemit' stamp='0.309'/>
</phase>
<phase name='codeinstall' stamp='0.309'>
<phase_done name='codeinstall' stamp='0.313'/>
</phase>
<code_cache total_blobs='413' nmethods='79' adapters='194' free_code_cache='250499840'/>
<task_done success='1' nmsize='648' count='2033' stamp='0.316'/>
</task>
<task compile_id='76' method='java.util.Spliterators$IteratorSpliterator characteristics ()I' bytes='5' count='142' iicount='142' level='1' stamp='0.316'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='142' stamp='0.316'/>
</task>
<task compile_id='75' method='java.util.stream.FindOps$FindSink cancellationRequested ()Z' bytes='5' count='189' iicount='189' level='1' stamp='0.316'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='189' stamp='0.316'/>
</task>
<task compile_id='85' method='java.util.HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='2113' iicount='2113' level='3' stamp='0.316'>
<phase name='setup' stamp='0.316'>
<phase_done name='setup' stamp='0.316'/>
</phase>
<phase name='buildIR' stamp='0.316'>
<type id='964' name='void'/>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap$Node' flags='8'/>
<method id='1082' holder='1081' name='&lt;init&gt;' return='964' arguments='962 969 969 1081' flags='0' bytes='26' iicount='2118'/>
<parse method='1082'  stamp='0.316'>
<phase name='parse_hir' stamp='0.316'>
<bc code='183' bci='1'/>
<method id='1084' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='2070'/>
<call method='1084' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1081'/>
<parse_done stamp='0.316'/>
</parse>
<phase_done name='parse_hir' stamp='0.316'/>
</phase>
<parse_done stamp='0.316'/>
</parse>
<phase name='optimize_blocks' stamp='0.316'>
<phase_done name='optimize_blocks' stamp='0.316'/>
</phase>
<phase name='gvn' stamp='0.316'>
<phase_done name='gvn' stamp='0.316'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.316'>
<phase_done name='rangeCheckElimination' stamp='0.316'/>
</phase>
<phase name='optimize_null_checks' stamp='0.316'>
<phase_done name='optimize_null_checks' stamp='0.316'/>
</phase>
<phase_done name='buildIR' stamp='0.316'/>
</phase>
<phase name='emit_lir' stamp='0.316'>
<phase name='lirGeneration' stamp='0.316'>
<phase_done name='lirGeneration' stamp='0.316'/>
</phase>
<phase name='linearScan' stamp='0.316'>
<phase_done name='linearScan' stamp='0.316'/>
</phase>
<phase_done name='emit_lir' stamp='0.316'/>
</phase>
<phase name='codeemit' stamp='0.316'>
<phase_done name='codeemit' stamp='0.316'/>
</phase>
<phase name='codeinstall' stamp='0.316'>
<dependency type='no_finalizable_subclasses' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.316'/>
</phase>
<code_cache total_blobs='414' nmethods='80' adapters='194' free_code_cache='250498304'/>
<task_done success='1' nmsize='752' count='2288' inlined_bytes='1' stamp='0.320'/>
</task>
<task compile_id='87' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='2236' iicount='2236' level='3' stamp='0.320'>
<phase name='setup' stamp='0.320'>
<phase_done name='setup' stamp='0.320'/>
</phase>
<phase name='buildIR' stamp='0.320'>
<klass id='1082' name='java.util.HashMap$Node' flags='8'/>
<type id='962' name='int'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1083' holder='1081' name='newNode' return='1082' arguments='962 969 969 1082' flags='0' bytes='13' iicount='2284'/>
<parse method='1083'  stamp='0.320'>
<phase name='parse_hir' stamp='0.320'>
<bc code='183' bci='9'/>
<type id='964' name='void'/>
<method id='1085' holder='1082' name='&lt;init&gt;' return='964' arguments='962 969 969 1082' flags='0' bytes='26' compile_id='85' compiler='c1' level='3' iicount='2419'/>
<call method='1085' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1085'>
<bc code='183' bci='1'/>
<method id='1087' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='2294'/>
<call method='1087' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1087'>
<parse_done stamp='0.320'/>
</parse>
<parse_done stamp='0.320'/>
</parse>
<phase_done name='parse_hir' stamp='0.320'/>
</phase>
<parse_done stamp='0.320'/>
</parse>
<phase name='optimize_blocks' stamp='0.320'>
<phase_done name='optimize_blocks' stamp='0.320'/>
</phase>
<phase name='gvn' stamp='0.320'>
<phase_done name='gvn' stamp='0.320'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.320'>
<phase_done name='rangeCheckElimination' stamp='0.320'/>
</phase>
<phase name='optimize_null_checks' stamp='0.320'>
<phase_done name='optimize_null_checks' stamp='0.320'/>
</phase>
<phase_done name='buildIR' stamp='0.320'/>
</phase>
<phase name='emit_lir' stamp='0.320'>
<phase name='lirGeneration' stamp='0.320'>
<phase_done name='lirGeneration' stamp='0.320'/>
</phase>
<phase name='linearScan' stamp='0.320'>
<phase_done name='linearScan' stamp='0.320'/>
</phase>
<phase_done name='emit_lir' stamp='0.320'/>
</phase>
<phase name='codeemit' stamp='0.320'>
<phase_done name='codeemit' stamp='0.320'/>
</phase>
<phase name='codeinstall' stamp='0.320'>
<phase_done name='codeinstall' stamp='0.321'/>
</phase>
<code_cache total_blobs='418' nmethods='82' adapters='194' free_code_cache='250495616'/>
<task_done success='1' nmsize='944' count='2617' inlined_bytes='27' stamp='0.326'/>
</task>
<task compile_id='88' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='2630' iicount='2630' level='3' stamp='0.326'>
<phase name='setup' stamp='0.326'>
<phase_done name='setup' stamp='0.326'/>
</phase>
<phase name='buildIR' stamp='0.326'>
<type id='964' name='void'/>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='afterNodeInsertion' return='964' arguments='956' flags='0' bytes='1' iicount='2651'/>
<parse method='1082'  stamp='0.326'>
<phase name='parse_hir' stamp='0.326'>
<phase_done name='parse_hir' stamp='0.326'/>
</phase>
<parse_done stamp='0.326'/>
</parse>
<phase name='optimize_blocks' stamp='0.326'>
<phase_done name='optimize_blocks' stamp='0.326'/>
</phase>
<phase name='gvn' stamp='0.326'>
<phase_done name='gvn' stamp='0.326'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.326'>
<phase_done name='rangeCheckElimination' stamp='0.326'/>
</phase>
<phase name='optimize_null_checks' stamp='0.326'>
<phase_done name='optimize_null_checks' stamp='0.326'/>
</phase>
<phase_done name='buildIR' stamp='0.326'/>
</phase>
<phase name='emit_lir' stamp='0.326'>
<phase name='lirGeneration' stamp='0.326'>
<phase_done name='lirGeneration' stamp='0.326'/>
</phase>
<phase name='linearScan' stamp='0.326'>
<phase_done name='linearScan' stamp='0.326'/>
</phase>
<phase_done name='emit_lir' stamp='0.326'/>
</phase>
<phase name='codeemit' stamp='0.326'>
<phase_done name='codeemit' stamp='0.326'/>
</phase>
<phase name='codeinstall' stamp='0.326'>
<phase_done name='codeinstall' stamp='0.327'/>
</phase>
<code_cache total_blobs='422' nmethods='84' adapters='194' free_code_cache='250493952'/>
<task_done success='1' nmsize='336' count='2744' stamp='0.328'/>
</task>
<task compile_id='101' method='java.util.HashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1551' iicount='1551' level='3' stamp='0.328'>
<phase name='setup' stamp='0.328'>
<phase_done name='setup' stamp='0.328'/>
</phase>
<phase name='buildIR' stamp='0.328'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='putIfAbsent' return='969' arguments='969 969' flags='1' bytes='13' iicount='1567'/>
<parse method='1082'  stamp='0.328'>
<phase name='parse_hir' stamp='0.328'>
<bc code='184' bci='2'/>
<type id='962' name='int'/>
<method id='1084' holder='1081' name='hash' return='962' arguments='969' flags='24' bytes='20' compile_id='77' compiler='c1' level='3' iicount='4556'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='182' bci='9'/>
<method id='1087' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1087' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.329'/>
</parse>
<bc code='182' bci='9'/>
<type id='956' name='boolean'/>
<method id='1088' holder='1081' name='putVal' return='969' arguments='962 969 969 956 956' flags='16' bytes='300' compile_id='83' compiler='c1' level='3' iicount='2968'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.329'/>
</phase>
<parse_done stamp='0.329'/>
</parse>
<phase name='optimize_blocks' stamp='0.329'>
<phase_done name='optimize_blocks' stamp='0.329'/>
</phase>
<phase name='gvn' stamp='0.329'>
<phase_done name='gvn' stamp='0.329'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.329'>
<phase_done name='rangeCheckElimination' stamp='0.329'/>
</phase>
<phase name='optimize_null_checks' stamp='0.329'>
<phase_done name='optimize_null_checks' stamp='0.329'/>
</phase>
<phase_done name='buildIR' stamp='0.329'/>
</phase>
<phase name='emit_lir' stamp='0.329'>
<phase name='lirGeneration' stamp='0.329'>
<phase_done name='lirGeneration' stamp='0.329'/>
</phase>
<phase name='linearScan' stamp='0.329'>
<phase_done name='linearScan' stamp='0.329'/>
</phase>
<phase_done name='emit_lir' stamp='0.329'/>
</phase>
<phase name='codeemit' stamp='0.329'>
<phase_done name='codeemit' stamp='0.329'/>
</phase>
<phase name='codeinstall' stamp='0.329'>
<phase_done name='codeinstall' stamp='0.329'/>
</phase>
<code_cache total_blobs='423' nmethods='85' adapters='194' free_code_cache='250492160'/>
<task_done success='1' nmsize='856' count='2186' inlined_bytes='20' stamp='0.333'/>
</task>
<task compile_id='106' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='3587' iicount='3587' level='1' stamp='0.333'>
<phase name='setup' stamp='0.333'>
<phase_done name='setup' stamp='0.333'/>
</phase>
<phase name='buildIR' stamp='0.333'>
<type id='964' name='void'/>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='afterNodeInsertion' return='964' arguments='956' flags='0' bytes='1' compile_id='88' compiler='c1' level='3' iicount='3592'/>
<parse method='1082'  stamp='0.333'>
<phase name='parse_hir' stamp='0.333'>
<phase_done name='parse_hir' stamp='0.333'/>
</phase>
<parse_done stamp='0.333'/>
</parse>
<phase name='optimize_blocks' stamp='0.333'>
<phase_done name='optimize_blocks' stamp='0.333'/>
</phase>
<phase name='gvn' stamp='0.333'>
<phase_done name='gvn' stamp='0.333'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.333'>
<phase_done name='rangeCheckElimination' stamp='0.333'/>
</phase>
<phase name='optimize_null_checks' stamp='0.333'>
<phase_done name='optimize_null_checks' stamp='0.333'/>
</phase>
<phase_done name='buildIR' stamp='0.333'/>
</phase>
<phase name='emit_lir' stamp='0.333'>
<phase name='lirGeneration' stamp='0.333'>
<phase_done name='lirGeneration' stamp='0.333'/>
</phase>
<phase name='linearScan' stamp='0.333'>
<phase_done name='linearScan' stamp='0.333'/>
</phase>
<phase_done name='emit_lir' stamp='0.333'/>
</phase>
<phase name='codeemit' stamp='0.333'>
<phase_done name='codeemit' stamp='0.333'/>
</phase>
<phase name='codeinstall' stamp='0.333'>
<phase_done name='codeinstall' stamp='0.333'/>
</phase>
<code_cache total_blobs='424' nmethods='86' adapters='194' free_code_cache='250491264'/>
<task_done success='1' nmsize='272' count='3657' stamp='0.334'/>
</task>
<task compile_id='98' method='java.util.AbstractCollection isEmpty ()Z' bytes='13' count='2284' iicount='2284' level='3' stamp='0.334'>
<phase name='setup' stamp='0.334'>
<phase_done name='setup' stamp='0.334'/>
</phase>
<phase name='buildIR' stamp='0.334'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.AbstractCollection' flags='1025'/>
<method id='1082' holder='1081' name='isEmpty' return='956' flags='1' bytes='13' iicount='2284'/>
<parse method='1082'  stamp='0.334'>
<phase name='parse_hir' stamp='0.334'>
<bc code='182' bci='1'/>
<type id='962' name='int'/>
<method id='1086' holder='1081' name='size' return='962' flags='1025' bytes='0' iicount='1'/>
<call method='1086' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.334'/>
</phase>
<parse_done stamp='0.334'/>
</parse>
<phase name='optimize_blocks' stamp='0.334'>
<phase_done name='optimize_blocks' stamp='0.334'/>
</phase>
<phase name='gvn' stamp='0.334'>
<phase_done name='gvn' stamp='0.334'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.334'>
<phase_done name='rangeCheckElimination' stamp='0.334'/>
</phase>
<phase name='optimize_null_checks' stamp='0.334'>
<phase_done name='optimize_null_checks' stamp='0.334'/>
</phase>
<phase_done name='buildIR' stamp='0.334'/>
</phase>
<phase name='emit_lir' stamp='0.334'>
<phase name='lirGeneration' stamp='0.334'>
<phase_done name='lirGeneration' stamp='0.334'/>
</phase>
<phase name='linearScan' stamp='0.334'>
<phase_done name='linearScan' stamp='0.334'/>
</phase>
<phase_done name='emit_lir' stamp='0.334'/>
</phase>
<phase name='codeemit' stamp='0.334'>
<phase_done name='codeemit' stamp='0.334'/>
</phase>
<phase name='codeinstall' stamp='0.334'>
<phase_done name='codeinstall' stamp='0.334'/>
</phase>
<code_cache total_blobs='425' nmethods='87' adapters='194' free_code_cache='250489856'/>
<task_done success='1' nmsize='648' count='2472' stamp='0.337'/>
</task>
<task compile_id='95' method='java.lang.module.ModuleDescriptor$Exports source ()Ljava/lang/String;' bytes='5' count='2471' iicount='2471' level='1' stamp='0.337'>
<phase name='setup' stamp='0.337'>
<phase_done name='setup' stamp='0.337'/>
</phase>
<phase name='buildIR' stamp='0.337'>
<klass id='970' name='java.lang.String' flags='17'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor$Exports' flags='25'/>
<method id='1082' holder='1081' name='source' return='970' flags='1' bytes='5' iicount='2500'/>
<parse method='1082'  stamp='0.337'>
<phase name='parse_hir' stamp='0.337'>
<phase_done name='parse_hir' stamp='0.337'/>
</phase>
<parse_done stamp='0.337'/>
</parse>
<phase name='optimize_blocks' stamp='0.337'>
<phase_done name='optimize_blocks' stamp='0.337'/>
</phase>
<phase name='gvn' stamp='0.337'>
<phase_done name='gvn' stamp='0.337'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.337'>
<phase_done name='rangeCheckElimination' stamp='0.337'/>
</phase>
<phase name='optimize_null_checks' stamp='0.337'>
<phase_done name='optimize_null_checks' stamp='0.337'/>
</phase>
<phase_done name='buildIR' stamp='0.337'/>
</phase>
<phase name='emit_lir' stamp='0.337'>
<phase name='lirGeneration' stamp='0.337'>
<phase_done name='lirGeneration' stamp='0.337'/>
</phase>
<phase name='linearScan' stamp='0.337'>
<phase_done name='linearScan' stamp='0.337'/>
</phase>
<phase_done name='emit_lir' stamp='0.337'/>
</phase>
<phase name='codeemit' stamp='0.337'>
<phase_done name='codeemit' stamp='0.337'/>
</phase>
<phase name='codeinstall' stamp='0.337'>
<phase_done name='codeinstall' stamp='0.340'/>
</phase>
<code_cache total_blobs='429' nmethods='89' adapters='194' free_code_cache='250487424'/>
<task_done success='1' nmsize='272' count='2866' stamp='0.342'/>
</task>
<task compile_id='93' method='java.util.Collections$EmptySet isEmpty ()Z' bytes='2' count='3060' iicount='3060' level='1' stamp='0.342'>
<phase name='setup' stamp='0.342'>
<phase_done name='setup' stamp='0.342'/>
</phase>
<phase name='buildIR' stamp='0.342'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.Collections$EmptySet' flags='10'/>
<method id='1082' holder='1081' name='isEmpty' return='956' flags='1' bytes='2' iicount='3072'/>
<parse method='1082'  stamp='0.342'>
<phase name='parse_hir' stamp='0.342'>
<phase_done name='parse_hir' stamp='0.342'/>
</phase>
<parse_done stamp='0.342'/>
</parse>
<phase name='optimize_blocks' stamp='0.342'>
<phase_done name='optimize_blocks' stamp='0.342'/>
</phase>
<phase name='gvn' stamp='0.342'>
<phase_done name='gvn' stamp='0.342'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.342'>
<phase_done name='rangeCheckElimination' stamp='0.342'/>
</phase>
<phase name='optimize_null_checks' stamp='0.342'>
<phase_done name='optimize_null_checks' stamp='0.342'/>
</phase>
<phase_done name='buildIR' stamp='0.342'/>
</phase>
<phase name='emit_lir' stamp='0.342'>
<phase name='lirGeneration' stamp='0.342'>
<phase_done name='lirGeneration' stamp='0.342'/>
</phase>
<phase name='linearScan' stamp='0.342'>
<phase_done name='linearScan' stamp='0.342'/>
</phase>
<phase_done name='emit_lir' stamp='0.342'/>
</phase>
<phase name='codeemit' stamp='0.342'>
<phase_done name='codeemit' stamp='0.342'/>
</phase>
<phase name='codeinstall' stamp='0.342'>
<phase_done name='codeinstall' stamp='0.345'/>
</phase>
<code_cache total_blobs='433' nmethods='91' adapters='194' free_code_cache='250484992'/>
<task_done success='1' nmsize='272' count='3129' stamp='0.346'/>
</task>
<task compile_id='94' method='java.lang.module.ModuleDescriptor$Exports targets ()Ljava/util/Set;' bytes='5' count='2974' iicount='2974' level='1' stamp='0.346'>
<phase name='setup' stamp='0.346'>
<phase_done name='setup' stamp='0.346'/>
</phase>
<phase name='buildIR' stamp='0.346'>
<klass id='1082' name='java.util.Set' flags='1537'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor$Exports' flags='25'/>
<method id='1083' holder='1081' name='targets' return='1082' flags='1' bytes='5' iicount='3030'/>
<parse method='1083'  stamp='0.346'>
<phase name='parse_hir' stamp='0.346'>
<phase_done name='parse_hir' stamp='0.346'/>
</phase>
<parse_done stamp='0.346'/>
</parse>
<phase name='optimize_blocks' stamp='0.346'>
<phase_done name='optimize_blocks' stamp='0.346'/>
</phase>
<phase name='gvn' stamp='0.346'>
<phase_done name='gvn' stamp='0.346'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.346'>
<phase_done name='rangeCheckElimination' stamp='0.346'/>
</phase>
<phase name='optimize_null_checks' stamp='0.346'>
<phase_done name='optimize_null_checks' stamp='0.346'/>
</phase>
<phase_done name='buildIR' stamp='0.347'/>
</phase>
<phase name='emit_lir' stamp='0.347'>
<phase name='lirGeneration' stamp='0.347'>
<phase_done name='lirGeneration' stamp='0.347'/>
</phase>
<phase name='linearScan' stamp='0.347'>
<phase_done name='linearScan' stamp='0.347'/>
</phase>
<phase_done name='emit_lir' stamp='0.347'/>
</phase>
<phase name='codeemit' stamp='0.347'>
<phase_done name='codeemit' stamp='0.347'/>
</phase>
<phase name='codeinstall' stamp='0.347'>
<phase_done name='codeinstall' stamp='0.347'/>
</phase>
<code_cache total_blobs='436' nmethods='92' adapters='194' free_code_cache='250472576'/>
<task_done success='1' nmsize='272' count='3086' stamp='0.348'/>
</task>
<task compile_id='99' method='java.util.ImmutableCollections$Set12 size ()I' bytes='13' count='2722' iicount='2722' level='3' stamp='0.348'>
<phase name='setup' stamp='0.348'>
<phase_done name='setup' stamp='0.348'/>
</phase>
<phase name='buildIR' stamp='0.348'>
<type id='962' name='int'/>
<klass id='1081' name='java.util.ImmutableCollections$Set12' flags='24'/>
<method id='1082' holder='1081' name='size' return='962' flags='1' bytes='13' iicount='2722'/>
<parse method='1082'  stamp='0.348'>
<phase name='parse_hir' stamp='0.348'>
<phase_done name='parse_hir' stamp='0.348'/>
</phase>
<parse_done stamp='0.348'/>
</parse>
<phase name='optimize_blocks' stamp='0.348'>
<phase_done name='optimize_blocks' stamp='0.348'/>
</phase>
<phase name='gvn' stamp='0.348'>
<phase_done name='gvn' stamp='0.348'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.348'>
<phase_done name='rangeCheckElimination' stamp='0.348'/>
</phase>
<phase name='optimize_null_checks' stamp='0.348'>
<phase_done name='optimize_null_checks' stamp='0.348'/>
</phase>
<phase_done name='buildIR' stamp='0.348'/>
</phase>
<phase name='emit_lir' stamp='0.348'>
<phase name='lirGeneration' stamp='0.348'>
<phase_done name='lirGeneration' stamp='0.348'/>
</phase>
<phase name='linearScan' stamp='0.348'>
<phase_done name='linearScan' stamp='0.348'/>
</phase>
<phase_done name='emit_lir' stamp='0.348'/>
</phase>
<phase name='codeemit' stamp='0.348'>
<phase_done name='codeemit' stamp='0.348'/>
</phase>
<phase name='codeinstall' stamp='0.348'>
<phase_done name='codeinstall' stamp='0.349'/>
</phase>
<code_cache total_blobs='438' nmethods='94' adapters='194' free_code_cache='250482176'/>
<task_done success='1' nmsize='464' count='2938' stamp='0.351'/>
</task>
<task compile_id='114' method='java.util.HashMap resize ()[Ljava/util/HashMap$Node;' bytes='356' count='460' backedge_count='10784' iicount='460' level='3' stamp='0.351'>
<phase name='setup' stamp='0.351'>
<phase_done name='setup' stamp='0.351'/>
</phase>
<phase name='buildIR' stamp='0.351'>
<klass id='1083' name='[Ljava.util.HashMap$Node;' flags='1040'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1084' holder='1081' name='resize' return='1083' flags='16' bytes='356' iicount='460'/>
<parse method='1084'  stamp='0.351'>
<phase name='parse_hir' stamp='0.351'>
<bc code='182' bci='217'/>
<type id='964' name='void'/>
<type id='962' name='int'/>
<klass id='1086' name='java.util.HashMap$TreeNode' flags='24'/>
<method id='1087' holder='1086' name='split' return='964' arguments='1081 1083 962 962' flags='16' bytes='218' iicount='1'/>
<call method='1087' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.352'/>
</phase>
<parse_done stamp='0.352'/>
</parse>
<phase name='optimize_blocks' stamp='0.352'>
<phase_done name='optimize_blocks' stamp='0.352'/>
</phase>
<phase name='gvn' stamp='0.352'>
<phase_done name='gvn' stamp='0.352'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.352'>
<phase_done name='rangeCheckElimination' stamp='0.352'/>
</phase>
<phase name='optimize_null_checks' stamp='0.352'>
<phase_done name='optimize_null_checks' stamp='0.352'/>
</phase>
<phase_done name='buildIR' stamp='0.352'/>
</phase>
<phase name='emit_lir' stamp='0.352'>
<phase name='lirGeneration' stamp='0.352'>
<phase_done name='lirGeneration' stamp='0.352'/>
</phase>
<phase name='linearScan' stamp='0.352'>
<phase_done name='linearScan' stamp='0.352'/>
</phase>
<phase_done name='emit_lir' stamp='0.352'/>
</phase>
<phase name='codeemit' stamp='0.352'>
<phase_done name='codeemit' stamp='0.352'/>
</phase>
<phase name='codeinstall' stamp='0.352'>
<phase_done name='codeinstall' stamp='0.353'/>
</phase>
<code_cache total_blobs='442' nmethods='96' adapters='194' free_code_cache='250472320'/>
<task_done success='1' nmsize='5576' count='471' backedge_count='11219' stamp='0.377'/>
</task>
<task compile_id='89' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1084' iicount='1084' level='3' stamp='0.378'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1084' stamp='0.378'/>
</task>
<task compile_id='84' method='java.lang.module.ModuleDescriptor requires ()Ljava/util/Set;' bytes='5' count='180' iicount='180' level='1' stamp='0.378'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='180' stamp='0.378'/>
</task>
<task compile_id='81' method='java.lang.module.ModuleDescriptor$Requires name ()Ljava/lang/String;' bytes='5' count='396' iicount='396' level='1' stamp='0.378'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='396' stamp='0.378'/>
</task>
<task compile_id='80' method='java.lang.module.ModuleDescriptor$Requires modifiers ()Ljava/util/Set;' bytes='5' count='264' iicount='264' level='1' stamp='0.378'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='264' stamp='0.378'/>
</task>
<task compile_id='102' method='java.util.ImmutableCollections$Set12 contains (Ljava/lang/Object;)Z' bytes='28' count='2770' iicount='2770' level='3' stamp='0.378'>
<phase name='setup' stamp='0.378'>
<phase_done name='setup' stamp='0.378'/>
</phase>
<phase name='buildIR' stamp='0.378'>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.ImmutableCollections$Set12' flags='24'/>
<method id='1082' holder='1081' name='contains' return='956' arguments='969' flags='1' bytes='28' iicount='2770'/>
<parse method='1082'  stamp='0.378'>
<phase name='parse_hir' stamp='0.378'>
<bc code='182' bci='5'/>
<method id='1084' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='116'/>
<call method='1084' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='16'/>
<call method='1084' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.378'/>
</phase>
<parse_done stamp='0.378'/>
</parse>
<phase name='optimize_blocks' stamp='0.378'>
<phase_done name='optimize_blocks' stamp='0.378'/>
</phase>
<phase name='gvn' stamp='0.378'>
<phase_done name='gvn' stamp='0.378'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.378'>
<phase_done name='rangeCheckElimination' stamp='0.378'/>
</phase>
<phase name='optimize_null_checks' stamp='0.378'>
<phase_done name='optimize_null_checks' stamp='0.378'/>
</phase>
<phase_done name='buildIR' stamp='0.378'/>
</phase>
<phase name='emit_lir' stamp='0.378'>
<phase name='lirGeneration' stamp='0.378'>
<phase_done name='lirGeneration' stamp='0.378'/>
</phase>
<phase name='linearScan' stamp='0.378'>
<phase_done name='linearScan' stamp='0.378'/>
</phase>
<phase_done name='emit_lir' stamp='0.378'/>
</phase>
<phase name='codeemit' stamp='0.378'>
<phase_done name='codeemit' stamp='0.378'/>
</phase>
<phase name='codeinstall' stamp='0.378'>
<phase_done name='codeinstall' stamp='0.378'/>
</phase>
<code_cache total_blobs='445' nmethods='97' adapters='194' free_code_cache='250456192'/>
<task_done success='1' nmsize='920' count='2770' stamp='0.382'/>
</task>
<task compile_id='120' method='java.util.concurrent.ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='432' count='832' backedge_count='13' iicount='832' level='3' stamp='0.382'>
<phase name='setup' stamp='0.382'>
<phase_done name='setup' stamp='0.382'/>
</phase>
<phase name='buildIR' stamp='0.382'>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1082' holder='1081' name='putVal' return='969' arguments='969 969 956' flags='16' bytes='432' iicount='835'/>
<parse method='1082'  stamp='0.382'>
<phase name='parse_hir' stamp='0.382'>
<bc code='182' bci='17'/>
<type id='962' name='int'/>
<method id='1084' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1084' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='20'/>
<method id='1085' holder='1081' name='spread' return='962' arguments='962' flags='24' bytes='10' compile_id='36' compiler='c1' level='3' iicount='1174'/>
<call method='1085' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1085'>
<parse_done stamp='0.382'/>
</parse>
<bc code='184' bci='69'/>
<klass id='1087' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1088' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1089' holder='1081' name='tabAt' return='1087' arguments='1088 962' flags='24' bytes='22' compile_id='1' compiler='c1' level='3' iicount='1495'/>
<call method='1089' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<bc code='182' bci='15'/>
<type id='963' name='long'/>
<klass id='1040' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1094' holder='1040' name='getObjectAcquire' return='969' arguments='969 963' flags='17' bytes='7' compile_id='2' compiler='c1' level='3' iicount='1495'/>
<call method='1094' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1094'>
<bc code='182' bci='3'/>
<method id='1096' holder='1040' name='getObjectVolatile' return='969' arguments='969 963' flags='257' bytes='0' compile_id='3' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1096' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.382'/>
</parse>
<parse_done stamp='0.382'/>
</parse>
<bc code='183' bci='91'/>
<type id='964' name='void'/>
<method id='1097' holder='1087' name='&lt;init&gt;' return='964' arguments='962 969 969' flags='0' bytes='20' compile_id='35' compiler='c1' level='3' iicount='837'/>
<call method='1097' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1097'>
<bc code='183' bci='1'/>
<method id='1099' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='6337'/>
<call method='1099' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1099'>
<parse_done stamp='0.382'/>
</parse>
<parse_done stamp='0.382'/>
</parse>
<bc code='184' bci='94'/>
<method id='1101' holder='1081' name='casTabAt' return='956' arguments='1088 962 1087 1087' flags='24' bytes='21' compile_id='39' compiler='c1' level='3' iicount='739'/>
<call method='1101' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1101'>
<bc code='182' bci='17'/>
<method id='1103' holder='1040' name='compareAndSetObject' return='956' arguments='969 963 969 969' flags='273' bytes='0' compile_id='37' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1103' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.382'/>
</parse>
<bc code='182' bci='120'/>
<method id='1104' holder='1081' name='helpTransfer' return='1088' arguments='1088 1087' flags='16' bytes='130' iicount='1'/>
<call method='1104' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='159'/>
<method id='1106' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='116'/>
<call method='1106' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='192'/>
<call method='1089' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<bc code='182' bci='15'/>
<call method='1094' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1094'>
<bc code='182' bci='3'/>
<call method='1096' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.383'/>
</parse>
<parse_done stamp='0.383'/>
</parse>
<bc code='182' bci='242'/>
<call method='1106' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='293'/>
<call method='1097' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1097'>
<bc code='183' bci='1'/>
<call method='1099' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1099'>
<parse_done stamp='0.383'/>
</parse>
<parse_done stamp='0.383'/>
</parse>
<bc code='182' bci='331'/>
<klass id='1108' name='java.util.concurrent.ConcurrentHashMap$TreeNode' unloaded='1'/>
<klass id='1107' name='java.util.concurrent.ConcurrentHashMap$TreeBin' unloaded='1'/>
<method id='1109' holder='1107' name='putTreeVal' return='1108' arguments='962 969 969' unloaded='1'/>
<call method='1109' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='374'/>
<klass id='970' name='java.lang.String' flags='17'/>
<klass id='1111' name='java.lang.IllegalStateException' unloaded='1'/>
<method id='1113' holder='1111' name='&lt;init&gt;' return='964' arguments='970' unloaded='1'/>
<call method='1113' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='409'/>
<method id='1114' holder='1081' name='treeifyBin' return='964' arguments='1088 962' flags='18' bytes='164' iicount='1'/>
<call method='1114' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='427'/>
<method id='1116' holder='1081' name='addCount' return='964' arguments='963 962' flags='18' bytes='289' compile_id='32' compiler='c1' level='3' iicount='834'/>
<call method='1116' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='49'/>
<method id='1118' holder='1081' name='initTable' return='1088' flags='18' bytes='112' iicount='8'/>
<call method='1118' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<klass id='1077' name='java.lang.NullPointerException' flags='1'/>
<method id='1120' holder='1077' name='&lt;init&gt;' return='964' flags='1' bytes='5' iicount='1'/>
<call method='1120' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<phase_done name='parse_hir' stamp='0.383'/>
</phase>
<parse_done stamp='0.383'/>
</parse>
<phase name='optimize_blocks' stamp='0.383'>
<phase_done name='optimize_blocks' stamp='0.383'/>
</phase>
<phase name='gvn' stamp='0.383'>
<phase_done name='gvn' stamp='0.383'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.383'>
<phase_done name='rangeCheckElimination' stamp='0.383'/>
</phase>
<phase name='optimize_null_checks' stamp='0.383'>
<phase_done name='optimize_null_checks' stamp='0.383'/>
</phase>
<phase_done name='buildIR' stamp='0.383'/>
</phase>
<phase name='emit_lir' stamp='0.383'>
<phase name='lirGeneration' stamp='0.383'>
<phase_done name='lirGeneration' stamp='0.383'/>
</phase>
<phase name='linearScan' stamp='0.383'>
<phase_done name='linearScan' stamp='0.384'/>
</phase>
<phase_done name='emit_lir' stamp='0.384'/>
</phase>
<phase name='codeemit' stamp='0.384'>
<phase_done name='codeemit' stamp='0.384'/>
</phase>
<phase name='codeinstall' stamp='0.384'>
<dependency type='leaf_type' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.401'/>
</phase>
<code_cache total_blobs='447' nmethods='99' adapters='194' free_code_cache='250448768'/>
<task_done success='1' nmsize='8920' count='988' backedge_count='22' inlined_bytes='131' stamp='0.435'/>
</task>
<task compile_id='118' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='130' iicount='130' level='1' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='130' stamp='0.436'/>
</task>
<task compile_id='117' method='java.util.KeyValueHolder getKey ()Ljava/lang/Object;' bytes='5' count='130' iicount='130' level='1' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='130' stamp='0.436'/>
</task>
<task compile_id='116' method='java.util.HashMap$KeyIterator next ()Ljava/lang/Object;' bytes='8' count='791' iicount='791' level='3' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='791' stamp='0.436'/>
</task>
<task compile_id='113' method='java.util.ImmutableCollections$SetN contains (Ljava/lang/Object;)Z' bytes='26' count='1059' iicount='1059' level='3' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1059' stamp='0.436'/>
</task>
<task compile_id='110' method='java.lang.module.ModuleDescriptor uses ()Ljava/util/Set;' bytes='5' count='143' iicount='143' level='1' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='143' stamp='0.436'/>
</task>
<task compile_id='105' method='java.lang.module.ModuleDescriptor exports ()Ljava/util/Set;' bytes='5' count='215' iicount='215' level='1' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='215' stamp='0.436'/>
</task>
<task compile_id='104' method='java.lang.module.ModuleDescriptor provides ()Ljava/util/Set;' bytes='5' count='166' iicount='166' level='1' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='166' stamp='0.436'/>
</task>
<task compile_id='92' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='332' iicount='332' level='1' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='332' stamp='0.436'/>
</task>
<task compile_id='90' method='java.util.HashMap$HashIterator hasNext ()Z' bytes='13' count='1712' iicount='1712' level='3' stamp='0.436'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1712' stamp='0.436'/>
</task>
<task compile_id='121' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='920' iicount='920' level='3' stamp='0.436'>
<phase name='setup' stamp='0.436'>
<phase_done name='setup' stamp='0.436'/>
</phase>
<phase name='buildIR' stamp='0.436'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1082' holder='1081' name='putIfAbsent' return='969' arguments='969 969' flags='1' bytes='8' iicount='920'/>
<parse method='1082'  stamp='0.436'>
<phase name='parse_hir' stamp='0.436'>
<bc code='182' bci='4'/>
<type id='956' name='boolean'/>
<method id='1084' holder='1081' name='putVal' return='969' arguments='969 969 956' flags='16' bytes='432' compile_id='120' compiler='c1' level='3' iicount='988'/>
<call method='1084' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1081'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.436'/>
</phase>
<parse_done stamp='0.436'/>
</parse>
<phase name='optimize_blocks' stamp='0.436'>
<phase_done name='optimize_blocks' stamp='0.436'/>
</phase>
<phase name='gvn' stamp='0.436'>
<phase_done name='gvn' stamp='0.436'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.436'>
<phase_done name='rangeCheckElimination' stamp='0.436'/>
</phase>
<phase name='optimize_null_checks' stamp='0.436'>
<phase_done name='optimize_null_checks' stamp='0.436'/>
</phase>
<phase_done name='buildIR' stamp='0.436'/>
</phase>
<phase name='emit_lir' stamp='0.436'>
<phase name='lirGeneration' stamp='0.436'>
<phase_done name='lirGeneration' stamp='0.436'/>
</phase>
<phase name='linearScan' stamp='0.436'>
<phase_done name='linearScan' stamp='0.436'/>
</phase>
<phase_done name='emit_lir' stamp='0.436'/>
</phase>
<phase name='codeemit' stamp='0.436'>
<phase_done name='codeemit' stamp='0.436'/>
</phase>
<phase name='codeinstall' stamp='0.436'>
<dependency type='leaf_type' ctxk='1081'/>
<phase_done name='codeinstall' stamp='0.436'/>
</phase>
<code_cache total_blobs='448' nmethods='100' adapters='194' free_code_cache='250447744'/>
<task_done success='1' nmsize='392' count='920' stamp='0.438'/>
</task>
<task compile_id='123' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='6047' backedge_count='712' iicount='6047' decompiles='1' unstable_if_traps='1' level='3' stamp='0.438'>
<phase name='setup' stamp='0.438'>
<phase_done name='setup' stamp='0.438'/>
</phase>
<phase name='buildIR' stamp='0.438'>
<klass id='969' name='java.lang.Object' flags='1'/>
<type id='962' name='int'/>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='putVal' return='969' arguments='962 969 969 956 956' flags='16' bytes='300' iicount='6048'/>
<parse method='1082'  stamp='0.438'>
<phase name='parse_hir' stamp='0.438'>
<bc code='182' bci='20'/>
<klass id='1087' name='[Ljava.util.HashMap$Node;' flags='1040'/>
<method id='1088' holder='1081' name='resize' return='1087' flags='16' bytes='356' compile_id='114' compiler='c1' level='3' iicount='480'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='1086' name='java.util.HashMap$Node' flags='8'/>
<method id='1090' holder='1081' name='newNode' return='1086' arguments='962 969 969 1086' flags='0' bytes='13' compile_id='87' compiler='c1' level='3' iicount='5975'/>
<call method='1090' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='1091' holder='969' name='equals' return='956' arguments='969' flags='1' bytes='11' iicount='116'/>
<call method='1091' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='1092' name='java.util.HashMap$TreeNode' flags='24'/>
<method id='1093' holder='1092' name='putTreeVal' return='1092' arguments='1081 1087 962 969 969' flags='16' bytes='314' iicount='1'/>
<call method='1093' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='1090' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='964' name='void'/>
<method id='1094' holder='1081' name='treeifyBin' return='964' arguments='1087 962' flags='16' bytes='110' iicount='1'/>
<call method='1094' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='1091' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='1096' holder='1081' name='afterNodeAccess' return='964' arguments='1086' flags='0' bytes='1' iicount='17'/>
<call method='1096' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='1097' holder='1081' name='afterNodeInsertion' return='964' arguments='956' flags='0' bytes='1' compile_id='106' compiler='c1' level='1' iicount='3657'/>
<call method='1097' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done name='parse_hir' stamp='0.438'/>
</phase>
<parse_done stamp='0.438'/>
</parse>
<phase name='optimize_blocks' stamp='0.438'>
<phase_done name='optimize_blocks' stamp='0.438'/>
</phase>
<phase name='gvn' stamp='0.438'>
<phase_done name='gvn' stamp='0.438'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.438'>
<phase_done name='rangeCheckElimination' stamp='0.438'/>
</phase>
<phase name='optimize_null_checks' stamp='0.438'>
<phase_done name='optimize_null_checks' stamp='0.438'/>
</phase>
<phase_done name='buildIR' stamp='0.438'/>
</phase>
<phase name='emit_lir' stamp='0.438'>
<phase name='lirGeneration' stamp='0.438'>
<phase_done name='lirGeneration' stamp='0.438'/>
</phase>
<phase name='linearScan' stamp='0.438'>
<phase_done name='linearScan' stamp='0.439'/>
</phase>
<phase_done name='emit_lir' stamp='0.439'/>
</phase>
<phase name='codeemit' stamp='0.439'>
<phase_done name='codeemit' stamp='0.439'/>
</phase>
<phase name='codeinstall' stamp='0.439'>
<phase_done name='codeinstall' stamp='0.439'/>
</phase>
<code_cache total_blobs='452' nmethods='102' adapters='194' free_code_cache='250438912'/>
<task_done success='1' nmsize='4824' count='6587' backedge_count='742' stamp='0.459'/>
</task>
<task compile_id='86' method='java.util.HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='2631' iicount='2631' level='3' stamp='0.459'>
<phase name='setup' stamp='0.459'>
<phase_done name='setup' stamp='0.459'/>
</phase>
<phase name='buildIR' stamp='0.459'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='put' return='969' arguments='969 969' flags='1' bytes='13' iicount='2636'/>
<parse method='1082'  stamp='0.459'>
<phase name='parse_hir' stamp='0.459'>
<bc code='184' bci='2'/>
<type id='962' name='int'/>
<method id='1084' holder='1081' name='hash' return='962' arguments='969' flags='24' bytes='20' compile_id='112' compiler='c2' level='4' iicount='7533'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='182' bci='9'/>
<method id='1087' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1087' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.459'/>
</parse>
<bc code='182' bci='9'/>
<type id='956' name='boolean'/>
<method id='1088' holder='1081' name='putVal' return='969' arguments='962 969 969 956 956' flags='16' bytes='300' compile_id='123' compiler='c1' level='3' iicount='6630'/>
<call method='1088' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.459'/>
</phase>
<parse_done stamp='0.459'/>
</parse>
<phase name='optimize_blocks' stamp='0.459'>
<phase_done name='optimize_blocks' stamp='0.459'/>
</phase>
<phase name='gvn' stamp='0.459'>
<phase_done name='gvn' stamp='0.459'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.459'>
<phase_done name='rangeCheckElimination' stamp='0.459'/>
</phase>
<phase name='optimize_null_checks' stamp='0.459'>
<phase_done name='optimize_null_checks' stamp='0.459'/>
</phase>
<phase_done name='buildIR' stamp='0.459'/>
</phase>
<phase name='emit_lir' stamp='0.459'>
<phase name='lirGeneration' stamp='0.459'>
<phase_done name='lirGeneration' stamp='0.459'/>
</phase>
<phase name='linearScan' stamp='0.459'>
<phase_done name='linearScan' stamp='0.459'/>
</phase>
<phase_done name='emit_lir' stamp='0.459'/>
</phase>
<phase name='codeemit' stamp='0.459'>
<phase_done name='codeemit' stamp='0.459'/>
</phase>
<phase name='codeinstall' stamp='0.459'>
<phase_done name='codeinstall' stamp='0.460'/>
</phase>
<code_cache total_blobs='453' nmethods='103' adapters='194' free_code_cache='250437120'/>
<task_done success='1' nmsize='856' count='2760' inlined_bytes='20' stamp='0.463'/>
</task>
<task compile_id='122' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1763' iicount='1763' level='3' stamp='0.463'>
<phase name='setup' stamp='0.463'>
<phase_done name='setup' stamp='0.463'/>
</phase>
<phase name='buildIR' stamp='0.463'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap' flags='1'/>
<method id='1082' holder='1081' name='get' return='969' arguments='969' flags='1' bytes='23' iicount='1763'/>
<parse method='1082'  stamp='0.463'>
<phase name='parse_hir' stamp='0.463'>
<bc code='184' bci='2'/>
<type id='962' name='int'/>
<method id='1084' holder='1081' name='hash' return='962' arguments='969' flags='24' bytes='20' compile_id='112' compiler='c2' level='4' iicount='7554'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<bc code='182' bci='9'/>
<method id='1087' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1087' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.463'/>
</parse>
<bc code='182' bci='6'/>
<klass id='1088' name='java.util.HashMap$Node' flags='8'/>
<method id='1089' holder='1081' name='getNode' return='1088' arguments='962 969' flags='16' bytes='148' compile_id='82' compiler='c1' level='3' iicount='2442'/>
<call method='1089' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.463'/>
</phase>
<parse_done stamp='0.463'/>
</parse>
<phase name='optimize_blocks' stamp='0.463'>
<phase_done name='optimize_blocks' stamp='0.463'/>
</phase>
<phase name='gvn' stamp='0.463'>
<phase_done name='gvn' stamp='0.463'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.463'>
<phase_done name='rangeCheckElimination' stamp='0.463'/>
</phase>
<phase name='optimize_null_checks' stamp='0.463'>
<phase_done name='optimize_null_checks' stamp='0.463'/>
</phase>
<phase_done name='buildIR' stamp='0.463'/>
</phase>
<phase name='emit_lir' stamp='0.463'>
<phase name='lirGeneration' stamp='0.463'>
<phase_done name='lirGeneration' stamp='0.463'/>
</phase>
<phase name='linearScan' stamp='0.463'>
<phase_done name='linearScan' stamp='0.463'/>
</phase>
<phase_done name='emit_lir' stamp='0.463'/>
</phase>
<phase name='codeemit' stamp='0.463'>
<phase_done name='codeemit' stamp='0.463'/>
</phase>
<phase name='codeinstall' stamp='0.463'>
<phase_done name='codeinstall' stamp='0.463'/>
</phase>
<code_cache total_blobs='454' nmethods='104' adapters='194' free_code_cache='250435200'/>
<task_done success='1' nmsize='920' count='1852' inlined_bytes='20' stamp='0.468'/>
</task>
<task compile_id='130' method='java.util.HashMap$HashIterator hasNext ()Z' bytes='13' count='1917' iicount='1917' level='3' stamp='0.468'>
<phase name='setup' stamp='0.468'>
<phase_done name='setup' stamp='0.468'/>
</phase>
<phase name='buildIR' stamp='0.468'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.HashMap$HashIterator' flags='1024'/>
<method id='1082' holder='1081' name='hasNext' return='956' flags='17' bytes='13' iicount='1917'/>
<parse method='1082'  stamp='0.468'>
<phase name='parse_hir' stamp='0.468'>
<phase_done name='parse_hir' stamp='0.468'/>
</phase>
<parse_done stamp='0.468'/>
</parse>
<phase name='optimize_blocks' stamp='0.468'>
<phase_done name='optimize_blocks' stamp='0.468'/>
</phase>
<phase name='gvn' stamp='0.468'>
<phase_done name='gvn' stamp='0.468'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.468'>
<phase_done name='rangeCheckElimination' stamp='0.468'/>
</phase>
<phase name='optimize_null_checks' stamp='0.468'>
<phase_done name='optimize_null_checks' stamp='0.468'/>
</phase>
<phase_done name='buildIR' stamp='0.468'/>
</phase>
<phase name='emit_lir' stamp='0.468'>
<phase name='lirGeneration' stamp='0.468'>
<phase_done name='lirGeneration' stamp='0.468'/>
</phase>
<phase name='linearScan' stamp='0.468'>
<phase_done name='linearScan' stamp='0.468'/>
</phase>
<phase_done name='emit_lir' stamp='0.468'/>
</phase>
<phase name='codeemit' stamp='0.468'>
<phase_done name='codeemit' stamp='0.468'/>
</phase>
<phase name='codeinstall' stamp='0.468'>
<phase_done name='codeinstall' stamp='0.473'/>
</phase>
<code_cache total_blobs='458' nmethods='106' adapters='194' free_code_cache='250432128'/>
<task_done success='1' nmsize='432' count='1982' stamp='0.475'/>
</task>
<task compile_id='119' method='java.util.HashSet add (Ljava/lang/Object;)Z' bytes='20' count='1260' iicount='1260' level='3' stamp='0.475'>
<phase name='setup' stamp='0.475'>
<phase_done name='setup' stamp='0.475'/>
</phase>
<phase name='buildIR' stamp='0.475'>
<type id='956' name='boolean'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashSet' flags='1'/>
<method id='1082' holder='1081' name='add' return='956' arguments='969' flags='1' bytes='20' iicount='1260'/>
<parse method='1082'  stamp='0.475'>
<phase name='parse_hir' stamp='0.475'>
<bc code='182' bci='8'/>
<klass id='1084' name='java.util.HashMap' flags='1'/>
<method id='1087' holder='1084' name='put' return='969' arguments='969 969' flags='1' bytes='13' compile_id='86' compiler='c1' level='3' iicount='2916'/>
<call method='1087' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='1084' x='1087'/>
<inline_success reason='receiver is statically known'/>
<parse method='1087'>
<bc code='184' bci='2'/>
<type id='962' name='int'/>
<method id='1089' holder='1084' name='hash' return='962' arguments='969' flags='24' bytes='20' compile_id='112' compiler='c2' level='4' iicount='7903'/>
<call method='1089' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<bc code='182' bci='9'/>
<method id='1092' holder='969' name='hashCode' return='962' flags='257' bytes='0' compile_id='34' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1092' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.475'/>
</parse>
<bc code='182' bci='9'/>
<method id='1093' holder='1084' name='putVal' return='969' arguments='962 969 969 956 956' flags='16' bytes='300' compile_id='123' compiler='c1' level='3' iicount='7031'/>
<call method='1093' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.475'/>
</parse>
<phase_done name='parse_hir' stamp='0.475'/>
</phase>
<parse_done stamp='0.475'/>
</parse>
<phase name='optimize_blocks' stamp='0.475'>
<phase_done name='optimize_blocks' stamp='0.475'/>
</phase>
<phase name='gvn' stamp='0.475'>
<phase_done name='gvn' stamp='0.475'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.475'>
<phase_done name='rangeCheckElimination' stamp='0.475'/>
</phase>
<phase name='optimize_null_checks' stamp='0.475'>
<phase_done name='optimize_null_checks' stamp='0.475'/>
</phase>
<phase_done name='buildIR' stamp='0.475'/>
</phase>
<phase name='emit_lir' stamp='0.475'>
<phase name='lirGeneration' stamp='0.475'>
<phase_done name='lirGeneration' stamp='0.475'/>
</phase>
<phase name='linearScan' stamp='0.475'>
<phase_done name='linearScan' stamp='0.475'/>
</phase>
<phase_done name='emit_lir' stamp='0.475'/>
</phase>
<phase name='codeemit' stamp='0.475'>
<phase_done name='codeemit' stamp='0.476'/>
</phase>
<phase name='codeinstall' stamp='0.476'>
<dependency type='unique_concrete_method' ctxk='1084' x='1087'/>
<phase_done name='codeinstall' stamp='0.476'/>
</phase>
<code_cache total_blobs='459' nmethods='107' adapters='194' free_code_cache='250429824'/>
<task_done success='1' nmsize='1208' count='1262' inlined_bytes='33' stamp='0.481'/>
</task>
<task compile_id='125' method='java.util.ImmutableCollections$Set12$1 hasNext ()Z' bytes='13' count='1316' iicount='1316' level='3' stamp='0.481'>
<phase name='setup' stamp='0.481'>
<phase_done name='setup' stamp='0.481'/>
</phase>
<phase name='buildIR' stamp='0.481'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.util.ImmutableCollections$Set12$1' flags='0'/>
<method id='1082' holder='1081' name='hasNext' return='956' flags='1' bytes='13' iicount='1316'/>
<parse method='1082'  stamp='0.481'>
<phase name='parse_hir' stamp='0.481'>
<phase_done name='parse_hir' stamp='0.481'/>
</phase>
<parse_done stamp='0.481'/>
</parse>
<phase name='optimize_blocks' stamp='0.481'>
<phase_done name='optimize_blocks' stamp='0.481'/>
</phase>
<phase name='gvn' stamp='0.481'>
<phase_done name='gvn' stamp='0.481'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.481'>
<phase_done name='rangeCheckElimination' stamp='0.481'/>
</phase>
<phase name='optimize_null_checks' stamp='0.481'>
<phase_done name='optimize_null_checks' stamp='0.481'/>
</phase>
<phase_done name='buildIR' stamp='0.481'/>
</phase>
<phase name='emit_lir' stamp='0.481'>
<phase name='lirGeneration' stamp='0.481'>
<phase_done name='lirGeneration' stamp='0.481'/>
</phase>
<phase name='linearScan' stamp='0.481'>
<phase_done name='linearScan' stamp='0.481'/>
</phase>
<phase_done name='emit_lir' stamp='0.481'/>
</phase>
<phase name='codeemit' stamp='0.482'>
<phase_done name='codeemit' stamp='0.482'/>
</phase>
<phase name='codeinstall' stamp='0.482'>
<phase_done name='codeinstall' stamp='0.482'/>
</phase>
<code_cache total_blobs='460' nmethods='108' adapters='194' free_code_cache='250428672'/>
<task_done success='1' nmsize='432' count='1335' stamp='0.484'/>
</task>
<task compile_id='108' method='java.lang.module.ResolvedModule reference ()Ljava/lang/module/ModuleReference;' bytes='5' count='830' iicount='830' level='1' stamp='0.484'>
<phase name='setup' stamp='0.484'>
<phase_done name='setup' stamp='0.484'/>
</phase>
<phase name='buildIR' stamp='0.484'>
<klass id='1082' name='java.lang.module.ModuleReference' flags='1025'/>
<klass id='1081' name='java.lang.module.ResolvedModule' flags='17'/>
<method id='1083' holder='1081' name='reference' return='1082' flags='1' bytes='5' iicount='830'/>
<parse method='1083'  stamp='0.484'>
<phase name='parse_hir' stamp='0.484'>
<phase_done name='parse_hir' stamp='0.484'/>
</phase>
<parse_done stamp='0.484'/>
</parse>
<phase name='optimize_blocks' stamp='0.484'>
<phase_done name='optimize_blocks' stamp='0.484'/>
</phase>
<phase name='gvn' stamp='0.484'>
<phase_done name='gvn' stamp='0.484'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.484'>
<phase_done name='rangeCheckElimination' stamp='0.484'/>
</phase>
<phase name='optimize_null_checks' stamp='0.484'>
<phase_done name='optimize_null_checks' stamp='0.484'/>
</phase>
<phase_done name='buildIR' stamp='0.484'/>
</phase>
<phase name='emit_lir' stamp='0.484'>
<phase name='lirGeneration' stamp='0.484'>
<phase_done name='lirGeneration' stamp='0.484'/>
</phase>
<phase name='linearScan' stamp='0.484'>
<phase_done name='linearScan' stamp='0.484'/>
</phase>
<phase_done name='emit_lir' stamp='0.484'/>
</phase>
<phase name='codeemit' stamp='0.484'>
<phase_done name='codeemit' stamp='0.484'/>
</phase>
<phase name='codeinstall' stamp='0.484'>
<phase_done name='codeinstall' stamp='0.484'/>
</phase>
<code_cache total_blobs='468' nmethods='109' adapters='201' free_code_cache='250423424'/>
<task_done success='1' nmsize='272' count='830' stamp='0.485'/>
</task>
<task compile_id='132' method='java.util.HashMap$KeyIterator next ()Ljava/lang/Object;' bytes='8' count='997' iicount='997' level='3' stamp='0.485'>
<phase name='setup' stamp='0.485'>
<phase_done name='setup' stamp='0.485'/>
</phase>
<phase name='buildIR' stamp='0.485'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.HashMap$KeyIterator' flags='16'/>
<method id='1082' holder='1081' name='next' return='969' flags='17' bytes='8' iicount='997'/>
<parse method='1082'  stamp='0.485'>
<phase name='parse_hir' stamp='0.485'>
<bc code='182' bci='1'/>
<klass id='1085' name='java.util.HashMap$Node' flags='8'/>
<klass id='1084' name='java.util.HashMap$HashIterator' flags='1024'/>
<method id='1086' holder='1084' name='nextNode' return='1085' flags='16' bytes='100' compile_id='91' compiler='c1' level='3' iicount='1473'/>
<call method='1086' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.485'/>
</phase>
<parse_done stamp='0.485'/>
</parse>
<phase name='optimize_blocks' stamp='0.485'>
<phase_done name='optimize_blocks' stamp='0.485'/>
</phase>
<phase name='gvn' stamp='0.485'>
<phase_done name='gvn' stamp='0.485'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.485'>
<phase_done name='rangeCheckElimination' stamp='0.485'/>
</phase>
<phase name='optimize_null_checks' stamp='0.485'>
<phase_done name='optimize_null_checks' stamp='0.485'/>
</phase>
<phase_done name='buildIR' stamp='0.485'/>
</phase>
<phase name='emit_lir' stamp='0.485'>
<phase name='lirGeneration' stamp='0.485'>
<phase_done name='lirGeneration' stamp='0.485'/>
</phase>
<phase name='linearScan' stamp='0.485'>
<phase_done name='linearScan' stamp='0.485'/>
</phase>
<phase_done name='emit_lir' stamp='0.485'/>
</phase>
<phase name='codeemit' stamp='0.485'>
<phase_done name='codeemit' stamp='0.485'/>
</phase>
<phase name='codeinstall' stamp='0.485'>
<phase_done name='codeinstall' stamp='0.485'/>
</phase>
<code_cache total_blobs='469' nmethods='110' adapters='201' free_code_cache='250422272'/>
<task_done success='1' nmsize='424' count='997' stamp='0.488'/>
</task>
<task compile_id='133' method='java.util.ImmutableCollections$Set12$1 next ()Ljava/lang/Object;' bytes='92' count='730' iicount='730' level='3' stamp='0.488'>
<phase name='setup' stamp='0.488'>
<phase_done name='setup' stamp='0.488'/>
</phase>
<phase name='buildIR' stamp='0.488'>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='1081' name='java.util.ImmutableCollections$Set12$1' flags='0'/>
<method id='1082' holder='1081' name='next' return='969' flags='1' bytes='92' iicount='730'/>
<parse method='1082'  stamp='0.488'>
<phase name='parse_hir' stamp='0.488'>
<bc code='183' bci='88'/>
<type id='964' name='void'/>
<klass id='1087' name='java.util.NoSuchElementException' unloaded='1'/>
<method id='1088' holder='1087' name='&lt;init&gt;' return='964' unloaded='1'/>
<call method='1088' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<phase_done name='parse_hir' stamp='0.489'/>
</phase>
<parse_done stamp='0.489'/>
</parse>
<phase name='optimize_blocks' stamp='0.489'>
<phase_done name='optimize_blocks' stamp='0.489'/>
</phase>
<phase name='gvn' stamp='0.489'>
<phase_done name='gvn' stamp='0.489'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.489'>
<phase_done name='rangeCheckElimination' stamp='0.489'/>
</phase>
<phase name='optimize_null_checks' stamp='0.489'>
<phase_done name='optimize_null_checks' stamp='0.489'/>
</phase>
<phase_done name='buildIR' stamp='0.489'/>
</phase>
<phase name='emit_lir' stamp='0.489'>
<phase name='lirGeneration' stamp='0.489'>
<phase_done name='lirGeneration' stamp='0.489'/>
</phase>
<phase name='linearScan' stamp='0.489'>
<phase_done name='linearScan' stamp='0.489'/>
</phase>
<phase_done name='emit_lir' stamp='0.489'/>
</phase>
<phase name='codeemit' stamp='0.489'>
<phase_done name='codeemit' stamp='0.489'/>
</phase>
<phase name='codeinstall' stamp='0.489'>
<phase_done name='codeinstall' stamp='0.489'/>
</phase>
<code_cache total_blobs='470' nmethods='111' adapters='201' free_code_cache='250420352'/>
<task_done success='1' nmsize='712' count='730' stamp='0.492'/>
</task>
<task compile_id='128' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='511' iicount='511' level='1' stamp='0.492'>
<phase name='setup' stamp='0.492'>
<phase_done name='setup' stamp='0.492'/>
</phase>
<phase name='buildIR' stamp='0.492'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1082' holder='1081' name='isAutomatic' return='956' flags='1' bytes='5' iicount='511'/>
<parse method='1082'  stamp='0.492'>
<phase name='parse_hir' stamp='0.492'>
<phase_done name='parse_hir' stamp='0.493'/>
</phase>
<parse_done stamp='0.493'/>
</parse>
<phase name='optimize_blocks' stamp='0.493'>
<phase_done name='optimize_blocks' stamp='0.493'/>
</phase>
<phase name='gvn' stamp='0.493'>
<phase_done name='gvn' stamp='0.493'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.493'>
<phase_done name='rangeCheckElimination' stamp='0.493'/>
</phase>
<phase name='optimize_null_checks' stamp='0.493'>
<phase_done name='optimize_null_checks' stamp='0.493'/>
</phase>
<phase_done name='buildIR' stamp='0.493'/>
</phase>
<phase name='emit_lir' stamp='0.493'>
<phase name='lirGeneration' stamp='0.493'>
<phase_done name='lirGeneration' stamp='0.493'/>
</phase>
<phase name='linearScan' stamp='0.493'>
<phase_done name='linearScan' stamp='0.493'/>
</phase>
<phase_done name='emit_lir' stamp='0.493'/>
</phase>
<phase name='codeemit' stamp='0.493'>
<phase_done name='codeemit' stamp='0.493'/>
</phase>
<phase name='codeinstall' stamp='0.493'>
<phase_done name='codeinstall' stamp='0.493'/>
</phase>
<code_cache total_blobs='472' nmethods='112' adapters='202' free_code_cache='250418816'/>
<task_done success='1' nmsize='272' count='511' stamp='0.495'/>
</task>
<task compile_id='127' method='java.lang.String &lt;init&gt; ([BB)V' bytes='15' count='561' iicount='561' level='3' stamp='0.495'>
<phase name='setup' stamp='0.495'>
<phase_done name='setup' stamp='0.495'/>
</phase>
<phase name='buildIR' stamp='0.495'>
<type id='964' name='void'/>
<klass id='1073' name='[B' flags='1041'/>
<type id='960' name='byte'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='&lt;init&gt;' return='964' arguments='1073 960' flags='0' bytes='15' iicount='561'/>
<parse method='1081'  stamp='0.495'>
<phase name='parse_hir' stamp='0.495'>
<bc code='183' bci='1'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<method id='1083' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='7743'/>
<call method='1083' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.495'/>
</parse>
<phase_done name='parse_hir' stamp='0.495'/>
</phase>
<parse_done stamp='0.495'/>
</parse>
<phase name='optimize_blocks' stamp='0.495'>
<phase_done name='optimize_blocks' stamp='0.495'/>
</phase>
<phase name='gvn' stamp='0.495'>
<phase_done name='gvn' stamp='0.495'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.495'>
<phase_done name='rangeCheckElimination' stamp='0.495'/>
</phase>
<phase name='optimize_null_checks' stamp='0.495'>
<phase_done name='optimize_null_checks' stamp='0.495'/>
</phase>
<phase_done name='buildIR' stamp='0.495'/>
</phase>
<phase name='emit_lir' stamp='0.495'>
<phase name='lirGeneration' stamp='0.495'>
<phase_done name='lirGeneration' stamp='0.495'/>
</phase>
<phase name='linearScan' stamp='0.495'>
<phase_done name='linearScan' stamp='0.495'/>
</phase>
<phase_done name='emit_lir' stamp='0.495'/>
</phase>
<phase name='codeemit' stamp='0.495'>
<phase_done name='codeemit' stamp='0.496'/>
</phase>
<phase name='codeinstall' stamp='0.496'>
<phase_done name='codeinstall' stamp='0.496'/>
</phase>
<code_cache total_blobs='483' nmethods='113' adapters='212' free_code_cache='250412032'/>
<task_done success='1' nmsize='528' count='568' inlined_bytes='1' stamp='0.498'/>
</task>
<task compile_id='137' method='java.lang.module.ModuleDescriptor isOpen ()Z' bytes='5' count='186' iicount='186' level='1' stamp='0.499'>
<phase name='setup' stamp='0.499'>
<phase_done name='setup' stamp='0.499'/>
</phase>
<phase name='buildIR' stamp='0.499'>
<type id='956' name='boolean'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1082' holder='1081' name='isOpen' return='956' flags='1' bytes='5' iicount='186'/>
<parse method='1082'  stamp='0.499'>
<phase name='parse_hir' stamp='0.499'>
<phase_done name='parse_hir' stamp='0.499'/>
</phase>
<parse_done stamp='0.499'/>
</parse>
<phase name='optimize_blocks' stamp='0.499'>
<phase_done name='optimize_blocks' stamp='0.499'/>
</phase>
<phase name='gvn' stamp='0.499'>
<phase_done name='gvn' stamp='0.499'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.499'>
<phase_done name='rangeCheckElimination' stamp='0.499'/>
</phase>
<phase name='optimize_null_checks' stamp='0.499'>
<phase_done name='optimize_null_checks' stamp='0.499'/>
</phase>
<phase_done name='buildIR' stamp='0.499'/>
</phase>
<phase name='emit_lir' stamp='0.499'>
<phase name='lirGeneration' stamp='0.499'>
<phase_done name='lirGeneration' stamp='0.499'/>
</phase>
<phase name='linearScan' stamp='0.499'>
<phase_done name='linearScan' stamp='0.499'/>
</phase>
<phase_done name='emit_lir' stamp='0.499'/>
</phase>
<phase name='codeemit' stamp='0.499'>
<phase_done name='codeemit' stamp='0.499'/>
</phase>
<phase name='codeinstall' stamp='0.499'>
<phase_done name='codeinstall' stamp='0.499'/>
</phase>
<code_cache total_blobs='484' nmethods='114' adapters='212' free_code_cache='250411136'/>
<task_done success='1' nmsize='272' count='186' stamp='0.500'/>
</task>
<task compile_id='138' method='java.lang.Module getDescriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='142' iicount='142' level='1' stamp='0.500'>
<phase name='setup' stamp='0.500'>
<phase_done name='setup' stamp='0.500'/>
</phase>
<phase name='buildIR' stamp='0.500'>
<klass id='1081' name='java.lang.module.ModuleDescriptor' flags='1'/>
<klass id='1006' name='java.lang.Module' flags='17'/>
<method id='1082' holder='1006' name='getDescriptor' return='1081' flags='1' bytes='5' iicount='142'/>
<parse method='1082'  stamp='0.501'>
<phase name='parse_hir' stamp='0.501'>
<phase_done name='parse_hir' stamp='0.501'/>
</phase>
<parse_done stamp='0.501'/>
</parse>
<phase name='optimize_blocks' stamp='0.501'>
<phase_done name='optimize_blocks' stamp='0.501'/>
</phase>
<phase name='gvn' stamp='0.501'>
<phase_done name='gvn' stamp='0.501'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.501'>
<phase_done name='rangeCheckElimination' stamp='0.501'/>
</phase>
<phase name='optimize_null_checks' stamp='0.501'>
<phase_done name='optimize_null_checks' stamp='0.501'/>
</phase>
<phase_done name='buildIR' stamp='0.501'/>
</phase>
<phase name='emit_lir' stamp='0.501'>
<phase name='lirGeneration' stamp='0.501'>
<phase_done name='lirGeneration' stamp='0.501'/>
</phase>
<phase name='linearScan' stamp='0.501'>
<phase_done name='linearScan' stamp='0.501'/>
</phase>
<phase_done name='emit_lir' stamp='0.501'/>
</phase>
<phase name='codeemit' stamp='0.501'>
<phase_done name='codeemit' stamp='0.501'/>
</phase>
<phase name='codeinstall' stamp='0.501'>
<phase_done name='codeinstall' stamp='0.501'/>
</phase>
<code_cache total_blobs='485' nmethods='115' adapters='212' free_code_cache='250410240'/>
<task_done success='1' nmsize='272' count='142' stamp='0.502'/>
</task>
<task compile_id='131' method='java.lang.module.ModuleDescriptor exports ()Ljava/util/Set;' bytes='5' count='275' iicount='275' level='1' stamp='0.502'>
<phase name='setup' stamp='0.502'>
<phase_done name='setup' stamp='0.502'/>
</phase>
<phase name='buildIR' stamp='0.502'>
<klass id='1082' name='java.util.Set' flags='1537'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1083' holder='1081' name='exports' return='1082' flags='1' bytes='5' iicount='275'/>
<parse method='1083'  stamp='0.502'>
<phase name='parse_hir' stamp='0.502'>
<phase_done name='parse_hir' stamp='0.502'/>
</phase>
<parse_done stamp='0.502'/>
</parse>
<phase name='optimize_blocks' stamp='0.502'>
<phase_done name='optimize_blocks' stamp='0.502'/>
</phase>
<phase name='gvn' stamp='0.502'>
<phase_done name='gvn' stamp='0.502'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.502'>
<phase_done name='rangeCheckElimination' stamp='0.502'/>
</phase>
<phase name='optimize_null_checks' stamp='0.502'>
<phase_done name='optimize_null_checks' stamp='0.502'/>
</phase>
<phase_done name='buildIR' stamp='0.502'/>
</phase>
<phase name='emit_lir' stamp='0.502'>
<phase name='lirGeneration' stamp='0.502'>
<phase_done name='lirGeneration' stamp='0.502'/>
</phase>
<phase name='linearScan' stamp='0.502'>
<phase_done name='linearScan' stamp='0.502'/>
</phase>
<phase_done name='emit_lir' stamp='0.502'/>
</phase>
<phase name='codeemit' stamp='0.502'>
<phase_done name='codeemit' stamp='0.502'/>
</phase>
<phase name='codeinstall' stamp='0.502'>
<phase_done name='codeinstall' stamp='0.503'/>
</phase>
<code_cache total_blobs='489' nmethods='116' adapters='215' free_code_cache='250407424'/>
<task_done success='1' nmsize='272' count='275' stamp='0.504'/>
</task>
<task compile_id='64' method='java.lang.invoke.MemberName getDeclaringClass ()Ljava/lang/Class;' bytes='5' count='199' iicount='199' level='1' stamp='0.504'>
<phase name='setup' stamp='0.504'>
<phase_done name='setup' stamp='0.504'/>
</phase>
<phase name='buildIR' stamp='0.504'>
<klass id='971' name='java.lang.Class' flags='17'/>
<klass id='1025' name='java.lang.invoke.MemberName' flags='16'/>
<method id='1081' holder='1025' name='getDeclaringClass' return='971' flags='1' bytes='5' iicount='199'/>
<parse method='1081'  stamp='0.504'>
<phase name='parse_hir' stamp='0.504'>
<phase_done name='parse_hir' stamp='0.504'/>
</phase>
<parse_done stamp='0.504'/>
</parse>
<phase name='optimize_blocks' stamp='0.504'>
<phase_done name='optimize_blocks' stamp='0.504'/>
</phase>
<phase name='gvn' stamp='0.504'>
<phase_done name='gvn' stamp='0.504'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.504'>
<phase_done name='rangeCheckElimination' stamp='0.504'/>
</phase>
<phase name='optimize_null_checks' stamp='0.504'>
<phase_done name='optimize_null_checks' stamp='0.504'/>
</phase>
<phase_done name='buildIR' stamp='0.504'/>
</phase>
<phase name='emit_lir' stamp='0.504'>
<phase name='lirGeneration' stamp='0.504'>
<phase_done name='lirGeneration' stamp='0.504'/>
</phase>
<phase name='linearScan' stamp='0.504'>
<phase_done name='linearScan' stamp='0.504'/>
</phase>
<phase_done name='emit_lir' stamp='0.504'/>
</phase>
<phase name='codeemit' stamp='0.504'>
<phase_done name='codeemit' stamp='0.504'/>
</phase>
<phase name='codeinstall' stamp='0.504'>
<phase_done name='codeinstall' stamp='0.504'/>
</phase>
<code_cache total_blobs='490' nmethods='117' adapters='215' free_code_cache='250406528'/>
<task_done success='1' nmsize='272' count='199' stamp='0.505'/>
</task>
<task compile_id='139' method='java.lang.Class getModule ()Ljava/lang/Module;' bytes='5' count='131' iicount='131' level='1' stamp='0.505'>
<phase name='setup' stamp='0.505'>
<phase_done name='setup' stamp='0.505'/>
</phase>
<phase name='buildIR' stamp='0.505'>
<klass id='1006' name='java.lang.Module' flags='17'/>
<klass id='971' name='java.lang.Class' flags='17'/>
<method id='1081' holder='971' name='getModule' return='1006' flags='1' bytes='5' iicount='131'/>
<parse method='1081'  stamp='0.505'>
<phase name='parse_hir' stamp='0.505'>
<phase_done name='parse_hir' stamp='0.505'/>
</phase>
<parse_done stamp='0.505'/>
</parse>
<phase name='optimize_blocks' stamp='0.505'>
<phase_done name='optimize_blocks' stamp='0.505'/>
</phase>
<phase name='gvn' stamp='0.505'>
<phase_done name='gvn' stamp='0.505'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.505'>
<phase_done name='rangeCheckElimination' stamp='0.505'/>
</phase>
<phase name='optimize_null_checks' stamp='0.505'>
<phase_done name='optimize_null_checks' stamp='0.505'/>
</phase>
<phase_done name='buildIR' stamp='0.506'/>
</phase>
<phase name='emit_lir' stamp='0.506'>
<phase name='lirGeneration' stamp='0.506'>
<phase_done name='lirGeneration' stamp='0.506'/>
</phase>
<phase name='linearScan' stamp='0.506'>
<phase_done name='linearScan' stamp='0.506'/>
</phase>
<phase_done name='emit_lir' stamp='0.506'/>
</phase>
<phase name='codeemit' stamp='0.506'>
<phase_done name='codeemit' stamp='0.506'/>
</phase>
<phase name='codeinstall' stamp='0.506'>
<phase_done name='codeinstall' stamp='0.506'/>
</phase>
<code_cache total_blobs='491' nmethods='118' adapters='215' free_code_cache='250405632'/>
<task_done success='1' nmsize='272' count='131' stamp='0.507'/>
</task>
<task compile_id='124' method='java.lang.module.ModuleDescriptor packages ()Ljava/util/Set;' bytes='5' count='180' iicount='180' level='1' stamp='0.507'>
<phase name='setup' stamp='0.507'>
<phase_done name='setup' stamp='0.507'/>
</phase>
<phase name='buildIR' stamp='0.507'>
<klass id='1082' name='java.util.Set' flags='1537'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1083' holder='1081' name='packages' return='1082' flags='1' bytes='5' iicount='180'/>
<parse method='1083'  stamp='0.507'>
<phase name='parse_hir' stamp='0.507'>
<phase_done name='parse_hir' stamp='0.507'/>
</phase>
<parse_done stamp='0.507'/>
</parse>
<phase name='optimize_blocks' stamp='0.507'>
<phase_done name='optimize_blocks' stamp='0.507'/>
</phase>
<phase name='gvn' stamp='0.507'>
<phase_done name='gvn' stamp='0.507'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.507'>
<phase_done name='rangeCheckElimination' stamp='0.507'/>
</phase>
<phase name='optimize_null_checks' stamp='0.507'>
<phase_done name='optimize_null_checks' stamp='0.507'/>
</phase>
<phase_done name='buildIR' stamp='0.507'/>
</phase>
<phase name='emit_lir' stamp='0.507'>
<phase name='lirGeneration' stamp='0.507'>
<phase_done name='lirGeneration' stamp='0.507'/>
</phase>
<phase name='linearScan' stamp='0.507'>
<phase_done name='linearScan' stamp='0.507'/>
</phase>
<phase_done name='emit_lir' stamp='0.507'/>
</phase>
<phase name='codeemit' stamp='0.507'>
<phase_done name='codeemit' stamp='0.507'/>
</phase>
<phase name='codeinstall' stamp='0.507'>
<phase_done name='codeinstall' stamp='0.507'/>
</phase>
<code_cache total_blobs='510' nmethods='119' adapters='233' free_code_cache='250393344'/>
<task_done success='1' nmsize='272' count='180' stamp='0.509'/>
</task>
<task compile_id='140' method='java.lang.invoke.MethodType form ()Ljava/lang/invoke/MethodTypeForm;' bytes='5' count='128' iicount='128' level='1' stamp='0.509'>
<phase name='setup' stamp='0.509'>
<phase_done name='setup' stamp='0.509'/>
</phase>
<phase name='buildIR' stamp='0.509'>
<klass id='1081' name='java.lang.invoke.MethodTypeForm' flags='16'/>
<klass id='1029' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1082' holder='1029' name='form' return='1081' flags='0' bytes='5' iicount='129'/>
<parse method='1082'  stamp='0.509'>
<phase name='parse_hir' stamp='0.509'>
<phase_done name='parse_hir' stamp='0.509'/>
</phase>
<parse_done stamp='0.509'/>
</parse>
<phase name='optimize_blocks' stamp='0.509'>
<phase_done name='optimize_blocks' stamp='0.509'/>
</phase>
<phase name='gvn' stamp='0.509'>
<phase_done name='gvn' stamp='0.509'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.509'>
<phase_done name='rangeCheckElimination' stamp='0.509'/>
</phase>
<phase name='optimize_null_checks' stamp='0.509'>
<phase_done name='optimize_null_checks' stamp='0.509'/>
</phase>
<phase_done name='buildIR' stamp='0.509'/>
</phase>
<phase name='emit_lir' stamp='0.509'>
<phase name='lirGeneration' stamp='0.509'>
<phase_done name='lirGeneration' stamp='0.509'/>
</phase>
<phase name='linearScan' stamp='0.509'>
<phase_done name='linearScan' stamp='0.509'/>
</phase>
<phase_done name='emit_lir' stamp='0.509'/>
</phase>
<phase name='codeemit' stamp='0.509'>
<phase_done name='codeemit' stamp='0.509'/>
</phase>
<phase name='codeinstall' stamp='0.509'>
<phase_done name='codeinstall' stamp='0.509'/>
</phase>
<code_cache total_blobs='511' nmethods='120' adapters='233' free_code_cache='250392448'/>
<task_done success='1' nmsize='272' count='130' stamp='0.510'/>
</task>
<task compile_id='141' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='473' iicount='475' level='3' stamp='0.510'>
<phase name='setup' stamp='0.510'>
<phase_done name='setup' stamp='0.510'/>
</phase>
<phase name='buildIR' stamp='0.510'>
<type id='962' name='int'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.util.zip.ZipUtils' flags='0'/>
<method id='1082' holder='1081' name='SH' return='962' arguments='1073 962' flags='24' bytes='21' iicount='512'/>
<parse method='1082'  stamp='0.510'>
<phase name='parse_hir' stamp='0.510'>
<phase_done name='parse_hir' stamp='0.510'/>
</phase>
<parse_done stamp='0.510'/>
</parse>
<phase name='optimize_blocks' stamp='0.510'>
<phase_done name='optimize_blocks' stamp='0.510'/>
</phase>
<phase name='gvn' stamp='0.510'>
<phase_done name='gvn' stamp='0.510'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.510'>
<phase_done name='rangeCheckElimination' stamp='0.510'/>
</phase>
<phase name='optimize_null_checks' stamp='0.510'>
<phase_done name='optimize_null_checks' stamp='0.510'/>
</phase>
<phase_done name='buildIR' stamp='0.510'/>
</phase>
<phase name='emit_lir' stamp='0.510'>
<phase name='lirGeneration' stamp='0.510'>
<phase_done name='lirGeneration' stamp='0.510'/>
</phase>
<phase name='linearScan' stamp='0.510'>
<phase_done name='linearScan' stamp='0.510'/>
</phase>
<phase_done name='emit_lir' stamp='0.510'/>
</phase>
<phase name='codeemit' stamp='0.510'>
<phase_done name='codeemit' stamp='0.510'/>
</phase>
<phase name='codeinstall' stamp='0.510'>
<phase_done name='codeinstall' stamp='0.510'/>
</phase>
<code_cache total_blobs='514' nmethods='121' adapters='235' free_code_cache='250390016'/>
<task_done success='1' nmsize='400' count='1282' stamp='0.515'/>
</task>
<task compile_id='142' method='java.util.zip.ZipFile$Source hashN ([BII)I' bytes='26' count='188' backedge_count='7618' iicount='189' level='3' stamp='0.515'>
<phase name='setup' stamp='0.515'>
<phase_done name='setup' stamp='0.515'/>
</phase>
<phase name='buildIR' stamp='0.515'>
<type id='962' name='int'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.util.zip.ZipFile$Source' flags='10'/>
<method id='1082' holder='1081' name='hashN' return='962' arguments='1073 962 962' flags='26' bytes='26' iicount='197'/>
<parse method='1082'  stamp='0.515'>
<phase name='parse_hir' stamp='0.515'>
<phase_done name='parse_hir' stamp='0.515'/>
</phase>
<parse_done stamp='0.515'/>
</parse>
<phase name='optimize_blocks' stamp='0.515'>
<phase_done name='optimize_blocks' stamp='0.515'/>
</phase>
<phase name='gvn' stamp='0.515'>
<phase_done name='gvn' stamp='0.515'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.515'>
<phase_done name='rangeCheckElimination' stamp='0.515'/>
</phase>
<phase name='optimize_null_checks' stamp='0.515'>
<phase_done name='optimize_null_checks' stamp='0.515'/>
</phase>
<phase_done name='buildIR' stamp='0.515'/>
</phase>
<phase name='emit_lir' stamp='0.515'>
<phase name='lirGeneration' stamp='0.515'>
<phase_done name='lirGeneration' stamp='0.515'/>
</phase>
<phase name='linearScan' stamp='0.515'>
<phase_done name='linearScan' stamp='0.515'/>
</phase>
<phase_done name='emit_lir' stamp='0.515'/>
</phase>
<phase name='codeemit' stamp='0.515'>
<phase_done name='codeemit' stamp='0.515'/>
</phase>
<phase name='codeinstall' stamp='0.515'>
<phase_done name='codeinstall' stamp='0.515'/>
</phase>
<code_cache total_blobs='515' nmethods='122' adapters='235' free_code_cache='250388608'/>
<task_done success='1' nmsize='560' count='323' backedge_count='14349' stamp='0.518'/>
</task>
<task compile_id='136' method='java.lang.module.ModuleDescriptor$Provides service ()Ljava/lang/String;' bytes='5' count='159' iicount='159' level='1' stamp='0.518'>
<phase name='setup' stamp='0.518'>
<phase_done name='setup' stamp='0.518'/>
</phase>
<phase name='buildIR' stamp='0.518'>
<klass id='970' name='java.lang.String' flags='17'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor$Provides' flags='25'/>
<method id='1082' holder='1081' name='service' return='970' flags='1' bytes='5' iicount='159'/>
<parse method='1082'  stamp='0.518'>
<phase name='parse_hir' stamp='0.518'>
<phase_done name='parse_hir' stamp='0.518'/>
</phase>
<parse_done stamp='0.518'/>
</parse>
<phase name='optimize_blocks' stamp='0.518'>
<phase_done name='optimize_blocks' stamp='0.518'/>
</phase>
<phase name='gvn' stamp='0.518'>
<phase_done name='gvn' stamp='0.518'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.518'>
<phase_done name='rangeCheckElimination' stamp='0.518'/>
</phase>
<phase name='optimize_null_checks' stamp='0.518'>
<phase_done name='optimize_null_checks' stamp='0.518'/>
</phase>
<phase_done name='buildIR' stamp='0.518'/>
</phase>
<phase name='emit_lir' stamp='0.518'>
<phase name='lirGeneration' stamp='0.518'>
<phase_done name='lirGeneration' stamp='0.518'/>
</phase>
<phase name='linearScan' stamp='0.518'>
<phase_done name='linearScan' stamp='0.518'/>
</phase>
<phase_done name='emit_lir' stamp='0.518'/>
</phase>
<phase name='codeemit' stamp='0.518'>
<phase_done name='codeemit' stamp='0.518'/>
</phase>
<phase name='codeinstall' stamp='0.518'>
<phase_done name='codeinstall' stamp='0.520'/>
</phase>
<code_cache total_blobs='520' nmethods='124' adapters='236' free_code_cache='250386048'/>
<task_done success='1' nmsize='272' count='159' stamp='0.521'/>
</task>
<task compile_id='135' method='java.lang.module.ResolvedModule configuration ()Ljava/lang/module/Configuration;' bytes='5' count='145' iicount='145' level='1' stamp='0.521'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='145' stamp='0.521'/>
</task>
<task compile_id='129' method='java.lang.module.ModuleDescriptor$Version toString ()Ljava/lang/String;' bytes='5' count='129' iicount='129' level='1' stamp='0.521'>
<phase name='setup' stamp='0.521'>
<phase_done name='setup' stamp='0.521'/>
</phase>
<phase name='buildIR' stamp='0.521'>
<klass id='970' name='java.lang.String' flags='17'/>
<klass id='1081' name='java.lang.module.ModuleDescriptor$Version' flags='25'/>
<method id='1082' holder='1081' name='toString' return='970' flags='1' bytes='5' iicount='129'/>
<parse method='1082'  stamp='0.521'>
<phase name='parse_hir' stamp='0.521'>
<phase_done name='parse_hir' stamp='0.521'/>
</phase>
<parse_done stamp='0.521'/>
</parse>
<phase name='optimize_blocks' stamp='0.521'>
<phase_done name='optimize_blocks' stamp='0.521'/>
</phase>
<phase name='gvn' stamp='0.521'>
<phase_done name='gvn' stamp='0.521'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.521'>
<phase_done name='rangeCheckElimination' stamp='0.521'/>
</phase>
<phase name='optimize_null_checks' stamp='0.521'>
<phase_done name='optimize_null_checks' stamp='0.521'/>
</phase>
<phase_done name='buildIR' stamp='0.521'/>
</phase>
<phase name='emit_lir' stamp='0.521'>
<phase name='lirGeneration' stamp='0.521'>
<phase_done name='lirGeneration' stamp='0.521'/>
</phase>
<phase name='linearScan' stamp='0.521'>
<phase_done name='linearScan' stamp='0.521'/>
</phase>
<phase_done name='emit_lir' stamp='0.521'/>
</phase>
<phase name='codeemit' stamp='0.521'>
<phase_done name='codeemit' stamp='0.521'/>
</phase>
<phase name='codeinstall' stamp='0.521'>
<phase_done name='codeinstall' stamp='0.521'/>
</phase>
<code_cache total_blobs='523' nmethods='125' adapters='238' free_code_cache='250383872'/>
<task_done success='1' nmsize='272' count='129' stamp='0.523'/>
</task>
<task compile_id='144' method='java.lang.AbstractStringBuilder ensureCapacityInternal (I)V' bytes='39' count='515' iicount='515' level='3' stamp='0.525'>
<phase name='setup' stamp='0.525'>
<phase_done name='setup' stamp='0.525'/>
</phase>
<phase name='buildIR' stamp='0.526'>
<type id='964' name='void'/>
<type id='962' name='int'/>
<klass id='1037' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1081' holder='1037' name='ensureCapacityInternal' return='964' arguments='962' flags='2' bytes='39' iicount='515'/>
<parse method='1081'  stamp='0.526'>
<phase name='parse_hir' stamp='0.526'>
<bc code='182' bci='24'/>
<method id='1083' holder='1037' name='newCapacity' return='962' arguments='962' flags='2' bytes='55' iicount='164'/>
<call method='1083' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='32'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1085' name='java.util.Arrays' flags='1'/>
<method id='1086' holder='1085' name='copyOf' return='1073' arguments='1073 962' flags='9' bytes='19' iicount='247'/>
<call method='1086' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1086'>
<bc code='184' bci='11'/>
<klass id='1088' name='java.lang.Math' flags='17'/>
<method id='1089' holder='1088' name='min' return='962' arguments='962 962' flags='9' bytes='11' compile_id='52' compiler='c1' level='3' iicount='932'/>
<call method='1089' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<parse_done stamp='0.526'/>
</parse>
<bc code='184' bci='14'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<klass id='975' name='java.lang.System' flags='17'/>
<method id='1091' holder='975' name='arraycopy' return='964' arguments='969 962 969 962 962' flags='265' bytes='0' compile_id='31' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1091' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.526'/>
</parse>
<phase_done name='parse_hir' stamp='0.526'/>
</phase>
<parse_done stamp='0.526'/>
</parse>
<phase name='optimize_blocks' stamp='0.526'>
<phase_done name='optimize_blocks' stamp='0.526'/>
</phase>
<phase name='gvn' stamp='0.526'>
<phase_done name='gvn' stamp='0.526'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.526'>
<phase_done name='rangeCheckElimination' stamp='0.526'/>
</phase>
<phase name='optimize_null_checks' stamp='0.526'>
<phase_done name='optimize_null_checks' stamp='0.526'/>
</phase>
<phase_done name='buildIR' stamp='0.526'/>
</phase>
<phase name='emit_lir' stamp='0.526'>
<phase name='lirGeneration' stamp='0.526'>
<phase_done name='lirGeneration' stamp='0.526'/>
</phase>
<phase name='linearScan' stamp='0.526'>
<phase_done name='linearScan' stamp='0.526'/>
</phase>
<phase_done name='emit_lir' stamp='0.526'/>
</phase>
<phase name='codeemit' stamp='0.526'>
<phase_done name='codeemit' stamp='0.526'/>
</phase>
<phase name='codeinstall' stamp='0.526'>
<phase_done name='codeinstall' stamp='0.526'/>
</phase>
<code_cache total_blobs='530' nmethods='126' adapters='244' free_code_cache='250377728'/>
<task_done success='1' nmsize='1240' count='583' inlined_bytes='30' stamp='0.532'/>
</task>
<task compile_id='146' method='java.lang.StringLatin1 indexOf ([BII)I' bytes='61' count='352' backedge_count='5339' iicount='352' level='3' stamp='0.532'>
<phase name='setup' stamp='0.532'>
<phase_done name='setup' stamp='0.532'/>
</phase>
<phase name='buildIR' stamp='0.532'>
<type id='962' name='int'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1081' name='java.lang.StringLatin1' flags='16'/>
<method id='1082' holder='1081' name='indexOf' return='962' arguments='1073 962 962' flags='9' bytes='61' iicount='352'/>
<parse method='1082'  stamp='0.532'>
<phase name='parse_hir' stamp='0.532'>
<bc code='184' bci='1'/>
<type id='956' name='boolean'/>
<method id='1084' holder='1081' name='canEncode' return='956' arguments='962' flags='9' bytes='13' compile_id='59' compiler='c1' level='3' iicount='967'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<parse_done stamp='0.532'/>
</parse>
<phase_done name='parse_hir' stamp='0.532'/>
</phase>
<parse_done stamp='0.532'/>
</parse>
<phase name='optimize_blocks' stamp='0.532'>
<phase_done name='optimize_blocks' stamp='0.532'/>
</phase>
<phase name='gvn' stamp='0.532'>
<phase_done name='gvn' stamp='0.532'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.532'>
<phase_done name='rangeCheckElimination' stamp='0.532'/>
</phase>
<phase name='optimize_null_checks' stamp='0.532'>
<phase_done name='optimize_null_checks' stamp='0.532'/>
</phase>
<phase_done name='buildIR' stamp='0.532'/>
</phase>
<phase name='emit_lir' stamp='0.532'>
<phase name='lirGeneration' stamp='0.532'>
<phase_done name='lirGeneration' stamp='0.532'/>
</phase>
<phase name='linearScan' stamp='0.532'>
<phase_done name='linearScan' stamp='0.532'/>
</phase>
<phase_done name='emit_lir' stamp='0.532'/>
</phase>
<phase name='codeemit' stamp='0.532'>
<phase_done name='codeemit' stamp='0.532'/>
</phase>
<phase name='codeinstall' stamp='0.532'>
<phase_done name='codeinstall' stamp='0.532'/>
</phase>
<code_cache total_blobs='531' nmethods='127' adapters='244' free_code_cache='250375552'/>
<task_done success='1' nmsize='1040' count='369' backedge_count='5464' inlined_bytes='13' stamp='0.537'/>
</task>
<task compile_id='145' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='565' iicount='565' level='3' stamp='0.537'>
<phase name='setup' stamp='0.537'>
<phase_done name='setup' stamp='0.537'/>
</phase>
<phase name='buildIR' stamp='0.537'>
<type id='956' name='boolean'/>
<klass id='1037' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1081' holder='1037' name='isLatin1' return='956' flags='16' bytes='19' iicount='565'/>
<parse method='1081'  stamp='0.537'>
<phase name='parse_hir' stamp='0.537'>
<phase_done name='parse_hir' stamp='0.537'/>
</phase>
<parse_done stamp='0.537'/>
</parse>
<phase name='optimize_blocks' stamp='0.537'>
<phase_done name='optimize_blocks' stamp='0.537'/>
</phase>
<phase name='gvn' stamp='0.537'>
<phase_done name='gvn' stamp='0.537'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.537'>
<phase_done name='rangeCheckElimination' stamp='0.537'/>
</phase>
<phase name='optimize_null_checks' stamp='0.537'>
<phase_done name='optimize_null_checks' stamp='0.537'/>
</phase>
<phase_done name='buildIR' stamp='0.537'/>
</phase>
<phase name='emit_lir' stamp='0.537'>
<phase name='lirGeneration' stamp='0.537'>
<phase_done name='lirGeneration' stamp='0.537'/>
</phase>
<phase name='linearScan' stamp='0.537'>
<phase_done name='linearScan' stamp='0.537'/>
</phase>
<phase_done name='emit_lir' stamp='0.537'/>
</phase>
<phase name='codeemit' stamp='0.537'>
<phase_done name='codeemit' stamp='0.537'/>
</phase>
<phase name='codeinstall' stamp='0.537'>
<phase_done name='codeinstall' stamp='0.537'/>
</phase>
<code_cache total_blobs='533' nmethods='128' adapters='245' free_code_cache='250373760'/>
<task_done success='1' nmsize='464' count='571' stamp='0.539'/>
</task>
<task compile_id='147' method='java.util.zip.ZipUtils LG ([BI)J' bytes='22' count='498' iicount='498' level='3' stamp='0.539'>
<phase name='setup' stamp='0.539'>
<phase_done name='setup' stamp='0.539'/>
</phase>
<phase name='buildIR' stamp='0.539'>
<type id='963' name='long'/>
<klass id='1073' name='[B' flags='1041'/>
<type id='962' name='int'/>
<klass id='1081' name='java.util.zip.ZipUtils' flags='0'/>
<method id='1082' holder='1081' name='LG' return='963' arguments='1073 962' flags='24' bytes='22' iicount='498'/>
<parse method='1082'  stamp='0.539'>
<phase name='parse_hir' stamp='0.539'>
<bc code='184' bci='2'/>
<method id='1084' holder='1081' name='SH' return='962' arguments='1073 962' flags='24' bytes='21' compile_id='143' compiler='c2' level='4' iicount='2271'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<parse_done stamp='0.539'/>
</parse>
<bc code='184' bci='9'/>
<call method='1084' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1084'>
<parse_done stamp='0.539'/>
</parse>
<phase_done name='parse_hir' stamp='0.539'/>
</phase>
<parse_done stamp='0.539'/>
</parse>
<phase name='optimize_blocks' stamp='0.539'>
<phase_done name='optimize_blocks' stamp='0.539'/>
</phase>
<phase name='gvn' stamp='0.539'>
<phase_done name='gvn' stamp='0.539'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.539'>
<phase_done name='rangeCheckElimination' stamp='0.539'/>
</phase>
<phase name='optimize_null_checks' stamp='0.539'>
<phase_done name='optimize_null_checks' stamp='0.539'/>
</phase>
<phase_done name='buildIR' stamp='0.539'/>
</phase>
<phase name='emit_lir' stamp='0.539'>
<phase name='lirGeneration' stamp='0.539'>
<phase_done name='lirGeneration' stamp='0.539'/>
</phase>
<phase name='linearScan' stamp='0.539'>
<phase_done name='linearScan' stamp='0.539'/>
</phase>
<phase_done name='emit_lir' stamp='0.539'/>
</phase>
<phase name='codeemit' stamp='0.539'>
<phase_done name='codeemit' stamp='0.539'/>
</phase>
<phase name='codeinstall' stamp='0.539'>
<phase_done name='codeinstall' stamp='0.539'/>
</phase>
<code_cache total_blobs='534' nmethods='129' adapters='245' free_code_cache='250372096'/>
<task_done success='1' nmsize='688' count='514' inlined_bytes='42' stamp='0.543'/>
</task>
<task compile_id='151' method='java.lang.String indexOf (II)I' bytes='29' count='408' iicount='408' level='3' stamp='0.543'>
<phase name='setup' stamp='0.543'>
<phase_done name='setup' stamp='0.543'/>
</phase>
<phase name='buildIR' stamp='0.543'>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='indexOf' return='962' arguments='962 962' flags='1' bytes='29' iicount='408'/>
<parse method='1081'  stamp='0.543'>
<phase name='parse_hir' stamp='0.543'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1083' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='53' compiler='c2' level='4' iicount='12559'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<parse_done stamp='0.543'/>
</parse>
<bc code='184' bci='13'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1086' name='java.lang.StringLatin1' flags='16'/>
<method id='1087' holder='1086' name='indexOf' return='962' arguments='1073 962 962' flags='9' bytes='61' compile_id='146' compiler='c1' level='3' iicount='409'/>
<call method='1087' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='25'/>
<klass id='1089' name='java.lang.StringUTF16' flags='16'/>
<method id='1090' holder='1089' name='indexOf' return='962' arguments='1073 962 962' flags='9' bytes='43' iicount='1'/>
<call method='1090' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<phase_done name='parse_hir' stamp='0.543'/>
</phase>
<parse_done stamp='0.543'/>
</parse>
<phase name='optimize_blocks' stamp='0.543'>
<phase_done name='optimize_blocks' stamp='0.543'/>
</phase>
<phase name='gvn' stamp='0.543'>
<phase_done name='gvn' stamp='0.543'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.543'>
<phase_done name='rangeCheckElimination' stamp='0.543'/>
</phase>
<phase name='optimize_null_checks' stamp='0.543'>
<phase_done name='optimize_null_checks' stamp='0.543'/>
</phase>
<phase_done name='buildIR' stamp='0.543'/>
</phase>
<phase name='emit_lir' stamp='0.543'>
<phase name='lirGeneration' stamp='0.543'>
<phase_done name='lirGeneration' stamp='0.543'/>
</phase>
<phase name='linearScan' stamp='0.543'>
<phase_done name='linearScan' stamp='0.544'/>
</phase>
<phase_done name='emit_lir' stamp='0.544'/>
</phase>
<phase name='codeemit' stamp='0.544'>
<phase_done name='codeemit' stamp='0.544'/>
</phase>
<phase name='codeinstall' stamp='0.544'>
<phase_done name='codeinstall' stamp='0.544'/>
</phase>
<code_cache total_blobs='535' nmethods='130' adapters='245' free_code_cache='250370432'/>
<task_done success='1' nmsize='760' count='423' inlined_bytes='19' stamp='0.547'/>
</task>
<task compile_id='152' method='java.lang.String indexOf (I)I' bytes='7' count='399' iicount='399' level='3' stamp='0.547'>
<phase name='setup' stamp='0.547'>
<phase_done name='setup' stamp='0.547'/>
</phase>
<phase name='buildIR' stamp='0.547'>
<type id='962' name='int'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1081' holder='970' name='indexOf' return='962' arguments='962' flags='1' bytes='7' iicount='399'/>
<parse method='1081'  stamp='0.547'>
<phase name='parse_hir' stamp='0.547'>
<bc code='182' bci='3'/>
<method id='1083' holder='970' name='indexOf' return='962' arguments='962 962' flags='1' bytes='29' compile_id='151' compiler='c1' level='3' iicount='424'/>
<call method='1083' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1083'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1085' holder='970' name='isLatin1' return='956' flags='2' bytes='19' compile_id='53' compiler='c2' level='4' iicount='12562'/>
<call method='1085' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1085'>
<parse_done stamp='0.547'/>
</parse>
<bc code='184' bci='13'/>
<klass id='1073' name='[B' flags='1041'/>
<klass id='1088' name='java.lang.StringLatin1' flags='16'/>
<method id='1089' holder='1088' name='indexOf' return='962' arguments='1073 962 962' flags='9' bytes='61' compile_id='146' compiler='c1' level='3' iicount='425'/>
<call method='1089' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='25'/>
<klass id='1091' name='java.lang.StringUTF16' flags='16'/>
<method id='1092' holder='1091' name='indexOf' return='962' arguments='1073 962 962' flags='9' bytes='43' iicount='1'/>
<call method='1092' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.548'/>
</parse>
<phase_done name='parse_hir' stamp='0.548'/>
</phase>
<parse_done stamp='0.548'/>
</parse>
<phase name='optimize_blocks' stamp='0.548'>
<phase_done name='optimize_blocks' stamp='0.548'/>
</phase>
<phase name='gvn' stamp='0.548'>
<phase_done name='gvn' stamp='0.548'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.548'>
<phase_done name='rangeCheckElimination' stamp='0.548'/>
</phase>
<phase name='optimize_null_checks' stamp='0.548'>
<phase_done name='optimize_null_checks' stamp='0.548'/>
</phase>
<phase_done name='buildIR' stamp='0.548'/>
</phase>
<phase name='emit_lir' stamp='0.548'>
<phase name='lirGeneration' stamp='0.548'>
<phase_done name='lirGeneration' stamp='0.548'/>
</phase>
<phase name='linearScan' stamp='0.548'>
<phase_done name='linearScan' stamp='0.548'/>
</phase>
<phase_done name='emit_lir' stamp='0.548'/>
</phase>
<phase name='codeemit' stamp='0.548'>
<phase_done name='codeemit' stamp='0.548'/>
</phase>
<phase name='codeinstall' stamp='0.548'>
<phase_done name='codeinstall' stamp='0.548'/>
</phase>
<code_cache total_blobs='536' nmethods='131' adapters='245' free_code_cache='250368512'/>
<task_done success='1' nmsize='856' count='409' inlined_bytes='48' stamp='0.552'/>
</task>
<task compile_id='153' method='java.util.Arrays copyOfRange ([BII)[B' bytes='63' count='528' iicount='528' level='3' stamp='0.553'>
<phase name='setup' stamp='0.553'>
<phase_done name='setup' stamp='0.553'/>
</phase>
<phase name='buildIR' stamp='0.553'>
<klass id='1073' name='[B' flags='1041'/>
<type id='962' name='int'/>
<klass id='1081' name='java.util.Arrays' flags='1'/>
<method id='1082' holder='1081' name='copyOfRange' return='1073' arguments='1073 962 962' flags='9' bytes='63' iicount='529'/>
<parse method='1082'  stamp='0.553'>
<phase name='parse_hir' stamp='0.553'>
<bc code='183' bci='16'/>
<type id='964' name='void'/>
<klass id='1039' name='java.lang.StringBuilder' flags='17'/>
<method id='1085' holder='1039' name='&lt;init&gt;' return='964' flags='1' bytes='7' iicount='190'/>
<call method='1085' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1085'>
<bc code='183' bci='3'/>
<klass id='1037' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1087' holder='1037' name='&lt;init&gt;' return='964' arguments='962' flags='0' bytes='39' iicount='195'/>
<call method='1087' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='20'/>
<method id='1089' holder='1039' name='append' return='1039' arguments='962' flags='1' bytes='8' iicount='22'/>
<call method='1089' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<bc code='183' bci='2'/>
<method id='1091' holder='1037' name='append' return='1037' arguments='962' flags='1' bytes='55' iicount='22'/>
<call method='1091' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='25'/>
<klass id='970' name='java.lang.String' flags='17'/>
<method id='1094' holder='1039' name='append' return='1039' arguments='970' flags='1' bytes='8' iicount='385'/>
<call method='1094' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1094'>
<bc code='183' bci='2'/>
<method id='1096' holder='1037' name='append' return='1037' arguments='970' flags='1' bytes='45' iicount='385'/>
<call method='1096' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='29'/>
<call method='1089' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1089'>
<bc code='183' bci='2'/>
<call method='1091' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='32'/>
<method id='1098' holder='1039' name='toString' return='970' flags='1' bytes='35' iicount='195'/>
<call method='1098' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1098'>
<bc code='182' bci='1'/>
<type id='956' name='boolean'/>
<method id='1100' holder='1037' name='isLatin1' return='956' flags='16' bytes='19' compile_id='145' compiler='c1' level='3' iicount='597'/>
<call method='1100' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='1100'>
<parse_done stamp='0.553'/>
</parse>
<bc code='184' bci='16'/>
<klass id='1103' name='java.lang.StringLatin1' flags='16'/>
<method id='1104' holder='1103' name='newString' return='970' arguments='1073 962 962' flags='9' bytes='17' iicount='517'/>
<call method='1104' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1104'>
<bc code='184' bci='9'/>
<call method='1082' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='13'/>
<type id='960' name='byte'/>
<method id='1106' holder='970' name='&lt;init&gt;' return='964' arguments='1073 960' flags='0' bytes='15' compile_id='127' compiler='c1' level='3' iicount='685'/>
<call method='1106' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1106'>
<bc code='183' bci='1'/>
<klass id='969' name='java.lang.Object' flags='1'/>
<method id='1108' holder='969' name='&lt;init&gt;' return='964' flags='1' bytes='1' compile_id='18' compiler='c1' level='1' iicount='7998'/>
<call method='1108' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='1108'>
<parse_done stamp='0.553'/>
</parse>
<parse_done stamp='0.553'/>
</parse>
<parse_done stamp='0.553'/>
</parse>
<bc code='184' bci='31'/>
<klass id='1110' name='java.lang.StringUTF16' flags='16'/>
<method id='1111' holder='1110' name='newString' return='970' arguments='1073 962 962' flags='9' bytes='50' iicount='1'/>
<call method='1111' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='183' bci='35'/>
<klass id='1084' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1113' holder='1084' name='&lt;init&gt;' return='964' arguments='970' flags='1' bytes='6' iicount='1'/>
<call method='1113' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='1115' name='java.lang.Math' flags='17'/>
<method id='1116' holder='1115' name='min' return='962' arguments='962 962' flags='9' bytes='11' compile_id='52' compiler='c1' level='3' iicount='1235'/>
<call method='1116' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='1116'>
<parse_done stamp='0.553'/>
</parse>
<bc code='184' bci='57'/>
<klass id='975' name='java.lang.System' flags='17'/>
<method id='1118' holder='975' name='arraycopy' return='964' arguments='969 962 969 962 962' flags='265' bytes='0' compile_id='31' compile_kind='c2n' compiler='' level='0' iicount='256'/>
<call method='1118' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<phase_done name='parse_hir' stamp='0.553'/>
</phase>
<parse_done stamp='0.553'/>
</parse>
<phase name='optimize_blocks' stamp='0.553'>
<phase_done name='optimize_blocks' stamp='0.553'/>
</phase>
<phase name='gvn' stamp='0.553'>
<phase_done name='gvn' stamp='0.553'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.553'>
<phase_done name='rangeCheckElimination' stamp='0.553'/>
</phase>
<phase name='optimize_null_checks' stamp='0.553'>
<phase_done name='optimize_null_checks' stamp='0.553'/>
</phase>
<phase_done name='buildIR' stamp='0.553'/>
</phase>
<phase name='emit_lir' stamp='0.553'>
<phase name='lirGeneration' stamp='0.553'>
<phase_done name='lirGeneration' stamp='0.553'/>
</phase>
<phase name='linearScan' stamp='0.553'>
<phase_done name='linearScan' stamp='0.553'/>
</phase>
<phase_done name='emit_lir' stamp='0.553'/>
</phase>
<phase name='codeemit' stamp='0.553'>
<phase_done name='codeemit' stamp='0.554'/>
</phase>
<phase name='codeinstall' stamp='0.554'>
<phase_done name='codeinstall' stamp='0.554'/>
</phase>
<code_cache total_blobs='539' nmethods='132' adapters='247' free_code_cache='250361728'/>
<task_done success='1' nmsize='2968' count='542' inlined_bytes='129' stamp='0.567'/>
</task>
<fragment>
<![CDATA[
<task compile_id='156' method='sun.nio.fs.UnixPath checkNotNul (Ljava/lang/String;C)V' bytes='16' count='615' iicount='615' level='3' stamp='0.567'>
]]>
</fragment>
</compilation_log>
<hotspot_log_done stamp='0.570'/>
</hotspot_log>
